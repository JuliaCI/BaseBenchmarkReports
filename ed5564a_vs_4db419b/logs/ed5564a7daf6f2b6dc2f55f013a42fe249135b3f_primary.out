cset: moving following pidspec: 15222
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.423410443 seconds)
loading group "string"... done (took 0.600759921 seconds)
loading group "linalg"... done (took 7.460450426 seconds)
loading group "parallel"... done (took 0.16673441 seconds)
loading group "find"... done (took 1.185742811 seconds)
loading group "tuple"... done (took 1.821687519 seconds)
loading group "dates"... done (took 1.274702002 seconds)
loading group "micro"... done (took 0.225206447 seconds)
loading group "io"... done (took 1.048445484 seconds)
loading group "scalar"... done (took 38.912081038 seconds)
loading group "sparse"... done (took 12.249095922 seconds)
loading group "broadcast"... done (took 0.982169531 seconds)
loading group "union"... done (took 12.410256608 seconds)
loading group "simd"... done (took 4.62785759 seconds)
loading group "random"... done (took 9.560151618 seconds)
loading group "problem"... done (took 1.86882958 seconds)
loading group "array"... done (took 21.40955167 seconds)
loading group "misc"... done (took 1.704183435 seconds)
loading group "sort"... done (took 3.691286341 seconds)
loading group "collection"... done (took 17.939536691 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.541999053 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.131599858 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.124634322 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.125684496 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.153757644 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.120154958 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.133150005 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.091919173 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.880443862 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155666815 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.123334688 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.446816406 seconds)
done (took 5.444250775 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177989203 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087528638 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087973608 seconds)
  done (took 1.399238189 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070096783 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130275063 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.071143918 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.071347083 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.071008414 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.070623646 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070746959 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.071151497 seconds)
  done (took 1.775843996 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077148568 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.073425998 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070191971 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.073588472 seconds)
  done (took 1.518959287 seconds)
done (took 6.177612805 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.812111827 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.210638903 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193628579 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.43150067 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137717321 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.166383361 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640655024 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350874629 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.200474801 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08422698 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.115493885 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.34323208 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113776234 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646944967 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079418757 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095743431 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141973145 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445338853 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071586661 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085870687 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.092751184 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132583085 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09068079 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078378748 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.150077218 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.072196237 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14310903 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084392809 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.07125471 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.22030379 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.176618939 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653527289 seconds)
  done (took 10.598492315 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.10211575 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.101646922 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073684129 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.126572962 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100764365 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07390614 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.075092704 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071912994 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091033423 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.13252937 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093496284 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106066038 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069627131 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072705647 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089625847 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.20965211 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.0876234 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086200914 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075853942 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080245437 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.10915184 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082800589 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.08169526 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.081292998 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133225489 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183892641 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.100512275 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101161933 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071454338 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08373763 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118795337 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130372513 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.070115911 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070541726 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.12804172 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.098018849 seconds)
  done (took 4.825818394 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.040843569 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.151002231 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095208243 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.140703524 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06892081 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114835995 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069780472 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085364383 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.216824999 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.472575876 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.62335027 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115394524 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108636851 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072061729 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07558186 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.117723415 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070611506 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.550741855 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.100516954 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112917379 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.08648609 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074540165 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073275267 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359459444 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072093695 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06858162 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072787486 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.060825802 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.131279416 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0724502 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.988078906 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.135180385 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071462037 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105601019 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165930878 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.070717601 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.229929535 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149472666 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072789811 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069630843 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.159332272 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.074997554 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070170807 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088947456 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069290097 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108489181 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119680646 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070249089 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.073725153 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.168332057 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.069078864 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085198007 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.652186865 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.155245572 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.081771361 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.069485906 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.263370497 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093000568 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074373985 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069458278 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.211332763 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134572616 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072424181 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.071113681 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072551583 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.074004932 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.412516523 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.070520234 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.154099159 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072020628 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.081298186 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073694939 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.073640647 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078003721 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076718172 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092125602 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070394717 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079452425 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07007613 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070204729 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071026094 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087091026 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.399446289 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070596042 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071965326 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.069042257 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094847545 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100718119 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072721705 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069734921 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104098116 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071906108 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07044493 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.112144896 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071326224 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.086864193 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.175839794 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116801032 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.073010475 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.099014066 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07181974 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.100335364 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07361366 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105589922 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.084902513 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072162827 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.445105763 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069988669 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.069010914 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073227232 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069340435 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07207618 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.070932879 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.068596476 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083234744 seconds)
  done (took 22.241012246 seconds)
done (took 39.931804163 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.245760784 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082425681 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.07788409 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.080940418 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077849507 seconds)
  done (took 1.880832614 seconds)
done (took 3.175717359 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128849962 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104788284 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068496355 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.103256522 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068332795 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10726119 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105871347 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.087040618 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105522968 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06870602 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.102643761 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068453284 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068428028 seconds)
  done (took 2.504175077 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.089162607 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088860949 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.074358794 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.088515528 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067683804 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087928288 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086175652 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.094797784 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086126392 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077404082 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068115939 seconds)
  done (took 2.201453665 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087103172 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089346385 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073460398 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08722093 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068487942 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087283628 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086847163 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091119336 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086821216 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078939033 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067741783 seconds)
  done (took 2.191878707 seconds)
done (took 8.181171949 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.082029444 seconds)
  done (took 1.35804425 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.610650716 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.200766902 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08611922 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116878284 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199036597 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12348197 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.279443932 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091871943 seconds)
  done (took 9.173073213 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.108630671 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073071692 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072938998 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072399081 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.074999397 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074192605 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076614949 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.074816195 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.077132306 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076246962 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.075414086 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073668526 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.073416687 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07280899 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.074811228 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.07555063 seconds)
  done (took 2.574855627 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.097026569 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096282196 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078448636 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079300712 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076470331 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075549546 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078139714 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077810843 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074710396 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076262751 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.078332906 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.077300648 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.07570642 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068395517 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07810088 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.07957687 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.074968763 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078239192 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078349761 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079749561 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.078997203 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068502595 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07558841 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.078032364 seconds)
  done (took 3.267938582 seconds)
done (took 17.658693527 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.119609006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.075640883 seconds)
  done (took 1.479541521 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.085616403 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087132621 seconds)
  done (took 1.465387985 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086177495 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.069941033 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.094497221 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.082205536 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.069653796 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069584049 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.092011125 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070250034 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069434687 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069914738 seconds)
  done (took 2.066623642 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.072643742 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.082987761 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073842679 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085526612 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07759772 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.068417865 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075783365 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071815201 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.08178403 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066519885 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075547069 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.087051439 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074603257 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089492049 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075602791 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072273558 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074825312 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071829455 seconds)
  done (took 2.673644293 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070219143 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071190741 seconds)
  done (took 1.439163481 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.071420356 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066925069 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070531324 seconds)
    (4/7) benchmarking "year"...
    done (took 0.07069046 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067195934 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066303722 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06706695 seconds)
  done (took 1.774434183 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391712507 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119868558 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.326660495 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075212402 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086449428 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.27166934 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069979159 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075286722 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075186378 seconds)
  done (took 2.832306342 seconds)
done (took 15.03016505 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.085336298 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.091292007 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.101510794 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.389137875 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095637261 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070561799 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11816832 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.198399778 seconds)
done (took 2.456779581 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.218306698 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.655907721 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.417549266 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.214160601 seconds)
  done (took 2.587359883 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.361011491 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093779924 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063340247 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071089442 seconds)
  done (took 1.895933043 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.071239586 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073604617 seconds)
  done (took 1.447732207 seconds)
done (took 7.454666662 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.092054131 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070311296 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070800089 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.068336127 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070206703 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.068082927 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068062904 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070863869 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070168314 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070292536 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.072828206 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.070059021 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071006327 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068119849 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067735652 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069998767 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.067411225 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067507372 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.067380622 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067621275 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070037731 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06741053 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067440813 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067522083 seconds)
  done (took 3.019922751 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.088964133 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069941694 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075947023 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075632289 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.074111244 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075861556 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.075265882 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.070293439 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075665517 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.072279153 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073940806 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.074313785 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072496117 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073762211 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072457524 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073542537 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075513807 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070175137 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072458331 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073341405 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.074964282 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070455689 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.073530933 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074973664 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.072881418 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074856275 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071935628 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069976133 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075327747 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.073125604 seconds)
  done (took 3.529293527 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074463071 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067245634 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068131653 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074823634 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.068178177 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068222093 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067387413 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.068005946 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068412405 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067279491 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068869748 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067359989 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06753228 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068349495 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067823293 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071786772 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083828716 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.067701043 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.067946256 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067797397 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.071139237 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067535233 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067968363 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067975369 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.18131048 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066817371 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067481808 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.067521324 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.067710637 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067288218 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.070674637 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071120292 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.068005664 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075487804 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071101185 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067067301 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.071749402 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066864268 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068129995 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.066906924 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066832763 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067287032 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067828626 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074969668 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.06768913 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.068971122 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068003368 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068829915 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068169432 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070687403 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067052386 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068038646 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069918821 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069289939 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.072028221 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.066964881 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068154485 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066940806 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068587116 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067299379 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067192258 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067659211 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070221081 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068175359 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083362749 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.074875965 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067679114 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06954237 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068579851 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070789432 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069797929 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082295259 seconds)
  done (took 6.428485326 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.095296775 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.092132113 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069261295 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068995681 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065679246 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068666235 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073942095 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067576017 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06932005 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086412755 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068112977 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069004568 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069073807 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07164954 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067930114 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069120588 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076227448 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065611836 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.068074105 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071842313 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068439952 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073967801 seconds)
  done (took 2.920486074 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.16059145 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074129503 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.11101258 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080879596 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074571398 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079033562 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073569418 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074071046 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074898711 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071240148 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071790709 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073804356 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074166725 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071526196 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07202645 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071204286 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073796875 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071778419 seconds)
  done (took 2.773013987 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080438635 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069732106 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091332663 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069607207 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069812963 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072437619 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07431566 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.078057314 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.073197495 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069984744 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078317057 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072265717 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.073049359 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070077065 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072447711 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069810326 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072372373 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069799209 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078221121 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074108705 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074384786 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078378236 seconds)
  done (took 2.953200743 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083935879 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071675112 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085902957 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072350943 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065580956 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068218202 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073995688 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06942851 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074226117 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071785911 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069665119 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067733018 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072482823 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06952035 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072804519 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069479107 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071600309 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06988784 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071873206 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06531251 seconds)
  done (took 2.760128592 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090892591 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07112517 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071942135 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080625702 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071904611 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071348902 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079197219 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071644353 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071766875 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.092494544 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071733622 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071488512 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079466327 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076698605 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071811796 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079252908 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079084351 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078868824 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07144568 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071889094 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.093274309 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.072136034 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079290952 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072234249 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071851529 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071944482 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071396998 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077115535 seconds)
  done (took 3.458714112 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07066769 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070078238 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.06756435 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067748471 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067429195 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067812288 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.067627779 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067635765 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070516399 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067300609 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070497994 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070341118 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069720637 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.069736039 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070406957 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069811845 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070253244 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067368419 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067577009 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067378693 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069607845 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070750137 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.069455347 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067360838 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067418224 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069663243 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067143356 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067428215 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069478808 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067045889 seconds)
  done (took 3.388998617 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.080182427 seconds)
    (2/2) benchmarking "in"...
    done (took 0.077267592 seconds)
  done (took 1.484488036 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066846387 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084344471 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067333857 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.07410353 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073565184 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070856334 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077743136 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073170711 seconds)
  done (took 1.910758398 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.086667671 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.081496526 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.071622247 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.08315075 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081756211 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087721562 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.141611283 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.071541762 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.077624191 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.068260836 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.085347906 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069396372 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076776579 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070648831 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07609149 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077711053 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068070143 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.076046243 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072839689 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.068474245 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071910799 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07940404 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073113102 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.065381881 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072828073 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094877698 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.081441246 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070268701 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073857333 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078273172 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076475503 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064657488 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070608725 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.071019006 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06870295 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.081300356 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085475878 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073381731 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.079363253 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071393265 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080202648 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.065721653 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.075983606 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077448325 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080997853 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.07151753 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071044648 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065239565 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.068151314 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073196886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065555431 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073694717 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.064910528 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077848529 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074730333 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.08116922 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069210301 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072470387 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073030238 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.073834388 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077844421 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072848747 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073522992 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.069999744 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.081051953 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075666543 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079714285 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065723197 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064057972 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068315844 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081108634 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09491115 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076636922 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.071494168 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071126761 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068166497 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073778367 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071625813 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.076452197 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077474843 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070753422 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.076186283 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077961166 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07077077 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.074112781 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.079037176 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06935419 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.073319448 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.068579243 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08770207 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069818804 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06841132 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.068628013 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08123165 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074597577 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.070741784 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068918158 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078009103 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064983479 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.071242277 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071850573 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072295151 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.081872419 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.075595721 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.075628857 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079485754 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.078308641 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070948828 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073165808 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.067672704 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071351479 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.07014957 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.078500839 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.064401857 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07375274 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.199132212 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.072474512 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080474676 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069813079 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.071771535 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.079491797 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.077468042 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069529747 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.0678278 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073861331 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070832961 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074392729 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07934706 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069737071 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065147285 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06589326 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074151195 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070660408 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.074236207 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.076368341 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074501623 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.064753817 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.06850088 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.076466209 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.080352023 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.070652608 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072254793 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.077365359 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072150703 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.070001244 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077378957 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.074415858 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.069724206 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076775446 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.07145361 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.066247645 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07339428 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073753229 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.070887328 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074985762 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07470572 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.07319857 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.072328705 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069691635 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.077289355 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071299573 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.069606325 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070460324 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.070332111 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081662162 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.073369564 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065442102 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.068617089 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.078861147 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068484174 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069389581 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069735528 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073203922 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.072496323 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.069027142 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.071126604 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073065453 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.080405163 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.075791239 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072398731 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076173904 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083009262 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.07018889 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073147913 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070588448 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071078258 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071106667 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080178483 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076313611 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.076034686 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073057626 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067246883 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076531601 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.079330559 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070438679 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068339474 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069844265 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074766888 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076593583 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.075227867 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.071429659 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068820186 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071974108 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073566019 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073580328 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070590037 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06960532 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.077401935 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068805712 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077569125 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071668048 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.081216009 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074770741 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065525636 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074514775 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069087738 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.077356049 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066240584 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068731603 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069834536 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.071771398 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070380513 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07329115 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065018054 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078589549 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078240792 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071802973 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069680821 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070437382 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077687369 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072223882 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074418271 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.074329194 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076620911 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.213088888 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07084477 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074257288 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081917819 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.071293204 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.064707038 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.077302306 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069718608 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.070497902 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070607495 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069307117 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075076836 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.079755973 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077207027 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064897978 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073760279 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069807075 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070355547 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.066284406 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.076156557 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073710414 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.071815098 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078576519 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071977763 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071873571 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07566744 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.070976385 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071863109 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07327135 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074148086 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071876413 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.073135504 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070509254 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.074360589 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071060939 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068714506 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.072993187 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.071410822 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071536331 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076451569 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070839411 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070569125 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.072950863 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.07211377 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071433973 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071331027 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070271042 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075267562 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072048902 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071035508 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073555294 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.066158011 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.079094194 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.070386457 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078453109 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.071387696 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067797557 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.077114371 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073063524 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076584562 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071921354 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071445879 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072701839 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.070443119 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073186356 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078155302 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068389767 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081363385 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079361905 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071572667 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073183272 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071354235 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072224356 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070090693 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.071308318 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.07163429 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070964949 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070232377 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075081388 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073289649 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071422798 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073738731 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.071552344 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071469464 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071690066 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06470812 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.069828794 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070121482 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070840681 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081108801 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07126569 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070999197 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069757644 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071681295 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069943142 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067117137 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.078312167 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.079274625 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.072426327 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078129789 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069835479 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072207409 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081931144 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.064637221 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.069065607 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068250893 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068980863 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078179875 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.071763822 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.080193945 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.071213665 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06982249 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067551567 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07099827 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068935448 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.064761016 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068231891 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074378758 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.069340721 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069617809 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.070928122 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073118949 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.205923353 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.081098502 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.071009135 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.071886132 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071490078 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.068407008 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070622323 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070721333 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.074764689 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.072215354 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069827574 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068844119 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.071025257 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072171751 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07240523 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.073599293 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.073237033 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077842435 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.071093296 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.074248185 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074511935 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06492465 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.074053713 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.07174173 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070740987 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.070369302 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.075575679 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074800927 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071590762 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080434071 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.070923221 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071560431 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071391244 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.069410689 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070158597 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.070373324 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070450312 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070312557 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.072161953 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078986716 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068691416 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073307192 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070100342 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071064442 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.07712252 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.07207843 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.074045641 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.077721883 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.072282922 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.072303492 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078805733 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.075403863 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074170345 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072907534 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072653775 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076212231 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070144486 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.07720793 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071298832 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.0719798 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.073593722 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.068759926 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070482072 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071414248 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070889886 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.077017358 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.071256374 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070465262 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.070083128 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068799667 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.07178787 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073620442 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078800889 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073204774 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073802416 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066324303 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068134513 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071266529 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.068577735 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.072660073 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.073368899 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076683689 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07305988 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.071092131 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.070027899 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080238313 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076828922 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.074943898 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068742357 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074370451 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07156867 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072862855 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072056786 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071263434 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072261678 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074715169 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072735728 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070916465 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078052922 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.074513742 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071295262 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072425356 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.071300028 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070831581 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.065616572 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.070802125 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072751362 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07619661 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.073462163 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070893597 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081808795 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.068136245 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071206483 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073944175 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06992368 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075378434 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065279711 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.072474243 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071455826 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070802345 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065252412 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.069499038 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.200949429 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.074763728 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070605244 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066047087 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082297402 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080682066 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074640635 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070460849 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069823758 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.065748838 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.066609689 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.07104017 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071988325 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.073095742 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.08199063 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.069987469 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070526245 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066970001 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071491469 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073296264 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074834144 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068571168 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066055638 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069976223 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07386075 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076542125 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069635343 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070922019 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074468454 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073332381 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068235513 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074491493 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067708946 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075116326 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084080296 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.071350277 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071555951 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.077404653 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07852164 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071302184 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.065342328 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.07116983 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.074273609 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071054317 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071623132 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.071257599 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086008004 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07410827 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070076371 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.069230666 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.07317258 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069789669 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.078444732 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071514382 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071502079 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075998344 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072357392 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079214069 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074585365 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078283358 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074343644 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.07377997 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069446033 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070900534 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068777113 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.06969279 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.072002001 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.070581504 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.074976751 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.078321032 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.069857105 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082046207 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080447884 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.0727529 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.067667056 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070145808 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070477824 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065866497 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.071699911 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06869302 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068672679 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.068983303 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069656609 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.071893043 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076863916 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.07175077 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.071785147 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070477897 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065171078 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072888391 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.072709965 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071439265 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067359445 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.071317588 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071127025 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074668633 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074013496 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068545082 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072596656 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073222942 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072076789 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.065770376 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.078165682 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070074582 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073044808 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070745187 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071334849 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071068946 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074471459 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075579852 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071674122 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.073268469 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.074306016 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072405581 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.067777025 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.067602434 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076018041 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068773796 seconds)
  done (took 45.348800333 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.105667914 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067574097 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065912818 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.065854835 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07677033 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066859044 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065618728 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066714191 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06704979 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068985374 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065584939 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065998368 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074385528 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08115302 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07744617 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070349091 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.065834172 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066745787 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065657853 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066713437 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07432654 seconds)
  done (took 2.910341161 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077667821 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082378825 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.080200951 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087505369 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075072798 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074325453 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080029647 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074246247 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082309259 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076608145 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082703059 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074459529 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076421628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.076170804 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076750178 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074755666 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082528451 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074738627 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074100021 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079280263 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074640179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.079266197 seconds)
  done (took 3.109425175 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071595677 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.070328708 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071840516 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065290485 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069814789 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065153077 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073555275 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067781723 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073057084 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.06972115 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.06942344 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068773492 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07180027 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065351912 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070083058 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.067869834 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.112533573 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.07313865 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070267796 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070829684 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.065241302 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.07200964 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.065400619 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.065865444 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068787094 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.07320466 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071102094 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068314466 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.069754137 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.069571922 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070091804 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.067773361 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071617391 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071160873 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.070113604 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.069213938 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069793104 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07064991 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.065531366 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.067963653 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070802247 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06550791 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.070528181 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071073533 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068616827 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067708146 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.072082862 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.069999815 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064754384 seconds)
  done (took 4.839583604 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083977915 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.114383833 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.070912963 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.094089653 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.087487996 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076870474 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073826866 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.094779212 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067160824 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068119459 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085690921 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083026294 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069453823 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074275208 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.076981706 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069404302 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070733087 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068121183 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073107869 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068887847 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073388989 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.076727503 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.08379726 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082744556 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073605234 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068358 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06839908 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074054703 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081540661 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073772342 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.073769105 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07490757 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084671257 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.074994977 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068490297 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.07180274 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.085434805 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.069403357 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071847234 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.067713347 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071908848 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073734017 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.076526364 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085623619 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069817257 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.074513025 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069176152 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067212313 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081829924 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071841655 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076987969 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.083135721 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073273133 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069782784 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074068364 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084216232 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069180904 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.0676728 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072660868 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081419628 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067159073 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072998583 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082701634 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071844683 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076569815 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.082845412 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.074913037 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073005094 seconds)
  done (took 6.70773005 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080046606 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100493907 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.088005725 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087198731 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08005622 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.080020713 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080696536 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080121675 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079350364 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.084384834 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07990369 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.121107188 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075126428 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.081956625 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079809596 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080145415 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.08004619 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07991098 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07954166 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079500688 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079763144 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.087469447 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079723764 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.087715514 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083543927 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075070978 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079518245 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080169572 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087515694 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.080033881 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092098249 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079540152 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079761627 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08732463 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083739982 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079361865 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069258995 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08034024 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.080009573 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080055819 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075373649 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087235623 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07951082 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.074755951 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080025087 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080350169 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.087009198 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.084006715 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082504789 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.084224454 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.079718883 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087581343 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079987368 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080178405 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.088471585 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.090220918 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.087293569 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.087512978 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08021751 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086673795 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.087458268 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089978642 seconds)
  done (took 6.566852963 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086591677 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.077687291 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.086388874 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.0654584 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068531079 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076659698 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068111313 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.068448478 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077945948 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078161526 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080105271 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075523912 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079141657 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079857533 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.075495744 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07878253 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.075859277 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076137022 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.078543623 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.075827481 seconds)
  done (took 2.948405987 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.079123701 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087187884 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070746037 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075313022 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073462314 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075845063 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.073135538 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073148518 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071004227 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073432298 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.080266556 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.08024674 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071138492 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075255248 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.08061214 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075373736 seconds)
  done (took 2.626251776 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.088474403 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077287855 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084570859 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071071101 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.07070406 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.066661442 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06949516 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.065109625 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066701727 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082708599 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070156161 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080639053 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070040796 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068936085 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066985804 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075217377 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066248187 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06721359 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069682201 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.082927693 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.073806253 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068371192 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073347458 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.069688631 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.072643116 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.074624127 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06856747 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070794945 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.066848828 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070720786 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.072981083 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.072969202 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.066896995 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067648229 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.068817728 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067018772 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069593738 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070228094 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075697166 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070190936 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.068029443 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072159585 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.069814276 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.070797279 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066309886 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070911767 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06611792 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072520704 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067127864 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072296001 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.069895446 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072395784 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070486797 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.0774297 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072785643 seconds)
  done (took 5.343658666 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08510386 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07393328 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065586509 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06764819 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.072700209 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071350447 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073340891 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.070868015 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071162323 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067962029 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071122231 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07296175 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071279238 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073508068 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071118265 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07348918 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.066391681 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071033485 seconds)
  done (took 2.713846237 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074944161 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069836313 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077091419 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070518507 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.069637431 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072321328 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066312553 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.069175411 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068518522 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069939627 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070436777 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072457266 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068236597 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073083176 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069867904 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070014505 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072462557 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068926103 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070331662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065737694 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072554481 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068795413 seconds)
  done (took 2.964055268 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098706625 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087333574 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14590474 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.083083982 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089186825 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.075374063 seconds)
  done (took 1.993386549 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096276942 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105208185 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070717579 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072838032 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07995451 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07398324 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073611465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074149715 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082384121 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079967618 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073961683 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083662849 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082690278 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082520115 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079709674 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080052622 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074947608 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074326809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070155618 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088401568 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074134123 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08286226 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07446336 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073701093 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074070598 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081906872 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082757908 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079342719 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074329963 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082729979 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079779294 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074267615 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083067854 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079938828 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073450238 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08262067 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074661698 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087685254 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080377045 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08189023 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073637423 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080262884 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082931784 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079106894 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082627524 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074483196 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079050627 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074160851 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074628194 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.090318468 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080000982 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08172004 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083052532 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083127549 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082724621 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090064807 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080033598 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081806286 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079800305 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080041961 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081916387 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080053628 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081941569 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080228826 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079700891 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082150862 seconds)
  done (took 6.695672532 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109547966 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071162767 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075232426 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080315167 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081933011 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07448861 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074844827 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074006426 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074626942 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071053398 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113247651 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074921646 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082419096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082565708 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075018009 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074133298 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074372667 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08216386 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07076224 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089736358 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074059891 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082013488 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082046651 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081442224 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0801352 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080098684 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074248448 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074074944 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074150518 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074157767 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078522441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074626652 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081536086 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070962737 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081762702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07423242 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074084242 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078623944 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074517831 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080301818 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081549261 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087641606 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074453212 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074625636 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079752213 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074054911 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074198721 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070835493 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074185128 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071209379 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080068538 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079924925 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080629514 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08159807 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075170553 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074467856 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074971862 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074482044 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074920371 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.080402463 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082413643 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074252197 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089795598 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074284943 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074591719 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081942752 seconds)
  done (took 6.604875553 seconds)
done (took 137.300517338 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.192851461 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173353901 seconds)
  done (took 1.778940706 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073385622 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103059447 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.081965058 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132399366 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070819052 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.10425867 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103750068 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082214825 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070366331 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070301375 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070456463 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.07262297 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.136180447 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070750782 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.07033842 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.073156441 seconds)
  done (took 2.809790317 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106418056 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.17090933 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108208397 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069018732 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104579973 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076862931 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.068689711 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079940413 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075132612 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.069735029 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076842588 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.075303703 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.069016832 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075362107 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075793953 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076595238 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069236119 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076830606 seconds)
  done (took 2.952768943 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103093137 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095654295 seconds)
  done (took 1.634530822 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.167322432 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.137718225 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.208572233 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.364062402 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168604852 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.153734232 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.148479833 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.147934966 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.120581972 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.1432867 seconds)
  done (took 3.191963185 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105026364 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.161805081 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.278703549 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123424045 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07804433 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.098125583 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125459533 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083626775 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084873427 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084247611 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084398243 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081264182 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104646409 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077363086 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078442429 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080910265 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108661957 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.07771118 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.079092449 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079747551 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106398424 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070083697 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07765611 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077426933 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.082052314 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081392284 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069847122 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070061404 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.08025092 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079007744 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.080667578 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.096733182 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081714782 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110706915 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075224057 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112116651 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081667994 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07788481 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079520329 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077742212 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.082167151 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.082761664 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.0776604 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.08070216 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070046356 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081769907 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070233275 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070563393 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.082154106 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071391931 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.082122739 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080299255 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110692751 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071664838 seconds)
  done (took 6.313288837 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108540764 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.111059572 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075542975 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.118595491 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108293692 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.076505609 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107971521 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.100869587 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108857465 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074323204 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073116077 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074332553 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.086342921 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08681965 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.120744636 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.112016563 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077808811 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.075260843 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.111885916 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.110275175 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073403288 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102207015 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.096699267 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.108571692 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.07152602 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074130091 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.073064002 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074596067 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080867766 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082550285 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.07409003 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084232983 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08886263 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.08201801 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071905998 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072464723 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072109127 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083593201 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083462981 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083111354 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081834495 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072738902 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072027447 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07414509 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07410162 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072052716 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.0831593 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.086513983 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082985627 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074480428 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074271535 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.072480905 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073595531 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084618026 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.081771675 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085366994 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084541092 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.073000824 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072629869 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.077397838 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08431952 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084286459 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083776181 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07446016 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083747865 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073131446 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084451034 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088615542 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072782132 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07451889 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072699034 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07457571 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074244334 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081850412 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081750689 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074304333 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073436134 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072271842 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083716862 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082473953 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072931268 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081510441 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07251731 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072699229 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073643086 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074394358 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081958106 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.084805761 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074188185 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072928352 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07370305 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073034059 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071301778 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.08110101 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.084386137 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.084166097 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.083061963 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073350413 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.08299257 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.083086195 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074469404 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.083506302 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.073162692 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073848891 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.206233573 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.083608598 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.083666191 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084705624 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.074099494 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072891855 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.082577344 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085662248 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.074162113 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.08238296 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.086369877 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.083978788 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.073333341 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.086180685 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073969748 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083493057 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074685843 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.085276459 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073343855 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.083349754 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.073540797 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.072716012 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07305131 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.083339542 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.076880094 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072340766 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07401756 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07414445 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.083403803 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.086522439 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074491784 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082694598 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.083614786 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074140542 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083658277 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07282673 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083321119 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073386877 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073913299 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071457859 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086428468 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.073018338 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.072816683 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.074196616 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.084397209 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073411927 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083973419 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.082136064 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072916345 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085677731 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.08414262 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080696224 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083711136 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074602443 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072411529 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072088514 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073901306 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08182489 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.083992252 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074931438 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07303149 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.082084806 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.08340921 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.071245865 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08198549 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.0830438 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.083565457 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.072397546 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.074188615 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084737579 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.085644556 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.082077571 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.082298438 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082605764 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072921218 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.08186411 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082301542 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072424946 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.088658932 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073118891 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.087318788 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.083045181 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081517887 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082975603 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.0851801 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08500873 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.084508248 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.087223787 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072339921 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072368912 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08386712 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.072698993 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.074696323 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.083155356 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07436051 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073983346 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08746286 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.072918859 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.083661731 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.072056708 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.082877707 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071383108 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074514699 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.086978272 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07189526 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.207542002 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.083799198 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07446124 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.082371802 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085392417 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.082496469 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072958362 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07467412 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.083436031 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.083200735 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072630635 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072456568 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075753361 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.082514706 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.081885898 seconds)
  done (took 19.742353843 seconds)
done (took 39.858544601 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218743186 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.158816411 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.179566303 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.123503806 seconds)
  done (took 2.212700145 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121768717 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1074833 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097335694 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069132596 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103808495 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069410947 seconds)
  done (took 2.028350446 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.31911202 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217587167 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.194160427 seconds)
  done (took 2.193035175 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.208446946 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.196408581 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.437232381 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.274348725 seconds)
  done (took 2.691732788 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150475278 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093224637 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071385203 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088865598 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138753068 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166265144 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105285361 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.13072762 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.083785635 seconds)
  done (took 2.539300457 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154180157 seconds)
done (took 13.277412484 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.108819849 seconds)
    (2/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.218121188 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.115399576 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.132115971 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106007589 seconds)
    (6/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.078620823 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.21935442 seconds)
    (8/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.082387825 seconds)
    (9/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078580036 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.076269614 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.116783323 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.082894241 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.211873622 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078894316 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077957504 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.217486263 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076713812 seconds)
    (18/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.166179784 seconds)
    (19/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.090920767 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078765552 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.215349035 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.069660722 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.203633364 seconds)
    (24/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.082694677 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.173655995 seconds)
    (26/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.213028225 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.09441054 seconds)
    (28/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082417601 seconds)
    (29/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.191545565 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.192236567 seconds)
    (31/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077003994 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066710373 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076233253 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077830282 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151569295 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.134597999 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.095598369 seconds)
    (38/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.107010318 seconds)
    (39/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.084182068 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094837191 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109193795 seconds)
    (42/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094341611 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.081839175 seconds)
    (44/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.118875051 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.228873862 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.098535104 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070715723 seconds)
    (48/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.178481799 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077685013 seconds)
    (50/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.075924115 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.239437889 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077445487 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.108311512 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.153231958 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.094777472 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.174012411 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.226898105 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.165274607 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.05635693 seconds)
    (60/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.079903994 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072038788 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.069155101 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.205821622 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.113499919 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.080551355 seconds)
    (66/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.107736375 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.07786718 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.153364096 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075547391 seconds)
    (70/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169248761 seconds)
    (71/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.117147935 seconds)
    (72/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.119257068 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.079685202 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.193834686 seconds)
    (75/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.107075799 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 0.069925726 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.094437381 seconds)
    (78/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.161618428 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.093823688 seconds)
    (80/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.084456634 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.07919301 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054248592 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.081642165 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.097187011 seconds)
    (85/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.055043463 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.080320036 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.2916345 seconds)
    (88/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077745645 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.190498386 seconds)
    (90/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.385018877 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.056760804 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.236439577 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.099273308 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.188811097 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076623202 seconds)
    (96/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.05582955 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095112907 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06985874 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.110545545 seconds)
    (100/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095826007 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068735224 seconds)
    (102/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.162194651 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.192245128 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.096604726 seconds)
    (105/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.167982667 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.0808017 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.082517858 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.077764666 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.094912343 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055387431 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07492018 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.067270501 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 0.138179199 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.152783649 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.154143567 seconds)
    (116/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075148723 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.055750935 seconds)
    (118/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055618115 seconds)
    (119/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.076972762 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.148727179 seconds)
    (121/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.108736903 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.093363174 seconds)
    (123/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.163592203 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.096809514 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.095363991 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.08567775 seconds)
    (127/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077334166 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054035834 seconds)
    (129/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.080438743 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 0.143126064 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.078194705 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.146197462 seconds)
    (133/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07060087 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077809725 seconds)
    (135/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073844865 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.093068067 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.075959182 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.076088279 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076965148 seconds)
    (140/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085251123 seconds)
    (141/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.094916228 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068809547 seconds)
    (143/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.071119159 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.200847623 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.071459435 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.118638053 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113593043 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.160862775 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070649148 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.081656263 seconds)
    (151/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.117006987 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.076916639 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.191473029 seconds)
    (154/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.104515711 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.070345484 seconds)
    (156/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.074986549 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.192188156 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069822404 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.069197751 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.077840074 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.054513493 seconds)
    (162/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.056229928 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.069988224 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.069457163 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078269073 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.076686621 seconds)
    (167/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078376601 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.07203768 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067416926 seconds)
    (170/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.072921627 seconds)
    (171/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073875554 seconds)
    (172/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.069491819 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.073705389 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054483641 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.116635473 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054081994 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.072980117 seconds)
    (178/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.201756221 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054366776 seconds)
    (180/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065171854 seconds)
    (181/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.172046017 seconds)
    (182/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.116123818 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.202509448 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.077136891 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070161547 seconds)
    (186/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.077092553 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054163542 seconds)
    (188/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.066072854 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.181709249 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.078568793 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109044798 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.07615459 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06976046 seconds)
    (194/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.313687589 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.084423228 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.076704903 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.148537574 seconds)
    (198/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.079074619 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069399672 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.070734248 seconds)
    (201/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.127520911 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.056427393 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054679916 seconds)
    (204/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054473199 seconds)
    (205/309) benchmarking ("sort", BigInt, false)...
    done (took 0.196809696 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076463615 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077421958 seconds)
    (208/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.067182762 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078636054 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.080206607 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.073301673 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.106536805 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.100458515 seconds)
    (214/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.079627602 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077515973 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093133769 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.073197828 seconds)
    (218/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.0858993 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.056199977 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071388756 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05451663 seconds)
    (222/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.05523295 seconds)
    (223/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054163371 seconds)
    (224/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055414876 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.069960565 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097912538 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075551726 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.054409564 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05436696 seconds)
    (230/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084813064 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055919906 seconds)
    (232/309) benchmarking ("sort", Float64, false)...
    done (took 0.137581158 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.068372577 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070746716 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.106224021 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069631485 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.070989743 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.065254131 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.069447912 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.146796512 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.072167283 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.05423824 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082657133 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.099138735 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.055616084 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054243092 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.114499434 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.072281324 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054624485 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.05491557 seconds)
    (251/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.05481103 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.09277851 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.055732393 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069808306 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054862891 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.069626898 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069002087 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055535313 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.153549332 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.057018008 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.078144742 seconds)
    (262/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.055253144 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.055398773 seconds)
    (264/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.110328362 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.076754416 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.185249873 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.069151993 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078578081 seconds)
    (269/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.067547365 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054748282 seconds)
    (271/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071771747 seconds)
    (272/309) benchmarking ("sort", Int8, false)...
    done (took 0.14702689 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.091290868 seconds)
    (274/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055751929 seconds)
    (275/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.067336659 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.055385557 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.055445531 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121862702 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.158879892 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.071488284 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069757329 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055740969 seconds)
    (283/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077107552 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.069973413 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.077744911 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.068272898 seconds)
    (287/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.057278409 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.069488715 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06811054 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.095440901 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077411285 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.182867607 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.068601699 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.190438094 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076013675 seconds)
    (296/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054301206 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069094275 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055482125 seconds)
    (299/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.067945207 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.095361128 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.115865397 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083099864 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.075412436 seconds)
    (304/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054926672 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055251878 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.144071556 seconds)
    (307/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072047664 seconds)
    (308/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071489784 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.077766276 seconds)
  done (took 32.625926221 seconds)
done (took 34.093757795 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.091066708 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097580295 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.079686291 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097850481 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084801068 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.080774124 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076915943 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.083018799 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083873133 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085822471 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081661722 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057789076 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.078226722 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078448141 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.079693513 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096025189 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.083143823 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077618807 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.07826112 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.068388564 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.077823386 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.069315312 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071331519 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058158847 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082864588 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075935994 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.076227586 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078055511 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069936996 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.069425933 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072963982 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077477552 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069330988 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082445004 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076226976 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076829466 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079062726 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.080811579 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071304818 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06963937 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079360461 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069978144 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076887292 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078031926 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076269529 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075019142 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.078235651 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081645932 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095129226 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071932244 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078677357 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079954313 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079867361 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076669182 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.07400927 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077415274 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075234899 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095042347 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07772355 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072074442 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079053929 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.078806213 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075355706 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07750767 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.077158239 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.079435397 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.08008248 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075319584 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.07875676 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075960908 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069265614 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.077015764 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072797776 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069461253 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.08020362 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08200565 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.068187564 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075587866 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.077395293 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075843538 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068422478 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071637562 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.07136895 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07627039 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.07102023 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057688455 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073843207 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076598338 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068829172 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.077498662 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07664339 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076800915 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071249658 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.080475746 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.06873589 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074540469 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069551902 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069500422 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071217679 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.073895243 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068881016 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071644022 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.078982295 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070605626 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.076697463 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082927788 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069567765 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.076254458 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068217958 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068915565 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083621057 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078884387 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069328993 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071479734 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068235319 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.07671611 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.068808156 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068843653 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069680835 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068743684 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075386165 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.069614201 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071137566 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.076753516 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.082182398 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.069975952 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.073156004 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071270603 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069018054 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074870186 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.069488878 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.205888733 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.071764052 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066363437 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071606672 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.069845132 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.07670849 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07172288 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078681954 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071460134 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078791816 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.074786371 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075523398 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075060752 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068998443 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063391597 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071530548 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072635152 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.07282297 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.069415266 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.071486668 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070205787 seconds)
done (took 13.175911196 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071012232 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145376698 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101593861 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099921244 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089629566 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.071228833 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079898579 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.104157237 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071723354 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105729378 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.092696839 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090499593 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.119407818 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068472919 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070235714 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.073817304 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.072223294 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08505206 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.10384401 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.091064514 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120286799 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069139982 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.097859266 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093809494 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092570943 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.098296046 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.072880139 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.074172523 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.074222197 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.106879766 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093102742 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073764465 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.07064554 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.102846534 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098526333 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088140883 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070591079 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087680109 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.071028078 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.070171707 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071159828 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.104022812 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08510634 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085105229 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07470757 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080714597 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071247318 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.088375079 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094583168 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083067579 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089989775 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105979724 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072786299 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.0884066 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068582657 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.091057687 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.08131361 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072421692 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.070218668 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078377087 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069720323 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073300169 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.085286084 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085585151 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073933127 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089647115 seconds)
  done (took 7.196457966 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.088373375 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.097107572 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087826204 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088491061 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.069400321 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070105887 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.070526838 seconds)
  done (took 2.12996338 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071439459 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092790798 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093810908 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093922287 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085522861 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092245621 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080574771 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071031376 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093132021 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071511588 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09207585 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105350406 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.073886347 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078156996 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095357498 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071292395 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095712965 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.070113827 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.073961958 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094889228 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072938566 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.101381528 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074799916 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070607478 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085254377 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070512633 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119384615 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075211679 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072499969 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.073532551 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068486639 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.112549519 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.084866064 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078687326 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070834839 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.086091621 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085987243 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068947977 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087786205 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.079340382 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.085271334 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071015095 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.071586601 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.068752226 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075194664 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081551357 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.071700464 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071995979 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.073778939 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.091460254 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.071782106 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084784422 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073645071 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076601743 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.073070719 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077830992 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082303755 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072439829 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.091243724 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.072586808 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088516899 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086952279 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084938284 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086956709 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073318739 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084532524 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084983263 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073475744 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073173474 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074403992 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087409312 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068993357 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072212909 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.082000202 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07249953 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094633692 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.095661603 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072377151 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084659455 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071150654 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070565129 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.070306839 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.094385198 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076052652 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.07068787 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074912424 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074345706 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069184879 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069723793 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074790951 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068592051 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072738955 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074749629 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.073893086 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073655849 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087683846 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07334815 seconds)
  done (took 9.305040087 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074268088 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071690235 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.073240561 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071974966 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.072103404 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071845105 seconds)
  done (took 2.015096179 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09808941 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.073203621 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084724139 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075982592 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.109971757 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.092294657 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091778532 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082709041 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088725022 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082913613 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091454905 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092638584 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.09699002 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076400315 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091501896 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075535139 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091751987 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079030875 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082459381 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07685566 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.091325445 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076062262 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077341431 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086118665 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079989728 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075639236 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.082410207 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.083264416 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082994284 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082305309 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076258882 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079871083 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.07451008 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081809944 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.092203369 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.074448971 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075575909 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.081690145 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076084396 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080226753 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.092149493 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077388444 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07849581 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081467765 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.081832191 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.074991205 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.081083387 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.083097102 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.091191772 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.081486017 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.080859083 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.075293387 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.079854361 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081658719 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.074518135 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.082266641 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081564643 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.092033676 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076351485 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074536364 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073428997 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.080093144 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.082101391 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.08063522 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082684669 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.081093962 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074812384 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076662447 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076942081 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.076285216 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.081248765 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07260515 seconds)
  done (took 7.466485293 seconds)
done (took 29.661333673 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542442605 seconds)
  done (took 2.088587553 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.62341104 seconds)
  done (took 2.197300436 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.422439672 seconds)
  done (took 7.993609474 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.423755853 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.545918341 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.744313603 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136873346 seconds)
  done (took 3.466431008 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.718702511 seconds)
  done (took 2.298656533 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.223731023 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.20983472 seconds)
  done (took 2.026239289 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.386350383 seconds)
  done (took 1.95878222 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.154507208 seconds)
  done (took 2.73170657 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.268662395 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182352879 seconds)
  done (took 2.03497685 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.500207635 seconds)
  done (took 2.078156293 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.8735734 seconds)
  done (took 6.452781764 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223249335 seconds)
  done (took 1.839231242 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.243415969 seconds)
  done (took 1.818078074 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.738324878 seconds)
  done (took 3.316792081 seconds)
done (took 43.880089027 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086313935 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085856509 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085533914 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083480324 seconds)
  done (took 1.906853849 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.083719613 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078088195 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081955956 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076911392 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081072753 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077489485 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078518244 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079743861 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076802121 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.077434324 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077355829 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076888238 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079156957 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078670706 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075530289 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079702944 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.080433483 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076716254 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.080298202 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077137835 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074870065 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079115216 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079391088 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.075963354 seconds)
  done (took 3.464970118 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084884268 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077436609 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080317425 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077419023 seconds)
  done (took 1.909179372 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08461089 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.098287258 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.096526279 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083799354 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097351604 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091190544 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073580098 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.07350898 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.074900297 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082566828 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.072841665 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101128114 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093307319 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082291902 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.084640323 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070688882 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.073766271 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.09272051 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.08298604 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082988985 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.074726552 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.083321352 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072799686 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.094081526 seconds)
  done (took 3.603856938 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.092945691 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110137766 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085752137 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.094930179 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.095992835 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.069470852 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.092584036 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.095719956 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132675399 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069593238 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.075391181 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069794752 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077501464 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069581326 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085688372 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113415473 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117589143 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.074080615 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.103110073 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.069429521 seconds)
  done (took 3.38788927 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078480991 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073437925 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.069787616 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072938661 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081653409 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.077376562 seconds)
  done (took 2.051691064 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.074754875 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072160165 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.071350796 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072219494 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07651529 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071624156 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070507909 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.071674292 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072190299 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07168347 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.070873167 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.069813601 seconds)
  done (took 2.457549884 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.209793245 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072594113 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073153099 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069734158 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074946208 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071475491 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086084235 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072236151 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096625863 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070839246 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070547715 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07286227 seconds)
  done (took 2.633256209 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21668059 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080923667 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247655935 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15755671 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116831851 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121282472 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117801762 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118460907 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.147950152 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10562138 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174523799 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173519005 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113353346 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142954982 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094456375 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103896556 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160717924 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170258933 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111706648 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172412451 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151789007 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131742939 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159410984 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107270574 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111052416 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127282646 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.075867018 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085064506 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177141342 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138595211 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150379591 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117401965 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09751767 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182281368 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177938629 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146409365 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154290894 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089941648 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107087813 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.139343118 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206341493 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093125045 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16751764 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2560762 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086600668 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13949063 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124172203 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.124204677 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.110054973 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094401592 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153025852 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191403215 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.142897213 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091880625 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129166646 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119459092 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119599095 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118431976 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187156811 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167710331 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134611083 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.075879775 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113016101 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158494382 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13794457 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114228451 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.130234901 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097259475 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14053246 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160707375 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128477702 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149242581 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122857804 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093299586 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123130283 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145816254 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132947722 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166660205 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129502284 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077342813 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128793164 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106252602 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085138361 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.154947324 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080178845 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18210666 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104948753 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1125162 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131425748 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11413679 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114382668 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164743695 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14973381 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108937374 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.214987368 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1109665 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126325035 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152917958 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092747492 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113643226 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121730046 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.081945845 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14099133 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079624357 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127631952 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079248212 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130243137 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13678613 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.082154389 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128181824 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109720407 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105573583 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138116836 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164769705 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09308339 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085867981 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175364024 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127831287 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.107556046 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151302866 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162561897 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104491667 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107063493 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155234373 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18440891 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094058164 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167982878 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111160923 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088237994 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.09195476 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128262957 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11604257 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.129569803 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086262327 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.122637611 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174772586 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079493088 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100326736 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138816229 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083043876 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085133515 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110906401 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109810084 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100301393 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104002701 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.106869344 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140915236 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127970206 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109350793 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128775797 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25088472 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178392501 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093783563 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.106011904 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109978249 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.07473702 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.139877028 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163406435 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08313831 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168677056 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.128178407 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121486588 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123442905 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088615434 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146825105 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08307913 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074280992 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15094655 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113937872 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115812335 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.156786855 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120539999 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131117578 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.124100925 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137779902 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136113154 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.135630755 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110871867 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092390612 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115831308 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131710371 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077419419 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094904455 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084607111 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108989747 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100832283 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088006773 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1468679 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12911081 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114287046 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11601116 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101433999 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152100293 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080868384 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133179319 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123148325 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100160271 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.157833525 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157178868 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135517839 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102852775 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142334587 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074340246 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077803891 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092111894 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126316343 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234416651 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088367526 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12098626 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15266834 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134565677 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143210884 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129302356 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12610907 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16058573 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074588123 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.124250873 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153251863 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126922897 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109804507 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093933339 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104090768 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147368811 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111745069 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188201036 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120151016 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126866926 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157076977 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.106123616 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083965083 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106633952 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139858755 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108620862 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148961648 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103677584 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092948095 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113419451 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.079816459 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.103568078 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13185781 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123120615 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138703918 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120184472 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137302292 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081801285 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120847593 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126138386 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126936186 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068304222 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124704858 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167242001 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099381473 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122062151 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157517689 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083057547 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.13951972 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180215028 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.297559888 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089975976 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114011088 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124717854 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134890902 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123909372 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145480327 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112674482 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141711956 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114500305 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.089748404 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092412312 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101568441 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109705045 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099027923 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.110627323 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.117730533 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.10112806 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13718537 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108479459 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11583058 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122467998 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104086868 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.095989621 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101249963 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183149659 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122690795 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176735496 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105079272 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.150803881 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167494079 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07970482 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083146963 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.082660457 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14522261 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088406951 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134734709 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112035228 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122921897 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130781141 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147299237 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099653186 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072538243 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112964668 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138467416 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12999084 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103069455 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108176598 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169495897 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104868161 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083576444 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118623162 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120483781 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107072485 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176414863 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065537812 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110177685 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080585865 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231308645 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133650844 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158447057 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085366196 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108260897 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124262774 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116489874 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133182117 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105795285 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114311572 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131913348 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15637828 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133082511 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.094365465 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116708212 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13219987 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163270455 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110125878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101755785 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177911494 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158161102 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.166128952 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091365366 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117531705 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116683504 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112092985 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141531072 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087534189 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169036109 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086340549 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14110945 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107926643 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092900193 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134214616 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113876293 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092979032 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153845985 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12201483 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086826616 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081860667 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1232282 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12404625 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110615792 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079251038 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144265894 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077801338 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136066155 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16423952 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084820963 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108749461 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099652248 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083713914 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261179574 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107242548 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091815403 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.102723627 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177524725 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091167609 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15489897 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138886481 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117446554 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140653827 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106487298 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643700881 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08229514 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157804596 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120634288 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179561779 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104540483 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121494444 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113888359 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127072172 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151522717 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108410837 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.188771478 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136127434 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120169403 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083729452 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106980972 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108422844 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.091378902 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111988234 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116986854 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120045049 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.097031972 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120057028 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128559862 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086269042 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100586236 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16076179 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121383815 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149106684 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145548954 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089949132 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121474671 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141575173 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084321059 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.125667004 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157556998 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109328495 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104345881 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084636934 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.104242894 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163533081 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.225438872 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166404577 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125304789 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114504106 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117489124 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.116556681 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134994519 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111257439 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126739591 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096557951 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113259379 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117287512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08603029 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.081692146 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11019002 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116806521 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101645392 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102526029 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.103044379 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156195156 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076190829 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103496612 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12016129 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148213895 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179973966 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092939633 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087797877 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122736873 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118951675 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.116967713 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124472401 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083251518 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085664581 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084192033 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.08299438 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113407929 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116799205 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119837978 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114561738 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168378411 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087544661 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.24261938 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099789673 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109520019 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073742387 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082652157 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100868477 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102417201 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112140426 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11509959 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165044312 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.099766447 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.094293843 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09576023 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.078382362 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086993452 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132067743 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113429308 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120896806 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252288346 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067018776 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113503621 seconds)
  done (took 61.499459452 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.114435016 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086347752 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.099526755 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148520444 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126945837 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206155058 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156165737 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194118879 seconds)
  done (took 2.82679618 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07437428 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101030529 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108179164 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087286469 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071124999 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071806173 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.239348543 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086478294 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070600526 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.100421582 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083062386 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072903872 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438871998 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06991156 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071241448 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06571444 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071497094 seconds)
  done (took 3.570094019 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.40793846 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.613603134 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.359997138 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076204561 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.507227794 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088244131 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.145699645 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131689165 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.077525166 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.541806464 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.412749027 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.131673446 seconds)
  done (took 18.19021143 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.081394085 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.073040164 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.088102393 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087263675 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.076710363 seconds)
  done (took 2.096542253 seconds)
done (took 111.211016764 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088028176 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.615939831 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.056707113 seconds)
  done (took 2.393404373 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.08987267 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090176842 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090618837 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087194556 seconds)
  done (took 2.059899487 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.08080101 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080259415 seconds)
  done (took 1.853173822 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240050615 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172525608 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100785867 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.089596932 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083251846 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.084045936 seconds)
  done (took 1.956497012 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07837087 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.079151079 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.077298015 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.080369102 seconds)
  done (took 2.007539067 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082563226 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056587235 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058221725 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06106495 seconds)
  done (took 1.95181084 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093752686 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083557668 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.08357405 seconds)
  done (took 1.953194182 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109137571 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090216659 seconds)
  done (took 1.89351225 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.089201706 seconds)
  done (took 1.782678963 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.102781159 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106273927 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137480363 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11643517 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14583933 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.113963488 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089313368 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.08969365 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080797584 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090720666 seconds)
  done (took 2.767585624 seconds)
done (took 22.909072638 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.086198199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.373208938 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364399124 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094013557 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673155201 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.359969046 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.984151811 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.097278104 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120358049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071273253 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088585004 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652534652 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.976170658 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.332988184 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.962663807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331174026 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.653858952 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072338446 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071674941 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072072556 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.971806566 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.072584286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071409865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072989716 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65214346 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.376216961 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072188244 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.327523204 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071569602 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07353426 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358791512 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072331416 seconds)
  done (took 16.311015124 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.077775575 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125858897 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077626828 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088944854 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.074146068 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073527057 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.075095061 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072821927 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126211728 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072423136 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.089512427 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071883378 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075307545 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.090155455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091872001 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072142452 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072440065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072608127 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071845037 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072223447 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090771995 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071934799 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.0727298 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072855063 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071581395 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084857048 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072486777 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071885362 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073019703 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074014275 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074709365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072971881 seconds)
  done (took 4.255928364 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.122918336 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.130384002 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078287598 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109162982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.117179711 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073891692 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.149085083 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098357317 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.132167078 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072561879 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090240196 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.072265056 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.106929865 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072669894 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092330757 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.072532538 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073208319 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072998672 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072339009 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072447643 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092277091 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071717354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07225819 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073278766 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072507642 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086499407 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07229878 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072428358 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072187432 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073883976 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075772102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072910577 seconds)
  done (took 4.497760455 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079377128 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079507768 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087268684 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088395006 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.075024408 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.075764115 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077257843 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073825747 seconds)
  done (took 2.348998178 seconds)
done (took 29.115616417 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.085768959 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072798756 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.076717868 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.087446579 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.078767127 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083755222 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071260297 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079698708 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076637738 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077670851 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079410799 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071926078 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075599879 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071852365 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077539532 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072323345 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083302044 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076509932 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083103288 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.083467741 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073615721 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.077198912 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078917897 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.082996771 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083050597 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082444742 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081710176 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076374378 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073214089 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074328164 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081625637 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.087815658 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.072972369 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.082820396 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071464512 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071141885 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075848109 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071739155 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083258742 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.081506401 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.074262579 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080357538 seconds)
  done (took 4.977244742 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094012562 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097400886 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089915551 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065612918 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071075867 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.069527115 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.093988897 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063618668 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062944986 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093079819 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059127844 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062931065 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.068010182 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057685885 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.063954679 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060040764 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.065949693 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059370831 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064041889 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063521889 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.096675455 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057387464 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.082524292 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067331178 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059526362 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065672191 seconds)
  done (took 3.572540797 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.08184973 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08925995 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.094373682 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136427223 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111631481 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083455546 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.083101565 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.099417987 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.093183271 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.07122421 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.074969646 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098034414 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.094519915 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07838552 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071520441 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090205651 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.099191925 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072809204 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.077579173 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099043833 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091071615 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.090892898 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.100148098 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.087928876 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070604421 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073649095 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074938206 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.085719881 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076330819 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080978772 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.0750376 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.075335289 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.073736202 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.083290253 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.075190636 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073064654 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100051593 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081788546 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.083201846 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072896568 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.079653757 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072349381 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097123572 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.132179073 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.070648072 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077777879 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074937931 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081863493 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071338425 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093615754 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083733586 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070985155 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.074394365 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.07089451 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.07236427 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085142707 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073638225 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.074079218 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081237638 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07734082 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09686838 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076469889 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088036124 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071088718 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080409609 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.070555124 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073342717 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070857215 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.100744847 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073558689 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.116353103 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.072516244 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.071999678 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.080852922 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.07952509 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078202669 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.072623609 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087931004 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082045509 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07487763 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081260019 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.074640019 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074704228 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096224351 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075031765 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073286501 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072659615 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07911652 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074685635 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072857916 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085266539 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.070967912 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075040588 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089854604 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.071664683 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073034857 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.077724323 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.076224305 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070881643 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082718239 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076656538 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072796508 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081729492 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.071700301 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074555854 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084822191 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078319857 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.070563441 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076226811 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077957842 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072629389 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072971989 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074900383 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073230899 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080610924 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078169282 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076058193 seconds)
  done (took 11.224385742 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.175829394 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.162586601 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074521159 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.155402592 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.080785203 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.083185852 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.156957632 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099586275 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07175966 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072369314 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.072880344 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115745387 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.11121079 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121757482 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083466236 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071737997 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089447412 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119775114 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.159986631 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.153990063 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090149643 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081311727 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.073913841 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073315673 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074623707 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082879856 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090132815 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080894946 seconds)
  done (took 4.633143963 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.087941962 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.1102114 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079095982 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.09757347 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095193307 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072223048 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074451366 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.074563484 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086772559 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083358345 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072014737 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077574323 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.07884786 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.075373193 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073269013 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.07934931 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079908436 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073345721 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075456639 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077548095 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084157466 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097781845 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076151553 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071158106 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077409585 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071867722 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067414726 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089035778 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.072467289 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100665875 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069899799 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07792031 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087397445 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073398774 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072061862 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071943337 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.072059524 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.07175965 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074258931 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070567143 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070597901 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061347811 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071668965 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083739772 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078922007 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060346452 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077361883 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077855711 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07763026 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06948251 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074948455 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.075302682 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075022707 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079788395 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076228089 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.077601924 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073541954 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.078829423 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.081386299 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071487237 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069320602 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070714805 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076548256 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069167905 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081179221 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076933123 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070250293 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071800674 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074014984 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079695703 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.071500143 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076440502 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.070013697 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074693351 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077167285 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073776314 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073258524 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070237574 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.071283588 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072645266 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058899332 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072513749 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057108658 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075440222 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069603897 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070485926 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071462756 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077199676 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.083825432 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073402657 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078040856 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073320428 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070611676 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074831721 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064730081 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074200101 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088215802 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086785896 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072119243 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069831554 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086102261 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076906903 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070924623 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059665441 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.076926789 seconds)
  done (took 9.720418977 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.098939162 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.073872287 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.088711231 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096241577 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091795618 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.079717406 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082155588 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073603012 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.088581123 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.078893745 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081399542 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07176518 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.082037242 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.082099801 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.074072508 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082268906 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076279226 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088819146 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.087183198 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072338037 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080349145 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084864146 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09522493 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086488969 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.086453388 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086686623 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095039627 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081839926 seconds)
  done (took 4.107708593 seconds)
done (took 39.942413624 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.798649063 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.96776011 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.788170916 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.126098959 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.877112418 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.030003154 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.884367024 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.809246958 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.902784972 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.822638532 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.022420476 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.993234732 seconds)
done (took 65.745185238 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.894056175 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.929048561 seconds)
    (2/2) benchmarking "String"...
    done (took 2.022613409 seconds)
  done (took 5.671918662 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.017083831 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.354435509 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.038155623 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.791333101 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.79001398 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.104238295 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.590649243 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.296062549 seconds)
  done (took 30.68509715 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.894917073 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.007647682 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.465324971 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.498196333 seconds)
  done (took 15.639187268 seconds)
done (took 63.711905609 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.809072211 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.792270519 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.809505134 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.768851361 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.845255873 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.79619129 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.878742791 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.919630188 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.78620135 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.774365891 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.786236063 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.225425012 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.786545337 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.821608136 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.788363857 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.786900767 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.833888836 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.345469617 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.943843935 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.794757602 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.787018732 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.806121477 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.795377893 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.939187437 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.844454345 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.789524296 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.20775013 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.790421933 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.414456632 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.791058242 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.821676013 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.875395012 seconds)
  done (took 203.877971773 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.791885419 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.774381629 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.818759527 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.795784995 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.254846959 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.97719898 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.910723221 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.295172167 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.796168066 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.816207571 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.00210806 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.796701755 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.031958713 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.746450921 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.829179504 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.794115258 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.01294222 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.021563771 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.834707739 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.968954118 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.802665354 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.895183754 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.860658162 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.964411163 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.803247509 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.80678849 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.817512251 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.802260404 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.985508607 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.988419447 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.831583658 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.823399726 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.997441805 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.665181378 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.808676092 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.815776387 seconds)
  done (took 170.667024475 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.185399939 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.795116166 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.795622739 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.795378359 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.799833672 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.795174405 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.912285266 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.918981116 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.416576833 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.514591672 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.845189717 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.583198475 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.791041546 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.862577108 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.80304631 seconds)
    (15/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.79007426 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.795967581 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.808629425 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.821542175 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.792048653 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794847616 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.921675343 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.806515116 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.935532908 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.800219731 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.796502683 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.80336727 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.166484826 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.792320703 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.803902571 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.038645717 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.793698573 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.794449659 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.645273815 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.526212601 seconds)
    (35/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.793075246 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.881608106 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.798195596 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.79912891 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.798058098 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.015370819 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794335256 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.79707382 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.798477237 seconds)
    (44/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.794073392 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.930833778 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.795573084 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.917675329 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.797559019 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.276827181 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.797483589 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.797036368 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.462247814 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.390478401 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.797225334 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.795349825 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.801303108 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.797002501 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.795374658 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.803729454 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.559412614 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 2.033989267 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.797508221 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.799027452 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812882083 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.795979948 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.971747211 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.792735669 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.878747738 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.853561861 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.031883923 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.944485533 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.796904706 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.863134054 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.891830677 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.794060058 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.798673397 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.796461888 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.79642385 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.880866559 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.794025312 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.968232158 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.803030999 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.799669894 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.851239606 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.869723754 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.794895411 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.643277607 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.796717408 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.797966413 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.07246466 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.861913487 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.795708111 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.795310118 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.798823068 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.939610677 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.919238113 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.533848145 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.801511142 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.576603598 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.799670782 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.956680342 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.797849124 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.94638697 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.799248336 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.87876511 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.799858188 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.800310837 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.796954443 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.833764013 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.797109449 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.859911045 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.798353777 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.801310993 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.172160044 seconds)
  done (took 404.964268051 seconds)
done (took 783.469918483 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.4728532 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.42216626 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.538644638 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.445339146 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.422280237 seconds)
  done (took 14.032317313 seconds)
done (took 15.761344278 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.89172352 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.894943382 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.825804941 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.893327442 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.819426821 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.891131454 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.871970715 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.824548564 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.861946478 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.822813843 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.86325001 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.825425196 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.811345824 seconds)
  done (took 25.826973566 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.035217088 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.033294201 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.868850866 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.030724566 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.848618225 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.024296949 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.957867775 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.948386809 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.950879125 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.816454809 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.811579528 seconds)
  done (took 23.059315651 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.04412145 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.039300587 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.877583412 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.026119865 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.849430034 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.032208863 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.960224671 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.95128359 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.945952877 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.81469797 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.815436545 seconds)
  done (took 23.089971793 seconds)
done (took 73.712292479 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.81391919 seconds)
  done (took 3.548819661 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.839517743 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.005570683 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.814540624 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.816023063 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.811680687 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.812604334 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.816710508 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.814917107 seconds)
  done (took 16.464699764 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.810110068 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.808927586 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.807370538 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.806842444 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.80937434 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.80884957 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.809652894 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.807130105 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.810050462 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.813841176 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.809332036 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.806305431 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.809882308 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.807031484 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.810719222 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.811670741 seconds)
  done (took 30.681530593 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.809201891 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.807133574 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.806199739 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.807884538 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.806304763 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.808050672 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.811140104 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.809709739 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.809572244 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.80822042 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.807884551 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.808545575 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.806370586 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.809000514 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.807040642 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.808821222 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.808190469 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.808545014 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.812558 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.808954089 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.811567352 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.809512562 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.808697984 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.808938456 seconds)
  done (took 45.146270425 seconds)
done (took 97.577544832 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.739115035 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.249265754 seconds)
  done (took 8.725150122 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.81448416 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.809843711 seconds)
  done (took 5.396256935 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.812028128 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.811238683 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.812620757 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.813612239 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.812173232 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.810811986 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.812908384 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.810206783 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.812828507 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.811499157 seconds)
  done (took 19.854575647 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.814133411 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.809978145 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.809373844 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.812358067 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.816028842 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.810366096 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.809815035 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.813387578 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.811723524 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.809086614 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.814715131 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.810946032 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.812857667 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.811662589 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.813996815 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.810864135 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.812305725 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.809884112 seconds)
  done (took 34.351143539 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.814350732 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.811031294 seconds)
  done (took 5.361135871 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.810405306 seconds)
    (2/7) benchmarking "second"...
    done (took 1.810129636 seconds)
    (3/7) benchmarking "month"...
    done (took 1.811686477 seconds)
    (4/7) benchmarking "year"...
    done (took 1.811610126 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.809243163 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.811445353 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.811542849 seconds)
  done (took 14.416472444 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.816641494 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.97239779 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.043758961 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.475433816 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.81597323 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.815663408 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.758008355 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.816504134 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.818626691 seconds)
  done (took 20.069438781 seconds)
done (took 109.90952906 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.639533384 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.808243287 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.054526334 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.853942927 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.863296682 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.1050273 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.839379531 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.122635694 seconds)
done (took 43.028090657 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.811650647 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.344488117 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.378089819 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.176684807 seconds)
  done (took 12.637151469 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.794792569 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.33418469 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.843113216 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.396423339 seconds)
  done (took 20.127394436 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.177299325 seconds)
    (2/2) benchmarking "read"...
    done (took 2.158029497 seconds)
  done (took 6.081200738 seconds)
done (took 47.397867746 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.81522511 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.815527049 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.8164459 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.813299827 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.817195261 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.812038952 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.812530497 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.818492258 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.815733635 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.81679618 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.818318598 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.815388066 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815137867 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813337816 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.812048741 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814240523 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.816169862 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813134491 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.814377657 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.813897564 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.815804203 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.815856771 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.814583613 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.815639821 seconds)
  done (took 45.30189554 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.817178761 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.817119314 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.817734355 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.816658272 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.814659608 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.818488898 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.814921763 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.813744145 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.817460278 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.817122519 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.81364104 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.814876667 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.818147282 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.813494865 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819202189 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.816317204 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.818391282 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814591948 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818432262 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.816603252 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.81821452 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814357695 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.814607158 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818321991 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.816294224 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815243124 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.819195901 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.818055469 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820730573 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.81638989 seconds)
  done (took 56.242862734 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.822432898 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.827118565 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.815727043 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.818307157 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.819867561 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.816773266 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.81797289 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.81833281 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.818322552 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.816863694 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.81976862 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.817703311 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.81771569 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.821012457 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.818621044 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.820478105 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.819467499 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.817260528 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.820423707 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.819074886 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.818485928 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.819737705 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.817268537 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.823136169 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.822247817 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.823017315 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.823642641 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.82276176 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.824380731 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.826145848 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.821701141 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.824026443 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.822007911 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.824496174 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.824848721 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.825292101 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.828642542 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.830147062 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.823733892 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.821945592 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.827188631 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.823604765 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.824961098 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.824421241 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.822716872 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.823580328 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.824446462 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.824067708 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.824175375 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.824875538 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.825693677 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.824759487 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.825419655 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.822665495 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.82605893 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.824136227 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.824938625 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.8244726 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.825526182 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.826068536 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.822269885 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.824295445 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.824507258 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.82560411 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.826216948 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.825080511 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.825788026 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.824374399 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.825388338 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.827224062 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.824491836 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.826240877 seconds)
  done (took 132.989834016 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.828709381 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.821712031 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.822198935 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.824330698 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.824615661 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.826033643 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.821779329 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825654227 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823585671 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.82729398 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825396835 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.823989733 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.82361661 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828100861 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824663028 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.823125207 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.823962223 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.824540416 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.825546773 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828512985 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.82701846 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.822788758 seconds)
  done (took 41.897209681 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.824848324 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.826982516 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.823326659 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.828029231 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.825404008 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.827130913 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.827969806 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.825252627 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828096036 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825086256 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824688552 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828310085 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.82589969 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824961185 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823756198 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.823306522 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827851266 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.823042717 seconds)
  done (took 34.614057483 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.824231921 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.821193009 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.827392071 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.824382928 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.823436401 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.828175144 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822430846 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.829381874 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.827325195 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.826054195 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.827745102 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828731098 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.828846527 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825360346 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828964163 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.825230994 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.827559761 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826730556 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.826163804 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.82447249 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.826880921 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.830220901 seconds)
  done (took 41.932917764 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827952103 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.829822285 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.82669522 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.825286195 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.82449338 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.828967295 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.829448176 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.8257086 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.826727726 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.825339602 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829834339 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.825934157 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.826643557 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.82802488 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.826586142 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.826557034 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.830514692 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.827213203 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83031925 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.826336755 seconds)
  done (took 38.300199827 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.829196983 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.83169374 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.830298957 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832401553 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831028887 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.831440817 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832121248 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.828582179 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.830835337 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.829621464 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.831043472 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.833128437 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829382409 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.828289914 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.831421254 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832955479 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.829993691 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.833024965 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834236397 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.831734099 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.83044088 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.831999384 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.835190279 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.831772684 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.831608158 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.834640169 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.832205414 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.830526587 seconds)
  done (took 53.031870531 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.831128272 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.831548034 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.829047094 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.829829405 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.829152665 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.8282973 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.82767194 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.829600924 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.830656208 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.828746002 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.830600334 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.829475245 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.831469117 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.829606259 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.833855502 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.831180402 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.832778259 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.8296067 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.829357868 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831005055 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.83065941 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830093367 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.829974896 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.831407839 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.827744576 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.833925526 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.830486173 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.831499827 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832498474 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.831453178 seconds)
  done (took 56.666806071 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.848718956 seconds)
    (2/2) benchmarking "in"...
    done (took 1.851725377 seconds)
  done (took 5.455939463 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.829562951 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.83288367 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.83355739 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.831384633 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.831819722 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.834130044 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.832447249 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830715019 seconds)
  done (took 16.409069229 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.833095837 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.834755802 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.834774961 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.833450125 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.834409985 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.831296796 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.839641463 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.836692224 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.834547704 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.833514658 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.841493229 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.841627687 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.837412897 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.834393075 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.834093809 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.836849009 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.836509497 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.832440464 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.838068604 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.833405759 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.833334088 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.836382846 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.838942962 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.828083466 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.834677506 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.844141407 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.837043483 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.833241308 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.834142389 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.838102401 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.835127218 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.832236807 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.83433271 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.835186176 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.836261841 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.834444152 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.842269371 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.836664507 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.83977744 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.833484402 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.836438797 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.83182385 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.832884573 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.836392657 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.83341516 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.833909732 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.835194881 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.829184616 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.836005189 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.837221633 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.839206806 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.832371111 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.830993016 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.838182694 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.833605845 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.838264467 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.835486141 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.835189763 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.842829921 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.841996541 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.843911567 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.842476744 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.836557751 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.833999917 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.844097896 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.862481668 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839004874 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.831932881 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.830706997 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.833694503 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.837045057 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.843222554 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.849108157 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.837663277 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.836819032 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.832673229 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.834476953 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.836000702 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.841464226 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.836568085 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.833625398 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.836261481 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.846005192 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.860026064 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.833408432 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.834349963 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.835125865 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.836406999 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.835715055 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.842178726 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.835261305 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.838056052 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.834068431 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.834994648 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.836640295 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.835380838 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.833550976 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.837528993 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.833115487 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.83566415 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.838221739 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838122175 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.845339925 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.838232843 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.839991395 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.84194594 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.835447196 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.833787974 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.840981527 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.836874046 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.833750138 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.836109373 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.838335254 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.832172845 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.842095743 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.845554962 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.83616031 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.837050537 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.836379837 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.840133543 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.845196275 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.866767838 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.838462703 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.83525176 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.840675206 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.852181678 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.837249909 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.84204484 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.837689828 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.832779909 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.834552875 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.839048061 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.835868353 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.83731703 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.838578772 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.838101615 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.837152105 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.837807277 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.840587058 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.839418145 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.841910824 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.840218634 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.841096682 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.841674001 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.83762097 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.842755599 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.842149227 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.834832219 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.842083814 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.842527375 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.833712846 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.837385755 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.839415086 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.840859629 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.835812739 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.838023188 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.83728764 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.839837387 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.837030285 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.836967663 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.839068661 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.838958664 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.84120075 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.842720129 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.841288563 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.837772762 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.835003996 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.838067949 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.841281163 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.837136239 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.841013057 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.835851816 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.842492848 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.845647246 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.840943088 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.839776235 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.840924959 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.840383868 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839885203 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.84069594 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.840878607 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.849247576 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.839372817 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.845132619 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.841964813 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.841180928 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.841982432 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.83918653 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.836119117 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.839419693 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.844892327 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.847269203 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.851325289 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.849413388 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.840157422 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.846398921 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.83896946 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.84543477 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.844066622 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.840035224 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.840592709 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.843505742 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839676695 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.840039337 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.839218386 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.842022615 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.836773586 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.844393058 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.841084984 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.838466944 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.841739422 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.841630775 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.840309543 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.835962156 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.84142233 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.843900489 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.838292117 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.8383745 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.839125191 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.838482178 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.840222413 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.840935632 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.845655885 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.837636041 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.841082641 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.842649084 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.839158816 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.840719088 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.843192426 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.842908251 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.841844277 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.850437189 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.844041697 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.840264707 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.847509207 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.84131695 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.838554569 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.842763581 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.841062975 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.842207175 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.845791177 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.853339328 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.840316815 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.84411825 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.844071011 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.839904229 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.840819995 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.844711019 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.839833748 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.838638141 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.843754682 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.839605729 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.840165608 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.841434074 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.838888424 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.840464174 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.84160407 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.840621925 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.843390388 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.843324698 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.841116461 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.842489201 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.843617921 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.84627611 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.851050175 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.848670589 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.841157943 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.842023558 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.841796906 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.846827196 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.842361637 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.841780509 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.841768838 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.857302685 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.852804145 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850287527 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.844288031 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.844005495 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.849942626 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.843179055 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.848613296 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.843585464 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.840243137 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.840062984 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.838803831 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.842309084 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.844740549 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.841629542 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842027254 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.845309007 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.844402388 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.84291561 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.840531744 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.84125133 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.84327189 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.844509285 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.838577431 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.845680123 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.844107461 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.844665037 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.84038551 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.842745517 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.851311806 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.846289668 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.844953873 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.844713951 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.843628553 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.842474179 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.844652282 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.843132172 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.847163909 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.85386057 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.846967867 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.855182407 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.845839343 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.853281258 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.844030258 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.848388201 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.854788449 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.840095505 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.844758077 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.843217423 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.850406481 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.851326092 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.845382052 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.844825238 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.851164777 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845752477 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.842716081 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.846054908 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.847859063 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.843519105 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.846362093 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.854787213 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.851051369 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.850679477 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.847672499 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.846648372 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.849728445 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.846774812 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.845627724 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.850347399 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.844395393 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.84683731 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.846933259 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.847077138 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.846102196 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.845007817 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.846623319 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.846906691 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.848287714 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.850924005 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.845926509 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.852363691 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.85007319 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.853915791 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.847525752 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.851253318 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.848076401 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.847467457 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.848651665 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.850063168 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.849447346 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.84956847 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.848230174 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.852278819 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.845867107 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.849437412 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.847298087 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.847640283 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.846525115 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.851461179 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.848592073 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.857623015 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.878473626 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.850826639 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.855065523 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.847154422 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.852157499 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.855034982 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.851568332 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.850877626 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.854171557 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.85874217 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.859399961 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.851627886 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.849370747 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.850623658 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.852180902 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.850802864 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.846590892 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.851509788 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.84943969 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.850897069 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.852373212 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.853696989 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.849224783 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.851154604 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.849993233 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.850109376 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.859606976 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.851900012 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.848752262 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.850025756 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.85493176 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.849244598 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.85156621 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.850511331 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.850164936 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.851286808 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.852917566 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.857768654 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.857273338 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.853347772 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.847590143 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.849721435 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.849621085 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.852928905 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.848533892 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.850142998 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.85267702 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.850885028 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.851085863 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.853350865 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.849170313 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.850834684 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.850209011 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.85219296 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.851321234 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.860215357 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.85426563 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.850735701 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.849252116 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.850282596 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.847155671 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.848317742 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.85546178 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.855027914 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.86362848 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.860812064 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.856178404 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.851575846 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.853990012 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.859657384 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.851368091 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.850400509 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.852034766 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.851214673 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.850838614 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.855707603 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.855406776 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.858135338 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.848443836 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.849776871 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.858835959 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.851769822 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.854697709 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.853863439 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.858974352 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.85021048 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.847380535 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.851900916 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.851022743 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.858349385 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.853132849 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.854740217 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.85267815 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.849885375 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.850272769 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.856845558 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.853133911 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.855192073 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.849078159 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.853566179 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.854936278 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.853899309 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.850610193 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.852857421 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.856361003 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.857251143 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.85954089 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.85187433 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.851983182 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.852273404 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.856554735 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.856051157 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.853696405 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.851407599 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.850985342 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.853365028 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.855355637 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.853025937 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.85822886 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.854201446 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.852112362 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.853900153 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.854436177 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.856132479 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.867235321 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.863248014 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.851804228 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.85254432 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.854775489 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.858251917 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.854570639 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.857579071 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.853672439 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.853962347 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.854445599 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.855101196 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.851357882 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.854902382 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.871744535 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.853277701 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.853887993 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.855271112 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.860512547 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.857104897 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.854850206 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.855528948 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.858835581 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.85603055 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.866499607 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.858561539 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.861692178 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.856109546 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.853906209 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.860703199 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.857088807 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.86456899 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.860098832 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.854999464 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.855525357 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.859683175 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.87438113 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.856300402 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.864439682 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.887392614 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.860668893 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.857306773 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.858989856 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.854608876 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.856444331 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.858602542 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.854627173 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.854858627 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.856480733 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.855105307 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.853891669 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.859245703 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.856152819 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.85771475 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.858793907 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.855569213 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.855136942 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.850703484 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.855735776 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.856531072 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.857393282 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.855596581 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.858560838 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.857371012 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.870318062 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.865213708 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.855315341 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.856747288 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.85110871 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.857159518 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.860986071 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.868279268 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.866831989 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.8565842 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.856434094 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.858387088 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.86055828 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.855594692 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.858026004 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.857249339 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.856765829 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.854902901 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.869970676 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.868059726 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.861882218 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.858214361 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.858589012 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.855504533 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.858679651 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.858818302 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.856929091 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.85814169 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.859509336 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865094552 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.858725718 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.860319589 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.860698311 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.866066829 seconds)
  done (took 1102.401558016 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.859110187 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.855383638 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.852793754 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.856304962 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854793309 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.856555649 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.855036545 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.85588557 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.854073775 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.85734216 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.853799404 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.854778711 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.853852188 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.854178421 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.858932529 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.857988073 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.857284871 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.858487599 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.856673969 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.860114106 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.858199831 seconds)
  done (took 40.761831647 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.861509323 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.857500211 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.857220173 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.863194169 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.859056045 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.862369399 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.859248647 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.862371185 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.863654872 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.860380102 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.861566581 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.860331654 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.858643312 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.858375803 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.860329316 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.863187594 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.861393467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.862222651 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.864407377 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.862211738 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.865692774 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.862874875 seconds)
  done (took 42.733542154 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.863365376 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.869158699 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.862982544 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.860121734 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.862237964 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.858414322 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.865875354 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.863285733 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.859329404 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.86016256 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.858459489 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.859779536 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.867045515 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.861927022 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.859587036 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.858393395 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.000829225 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.857495029 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.858712271 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.856406012 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.853148322 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.858343208 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.853355498 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.856155118 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.852620846 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.855522573 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.855869085 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.854685448 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.858055351 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.853946166 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.858814661 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.854451086 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.853018 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.855195502 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.855156724 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.854412536 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.858063308 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.856489016 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.851624611 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.853895584 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.864348936 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.873862856 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.853679383 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.859752096 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.854617892 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.85413481 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.85686753 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.862823525 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.853729832 seconds)
  done (took 92.991212793 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.856686944 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.85364293 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.851699855 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.855236279 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.854515297 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.853874244 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.853841943 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.855191261 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.851804411 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.850933374 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.855961682 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.849796122 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.850854195 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.852911769 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.851601365 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.850894401 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.850892986 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.851046582 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.849507725 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.850676161 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.851325933 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.853745595 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.855368515 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.851377525 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.852840274 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.851246491 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.850144786 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.855577052 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.85126105 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.852529889 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.856142628 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.853546186 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.856005294 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.850584092 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.851558126 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.854807211 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.853649596 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.851648167 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.857251717 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.852120855 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.855733404 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.854765191 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.855276043 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.855644593 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.851582951 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.853439269 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.852433344 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.854209093 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.852543687 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.857261963 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.856274103 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.853250351 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.852807583 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.851438354 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.857181698 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.854205634 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.853219219 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.854077942 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.854338095 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.853604431 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.853920107 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.855905781 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.852379088 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.85554304 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.856224367 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.853408085 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.853055332 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.856149418 seconds)
  done (took 127.8183582 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.857035395 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.858605708 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.854337545 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.855004631 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.85552571 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.855620143 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.854592802 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.850155411 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.849283276 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.846011685 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.847461792 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.844664805 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.84616289 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.842183419 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.843151577 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.842648764 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.845911676 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844925125 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.844093642 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.842662855 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.844855674 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.843962396 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.843675784 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842631712 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.841845389 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.842343145 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.843984469 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.841650013 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846539761 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.845143739 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.843476645 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.842944234 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.843348134 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.844316662 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.846066648 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.843546957 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.840815041 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841849294 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.841237504 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.845802248 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.843399784 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844024259 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844730514 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.8413187 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841638197 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.84326003 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.841938314 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.842481777 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.841747877 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.841175455 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.84442817 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843742593 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.845373165 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.845295968 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.842408504 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.842305483 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.841715021 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845725771 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844010703 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.84265152 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.842839529 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.842595547 seconds)
  done (took 116.183320718 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.842111938 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.841545633 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.838174366 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.839433077 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.841976372 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.840049292 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.840986451 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.842801407 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.842054991 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.841380671 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840462243 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.84041759 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.840280869 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.842004687 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.841409218 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.841448356 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.83870113 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.839954034 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842533735 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.841836152 seconds)
  done (took 38.586107792 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.838450965 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.841893075 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.839402952 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.837562031 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.843392096 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.837515294 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.840720044 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.838320764 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.835998363 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841813938 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.84219568 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.842942864 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836460655 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.838932405 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.841331667 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.839430397 seconds)
  done (took 31.206874236 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.837964477 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.840594517 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.84106876 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.843249042 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.837078441 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.836892232 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.838488477 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.836231465 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.83816288 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.839456804 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.837789522 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.837287459 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.839664437 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.838703912 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.837088134 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.838925812 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.835091137 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.835579469 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.837589713 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.838245619 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.839881694 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.83324105 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.837912298 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.838156284 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.833214928 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.8376598 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.833929867 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.834171549 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.83372539 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.838373422 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.835825667 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.837355034 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.834421025 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.836364118 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.838837446 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.836267075 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.838709445 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.838414568 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.835852763 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.837880419 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.839264601 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.835731718 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.840888281 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.838501231 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.83433448 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.838758046 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.834466751 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.83851405 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.834380412 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.837038758 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.837839398 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.83671786 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.84081435 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.838511554 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.837339858 seconds)
  done (took 102.82484428 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.838173469 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.837626271 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.837038876 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.838007367 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.836719163 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.833814257 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.835022098 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.83706791 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834910311 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.837095941 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.834872776 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.836209092 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.8340251 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.836971283 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.833339664 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837774508 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.83293472 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.834558947 seconds)
  done (took 34.809320082 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.834062201 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.833583281 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.837899814 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.834167463 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.833210409 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.838384973 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834907926 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.834660732 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836564691 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.835472881 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8381302 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.838785225 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.838178091 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.838427214 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834991424 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.83379808 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.837508072 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835956096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.835182841 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834300259 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.837990109 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.837510951 seconds)
  done (took 42.156731059 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.835390046 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.836312585 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.851692706 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.856610643 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.857746127 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.87072734 seconds)
  done (took 12.8701431 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831196176 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836825597 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.835490707 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.838309502 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835506172 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833615816 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83387253 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834723037 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834465797 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835875818 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834190131 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838951204 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836700274 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835016769 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837033429 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837498537 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833366705 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83466217 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834273379 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835370439 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833482062 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837727803 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832535039 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834209102 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833760341 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835421795 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835095476 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834200827 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832636566 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840191015 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835644066 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833606613 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835671883 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832750343 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836089518 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835820927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835315927 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836478312 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83514527 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831513244 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.839528633 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836120017 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837500511 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835950733 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.838600376 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835786839 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834142841 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835190589 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83490996 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836663461 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834569442 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834769832 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834241181 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836854759 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836003836 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838131261 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834213026 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834441401 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837470788 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835082712 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833254308 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836893853 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835322346 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833240741 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836394799 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83228696 seconds)
  done (took 122.89547485 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836545911 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.83394406 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833694079 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834822767 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836810038 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836399872 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836637285 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833964797 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832638576 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833133941 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839041093 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833318182 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834726414 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830696877 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832349542 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831755569 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834169 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834694259 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83260072 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836241479 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83139006 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832381906 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834570364 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834407857 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834498976 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83747861 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832622768 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832913929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836081042 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.831710726 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833402978 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832869723 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834319264 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.833991965 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.831998814 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832331565 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833879188 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834742759 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833723911 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837346302 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834244328 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838034701 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833904229 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832574729 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834619872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832331993 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835506397 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834982839 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834634585 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832860393 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834186934 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832350591 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834048694 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832202955 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834630915 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.837290172 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832510693 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.836332481 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832149968 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835780306 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834399565 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832996232 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836862405 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834585671 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833161729 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833996926 seconds)
  done (took 122.819329667 seconds)
done (took 2555.64377888 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.899709433 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.834920484 seconds)
  done (took 15.496904141 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.000362064 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.950693434 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.834040122 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.867638226 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.835182479 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.851337124 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.848819418 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.83432443 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.838744986 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.834923462 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.836252354 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.022591686 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.833219431 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.835089414 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.838348277 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.929608328 seconds)
  done (took 51.756223389 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.836540995 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.840685102 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.849682453 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.840786318 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.838712559 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.84960899 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.873577247 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.842613971 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.871818145 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.853432257 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.908227939 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.851056481 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.839825063 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.887928603 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.854147676 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.854754629 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.929846042 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.912677872 seconds)
  done (took 35.300810452 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.915308806 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.846507894 seconds)
  done (took 10.532081676 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.861117015 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.846250546 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.905497768 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.843106117 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.836970184 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.834875631 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.841138142 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.839730125 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.858440978 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.870036797 seconds)
  done (took 70.305026927 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.846364346 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.840121223 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.840578021 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.840364204 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.832020144 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.836264768 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.837193687 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.840215815 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.501147433 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.874784306 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.846170877 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.846313851 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.84178366 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.8430817 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.841122098 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.867588868 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.935288927 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.84148348 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.840511753 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.847028025 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.845586893 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.900877601 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.856626669 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.844621413 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.874181447 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.509877479 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.847958033 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.850296362 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.933292123 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.840750572 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.843992784 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.843738879 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.843444201 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.213556611 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.122112292 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.843078503 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.856241224 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.851000879 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.841783348 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.935194227 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.842666612 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.847845161 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.661438454 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.101791642 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.941561001 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.882317499 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.169952665 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.857515337 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.843723032 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.871731055 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.847494463 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.849548675 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.855579905 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.341226427 seconds)
  done (took 130.823891695 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.838582432 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.197235715 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.00948805 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.842598287 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.128024937 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.049369942 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.839274899 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.887134185 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.844725603 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.070368944 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.094046482 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.951237281 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.838276948 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.841494508 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.836205036 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.836749668 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004104878 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.914317826 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.83934597 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.834977045 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.87008523 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089230463 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.964073791 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.839743036 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.869617319 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052474782 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.962083009 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.949060736 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.627663363 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.838333494 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910025171 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.83960638 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.841488236 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.837234898 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.999326221 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.936618466 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.927826804 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.839220262 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838760092 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.835315945 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.51311722 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.04471572 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.938621247 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.982536252 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.04313083 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.051073002 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.625733485 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.838707676 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.583207745 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006259828 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.072742317 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.074236248 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.966373932 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.840868157 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.396877355 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.838248234 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.839307358 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092502828 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988684805 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.943129797 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84064112 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.838848851 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.8382637 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.087067997 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.839976218 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.938509557 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.840762847 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.837292098 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.94238497 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.944641852 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.979041011 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.058005499 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.872642015 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.723601749 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.402188484 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.089139766 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.910156115 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.091974395 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.8427577 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.840982492 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.922911116 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.690208247 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.096985417 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.093185966 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.097689354 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.880714213 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.572758725 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.841428633 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.07456792 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.067382951 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.094357721 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.053564186 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.079695946 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.184842817 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.841168983 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.841970828 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.095952984 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.979155473 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.8431687 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.204708324 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077600115 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.413051928 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.862174149 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.149591462 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.974793509 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.842617181 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.485807811 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.843962313 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.068429469 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.887066012 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.842198909 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843115525 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.064180221 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.822081708 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.843952483 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.528914362 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.906453114 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.845867209 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.078417106 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.843689219 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.107367304 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.845508441 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08487982 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.03637682 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.87601545 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.076269215 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.050214675 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.844683164 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090981667 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.088063321 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.963647777 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.069342704 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.577590653 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.846776856 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.133040106 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845921174 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.844497374 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.018964498 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.845170474 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.990662453 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.845809162 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.133714756 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.868886256 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074957333 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846197663 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.10112962 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.879791858 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89705125 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.851319239 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.97671068 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.843263819 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.760044611 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.007300068 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.852177865 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.8437808 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.673806722 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.845314039 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.002464439 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.078617677 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.871474759 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918208998 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.521647086 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.844243404 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.929555552 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.870263448 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.245403993 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.84675397 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.099955599 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.847860762 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.845208247 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.844736017 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.088620447 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.031672524 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.84722614 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.844627966 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.752510822 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.848619486 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.844146599 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03151911 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.206801643 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.845564175 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.051934163 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.850192865 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.975163145 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.852388721 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.925475478 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.208791068 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.84407751 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.850180469 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.845073641 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.847673944 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.848296945 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.112243863 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.880874923 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.399239175 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.987672905 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.119805326 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.166001433 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.098157945 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.892290682 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.849684094 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.11130035 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.848415125 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.912574809 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.848451083 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.872196274 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.08435719 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.8483574 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.061121607 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.128781356 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.730847682 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897821666 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.847556195 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.846703429 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.844669912 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.998617168 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.942137908 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.847284139 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.849681827 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.962543986 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.974543346 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.063535241 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.850302134 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.964518014 seconds)
  done (took 898.152114927 seconds)
done (took 1214.13104076 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.846873373 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.8502435 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.835293685 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.848066265 seconds)
  done (took 29.159126647 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.857976408 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.855311211 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.86067121 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.855258898 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.856440346 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.854963167 seconds)
  done (took 12.920131927 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.877807145 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.850678011 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.85001661 seconds)
  done (took 21.35883793 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.923575966 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.235915599 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.960736832 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.27348131 seconds)
  done (took 10.175910649 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.857907403 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.857560349 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.858529117 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.859263146 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.857971922 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.862088467 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.860454223 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.860440433 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.860147424 seconds)
  done (took 18.518936335 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.268023805 seconds)
done (took 98.179120574 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.288513297 seconds)
    (2/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.132571576 seconds)
    (3/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.802604874 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.136307781 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.175598579 seconds)
    (6/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.890690372 seconds)
    (7/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.22879208 seconds)
    (8/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.024297993 seconds)
    (9/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.944267219 seconds)
    (10/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.004864573 seconds)
    (11/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.860756095 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.912844927 seconds)
    (13/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.155021561 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.894490549 seconds)
    (15/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.886863872 seconds)
    (16/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.148197217 seconds)
    (17/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.083378353 seconds)
    (18/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.960006776 seconds)
    (19/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.051299054 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.892184237 seconds)
    (21/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.143603048 seconds)
    (22/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.132969213 seconds)
    (23/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.862807688 seconds)
    (24/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.951990131 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.954394745 seconds)
    (26/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.318610331 seconds)
    (27/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.026341609 seconds)
    (28/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.888005335 seconds)
    (29/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.040785814 seconds)
    (30/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.869842781 seconds)
    (31/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.970269547 seconds)
    (32/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.041543971 seconds)
    (33/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.968877352 seconds)
    (34/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.889021477 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.877708102 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.887932919 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.245915948 seconds)
    (38/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.937416409 seconds)
    (39/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.865660449 seconds)
    (40/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.779400885 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.486699253 seconds)
    (42/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.875013294 seconds)
    (43/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.862448116 seconds)
    (44/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.206595728 seconds)
    (45/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.171160888 seconds)
    (46/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.55491658 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.174693071 seconds)
    (48/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.898433096 seconds)
    (49/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.019401 seconds)
    (50/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.244439468 seconds)
    (51/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.849766147 seconds)
    (52/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.209783114 seconds)
    (53/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.86197681 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.451794926 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.140156293 seconds)
    (56/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.396268591 seconds)
    (57/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.29291244 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.865514359 seconds)
    (59/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.291055835 seconds)
    (60/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.870109539 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 3.45329896 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.207625588 seconds)
    (63/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.849817899 seconds)
    (64/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 3.065209439 seconds)
    (65/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.866911784 seconds)
    (66/309) benchmarking ("map", abs, Int8, false)...
    done (took 3.588476073 seconds)
    (67/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.865333347 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 3.54460895 seconds)
    (69/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.902925495 seconds)
    (70/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.99235252 seconds)
    (71/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.865133911 seconds)
    (72/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.719503545 seconds)
    (73/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.920633674 seconds)
    (74/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.86045679 seconds)
    (75/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.977896163 seconds)
    (76/309) benchmarking ("sort", Int64, false)...
    done (took 5.539384902 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.875462502 seconds)
    (78/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.06981045 seconds)
    (79/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.806150173 seconds)
    (80/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.008952683 seconds)
    (81/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.951839702 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.931743197 seconds)
    (83/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.867300102 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.579279511 seconds)
    (85/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.968461304 seconds)
    (86/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.006901755 seconds)
    (87/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.864999315 seconds)
    (88/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.961339308 seconds)
    (89/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.776385762 seconds)
    (90/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.963245357 seconds)
    (91/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.23403641 seconds)
    (92/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.854221525 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 7.496475885 seconds)
    (94/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.927568567 seconds)
    (95/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.304144699 seconds)
    (96/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.969895371 seconds)
    (97/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.256845877 seconds)
    (98/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.866762691 seconds)
    (99/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.323050961 seconds)
    (100/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.9567975 seconds)
    (101/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.965828478 seconds)
    (102/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.489382112 seconds)
    (103/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.158247382 seconds)
    (104/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.873787666 seconds)
    (105/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.07546613 seconds)
    (106/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.95697941 seconds)
    (107/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.868158599 seconds)
    (108/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.193323334 seconds)
    (109/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.791205008 seconds)
    (110/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.1741985 seconds)
    (111/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.890391518 seconds)
    (112/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.046662332 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 5.564779035 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.868871226 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.868428493 seconds)
    (116/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.951614373 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.166514616 seconds)
    (118/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.284338789 seconds)
    (119/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.905308956 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.865566541 seconds)
    (121/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.18920493 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.808987736 seconds)
    (123/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.976575516 seconds)
    (124/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.244245464 seconds)
    (125/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.80600439 seconds)
    (126/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.441593375 seconds)
    (127/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.911413823 seconds)
    (128/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.958123309 seconds)
    (129/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.980649932 seconds)
    (130/309) benchmarking ("sort", Bool, false)...
    done (took 2.091303388 seconds)
    (131/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.890975111 seconds)
    (132/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.850564759 seconds)
    (133/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.942011491 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.200032753 seconds)
    (135/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.949497971 seconds)
    (136/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.882411706 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.012001826 seconds)
    (138/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.090071376 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.120655507 seconds)
    (140/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.380748217 seconds)
    (141/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.90405254 seconds)
    (142/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.959517886 seconds)
    (143/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.974091294 seconds)
    (144/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.8670617 seconds)
    (145/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 7.000248308 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.031417163 seconds)
    (147/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.855306947 seconds)
    (148/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.081849882 seconds)
    (149/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.869284867 seconds)
    (150/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.968554507 seconds)
    (151/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.999601029 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.97804432 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.215811714 seconds)
    (154/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.944876565 seconds)
    (155/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.87216123 seconds)
    (156/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 3.753359905 seconds)
    (157/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.072157738 seconds)
    (158/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.097101107 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.253465358 seconds)
    (160/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.900750528 seconds)
    (161/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.098844781 seconds)
    (162/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.345192277 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.183159057 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.172715437 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.895416012 seconds)
    (166/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.884397961 seconds)
    (167/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.88002698 seconds)
    (168/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.210863312 seconds)
    (169/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.055828805 seconds)
    (170/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.034768548 seconds)
    (171/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.934540729 seconds)
    (172/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.870322267 seconds)
    (173/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 2.029147091 seconds)
    (174/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.787768317 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.855484721 seconds)
    (176/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.33179729 seconds)
    (177/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.940145286 seconds)
    (178/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.292938254 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.110122694 seconds)
    (180/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.313604152 seconds)
    (181/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.326833555 seconds)
    (182/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.023133983 seconds)
    (183/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.864231857 seconds)
    (184/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.901792937 seconds)
    (185/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.871198913 seconds)
    (186/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.540875574 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.140888607 seconds)
    (188/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.029555231 seconds)
    (189/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.009336505 seconds)
    (190/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.909654222 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.944339589 seconds)
    (192/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.123540436 seconds)
    (193/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.250110755 seconds)
    (194/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.106424608 seconds)
    (195/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.57134482 seconds)
    (196/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.021531836 seconds)
    (197/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.968071648 seconds)
    (198/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.881493264 seconds)
    (199/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.928598147 seconds)
    (200/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.874637554 seconds)
    (201/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.968368431 seconds)
    (202/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.859979318 seconds)
    (203/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.053946657 seconds)
    (204/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.070402491 seconds)
    (205/309) benchmarking ("sort", BigInt, false)...
    done (took 6.873459307 seconds)
    (206/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.964945521 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.898238618 seconds)
    (208/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.997200652 seconds)
    (209/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.10660436 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.513616173 seconds)
    (211/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.856750528 seconds)
    (212/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.532771615 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.921586595 seconds)
    (214/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.885206934 seconds)
    (215/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.51410098 seconds)
    (216/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.892819709 seconds)
    (217/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.936986624 seconds)
    (218/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.708977114 seconds)
    (219/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.374598099 seconds)
    (220/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.992911057 seconds)
    (221/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.973009627 seconds)
    (222/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.521966001 seconds)
    (223/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.056418179 seconds)
    (224/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.184242158 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.120888852 seconds)
    (226/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.993654528 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.891865097 seconds)
    (228/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.034547031 seconds)
    (229/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.067073622 seconds)
    (230/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.795518246 seconds)
    (231/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.849727396 seconds)
    (232/309) benchmarking ("sort", Float64, false)...
    done (took 5.633274685 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.918948918 seconds)
    (234/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.871223339 seconds)
    (235/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.370073511 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.050502019 seconds)
    (237/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.878867311 seconds)
    (238/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.433351091 seconds)
    (239/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.210216628 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.711375827 seconds)
    (241/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.993651966 seconds)
    (242/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.216235717 seconds)
    (243/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.57372278 seconds)
    (244/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.99989856 seconds)
    (245/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.856522544 seconds)
    (246/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.761720902 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.863432239 seconds)
    (248/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 8.019932584 seconds)
    (249/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.108695153 seconds)
    (250/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.859106877 seconds)
    (251/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.061826028 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.052416349 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.864011305 seconds)
    (254/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.659280552 seconds)
    (255/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.226113738 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.553545904 seconds)
    (257/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.972188994 seconds)
    (258/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.293418853 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.877935998 seconds)
    (260/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.863104607 seconds)
    (261/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.040528038 seconds)
    (262/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.974840579 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.179845242 seconds)
    (264/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.874898144 seconds)
    (265/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 2.030695339 seconds)
    (266/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.873314973 seconds)
    (267/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.101405306 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.211856722 seconds)
    (269/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.136079263 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.448953521 seconds)
    (271/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.879698737 seconds)
    (272/309) benchmarking ("sort", Int8, false)...
    done (took 5.127379289 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.838626996 seconds)
    (274/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.404896043 seconds)
    (275/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.862835328 seconds)
    (276/309) benchmarking ("map", identity, Int8, false)...
    done (took 3.249044871 seconds)
    (277/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.860861551 seconds)
    (278/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.045231499 seconds)
    (279/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.967218656 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.975545322 seconds)
    (281/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.875110133 seconds)
    (282/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.973317859 seconds)
    (283/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 2.001049759 seconds)
    (284/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.200422199 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.986346879 seconds)
    (286/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.959898562 seconds)
    (287/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.860147234 seconds)
    (288/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.826502735 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.015731281 seconds)
    (290/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.519229854 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.590300915 seconds)
    (292/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 7.320773741 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.987505205 seconds)
    (294/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.877694781 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.910981957 seconds)
    (296/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.010076855 seconds)
    (297/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.270021188 seconds)
    (298/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.86242108 seconds)
    (299/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 7.994111318 seconds)
    (300/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.697103542 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.864339522 seconds)
    (302/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 3.662153563 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.908232825 seconds)
    (304/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.006446924 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.952032135 seconds)
    (306/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.879471398 seconds)
    (307/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.019344462 seconds)
    (308/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.974818448 seconds)
    (309/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.896927792 seconds)
  done (took 1009.662478442 seconds)
done (took 1011.72402131 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.908635206 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.907539408 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.890121357 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.910616332 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.005540676 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.915181873 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.899929376 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.889009329 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.93668805 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.939327843 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.889790667 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.917031394 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.896418491 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.895050174 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.890593604 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.908778242 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.208101078 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.92532969 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.91043731 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.899862379 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.91281577 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.89240854 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.939926443 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.917698831 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.895690455 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.894014308 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.898795002 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.913252971 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.007734044 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.900724191 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.89587419 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.908836616 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.208982659 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.923019731 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.885832667 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.912267213 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.908133606 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.899770067 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.896431807 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.927777975 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.300113924 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.937315989 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.895614014 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.893063609 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.89141344 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.893865343 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.896555945 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.896779202 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.908140554 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.908949394 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.298713535 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.952868377 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.89769456 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.893075087 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.904392514 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.896178453 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.893521109 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911279441 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.916204047 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.916042561 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.199081913 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.928477142 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.895086523 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.910542519 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.904008096 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.336673679 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.929674419 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.896658732 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.302874225 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.942424158 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.336150957 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.946685362 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.894727872 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.911875517 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.931079098 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.211593095 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.917768131 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.890786936 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.905485847 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.897043143 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.903055007 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.910804959 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.897431274 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.894461205 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.910413967 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.920926412 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.903871672 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.898314834 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.902490362 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.918840999 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.903897086 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.911838471 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.899615511 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.889672301 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.901177315 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.899651317 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.89967123 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.904718158 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.900950534 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.903506001 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.302126191 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.957821211 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.89095615 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.890806254 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.893369074 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.915729935 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.300463967 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.940216729 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.914827252 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.940969194 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.899191442 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.199519383 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.933548236 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915440476 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.903510501 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.899596364 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.890466575 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.202782124 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.33318401 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.955280462 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.898757522 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.899519807 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917415655 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.899425219 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.893892436 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.216143379 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.926762412 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.915097046 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.022597613 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.905961404 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.933330337 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.899529331 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.898825869 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.925052917 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.916273699 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.933312734 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.901106116 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918094579 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.918098054 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.895561842 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.911988042 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.907584047 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.89741638 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.901821339 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.890346025 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.925213516 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915932699 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91252203 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.919660891 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.023449842 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.896512828 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.203073612 seconds)
done (took 297.982370749 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.966177728 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.890441207 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.992397543 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.894963723 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.976913402 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.986808304 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.891509156 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.890457959 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.890899175 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.265681822 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.895886901 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.890649402 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.89507059 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.892927401 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.975977242 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.895890753 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.893718725 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.229630747 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.898273531 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.965421136 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.895755869 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.892508909 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.895002819 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.269438306 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.888522583 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.889319583 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.969746417 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.895651432 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.233296077 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.887129693 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.897264243 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.231862442 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.986666704 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.912213704 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.903736965 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.904780953 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.980174175 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.902007483 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.975732569 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.976373524 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.997807506 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.936433629 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.891295365 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.89626802 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.899945508 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.897473575 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.896967118 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.924965795 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.891908593 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.892204715 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.229841935 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.90984676 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.894026369 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.896329094 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.894497046 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.93016623 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.895494665 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.901077703 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.988501599 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.900958447 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.957540379 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.301325495 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.270355607 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.898686921 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.893117878 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.895855755 seconds)
  done (took 186.065732287 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.962355354 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.968471004 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.962928167 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.900719264 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.948515 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.962824338 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.901152879 seconds)
  done (took 15.428147308 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.903094262 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.897739568 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.947182769 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.949520356 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.898347714 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.045726954 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.898740134 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.911169084 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.8968709 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.948972582 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.900085955 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.898688229 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.904899523 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.890216354 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.949417503 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.907324195 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.015016495 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.900472106 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.899958376 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.052320647 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.901296517 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.907481869 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.952446305 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.911002809 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.901269342 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.906713494 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.492363739 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.899915287 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.898457727 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.899822672 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.898214011 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.939898733 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.900635848 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.89971465 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89528644 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.01255097 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.899776914 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.895796471 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.898932194 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.891131657 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.900347994 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.898612726 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.899423685 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.896180646 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.90161547 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.923418594 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.899982028 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.899733356 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.901931259 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.899479524 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.951047309 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.900906667 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.896317087 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.896679658 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.95378443 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.906402828 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.903235675 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.895566926 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.901507766 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.896156115 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.053759305 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.951680826 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.901030436 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.95004471 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.900423065 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.899425077 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.902742499 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.8999848 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.99860117 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.900391794 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.949336886 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.896107381 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.058234878 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.926776711 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.903253003 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.903241793 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.904756969 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.90487459 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.894958445 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.908951439 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.898153723 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.900026439 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.908504873 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.899697585 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.898356363 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.012157226 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.009734571 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.900607474 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.914953935 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.907629581 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.901254073 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.953381418 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.902410401 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.899921827 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.957409984 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.019353672 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.954024443 seconds)
  done (took 208.809799007 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.905444549 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.908779961 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.90343792 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.918341897 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.902967972 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.901709841 seconds)
  done (took 13.264263924 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.902505971 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.903726064 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.904580167 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.903917842 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.904496022 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.903703277 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.904803234 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904942897 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.907545067 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.902744257 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.902716487 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.902571365 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.901203709 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.901983806 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.901945268 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.902906192 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.903179338 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.898481832 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.901389184 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901908099 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.068863726 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.9014636 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.90230441 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.903837027 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.907605496 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.900904495 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.912257527 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.904202512 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.900240946 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.909434888 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.905840937 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.904337258 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.901736121 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.909178261 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.908917054 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.904664322 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.907135509 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.905627109 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.901398172 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.903681125 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.90424512 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.904071956 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.905224563 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.905445026 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.904170615 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.906966581 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.909861511 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.911303849 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.905289936 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.904850031 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.907199716 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.90301744 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.905282711 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.904155773 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.905113795 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.908012662 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.90931012 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.905549096 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.905879473 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.905836102 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.906173335 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.904296611 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.905292838 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.908815932 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.910006248 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.907184719 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.902716301 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.908804995 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903971194 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.902409144 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.903808358 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.899752495 seconds)
  done (took 140.133722652 seconds)
done (took 565.536159134 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.044001619 seconds)
  done (took 8.865620546 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.898656342 seconds)
  done (took 8.762530609 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.287938525 seconds)
  done (took 10.11854797 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.918656276 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.926732322 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.906707127 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.904794847 seconds)
  done (took 29.506887493 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.030273962 seconds)
  done (took 8.854483604 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.918696132 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.895904425 seconds)
  done (took 15.674902994 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.957034861 seconds)
  done (took 8.783647399 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.992072565 seconds)
  done (took 8.847445849 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.9217555 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.927979514 seconds)
  done (took 15.692414177 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.883043619 seconds)
  done (took 8.714589441 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.468675072 seconds)
  done (took 11.392245765 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.919468828 seconds)
  done (took 8.856511936 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.922846825 seconds)
  done (took 8.751526193 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.910429723 seconds)
  done (took 8.741281631 seconds)
done (took 163.385036777 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.902663748 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.897055784 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.899438249 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.898166531 seconds)
  done (took 29.422006188 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.941560618 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.940838502 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.94342355 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.952540005 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.947129412 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.940340436 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.932242612 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.930387844 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.95331314 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.941920078 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.939025488 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.942069424 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.936515913 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.930731405 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.941320607 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.945149135 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.951498757 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.940295066 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.933843404 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.944564271 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.910029217 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.950271324 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.942138287 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.910271117 seconds)
  done (took 48.369115148 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.107683735 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.983082562 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.058472075 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.957645732 seconds)
  done (took 9.934544424 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.960810004 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.961534375 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.974488262 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.011169422 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.044469746 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.967266733 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.935252248 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.926312899 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.91244009 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.962999353 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.039469335 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.956467115 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.050002189 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.906487763 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.10479104 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.910894421 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.905217139 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.958078298 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.010299792 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.02591972 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.910920472 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.959551982 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.964050301 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.953767491 seconds)
  done (took 49.139804438 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.905104201 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.912350493 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.911967134 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.904785529 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.907495177 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.907698417 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.91321533 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.907783053 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.931847626 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.908644864 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.902185639 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.90397343 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.907705282 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.907968667 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.904472792 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.919488973 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.919177689 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.903609591 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.910830024 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.912048713 seconds)
  done (took 40.032357702 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.898716878 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.756819119 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.252300213 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.155415056 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.901082785 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.902036946 seconds)
  done (took 31.696901586 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.92190776 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.916152065 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.907544428 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.967591032 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.046593588 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.919090367 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.90603562 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.924422489 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.958977937 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.974382471 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.932182985 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.93778882 seconds)
  done (took 25.137391406 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.902301974 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.916570715 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.906315484 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.93651358 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.922222504 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.918819019 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.918432209 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.900137236 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.923591512 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.926523304 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.917402239 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.924879203 seconds)
  done (took 44.84776339 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992904529 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.794796031 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.955620004 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.624290583 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.444858657 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119275757 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.430365804 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.250364835 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.915302478 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1808492 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.936577844 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157103852 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.16227176 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906706849 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.995451537 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.351679435 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.208522862 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145901518 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932993835 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.645490889 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03237322 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.459053522 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.603104544 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037596836 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120884886 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.04381484 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.169638976 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.869212893 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.044128623 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.944078596 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917297062 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.910834175 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.181434379 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28970783 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025401087 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921426756 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.564232018 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.627472642 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.899807906 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.616061997 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.779189199 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.044670599 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919076903 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911411456 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.845007852 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.450318103 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253235194 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.918459141 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.612866965 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.908831714 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922840545 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001609538 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.915804745 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.729691624 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864412941 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19160549 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.908376676 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91630267 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480789324 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.974200487 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.56196479 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.850866837 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.00541861 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.567460823 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.387580007 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.061062496 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.91854294 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.914901783 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846459756 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.56947521 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.038414828 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057148155 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.930408877 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.561595349 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.228866261 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.946011405 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.999715395 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21679275 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.727688576 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.847245614 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.140663602 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.868355423 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847981078 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.768718759 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.844108884 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.180733805 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.951732528 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.542804964 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949207638 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.251868575 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.925966359 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936579453 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919430479 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.134915687 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.79561121 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911749305 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.670677493 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.208046271 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.936833857 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.25205826 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.85025641 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.91913921 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.166062261 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.124647301 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.184467695 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.356637877 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082353442 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.914519414 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.005581924 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.866578391 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927005394 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.1918986 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.974422378 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979569324 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04918617 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.880163401 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218863292 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.945681715 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.091175298 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.952568257 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182924397 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.230889238 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.171992869 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998629132 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.917786461 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.918922845 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.612090557 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.540254247 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.140427732 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.918692447 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445384523 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.925488727 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.918200791 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.850390691 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.592732318 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.943248298 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.034931045 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.140379479 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.776205814 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.311156919 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.851573397 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.062208794 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.035343615 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.140422667 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.565408905 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.001020378 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.179136979 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.315231059 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.158597512 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.035056606 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937277627 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012552937 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940126877 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.249867083 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.280625713 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.920720485 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.922976119 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.612439176 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.996415767 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919600152 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.924917475 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714479397 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20379947 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943988016 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.919615726 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.807856148 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.932153993 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985916153 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.926631651 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.928498614 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.420693621 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.670305506 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.930296892 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.604654422 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16583755 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929652434 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.586819542 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116286078 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.003704834 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.200452803 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98108867 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.85322184 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.621691576 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.624091117 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91914363 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.85453207 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.922001717 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932305356 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930226024 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.116283317 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207291735 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.964596744 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.668616819 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.039766249 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.931142654 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.925198194 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920754058 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.408054542 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.997109466 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445386576 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.037956259 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05954451 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.936534264 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.856726659 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.927363583 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930491459 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.922314776 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.877995506 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975588497 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.666771123 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379694346 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186661538 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.568977021 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939051641 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.688672858 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.055280962 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.944554867 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.696741974 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916213133 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.025790651 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996451527 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.934842607 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.588274145 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.694012606 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.493203729 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24766443 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.237958411 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369071667 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.32589726 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.250561134 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.262608991 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.160397568 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.453181188 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.984759765 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.273523961 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869787578 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.00977059 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.573003548 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282303568 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938674851 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151390756 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.315514914 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.767468747 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.089477429 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136797169 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959231561 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.755428942 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.957299324 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.129511592 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079363186 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.687341514 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.154264823 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.261298229 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.692039074 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.041162015 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.923360618 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.623883707 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010894047 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.637390359 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.286919226 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.480919196 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.918258482 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424585227 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936215889 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.371634291 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286453922 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.285007268 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.014569748 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863433865 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.937150186 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.935446042 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.926205506 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.904750543 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.865173884 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.214465794 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937421996 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163078882 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.233615337 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.195411535 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.830831147 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.933283959 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92766348 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229435061 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.63261984 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.164627405 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.276457331 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.50525041 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937572257 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.861295863 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860654377 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.629098998 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.929194818 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903318249 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154572858 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.038090228 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.882202307 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312008923 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.242141684 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.182924194 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.940867825 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.203651765 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.207115887 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.666011852 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95731991 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.028222026 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.694256346 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.645261659 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.153454143 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.164663644 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.725883041 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.158818707 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.98639659 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.892148846 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.927901769 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.144732473 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.152247983 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.919650757 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.181697874 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.65231984 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.940112044 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316491576 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987865768 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.952085897 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.149333791 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.019764972 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941116457 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011180053 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939512539 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.93987196 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.940096679 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975484153 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975962305 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.069408474 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.942014518 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019816128 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001474116 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.521949575 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.943750257 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20993433 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306496868 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.260936844 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.991231226 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.929906462 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934806256 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.864621208 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068733926 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.375968305 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.203766293 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.057488877 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.071433211 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956107764 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.697861889 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.219286379 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.24209596 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20669226 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.823098556 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93124456 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.040636285 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.153030946 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941312715 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.139886097 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163290623 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.270941231 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402950525 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.078613943 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.369883432 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20689096 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.305735647 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.928780167 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.516527643 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.938457116 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.69719893 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.972230243 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.929450595 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224946421 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942649326 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311031559 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.952747073 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.123219011 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.449212757 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609763795 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295856808 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.919804534 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.996826416 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211828645 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326827577 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24770826 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998666225 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943548029 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.657241997 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071075757 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.892330047 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.206021238 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.933092936 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.141819082 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.644447445 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.942311586 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.215784939 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241905201 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.92800596 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.922038719 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.993557629 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.943831988 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.155441237 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199966622 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.188534653 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943576018 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.93514828 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.753264071 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.212996648 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994293629 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867683967 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.936194809 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.029311755 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178558375 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954119674 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.452561315 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.63666754 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237660557 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.852262429 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953331851 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389446113 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.375380159 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.264653025 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.463517128 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.175587326 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.497070886 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.795154579 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.310611409 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.938914304 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.342746291 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.31390318 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.936135833 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.442529882 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047473909 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.205116465 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.258097808 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.951598816 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.733637776 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.979696562 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158330734 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.530888662 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8770819 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.944110546 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.000723145 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.93745302 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.06769532 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.949530803 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.922220069 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.828213416 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.774707073 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.430934454 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.940520711 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.924779299 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.718073459 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.5048008 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041428037 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091049467 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944109641 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.660000715 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.226324894 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190860741 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460135952 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.005424568 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.939638763 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.939066973 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.864505086 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.132955986 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.134878132 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239599762 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.30747914 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.047719856 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940530291 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.154025531 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147329707 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.939233298 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.095630675 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.321915427 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050364866 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.854932412 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.650640264 seconds)
  done (took 1712.682419766 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.948235538 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.970805995 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.962495807 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.986993474 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.977735574 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.945362886 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.00606524 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965274907 seconds)
  done (took 57.628289366 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.934064828 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.148696805 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.940847232 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.931953351 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.971332869 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.934687972 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.132963306 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.943998355 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.94805138 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.941816273 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.934603062 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.953714833 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.766630646 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.96226049 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.942096822 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.943401906 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.941936219 seconds)
  done (took 76.16707983 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.938177673 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.2905211 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.97671916 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.95751359 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.034045351 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.948326817 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.992712457 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.973011262 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.937738778 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.185427368 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.275845204 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.954384998 seconds)
  done (took 91.327196254 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.951460347 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.942779233 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.942899663 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.944320253 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.944461919 seconds)
  done (took 11.597811115 seconds)
done (took 2229.825211056 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.187332548 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.158741097 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.170170664 seconds)
  done (took 6.19434246 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.083359041 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.129367453 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.251170347 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.273750409 seconds)
  done (took 10.603608774 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.225111461 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.325116915 seconds)
  done (took 6.412373986 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.26567694 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.96384233 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.356054005 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.935394631 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.93756945 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.935553454 seconds)
  done (took 22.676279503 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.938372912 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.942370257 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.938182245 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.941389744 seconds)
  done (took 9.624026224 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.918851453 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.717414662 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.919773319 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.934312236 seconds)
  done (took 21.352487768 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.686929562 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.33716802 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.682220574 seconds)
  done (took 9.56875573 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.445631961 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.159436559 seconds)
  done (took 9.469629528 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.198594175 seconds)
  done (took 4.061236872 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.967154791 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.210481825 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.463624949 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.47798335 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.555902795 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.757201803 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.269507562 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.179404721 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.382715946 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.401846412 seconds)
  done (took 25.530903512 seconds)
done (took 141.131748064 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.364199865 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.965436149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.140135647 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.294888896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.172492705 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.136223562 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.153499427 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.286530896 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.819802694 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.811059178 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.296868622 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.167767473 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.093923367 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.949477533 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.102453471 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.948499833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.165496817 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.376917555 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.013821297 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.207960864 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.157042965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.933832271 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.126353574 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.944571638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.155853327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.073290392 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.468161946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.937321823 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.132623568 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.479069727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.066940282 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.326944064 seconds)
  done (took 170.136326097 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.907604832 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.903047083 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.90222393 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.900503612 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.192726102 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.902575144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.899347977 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.897706007 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.94685928 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.927944135 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.89785717 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.177138231 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.895581295 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.893156429 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.890056123 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.88973362 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.082194106 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.888907202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.888717394 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.888231849 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.888079256 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.02564391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.88957916 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.037702516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.046656666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.889526995 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.888059536 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.888484171 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.887895749 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.88731691 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.89032239 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.889109101 seconds)
  done (took 207.716328051 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.88787877 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.889757699 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.890305065 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.888891595 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.891463923 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.887399051 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.892038221 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.888684932 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.374670164 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.369188993 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.889917355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.890863211 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.89069037 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.889041417 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.889691643 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888656363 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.890017022 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.888822694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.889529081 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.890359305 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.891593369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.5471011 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.890411847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.566016821 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.893341221 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.898858931 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.89088955 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.902039683 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.904166738 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.905255686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.908989043 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.890986464 seconds)
  done (took 220.667567763 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.082317128 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.898167425 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.899138772 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.827584757 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.898869918 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.897341687 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.910825386 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.083719657 seconds)
  done (took 19.341390145 seconds)
done (took 619.733967047 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.358319255 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.208182832 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.077257275 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.923682692 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.137176169 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.956370651 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.918264866 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.986055808 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.652441317 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.99059832 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.560327174 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.942534512 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.654488905 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.949501281 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.038789633 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.979599603 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.458673086 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.552390054 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.096582 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.963791755 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.093684104 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.854427259 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.002312081 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.675057979 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.673260536 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.897248102 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.083439794 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.46748433 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.929796012 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.079468495 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.648078331 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.309648751 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.932572401 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.915398347 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.971671392 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.954529345 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.254086466 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.930918646 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.041272568 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.653743599 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.962673879 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.537590217 seconds)
  done (took 104.095621772 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.88674444 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.886296269 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.886422457 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.886624561 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.887221709 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.88699798 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.885649921 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.885319428 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.885624408 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.884030735 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.884765414 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.886127566 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.884549683 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.885845896 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.885522826 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.886039866 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.886124292 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.888287655 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.885248387 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.885890451 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.887188076 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.886271702 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.902539543 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.886166964 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.887568028 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.886643775 seconds)
  done (took 50.888069917 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.901279422 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.065184983 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.140876674 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.922059004 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.899819141 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.90419202 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.919875533 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.90806686 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.903381735 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.903675922 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.998101955 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.908121987 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.92033825 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.137267052 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.920006617 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.902522825 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.905921949 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.900874953 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.070653101 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.917639108 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.92238713 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.908802269 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.921554823 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.915738544 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.903313154 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.902326383 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.906108627 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.37513857 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.911748516 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.993026299 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.947445084 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.927785218 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.350441285 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.147102099 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.959943261 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.914013909 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.904254186 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.997358718 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.907971923 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.902325083 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.921174231 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.907568 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.136455192 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.405400348 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.918285226 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.904546331 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.38548041 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.009796129 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.94467488 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.914673309 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.140283397 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.923743094 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.906469949 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.903847089 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.938716296 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.91337937 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.903578306 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.259004709 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.916157466 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.920951635 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.909506813 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.903425723 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.077201476 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.912505914 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.06445624 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.912920215 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.910361245 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.90389585 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.1374319 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.92230112 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.408615673 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.920013591 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.904300631 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.997313166 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.072439395 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.41316457 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.917833932 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.079068767 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.36668837 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.931767444 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.913412422 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.366739802 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.9351442 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.913756088 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.907462416 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.906593273 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.905662999 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.949128732 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.921123349 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.340499352 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.411057973 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.278708125 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.932370337 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.921534209 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.905497991 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.25661975 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.915477368 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.906128068 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.136830962 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.419786475 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.921798225 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.913455277 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.396325483 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.922987178 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.924587129 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.913354661 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.143991327 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.9233648 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.950247661 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.906645984 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.913173929 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.908056366 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.924259947 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.913071986 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.906531183 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.386346237 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.02287945 seconds)
  done (took 236.370758764 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.901416774 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.922026368 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.902118706 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.904295473 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.898655318 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.905550167 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.898450703 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.899330423 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.905505399 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.900622562 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.900255953 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.902224032 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.903204729 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.977429138 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.920776871 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.906925968 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.509037151 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.902823576 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.900494244 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.899950373 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.65099865 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.908339606 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.900353461 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.899610993 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.901134277 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.899883197 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.952413067 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.913883542 seconds)
  done (took 168.620253177 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.906668235 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.021763307 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.926769129 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.93523682 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.917545977 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.906157999 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.930214021 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.924216746 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.912405123 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.905356038 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.905178904 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.968201408 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.920022896 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.005567712 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.939507844 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.938408783 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.010031962 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.916014195 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.905885852 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.905540331 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.935661083 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.901758958 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.968816604 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.036922733 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.928969859 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.025520057 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.913729603 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.909149601 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.909053559 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.02743529 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.925981928 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.969577569 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.936360341 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.926112309 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.029613855 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.024645343 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.01566806 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.938717699 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.913393588 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.908149231 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.907665637 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.894830909 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.025743475 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.929393354 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.910144467 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.017545846 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.930970676 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.911266101 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.919118894 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.908286489 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.922981239 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.927760529 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.976930865 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.043811193 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.945212277 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.935644099 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.934648558 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.178534382 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.919592896 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.009026244 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.902749371 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.028661601 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.930392847 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.89557041 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.909537949 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.915290707 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.938512889 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.941345639 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.012922469 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.917424661 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.007742698 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.944791965 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.916889608 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.909288677 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.911385188 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.027757099 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.028091132 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.944676842 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.947165138 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.941537042 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.90413034 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.909799758 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.89743106 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.927065283 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.91473293 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.027426346 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.028324365 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.919398269 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.911683019 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.914035757 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.911965958 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.936235702 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.037798572 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.948411476 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.005124962 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.979336522 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.987146675 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.92715961 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.923988904 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.915320408 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.975859316 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.927481728 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.922322284 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.22565097 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.981565068 seconds)
  done (took 206.759727035 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.357761792 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.966395518 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.968107694 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.223492656 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.337991985 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.745832057 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.958579376 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.961993795 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.984277793 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.148265046 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.034716495 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.98130597 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.947741998 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.933547126 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.959946291 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.982622771 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.970389403 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.280963206 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.096127617 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.066248191 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.941465535 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.264689442 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.28151435 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.345676297 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.996246471 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.294926808 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.632343036 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.100006067 seconds)
  done (took 62.603611459 seconds)
done (took 831.158174929 seconds)
SAVING RESULT...
DONE!
