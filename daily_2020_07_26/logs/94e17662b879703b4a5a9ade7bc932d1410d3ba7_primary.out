cset: moving following pidspec: 12635
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.560226239 seconds)
loading group "shootout"... done (took 1.202798345 seconds)
loading group "string"... done (took 0.402297654 seconds)
loading group "linalg"... done (took 7.573341291 seconds)
loading group "parallel"... done (took 0.151304634 seconds)
loading group "find"... done (took 1.261911162 seconds)
loading group "tuple"... done (took 1.830300366 seconds)
loading group "union"... done (took 12.033424202 seconds)
loading group "dates"... done (took 1.246154639 seconds)
loading group "micro"... done (took 0.191843547 seconds)
loading group "simd"... done (took 4.134673689 seconds)
loading group "io"... done (took 0.966094785 seconds)
loading group "random"... done (took 8.250720894 seconds)
loading group "problem"... done (took 1.514081003 seconds)
loading group "array"... done (took 18.471522464 seconds)
loading group "misc"... done (took 1.445605435 seconds)
loading group "scalar"... done (took 37.688585951 seconds)
loading group "sort"... done (took 2.878248592 seconds)
loading group "sparse"... done (took 11.333322968 seconds)
loading group "collection"... done (took 16.704171073 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.479930216 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122863011 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.126497769 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115583627 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142049264 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118897803 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.123116451 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083924946 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.910107848 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.138247791 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.110761361 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.423168145 seconds)
done (took 5.238695551 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.159534551 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083384417 seconds)
    (2/2) benchmarking "String"...
    done (took 0.076885851 seconds)
  done (took 1.300391908 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.061956956 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126955021 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063387164 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.063315751 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063305141 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.063282533 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.062732824 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.062947805 seconds)
  done (took 1.647840741 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.068675489 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065064001 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.062444974 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.064579922 seconds)
  done (took 1.405725577 seconds)
done (took 5.739316594 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.233614445 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.099602811 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.281705203 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.38630675 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.450398006 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.088100863 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.071529841 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.066596795 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.124826699 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.32422286 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101907282 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.178153626 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.088260238 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.177108029 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.999989838 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.11520517 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082143472 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117056522 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088010334 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.126295876 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.402987324 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.075110675 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.071161182 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.0671394 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.06445535 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.640829287 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.663829858 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.127328248 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080971698 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.097785199 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112439819 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.643591791 seconds)
  done (took 10.422008894 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.089259803 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.087356293 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063926043 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.120759496 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.090726209 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066530545 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07133266 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.063892054 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.088133013 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.121470691 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087238692 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.096716179 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063147366 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065997349 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.072868388 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19536412 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.076749269 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.077067731 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.064712452 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.07649863 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.104193493 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075480084 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075947896 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.0759668 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.12574783 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164990195 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.092934015 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094741957 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063644 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077249715 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.111862499 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.12408854 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.063456352 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.062194846 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.117652916 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.092404342 seconds)
  done (took 4.457867067 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.918692292 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.087167254 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.099481744 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.609066425 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.0627469 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.148848429 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.235917732 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06923791 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.373826558 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.139555865 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089560306 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.108482442 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.144231835 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.110553608 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.065880411 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.201823909 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.112713815 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.359146078 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.064830778 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063648405 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.06272531 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065315723 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064309508 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.059832378 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.066767777 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088523759 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.083378759 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.16041125 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.92048628 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.242482656 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064232286 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.155502356 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063089581 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.081862292 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.065859118 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.358363293 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.080731504 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.392668622 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.117156041 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.063118224 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.164567642 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.113552318 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066600436 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.109822627 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.074715335 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.065877372 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.065694747 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067655489 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.068293302 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.074754751 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.098872742 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.064996614 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.062003862 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159649563 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.062387136 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.082434215 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062677984 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.064322417 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.145985544 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062114926 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.138250384 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.061171601 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.06495105 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.093628668 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.065439355 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.087282548 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.09945148 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.338248475 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.03737643 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.065227478 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.929840317 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074473615 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.063035247 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.068227519 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062803796 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.064347851 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.06284023 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.070101483 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066863952 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.059834356 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064436036 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.1057829 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063666392 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.066190486 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.064122509 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.07083161 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.094265909 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063119564 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.464609018 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.094460752 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063535889 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.074091194 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.102639464 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.064974873 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.0698136 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.06421111 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.063589206 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062603196 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063203737 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.179374243 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.090572129 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.06592327 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109803134 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.035045877 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064076565 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063298558 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.068210343 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066517037 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066312458 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.063494665 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066705037 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064714055 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.061418408 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.109007656 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.064247163 seconds)
  done (took 21.068155397 seconds)
done (took 38.007513144 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248886681 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078546358 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079096824 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079132926 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079244303 seconds)
  done (took 1.80128642 seconds)
done (took 3.034616848 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.10366078 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.060554424 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.096121821 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.095550476 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.063835163 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.060993573 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.09403753 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.060804653 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.094047239 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.09574454 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.09843341 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.097431034 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.060691219 seconds)
  done (took 2.317807068 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.066823041 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077153112 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.079511088 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.058553571 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.06868548 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077729249 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.059480494 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.077020221 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.083514631 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.07798314 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077805299 seconds)
  done (took 2.027957896 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.067055651 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.077699874 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.080094758 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.061606746 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.070183354 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.078242065 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058888476 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.07732072 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.080902897 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.078154709 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.07798828 seconds)
  done (took 2.021262462 seconds)
done (took 7.586449821 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.065799527 seconds)
  done (took 1.26244462 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.525428091 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.546023092 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.065473662 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.084731375 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.178910328 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.097019196 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.224163498 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.071618332 seconds)
  done (took 8.167662873 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.095657748 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.066008469 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.066424969 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065550049 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.065841282 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.065748602 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.064814326 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.065847017 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066649909 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.066655692 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.065130735 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.064728573 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.065253352 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.064683829 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065874799 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.066437742 seconds)
  done (took 2.385336225 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.093547753 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091092122 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.068486562 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.070580212 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069131608 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.068022776 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071280681 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070191508 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.06703716 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.068802192 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071656069 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.069598701 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.069164663 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.060579352 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070265217 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072769635 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067082288 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.070301844 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071279986 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.072053771 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.070950778 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.060746438 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.069353554 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070916498 seconds)
  done (took 3.029087936 seconds)
done (took 16.058607521 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.109584345 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071900456 seconds)
  done (took 1.386705629 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.067936287 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.06917864 seconds)
  done (took 1.360854583 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.074543315 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.058384159 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.080898874 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.070398203 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.059504605 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.058643353 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.07872955 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.059248442 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.058716635 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.059156166 seconds)
  done (took 1.88476131 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.062096496 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.068890787 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.066003505 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.068236153 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.066429015 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06020457 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.063489884 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.061141377 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.06857132 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.059210208 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.064932266 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079243788 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.063975621 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.081164652 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.063683501 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.064764285 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.066939426 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.063860604 seconds)
  done (took 2.420223134 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.059365905 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.059881557 seconds)
  done (took 1.354468968 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.063972264 seconds)
    (2/7) benchmarking "second"...
    done (took 0.060415668 seconds)
    (3/7) benchmarking "month"...
    done (took 0.063426126 seconds)
    (4/7) benchmarking "year"...
    done (took 0.063040963 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.059707955 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.058821719 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.059705557 seconds)
  done (took 1.654918276 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40828242 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11610227 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.335466433 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.066216912 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.076686137 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.243705314 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.060656803 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.065838105 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.065743522 seconds)
  done (took 2.707933525 seconds)
done (took 14.005777365 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077943778 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.080685486 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.086471946 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414608067 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.0899473 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063962705 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.109966142 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.177195229 seconds)
done (took 2.348189212 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.211795652 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.392145195 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.952258807 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.061852286 seconds)
  done (took 3.640140505 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.317592417 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.079462928 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.073902951 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064588012 seconds)
  done (took 1.782929896 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.061984697 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068259284 seconds)
  done (took 1.370113702 seconds)
done (took 8.252988719 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06120128 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.061050051 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08592824 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.061366346 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060471873 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.060489478 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060767515 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.060445471 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060862236 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.060690704 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060767346 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.060196531 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.060520067 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060511672 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060800156 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06087021 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060413592 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060593373 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060695491 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060963376 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.060717261 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060462395 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060759887 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.061416734 seconds)
  done (took 2.748845248 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.0759613 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.062996949 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.064393665 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.063763704 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.064949047 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.064801865 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.064433141 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06329524 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.064738044 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.063132386 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064737526 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.064825986 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.062471834 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.064875261 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062930522 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.064978725 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.064557332 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06351219 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062478023 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.064959325 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.064481904 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06313835 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.065070862 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064467942 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.064612953 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065010277 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062958496 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063196357 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064574504 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064972699 seconds)
  done (took 3.192970857 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.062131085 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.056999781 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.058349535 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.066185975 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057439302 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.058260273 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.05834312 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.057443361 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.058049742 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.05895487 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.058542692 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.057616591 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.058395434 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.057433782 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.057537855 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.058287921 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.061472395 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.075440169 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.058106552 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.057118868 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061139335 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.057309804 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057223924 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.057048847 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057747008 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.057327837 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057218277 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.058499963 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.057149811 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.058791545 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.057623668 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.061109496 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.061992627 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057522276 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066589127 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.061553041 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057653478 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.061011307 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.059012739 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.057072477 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.057327212 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.057397575 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.057756844 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05758585 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.066589267 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.058182721 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.058785338 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.058234904 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.058054719 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.057325886 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.057400153 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.060035146 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062560293 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.05950908 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.057638031 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.059172921 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.05764798 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.05806404 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.057283201 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057343137 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.057121941 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.060480178 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.05972483 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.058485517 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.075153082 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.059254098 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066299094 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.057388613 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061437421 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060903577 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.05836521 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073306769 seconds)
  done (took 5.547524127 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.081947106 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084039589 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061303546 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060996078 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.057375433 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.05691183 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064663504 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.05685051 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06129958 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.075727516 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.057201121 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061361069 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061063931 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061501717 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058865613 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062412588 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066823596 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059087034 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.058299285 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061938154 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058229902 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.065773812 seconds)
  done (took 2.659585578 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.134292611 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.062216719 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.09861196 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074004312 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066764548 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074705854 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.064157555 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.063921039 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063994305 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064176403 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064646935 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064621184 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066751658 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064612011 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064438736 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064165117 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063981088 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064440082 seconds)
  done (took 2.541854541 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074107888 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.062634133 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.083374808 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.061755921 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.062353474 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061828642 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066241042 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066934776 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.063225438 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063648018 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.068738928 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063059969 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06300194 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06356214 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062682525 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.063417588 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.062908222 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063504928 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067995681 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067693935 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067507745 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068785992 seconds)
  done (took 2.712905006 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072047965 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.062170678 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075414684 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063893375 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058477726 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058151515 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.063425174 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062212916 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.063486179 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061616651 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062398853 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058185903 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.064341896 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062574638 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.065022224 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062654009 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.062139449 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062203563 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062285148 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057922318 seconds)
  done (took 2.52086953 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082386088 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059652816 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060292299 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077778621 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059658157 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.05971215 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078572093 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.060307941 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.061147284 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.082250453 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06157311 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061843475 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079282619 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079159399 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.060603358 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079504985 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079139585 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078562288 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.060045718 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.060797837 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082115034 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.061238297 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.079730645 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061841264 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.061224209 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.061487782 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061211186 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079512775 seconds)
  done (took 3.190627143 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070950902 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.060339457 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.060441969 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060391907 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060545338 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060887412 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060885952 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.060776031 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.060414258 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062080037 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.060777901 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.060786194 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.060948078 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.060752067 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.061100961 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.060529853 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060695673 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.061029315 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060974232 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.061305464 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060750514 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06092172 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060609974 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.061419325 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061538344 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060689726 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061115854 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.061420815 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.060388413 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.061454882 seconds)
  done (took 3.101987477 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.072195941 seconds)
    (2/2) benchmarking "in"...
    done (took 0.069737989 seconds)
  done (took 1.408712256 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060515058 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073166301 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.056551406 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066612396 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065879201 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060097368 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066975934 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065101668 seconds)
  done (took 1.774863683 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.06535348 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.085426664 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.058529878 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.058660754 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.062180342 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115137259 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.073918332 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.068647715 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.073967054 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061048774 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.060141765 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.071403317 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.059667543 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07029115 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061561236 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06681724 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065014302 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069689702 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070539271 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.05832026 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069727997 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060646494 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.058425145 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.060855336 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.059621404 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.065379021 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073225007 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070244622 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066746141 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.057170364 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076989402 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.058593194 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.059620561 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066665636 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.063701843 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058208958 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092436192 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.059237347 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.065136835 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058204017 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069928631 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077132521 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069800513 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.073254906 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.058980425 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059612164 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.056658772 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059596873 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.059850265 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065874559 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.056964256 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063367342 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.057698423 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.060237811 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.06802965 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.058622448 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.065185233 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066567136 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069842671 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066731339 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065588026 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.070503962 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.064970738 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.066482786 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058240291 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074643358 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059590897 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.067584881 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070247543 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.058163943 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070175966 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056439679 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.055817245 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057030378 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087531787 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.05870112 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.057993571 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057067168 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057042409 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.05851567 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06531558 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.063300211 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062987974 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062967142 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072408698 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.066761779 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.058368054 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.066611392 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.075498482 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.060622265 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.058489855 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.073700173 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.060521699 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.058109835 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073607846 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.064726767 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.058470823 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.05811361 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.05894883 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.069761603 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.058132052 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.055484965 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063416127 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059225208 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.061189082 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.063922082 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064411828 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057721813 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066459478 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.063825039 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.059948498 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056675718 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06148483 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.059026376 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056774467 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065869847 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.057636138 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071456524 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06286254 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.068834713 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.068602243 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.064934684 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070006365 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.056001792 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.05496865 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.071244453 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.197084052 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.061172234 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.07677274 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.058780373 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068548857 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.059091825 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.060559839 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067187559 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.058379034 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.061035149 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.058760983 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.06468073 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.060545123 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.060556792 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062260362 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065692856 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069949483 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059961158 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.06597484 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.059555297 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.071795377 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06767222 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062473274 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062927775 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.059309476 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.070096713 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.065088373 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.066466758 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.058284681 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.05928733 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.05874666 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.06861376 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067255877 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.060598195 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.067830236 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.0622453 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.05961802 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058587635 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.05972765 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.061001989 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063230499 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.05975978 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065556271 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.065568995 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.071722168 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.070738267 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066086842 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057396037 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.058294984 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.060717139 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.058178623 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.061787764 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.066686718 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071951818 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.06934359 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076896422 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.058705557 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.066790652 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.060641895 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.073979202 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.069603203 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.059739739 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.064128176 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.057456449 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060713783 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066726092 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069056801 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.071987335 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071524976 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062395817 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06177406 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.058151417 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071541391 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058672429 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06542048 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066503397 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.063942565 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.058587921 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.060471055 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066875544 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061906211 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.058853102 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072155085 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.065838907 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.058273007 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070822146 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058719851 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.067820365 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.058208149 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060787775 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06252634 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.060550151 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066429239 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07224326 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.057211974 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058994506 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072378623 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.060738961 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.060699646 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065484277 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.071407306 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.06105873 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.063399515 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067059996 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.06661088 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061658166 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066108226 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.05943994 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.06635576 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.061959074 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.068126363 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057031361 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.072306096 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.055487572 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.069695765 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.056993238 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.066139642 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.05727634 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06483085 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.059193347 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.07203095 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.0580843 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057121272 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.06595837 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054511692 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.063920043 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055796439 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.059803954 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06159963 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.064586852 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.058014248 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.201534158 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.062306583 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.066902577 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.063277021 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.067145715 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.067185601 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.062815963 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.058110176 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065407439 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068823141 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.065880251 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.060690037 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.06058613 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.059353413 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067303437 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.060251814 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.060384617 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06552342 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.062609814 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.063269993 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.06093523 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.060893264 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.060534165 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066137165 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067022881 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075191169 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065836055 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06446261 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066546731 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058687335 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072624905 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058861533 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.064508261 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057864752 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.0654306 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066513415 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.058351525 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074941438 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058939329 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.063790071 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068830584 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063840136 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060228841 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073511851 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.060843778 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064276516 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.063895313 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.060778906 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.062676615 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.060246085 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064121395 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066332945 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.068160003 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.05964796 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.064144885 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065087743 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06093273 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.068449136 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.061680998 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.06537462 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.060712726 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.057793563 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062521632 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.06950096 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062545022 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.062981885 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.059029546 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.057790078 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.059134751 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.067023631 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.062372056 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065673819 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071742551 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.057556917 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.059771803 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.058539066 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063943489 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.075052952 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067150653 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064483182 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062594826 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057831892 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.060549738 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.061043917 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.0593576 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.06322296 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.057665659 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.058401687 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066593147 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059176814 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.060726573 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.057241749 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.058367041 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.065339654 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062827733 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.057916152 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.062828869 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.056881515 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.060803796 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.056407105 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059484665 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.060769706 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.05656032 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.060560815 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067487286 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073556798 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.063890459 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065900404 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.05961723 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.065317679 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070717198 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.065716239 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058001785 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06446469 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.055937155 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073204966 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.064351002 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.063625026 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.065046241 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057825038 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07117894 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.059765066 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065111749 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.069536764 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058013173 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.065197241 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.056695457 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070902404 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060381277 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.055378568 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063092616 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062226167 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.201469966 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071210129 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.060436822 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.066933743 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065813161 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.062231493 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.06091476 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.060779747 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066792409 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.073664915 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.059997187 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.06397426 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065478611 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.065230654 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.062398201 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.06948596 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065554172 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06021787 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.060289907 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061271001 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.059626349 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069985711 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059906915 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062636754 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.061901162 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058548953 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064451217 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073356576 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.06579937 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067022338 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.058112855 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.058291869 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.075340672 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061059234 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.062727588 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065307502 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066806383 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069921208 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066554717 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074074248 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.059447383 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063695986 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069656088 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.059930529 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.058656405 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061403059 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.060529555 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066340835 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067260239 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.064259784 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.060805714 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064378937 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070013562 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059723451 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.062449032 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.064378146 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.058369736 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06597713 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.063852866 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064562183 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.058852889 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.05716225 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.059848215 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.06473005 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.063420455 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06536325 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058667795 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.065283267 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069866236 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063533611 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.061628002 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.056917746 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.061500192 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.06524309 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.063562267 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.057671275 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061148903 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060137589 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.066363813 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065605151 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.060910222 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.058065596 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.072908685 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.064820795 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.065936338 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.05930692 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.059759743 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057765784 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.058037706 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067521424 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.058516937 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059846087 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.061438954 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.058960444 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.072872697 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.063905267 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.071457388 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.058368224 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.060499728 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057153751 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065763649 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.060827485 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.057450679 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066159922 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056689163 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.07081114 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.069399597 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.06800092 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058546138 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.062127131 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.065747565 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071591928 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066532814 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065943476 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.062710956 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.066876867 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.060521967 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.06799495 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.05815867 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055940549 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.065697461 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06354216 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.066912212 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.056139406 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.064863665 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.057886896 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.062305676 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.062649032 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057790802 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057648409 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057611486 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.204122841 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063976214 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.067838455 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.062339817 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072877686 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.059184625 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.068277544 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.065267924 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.067163729 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06987729 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069182117 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.06591955 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.059293649 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064902088 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.066346035 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.060591005 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.062297697 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.062643915 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.079161179 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.061524296 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059230409 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.070763606 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.065086177 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.059030521 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.066737044 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062444845 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.068512223 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.059758143 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067434747 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.063308564 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.059690855 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.062642479 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.062679392 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.057578274 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.05825407 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.059161805 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.067757172 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.062406337 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.059217571 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.076273718 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.060872065 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066003566 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.068558993 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064996857 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.060784448 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.057327496 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.060178509 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069194264 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.072032935 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061267641 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065445544 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.060575427 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.066575426 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.057617378 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06581263 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065443217 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065747709 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058865296 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059020871 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.071551011 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071876766 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.062769454 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067211007 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066548927 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.060459594 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.079219741 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.066167142 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.060496248 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.069200885 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.061392464 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.058394239 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.058214514 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.061181558 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.069090088 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.058874418 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.063727357 seconds)
  done (took 39.850553191 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095613795 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.059134436 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057213557 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058613465 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070696454 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05954453 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058933186 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.059619097 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.059602239 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.061912306 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.058638476 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058483517 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069660089 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072177106 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068238587 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061956853 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057303658 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058612309 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.05720781 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058049044 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067979917 seconds)
  done (took 2.708081396 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.06508646 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072862947 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069326863 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.074287868 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065851949 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.062422288 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069831861 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062079385 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06968357 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067468434 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069948349 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062426222 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067281689 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067472726 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067209127 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06230915 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069782643 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065750382 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.062423489 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069406097 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062619667 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.069296633 seconds)
  done (took 2.825912185 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058845303 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.05840855 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.064491937 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056999107 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.057573472 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.060577821 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.056921578 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060073274 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060371423 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.061462776 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066068075 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.058952972 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.058180981 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062442595 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057919423 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.059007622 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.1022508 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.059504451 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.059063973 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057459405 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.062996983 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064573719 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.056984141 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057122499 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.060349534 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.062060778 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.057437991 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.060046827 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.058024474 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060326568 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.058344735 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.057075307 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.065627625 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.065567646 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061671095 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.061330603 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.059938016 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.059451521 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058101511 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.058167651 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.065130449 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.05864804 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.057704847 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.058215692 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064407932 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.056824856 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.056904755 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064670988 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056480899 seconds)
  done (took 4.336513625 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.070119225 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106011728 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.063285497 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087804651 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.07263715 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.066083499 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06406794 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088840933 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.059400547 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.060786807 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.073745513 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.0743075 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062167679 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.063792128 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.065994612 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.061667179 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062737348 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.060744173 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.065299553 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.061329354 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.065301186 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.064651318 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.071147613 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.071716503 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.062382978 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.0610229 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.061720903 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.063725481 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.071897822 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.064316311 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.062414819 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.063310351 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.071912086 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.06466121 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.059734786 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.0600149 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.072378586 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.061196989 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.060832843 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058607255 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.059835088 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.062618122 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.064720757 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.072489073 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060945189 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.065056643 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.060646499 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.058236993 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.073775985 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.061784283 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.067205797 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.074292991 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.06336957 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.062618969 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.063942932 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.073455857 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.062280167 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.060788378 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.06227713 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.072708266 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.060021367 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.062993932 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.073962433 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.061105332 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.065894612 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.074164555 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.066553419 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.063132007 seconds)
  done (took 6.00641402 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069635024 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.087749267 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069101139 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069588161 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06855067 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.068222941 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069603551 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.070467855 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.069481521 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070093122 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069713209 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108889401 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.065007226 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075489067 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069728935 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070356839 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069481531 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069907106 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069867777 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069644741 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069704436 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070251203 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069925086 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.070616385 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.072805665 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065300018 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069392176 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069577155 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070465376 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069842685 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.072819434 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069593762 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069773615 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.070654011 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.073617763 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.069703756 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.059483409 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.069566317 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069765989 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06972485 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.0653927 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070256968 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069784551 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064905885 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070289121 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069953465 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.070593009 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.073245881 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079625706 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070641831 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.070075388 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070712572 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069857957 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07028164 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.070930992 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.07857846 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070892151 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07063945 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070115469 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.071015598 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071277882 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07898435 seconds)
  done (took 5.80023823 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.073493697 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065356155 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076582967 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060012165 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.056949461 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067149334 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058340146 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.058564934 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066967079 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.067832256 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069342355 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069083891 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07104419 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068849097 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068256084 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071239707 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068300814 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068363912 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06681945 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06836266 seconds)
  done (took 2.724123726 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.071233268 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075329467 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063901645 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068837028 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.064392348 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068518622 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062772496 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06473385 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065344285 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064417063 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069817965 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07014298 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064550154 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068589307 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069605724 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068916103 seconds)
  done (took 2.45350447 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.064669146 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.066335448 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.064912646 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.05914311 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061978963 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.05821681 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.05856722 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057040393 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058360126 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.072935419 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.060040361 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.071133639 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.060052029 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.05852283 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.059380835 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064831464 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058853786 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059928351 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.059458457 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.065634625 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.066276489 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061118228 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063328419 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.059595242 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.064833754 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.066791199 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.061831222 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062978911 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.05978746 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.060202951 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.065368397 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066676155 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.059306403 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06041088 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.058687728 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.059726697 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.059637292 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.060404412 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065385973 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.059765382 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.058231008 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064254615 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.060198468 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.060929582 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.058851191 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.060079117 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059178221 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065530863 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.060272469 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06510943 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.060177787 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.062152139 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.061088345 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.067291299 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.062552117 seconds)
  done (took 4.781225841 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07348573 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.064040137 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.058091384 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.058694233 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.063166521 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.064338596 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.063805585 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.063996719 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064135171 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058967437 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.064285442 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.063035502 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064305067 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064001668 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064255657 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063946308 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.058091606 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064333839 seconds)
  done (took 2.52610471 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070233318 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064014441 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.0682248 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062930336 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.063542096 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.063398342 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058792578 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.058636526 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.058749705 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063539435 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063061865 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.0623319 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058795241 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062781798 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062912293 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063217064 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.063037451 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.058897756 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062953019 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059095216 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06268492 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.059144124 seconds)
  done (took 2.752275414 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.084150541 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.07917132 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.1173732 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074676908 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.081567288 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.066883295 seconds)
  done (took 1.886034521 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088266175 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098999539 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062401867 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06194446 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07220002 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065607733 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066564389 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067315033 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074659768 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072701675 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067225454 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074216539 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074114934 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069360735 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074487301 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077414328 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067489167 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067126144 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063458933 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077704572 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067553436 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07424697 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067374341 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067430074 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067192878 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087832082 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078199352 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072542437 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069634129 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074350879 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076613312 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06687552 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074388745 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072324295 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.063538773 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074357531 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067729699 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077547684 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074911083 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069292491 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063260785 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07436246 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074274381 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069603074 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077857108 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067640487 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069627575 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067482534 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067590948 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080248469 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074686412 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069928241 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074946293 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077894439 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077674508 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080075773 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072326117 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069428039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07426229 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072263242 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069766336 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074539244 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069783793 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072211699 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077792353 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069442007 seconds)
  done (took 6.158180721 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095950004 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.064488199 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067473863 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07291148 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069250007 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067789188 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067514908 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067450179 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067226995 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064113522 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102355462 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067761469 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070774643 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069568429 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06770986 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067284131 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067294855 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069822275 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064093422 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080309603 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067638692 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069708892 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070067829 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069345312 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07234568 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077562097 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067188752 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067245597 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067136258 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06726172 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069460756 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067460248 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069683968 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.063929655 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068980791 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065927208 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065458301 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067886434 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065434336 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072388075 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067767479 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07666326 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065742324 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06572638 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070967893 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067079597 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067432002 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.063454457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067604789 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064422115 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072813989 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072325849 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072427957 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069698072 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067536198 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067523148 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067609442 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067455729 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067680136 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077932583 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069699972 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067856175 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079938245 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067528279 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067210849 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069752497 seconds)
  done (took 6.010635793 seconds)
done (took 123.460707959 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.206274314 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180220433 seconds)
  done (took 1.749230191 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070940305 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.094555963 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.0729374 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130739245 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066469234 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100320617 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099344797 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.070335093 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06704288 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067272019 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068279393 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070179434 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.133536507 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065889129 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066133953 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070051574 seconds)
  done (took 2.699261403 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102428806 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.177007761 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104970247 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065825088 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101095097 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073496257 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.065716294 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.076120046 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.069557638 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068901695 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073605641 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071478398 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068540633 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.071314197 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069768529 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072849235 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068546797 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073111269 seconds)
  done (took 2.86559907 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.091282144 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.083001096 seconds)
  done (took 1.570953374 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.152052692 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.099848985 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.139100392 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.313366256 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.135047577 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.273567702 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126323839 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.124135457 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.106529982 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.120466723 seconds)
  done (took 2.978600731 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098654943 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.162240336 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.292449391 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115440831 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072432824 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.084245862 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.11749132 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.078292197 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.075641694 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.074973488 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.074817734 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.074274237 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.091708591 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.071619436 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072622954 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073611413 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097389476 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072583757 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.072248481 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.072741509 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.097313978 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066032619 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073338793 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071880673 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074416892 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.07507976 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067432008 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066037148 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072652928 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072188168 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.075846869 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.081458229 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.074870342 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.09842487 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.068354635 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.099072975 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.069974541 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.069186955 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070580016 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.069251158 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07206728 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.072401876 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072805316 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.071946913 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065354967 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.069807783 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065952929 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064555027 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.074072337 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.065551186 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076016741 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075212681 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.100619531 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.067431047 seconds)
  done (took 5.890102113 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.105678557 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.101551535 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.066873338 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107748371 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098878689 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064947676 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100042622 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093507628 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101344463 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064611269 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063780663 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064404994 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.072996757 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.075113461 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110388249 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102911562 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066647516 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066186741 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.104814479 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.105249387 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06537091 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097813337 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.092912357 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101258536 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063503876 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.064588259 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.063915947 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.065608896 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.0725787 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.073988958 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065406325 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.074836871 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.080444231 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.071659014 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.062733246 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063179066 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063782161 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.073690163 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.074509472 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.073556263 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07096483 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063732267 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064828221 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.065703793 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066095942 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.06442476 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.073624087 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07458127 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.073479028 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065129401 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065513501 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.064423783 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.065190299 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073834913 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.072388266 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07554644 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074695433 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065081297 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064914741 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067214565 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07477178 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.075275558 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.074726051 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066136384 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.074949691 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065006955 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076984224 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081097001 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.064928836 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.065469222 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065050069 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064800601 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.065281913 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07230642 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.072571694 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066158049 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.064896477 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064903217 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.075354106 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.073104262 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06519337 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.072539447 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064694545 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065756447 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065473672 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065819804 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.072307249 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.074459303 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066043941 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064491267 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064961409 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064622589 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064182843 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.072282225 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.073559822 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.073709077 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.072844429 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065185006 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07272601 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0729258 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064934837 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.072276084 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064174432 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064645256 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064447305 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.071669761 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.071301569 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.072848331 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064237221 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.063955608 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.071682314 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.210685165 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066780952 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.072546646 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075685692 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074352854 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065729495 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080053085 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065986797 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076112766 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065387296 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.075648486 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066076894 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073551815 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066097999 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.064858872 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.065756514 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.0739342 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.065889953 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065231057 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065955482 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066022853 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.074155719 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077179121 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066912639 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073567656 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.074006259 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.066777406 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.073645007 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06523137 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07418 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06597453 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065732527 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064613275 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076619935 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065551774 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065306996 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065351083 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076704883 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06577575 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075116396 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072739441 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063896289 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074749967 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.073142514 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.070983359 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.073908776 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.064438281 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064673179 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064934577 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.065309229 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.072677251 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.074147746 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.066801022 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065571108 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.072383653 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.07591548 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06492007 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.073471843 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.073293176 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.072210363 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.063839796 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064364444 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.076641821 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07354646 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.071399761 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.071144334 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.072428226 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065237381 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.073046842 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.073911431 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065626204 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079256893 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066192332 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.077882529 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.07425467 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.072925011 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.074233114 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.075189053 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.075809153 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.076204169 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.079226702 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065408818 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065023512 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.073535576 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065573535 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065538299 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.073249386 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066173877 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.0658211 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.078877986 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064224785 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.074914881 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.06526747 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.075022425 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064712804 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065655679 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077757553 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065805692 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065530268 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.072948323 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.065309238 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.072898908 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.075844564 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.070269116 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.062641764 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.062970339 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.069819983 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070297823 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.061739725 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063528143 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.062834641 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.07073407 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.070548272 seconds)
  done (took 17.572452997 seconds)
done (took 36.732119209 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.203954653 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154761387 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.191593871 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.112733586 seconds)
  done (took 2.158610872 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.096856559 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.094829366 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.077338506 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062290257 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.082715519 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062168507 seconds)
  done (took 1.915509057 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274092641 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.192862415 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170688065 seconds)
  done (took 2.07116602 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.210321899 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188485778 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.445863058 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.281587681 seconds)
  done (took 2.656337595 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.127986578 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.076936375 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059978715 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.07077021 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.10979122 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.142609761 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.086502098 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.11051958 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.070829082 seconds)
  done (took 2.349848947 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.128981897 seconds)
done (took 12.749601176 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.205348562 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.216175958 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.112449386 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.080041927 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.165291157 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.167307382 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094919719 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066935442 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.233471619 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.233810594 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.080726756 seconds)
    (12/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063955235 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.071775014 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08653977 seconds)
    (15/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.074453613 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070459858 seconds)
    (17/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.292262553 seconds)
    (18/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071136989 seconds)
    (19/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.167478211 seconds)
    (20/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.07102504 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.160207025 seconds)
    (22/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.102532455 seconds)
    (23/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.17440592 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148049496 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.086325217 seconds)
    (26/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.071172954 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15462374 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.082964754 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.087938703 seconds)
    (30/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.071347963 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.19624734 seconds)
    (32/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.078503518 seconds)
    (33/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081379244 seconds)
    (34/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.139770313 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.079974993 seconds)
    (36/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.07182619 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.062338328 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.218761437 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.184303161 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.069664511 seconds)
    (41/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071919613 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.157662445 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12005137 seconds)
    (44/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.073232782 seconds)
    (45/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067849257 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.075274552 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.070673904 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.078034003 seconds)
    (49/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.070994039 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.189490651 seconds)
    (51/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.07144768 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115783294 seconds)
    (53/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066610639 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061284376 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.06224979 seconds)
    (56/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07018308 seconds)
    (57/309) benchmarking ("sort", Int8, false)...
    done (took 0.171274156 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.074492684 seconds)
    (59/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.076299328 seconds)
    (60/309) benchmarking ("sort", Bool, false)...
    done (took 0.145037251 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.062320997 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.066598217 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.131077256 seconds)
    (64/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.073425791 seconds)
    (65/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.172524054 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.06211471 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.084887359 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.17842823 seconds)
    (69/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062996716 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 0.063021556 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.063059253 seconds)
    (72/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.070177022 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063184534 seconds)
    (74/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.208036536 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148945315 seconds)
    (76/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.073760753 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068908397 seconds)
    (78/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.061278216 seconds)
    (79/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070257707 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.134373576 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110588589 seconds)
    (82/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.060112894 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.115596532 seconds)
    (84/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.060110911 seconds)
    (85/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.058810877 seconds)
    (86/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.169569084 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.058720204 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.213222161 seconds)
    (89/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.071457494 seconds)
    (90/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.162540148 seconds)
    (91/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070463002 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.085176445 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.184944124 seconds)
    (94/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.075551164 seconds)
    (95/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.072804034 seconds)
    (96/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.214447759 seconds)
    (97/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.140826712 seconds)
    (98/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.165943808 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.158949431 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.07668724 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.062047373 seconds)
    (102/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.121963049 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.225740489 seconds)
    (104/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.13647875 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070140486 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144552373 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.061810073 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.125451085 seconds)
    (109/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.079515884 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.215080352 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06061051 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.131778244 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.063002262 seconds)
    (114/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.061565428 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.067249249 seconds)
    (116/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.069998232 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.127217911 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.061482808 seconds)
    (119/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113191375 seconds)
    (120/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.061809586 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069642787 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.060926821 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.064000909 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067543114 seconds)
    (125/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.199703399 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.195056546 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.060527143 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.06654107 seconds)
    (129/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07156711 seconds)
    (130/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.201898545 seconds)
    (131/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.161802157 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.062590724 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074076764 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.068926238 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.069947866 seconds)
    (136/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.064529256 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.149215576 seconds)
    (138/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.061864771 seconds)
    (139/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.133740829 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.164314498 seconds)
    (141/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.061147672 seconds)
    (142/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.06572423 seconds)
    (143/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.179415173 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.060869024 seconds)
    (145/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070440546 seconds)
    (146/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.152683812 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.060488419 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.061762008 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073088173 seconds)
    (150/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.061919625 seconds)
    (151/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07503648 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073012574 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.123372456 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.079138129 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.087086135 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07061712 seconds)
    (157/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.134467462 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.061603918 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.07049818 seconds)
    (160/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.182365951 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.086093898 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.198032102 seconds)
    (163/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063298013 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.061473384 seconds)
    (165/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061585402 seconds)
    (166/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.068505022 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.068879521 seconds)
    (168/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062796199 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084997882 seconds)
    (170/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.062013614 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.204533086 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.063936819 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.124928898 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.139786878 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.062824423 seconds)
    (176/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.067324038 seconds)
    (177/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.092967221 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.061964897 seconds)
    (179/309) benchmarking ("sort", Float64, false)...
    done (took 0.130752312 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.167904186 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.062098766 seconds)
    (182/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061341254 seconds)
    (183/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.06111084 seconds)
    (184/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.066614516 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.062597922 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.136426619 seconds)
    (187/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.061587155 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.061392474 seconds)
    (189/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.134075761 seconds)
    (190/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075967055 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087879776 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.060818517 seconds)
    (193/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.062376965 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.325968099 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067126515 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.204100292 seconds)
    (197/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066357521 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.13785798 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.090163339 seconds)
    (200/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.155828314 seconds)
    (201/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.204141735 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.063256997 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.062313497 seconds)
    (204/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.064059113 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.070950956 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.08916001 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.08926381 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.063318032 seconds)
    (209/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.064499673 seconds)
    (210/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088999312 seconds)
    (211/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.063209183 seconds)
    (212/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.063589239 seconds)
    (213/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.064280537 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.062462016 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069906304 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.062459274 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.069674076 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.073683549 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.098296256 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.062198758 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.069388996 seconds)
    (222/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.063512976 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.062120509 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.061928474 seconds)
    (225/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.062456903 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.061870863 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.119789612 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.1283765 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.115889766 seconds)
    (230/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.157786176 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160517867 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073887877 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.074253332 seconds)
    (234/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.165748447 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075336121 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.136024591 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.06536817 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.087255103 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.062009868 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13080415 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071075226 seconds)
    (242/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.061450154 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.08819292 seconds)
    (244/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.063425471 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.070727409 seconds)
    (246/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.063030211 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112773941 seconds)
    (248/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061597956 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.061861554 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.061910372 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069850794 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.061885782 seconds)
    (253/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.075734508 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.13453001 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.064139435 seconds)
    (256/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085910759 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.061435023 seconds)
    (258/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.063715869 seconds)
    (259/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06205627 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.063937466 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.062482312 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.061578073 seconds)
    (263/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.064898698 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.084588478 seconds)
    (265/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064336053 seconds)
    (266/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.07441637 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09019159 seconds)
    (268/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.06508892 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.062999308 seconds)
    (270/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.063253456 seconds)
    (271/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065897969 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069339735 seconds)
    (273/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.063380758 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.064572028 seconds)
    (275/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.062602791 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.06873284 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.061686777 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.063819154 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.062502841 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071587655 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.105307246 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.061478848 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.063311344 seconds)
    (284/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070023693 seconds)
    (285/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.061858661 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.061154037 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.083812979 seconds)
    (288/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.062886443 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073301044 seconds)
    (290/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.06255995 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.062793914 seconds)
    (292/309) benchmarking ("sort", Float32, false)...
    done (took 0.129872504 seconds)
    (293/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.061945291 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062590731 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.069538099 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061926404 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.069175684 seconds)
    (298/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.061627295 seconds)
    (299/309) benchmarking ("sort", BigInt, false)...
    done (took 0.237876294 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.064348344 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110376025 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.064244049 seconds)
    (303/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063942187 seconds)
    (304/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.063441149 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.062316665 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070723549 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.133302005 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.0769287 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.063046474 seconds)
  done (took 31.583840267 seconds)
done (took 33.034810669 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08668453 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090057736 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071695986 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.084690683 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.07969054 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095985439 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072138181 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.076780358 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079931751 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078554549 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077473093 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.070755186 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073177602 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.073046564 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071041577 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.086685835 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077001817 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.071897824 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.071533649 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.062867764 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07127557 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062403548 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.062298768 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069829931 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074435987 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.070351923 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072625872 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.071936853 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.06266415 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.063146374 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.067963415 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072275344 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065451172 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.075721894 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072148617 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.07149476 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.072885167 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075890313 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06280564 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.063005323 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.072808499 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062851507 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071050864 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.068972915 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.06873936 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.069745363 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.071520822 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.075485347 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.084696329 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064714195 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.071142747 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072007533 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.073026437 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.066725847 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066097872 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.070075853 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067516868 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.085150938 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07190986 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067047309 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072579385 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072073649 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068753639 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071189395 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071102852 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074053924 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075623079 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069682818 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073528259 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.069799833 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062887836 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.070767853 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.067737129 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062700678 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.073858901 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.075713273 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.062325699 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.066796533 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.070720472 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071168826 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.063314849 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066721678 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06097419 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.066483518 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06645353 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.068456574 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.067868896 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07035827 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062259459 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.071871115 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070038493 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071074242 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062565638 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07611298 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062591221 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.068788576 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.063200603 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062479306 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.062057058 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.067615709 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.062829088 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066716707 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.071813177 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.062077344 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.067915054 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075889757 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.062618942 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.070234803 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.062018636 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.062491834 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.07393815 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073003307 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062723712 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066893019 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061995194 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.068139448 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.062201866 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062103743 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06224442 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062665734 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.067437029 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062656657 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06669903 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.068148238 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076307087 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.062335944 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067318222 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066508865 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062501836 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069043122 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062534429 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.062626616 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.061850389 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.075109444 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065922991 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061871276 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.067311013 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065977486 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.069373533 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.06072673 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.070368401 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067685112 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.210362753 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.070383046 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.063143513 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.07483116 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067477571 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067182858 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.062246853 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062957183 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06223671 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062256453 seconds)
done (took 12.273145703 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.064415172 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.104325447 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.071650231 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.079836549 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.075601642 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064442982 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067977688 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.081954374 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066150006 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.082710835 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.082978866 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.081090881 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.088414165 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.060628771 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.062917675 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064520272 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062426058 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.06984166 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.079222571 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084121476 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.092242115 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062787448 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.072123843 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.078356903 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.074290459 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.082624774 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.064210873 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.064280715 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.066039739 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.079007236 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.086557105 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.063120004 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063828124 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.078335673 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.078033881 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.072072331 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063601925 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.067716161 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063966992 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.06298101 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.065050484 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.078244462 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.06808069 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.072753175 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.064419034 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.064667063 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.064098678 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.067578497 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074779659 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.06773038 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.071550801 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.074947699 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.064067718 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061920668 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060570904 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.066582131 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.063564356 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.064224441 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.063372441 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.0635963 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.063445318 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065181939 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.064037007 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.064168209 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066941803 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.066696217 seconds)
  done (took 6.164901339 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.081109065 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091890451 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.079947669 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.080399426 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.063443393 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063428758 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063272357 seconds)
  done (took 2.07039319 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064517771 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.076755048 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080799161 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08018668 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.073025407 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.081488579 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063861949 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093627648 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.062781525 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.075906185 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.110447463 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081033691 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.066885342 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075120884 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.064102604 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071751872 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063356274 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071588307 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072138193 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077883795 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066557403 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.088979733 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.076692081 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063789006 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.084804762 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068960395 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.063054614 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.064067833 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064767903 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065214968 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064910923 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.1014605 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.068699516 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.078088796 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064853979 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.063547074 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069870406 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067057573 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.067286299 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070343601 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.069469598 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.065166361 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06246035 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064892692 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.066485571 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.06748397 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.062375484 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.065349407 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.065033102 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.07619878 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.062352276 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.068499186 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067637584 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068785474 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069830001 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068515758 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.071600543 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.065181157 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.075992987 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.071764115 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065443517 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.073133054 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073007616 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.069845961 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072565604 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.068198667 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.0678366 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.070862016 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.064931054 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.066055023 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.065801091 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.072830326 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.062975785 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.065953254 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067157567 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.065351322 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.068140882 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08074455 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.080462272 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076537753 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.065282141 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065106658 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067236717 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.080540357 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068759761 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065243913 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.066881707 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063254584 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.068132367 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065393608 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.069648577 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065001358 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072014347 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.066348341 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067419695 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073271363 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.063529678 seconds)
  done (took 8.366507085 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.066984205 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.064140016 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064527058 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063193418 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.062990153 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.063345785 seconds)
  done (took 1.969235071 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.088178114 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.064609058 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.075688221 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.063592862 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.099116454 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.072157466 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.072816441 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073856339 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.077539926 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077032281 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.072165939 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.074557969 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.069853518 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.06495443 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069925995 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.064374328 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.069836222 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066143004 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.074410447 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06466168 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.075696465 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064675542 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.06445097 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.074039991 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065661662 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.063395995 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.062500562 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074199868 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.073842283 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.074092096 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.064602561 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065615652 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070179955 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.071256879 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.070019697 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069863452 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.062722156 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.068444786 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064862895 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.065746437 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.07210548 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064728405 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.065287902 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.068403117 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.071282702 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070553358 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.068716223 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066380893 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.069635778 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.068608877 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.068457944 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.063640516 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.065758886 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.068174014 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07018907 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071127019 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.068482151 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070347698 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.06440421 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.070430949 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.062779923 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.065711885 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07098509 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.065531509 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.068552826 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.068866961 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07049187 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.06440986 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064893226 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.062859809 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.068215755 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.063131635 seconds)
  done (took 6.533538263 seconds)
done (took 26.644869131 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.973696885 seconds)
  done (took 2.503333792 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.558738078 seconds)
  done (took 2.12922166 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.647597446 seconds)
  done (took 8.213941933 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.297907215 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.343659277 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.712747593 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.128603839 seconds)
  done (took 3.083213421 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.707971361 seconds)
  done (took 2.284660593 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.23148256 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.222290709 seconds)
  done (took 2.039411266 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.346536002 seconds)
  done (took 1.916964377 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.082990365 seconds)
  done (took 2.64766176 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.230806665 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.157995225 seconds)
  done (took 1.968812095 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.453062679 seconds)
  done (took 2.025466311 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.325476128 seconds)
  done (took 5.901062598 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.235256356 seconds)
  done (took 1.844997643 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.233149745 seconds)
  done (took 1.810485389 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.706693732 seconds)
  done (took 3.274689186 seconds)
done (took 43.220145799 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081527599 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082163491 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080471085 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076713338 seconds)
  done (took 1.86697571 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.072781891 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.067790978 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.07208608 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.072404203 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.069646176 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.070301158 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.071237964 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.067943179 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.069736129 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.067642453 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.066600486 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.067744608 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.070643252 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.067754205 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.070743762 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.072244223 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.067999114 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.067610276 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.070354831 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067450159 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.070495723 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.066588741 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064194802 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065159108 seconds)
  done (took 3.227398028 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.075741825 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.070296477 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073205286 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.068835852 seconds)
  done (took 1.867449777 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.074818184 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.083741291 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.083848523 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.089021464 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.072086133 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.072449681 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.08017291 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.081446828 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061728895 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.084446638 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063803634 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062611832 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062478557 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.082526926 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.080189811 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058977388 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.060621837 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.073090475 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.071724775 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.07403494 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.063555349 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061241056 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07223478 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.072658268 seconds)
  done (took 3.324540577 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.0766073 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.061756122 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.075786285 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088373635 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.090402395 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061901856 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.076006067 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.089326275 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.136344846 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.061670608 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.068760102 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.061292698 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.10242907 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062119537 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.079880981 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109033799 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.113188539 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.066053514 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094398016 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.063938821 seconds)
  done (took 3.226803657 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074885023 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.067089255 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066832108 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061216694 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.072220146 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.06867393 seconds)
  done (took 2.000681259 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065801895 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064201524 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.06291152 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062669966 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068216519 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.062659062 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061484384 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063360932 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063608223 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.062962519 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062980968 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061403865 seconds)
  done (took 2.342613235 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.157941116 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.06536389 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065808359 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.064448553 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067128378 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.061853797 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076864706 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064972566 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.080222376 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062719906 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062820621 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.064422159 seconds)
  done (took 2.475639509 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.097628561 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12647388 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093685271 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069201193 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165583696 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090823299 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.086584119 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.118784864 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089806597 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.065902707 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08965207 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131070309 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.092366525 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.095019942 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078464666 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120671148 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.105681907 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084166295 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109698487 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078811517 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.067359072 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132835064 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.069290298 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09208197 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100243746 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094852644 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106449592 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128302103 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080468269 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086441385 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079838145 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073167963 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.104393821 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.083227677 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.095492364 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.089872641 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094603148 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081499777 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.082999168 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11598905 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148974189 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096977979 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096425789 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130002558 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.077279541 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.105229645 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078241002 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095793029 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10058644 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09026591 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072682975 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088686999 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103383096 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098684919 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.078958856 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078902913 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113439413 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.094654731 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.091592967 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076441705 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102731869 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.082395801 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102838733 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26469945 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13978658 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098476303 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133434053 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.120930461 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092994354 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.085918876 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.089412511 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.07269899 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106872002 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.095002067 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132309448 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10530063 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096342735 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.093327462 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079119521 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104333863 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110238306 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091188985 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090984123 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141040224 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104724999 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086996664 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087972797 seconds)
    (88/481) benchmarking "5d"...
    done (took 0.14142769 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.069048317 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14358674 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086039135 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116458373 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093788525 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134470584 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087957501 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.08023507 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103201865 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100013844 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.086542963 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099296685 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081038395 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110000299 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08969028 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096970939 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.078216844 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086995866 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083657643 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.094049923 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.071902246 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100318412 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111876792 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111140983 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07405036 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108716006 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085189834 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.075381621 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090122256 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135219597 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080174826 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.071870104 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14433885 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.089016342 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.111296615 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104868659 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.079044383 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.264490313 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135631037 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091567391 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088578562 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076116149 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15419117 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075499263 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118811024 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081378787 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099280319 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101592485 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128823498 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135991524 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092330555 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075191272 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088869116 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 0.102804471 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083708475 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083533884 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073982512 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.10784732 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124011553 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.098725952 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078259098 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.089575482 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066550209 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110895386 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073126486 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081927916 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092341455 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.084915502 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.086680056 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138992433 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.081607747 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10506063 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094852823 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.065070963 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088959823 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14888616 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080322373 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107781957 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114451159 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080981172 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065642569 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.094909992 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.070721572 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10548877 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.089565776 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103699029 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076114222 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103975253 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.06566993 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.071086833 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12555942 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098617699 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08603776 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.128471113 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10086932 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.085308469 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.100221405 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.093207587 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091044391 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.09799816 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.258568134 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105016957 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.072855738 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129933206 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091578524 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.077048792 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087348603 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079291886 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.078160031 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099559843 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115405061 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088777467 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099918575 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103046681 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090235568 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.110017912 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088869605 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078487961 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130181174 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074962551 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.072968701 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087164302 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.104073723 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085334711 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.131097841 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076682242 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133380726 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089380371 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078689743 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.11181812 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066682175 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068347129 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.081154492 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090040224 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112839811 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076368072 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075832167 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115417146 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128765842 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094714652 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099897014 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.065779072 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.088008237 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132031866 seconds)
    (233/481) benchmarking "4d"...
    done (took 0.111263908 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078511431 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107399511 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08256027 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126271278 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.0934426 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116578663 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10337911 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107928944 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.089283994 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.080871272 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.073213118 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087132163 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108539765 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084641373 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080641542 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.067292594 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.072965083 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090317199 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087938207 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107617262 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083737961 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130788863 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.069525071 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096397297 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.257305842 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108409814 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090190521 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096652045 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.092706355 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092045389 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091813271 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09256283 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.073002199 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126549965 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1031332 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078813094 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088853603 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09525893 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106162129 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109502529 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107485249 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090941545 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10416989 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119581877 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095902683 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07998423 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082366502 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.092300737 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.082851892 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078945025 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.102293266 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111829007 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098193677 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107640946 seconds)
    (288/481) benchmarking "3d"...
    done (took 0.091781211 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 0.090368973 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104245106 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090467276 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085882743 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.114840166 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149632335 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.099163223 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.100843253 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082465693 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103849159 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103097792 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110174276 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.107993526 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106273893 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.068268656 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.072534833 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067979015 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103797587 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076388392 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117906108 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076317634 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107333255 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097100216 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079833087 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.066449727 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102132581 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093968753 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.080486739 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120464142 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.110960912 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.070526511 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088288958 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104037981 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080212296 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119067866 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.097931141 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09694094 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.068305538 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086868561 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.070089701 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.262756883 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.099552376 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.075638326 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.07455757 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.06825958 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104611944 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.082644831 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106809589 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086110969 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09797448 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.116341153 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128645922 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084421585 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093693023 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115885507 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109564348 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.079374307 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109723057 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13213078 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.117053672 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.077807591 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.081885404 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103260229 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103698878 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099342943 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073578734 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076591253 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106151663 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110894943 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.065515906 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082181532 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.067982999 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.082045223 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109496122 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092438274 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.080499826 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114590655 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072707803 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104941575 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092856252 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11978472 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119648135 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141512055 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094734258 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083126176 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074352845 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120736459 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.068506559 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114096811 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109753341 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085235883 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.066347893 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081260247 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.093063776 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 0.624430307 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105886703 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.073245165 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132663593 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084404917 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111270316 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081134674 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.113552722 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.085623658 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097484158 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.086739644 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281494041 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.080665104 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107967142 seconds)
    (397/481) benchmarking "6d"...
    done (took 0.170117398 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.108087433 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.105987168 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07181744 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.084666413 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.071145706 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.075793166 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.078963128 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085121508 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106354779 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.082271155 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102839625 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.077198956 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.104163094 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088295947 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.085954525 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.095948711 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078154748 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134864731 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084419433 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11896503 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10395834 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.07615285 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.073038458 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.083882682 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.097946355 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079813354 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091775572 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076708069 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.073557923 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148879204 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099273725 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082409647 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099843332 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088588571 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.084545304 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089356366 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114444704 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10737771 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.070963837 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.085113236 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100964119 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076199804 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.07267367 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094258724 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.067394518 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086766155 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096665975 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093132181 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.087562652 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.100100857 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.075621714 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.084565854 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107439039 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083451755 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.074797545 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.074098414 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074050211 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.073811526 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100958562 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105548806 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110478008 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104952376 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087177535 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089859531 seconds)
    (462/481) benchmarking "2d"...
    done (took 0.07559216 seconds)
    (463/481) benchmarking "7d"...
    done (took 0.216141916 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233135267 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.096622864 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.103046071 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074428493 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.127913554 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08765847 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086073209 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094310713 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097985678 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148431299 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072154904 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106681431 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.091727531 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107518181 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.083858559 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104246193 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094123435 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.089455084 seconds)
  done (took 49.327117782 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.091178897 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.144868891 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.15174178 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078442035 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.091855731 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11535587 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.204473373 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188880159 seconds)
  done (took 2.772724651 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.064738622 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077348141 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099521028 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.078618496 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.062111719 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.063586568 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.201130997 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080158596 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063618125 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099741575 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073149865 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.063926932 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.412016158 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.063265295 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064557118 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073581515 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063519706 seconds)
  done (took 3.390267047 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.359536089 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.604283975 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.338686417 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073998564 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.99030937 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084679965 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.33869118 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132147335 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076654599 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.558767595 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.371039431 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.130553315 seconds)
  done (took 18.758643513 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.073131007 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070956672 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.074122865 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.074090138 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069817506 seconds)
  done (took 2.052556871 seconds)
done (took 98.247355973 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07899351 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.164107051 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063775092 seconds)
  done (took 1.955365196 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.080479243 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.077578064 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.076947359 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074932491 seconds)
  done (took 2.011990741 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070999799 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.072155724 seconds)
  done (took 1.838638632 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.240108235 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.15999899 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088540791 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.079825172 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075993526 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077000573 seconds)
  done (took 1.933433672 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.070647959 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067915533 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.068572014 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068654136 seconds)
  done (took 1.964466753 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.065078605 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062233505 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.06451477 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.067395801 seconds)
  done (took 1.94986277 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.081507452 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079642199 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.074541499 seconds)
  done (took 1.925440476 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.092342146 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093108681 seconds)
  done (took 1.875158861 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.077815624 seconds)
  done (took 1.767989454 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.086205437 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.094153432 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.148157683 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108895579 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.147239097 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.131397702 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074200263 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075248025 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.070093707 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.068627566 seconds)
  done (took 2.694269474 seconds)
done (took 22.173144254 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.074814665 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.367662959 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.355053968 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081835829 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667853814 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.352359165 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.989449164 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.086816132 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.094603333 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06383747 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080081817 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64475798 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.982560754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.322812681 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.967311971 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325207724 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646543928 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.063915315 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.063183012 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064125422 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.976020867 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.063133311 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.063815111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064303842 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645623544 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.403820712 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064643098 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.324751795 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063536277 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066545471 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.352270069 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065841348 seconds)
  done (took 16.116746248 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.067070835 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116472298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.06850392 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.079345728 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066305153 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.064694312 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.067008489 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064611124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.104744019 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06417919 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080685883 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063781679 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068411126 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065497478 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08407082 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064683256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065939833 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065548674 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064293167 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068179553 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082069222 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064147853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065403774 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065946271 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065221759 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.077517231 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066061149 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064981684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064797748 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066849245 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067886827 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066254871 seconds)
  done (took 3.981898221 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11986324 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123672973 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070337325 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102927644 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118065313 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067988467 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.148592274 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.090981755 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.112560414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066976203 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08358888 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.065785661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098857744 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066529999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084597618 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065054151 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066120025 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.064879674 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064574034 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06531353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082929935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064227289 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065422334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065112397 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065974242 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079298894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.066134732 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064790154 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06495442 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067029414 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068782856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065862648 seconds)
  done (took 4.28316664 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.067767467 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.069127841 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075603253 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.077343166 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063299763 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.065282944 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066593005 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06356195 seconds)
  done (took 2.258835394 seconds)
done (took 28.351449103 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.074946507 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.063781321 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067105934 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08331556 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069131125 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066998035 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.060832835 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.069953578 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067417249 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.06778265 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.068415133 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06231811 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.065865298 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.060821025 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.068012827 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.062572004 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.069114056 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.067157578 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.067476843 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.068326365 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.065012436 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068150765 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070472669 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067490563 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.067621879 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067488317 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071906342 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.068087814 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063358811 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065748377 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064703801 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.073448411 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069612328 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.069514373 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.062631035 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062899499 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.067080092 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064615287 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.069773498 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.071779604 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064584436 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.072143273 seconds)
  done (took 4.510528303 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.081967992 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084719371 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077852364 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.076823232 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.094628597 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07787001 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.082304201 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.074215988 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.072470751 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081660264 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.068652675 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.075813004 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.073586297 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067443179 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.071982029 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.069941373 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.07415535 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069314335 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07317876 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.073154584 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.082411996 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.067376698 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.075575015 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.074468459 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.069755518 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.075165002 seconds)
  done (took 3.685678669 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.070345825 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.080326654 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087798681 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143092749 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107445379 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.075440017 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.076218245 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.089597825 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.092468262 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063946079 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067335902 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.089919798 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.0901107 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.072214723 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104735355 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082313959 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.07940796 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066042161 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070265068 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092545492 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085427438 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083674479 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091344707 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.079581615 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063012885 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.065890421 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.069932768 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.078452532 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072510194 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.07549413 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.06789109 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.066986413 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.064047305 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.07508753 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.069337633 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.064646757 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089222889 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075675195 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076304389 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.105354306 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071815278 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.064292484 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091219294 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125162421 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.064874288 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.068489054 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.068796691 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077107826 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.0642967 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090939014 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077089164 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.062700539 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.063727055 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.064555759 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064036063 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078137023 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.064866193 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.064819469 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.074087708 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.068748588 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084433259 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068257588 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082154819 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06291657 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.072968079 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.064609834 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.064437185 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062308108 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093561213 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069923782 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110692025 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065833608 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.062719615 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075369544 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.073766195 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.069139443 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.063207048 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080479698 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073729343 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.066651842 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074209077 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.065903097 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.065968876 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093939473 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.063260198 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.062484921 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.062333348 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067570236 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068177839 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065535293 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.078699291 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.063393172 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067234075 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.07919598 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.064650565 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.064368847 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.067926917 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.065769069 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.062366453 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075570436 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.066743568 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06397096 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07431354 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.063867494 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066058799 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076411246 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.069989297 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062470106 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.065321298 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065943858 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064220233 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.066823592 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.065806816 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065836531 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.070161822 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.07005262 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068305616 seconds)
  done (took 10.405568476 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160102723 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.148567845 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.066489234 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144955076 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.074147187 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.071061234 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145366255 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.085457658 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066180427 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.066412555 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065545119 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.095494775 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.091041783 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.103417469 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.069973906 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.065999199 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088968132 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.098442215 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147653488 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.143398499 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.087808351 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.070919306 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066560618 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.067432194 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067576859 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074085087 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.083548734 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.074639257 seconds)
  done (took 4.351980687 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.076186955 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.090594622 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.06899503 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.075556575 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.085630777 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066426171 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.067374504 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.067670238 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.0798786 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07512214 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.066189279 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070446525 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.069351364 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068970789 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.066329256 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.072068144 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.072353285 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065351578 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068051557 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069085441 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074300689 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088714727 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068248115 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.064567888 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.068069336 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065407686 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.074085059 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.077704889 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.06557131 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.081109928 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062763737 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.067779507 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077436802 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.064439754 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064190954 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064018748 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.063499463 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06361718 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.064003477 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.06395898 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063884284 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.068926154 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.062726733 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.07151671 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.077049784 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.070498437 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.066197177 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066263402 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066276155 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061311208 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066170774 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.06607582 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.065660647 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.070349862 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.066980691 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.06650772 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067050839 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088565441 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069621592 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063359424 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063064273 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.06230385 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.066098978 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.073561883 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079994449 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.066263136 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062864636 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.064444325 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.071457122 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.079183183 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06539223 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070364314 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063521868 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066303772 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068333484 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.067858687 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067110291 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064391277 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065009573 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066024092 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065070054 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065297346 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065899628 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.067922851 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064177364 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064444551 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.065907072 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067534229 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.074969082 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06520437 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.069745179 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.066446314 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.064460608 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068143756 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071414715 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068264504 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079194672 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.076919037 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066079858 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064061125 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078715182 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.068273575 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065121957 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.071803227 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.069513285 seconds)
  done (took 9.010823856 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089148142 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.06718389 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.081918287 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.087283176 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.073947833 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.068619139 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.074814891 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.064920686 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.079555972 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.063051343 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.071929732 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.063187117 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074628309 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073692449 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.065316818 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073988735 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.066502568 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.080349572 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.077789808 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.062221405 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.072553548 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.075947976 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.07535459 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.077497189 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.076798857 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.078325266 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.075835522 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.066138636 seconds)
  done (took 3.822065773 seconds)
done (took 37.484693425 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.787970776 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.966925546 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.781380887 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.008776191 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.997413221 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.909849542 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.892317922 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.778064093 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.013446028 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.835116105 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.09426655 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.26406903 seconds)
done (took 66.104610861 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.796569321 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.943588052 seconds)
    (2/2) benchmarking "String"...
    done (took 2.034852473 seconds)
  done (took 5.697261497 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.09385151 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.581201387 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.046151232 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.781251908 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.783854703 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.225202619 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.577367085 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.239265794 seconds)
  done (took 30.951676139 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.889907427 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.012863773 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.449794195 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.489782727 seconds)
  done (took 15.601194586 seconds)
done (took 63.948307265 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.815366505 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.784561133 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.805683647 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.819425908 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.787436641 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.779032682 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.784309961 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.783201431 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.797048392 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.85504383 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.777168552 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.788577087 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.781240604 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.79233222 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.549734555 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.840391705 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.794131487 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.792930174 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.803725485 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.819417999 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.783900745 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.784448725 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.258381642 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.965207625 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.392776903 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.022524483 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.311822736 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.192203133 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.790704561 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.780464609 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.858116622 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.040054014 seconds)
  done (took 204.646303006 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.783901801 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.781764118 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.84145258 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.783319223 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.270540476 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.953370201 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.884206588 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.304420443 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.781401802 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.794782881 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.997156691 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.78038372 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.031133163 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.72204901 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.82201374 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.828522993 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.901169367 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.020626172 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.822460812 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.935930862 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.801116799 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.857787269 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.802748262 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.972739004 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.823149719 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.857319263 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.791521568 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.795512049 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.971389166 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.88447001 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.789303229 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.806168442 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.949975746 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.651460629 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.785258286 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.788641452 seconds)
  done (took 170.089988731 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.982210501 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.791016576 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.78498436 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.840256153 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.90329422 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.785919893 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.426173392 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.790945556 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.239842446 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.790516951 seconds)
    (10/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.785010203 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.784025073 seconds)
    (12/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.787161214 seconds)
    (13/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.785186229 seconds)
    (14/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.796475073 seconds)
    (15/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.861616403 seconds)
    (16/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.784319489 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.800240723 seconds)
    (18/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.787713153 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.812657605 seconds)
    (20/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.78217545 seconds)
    (21/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.784073495 seconds)
    (22/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.784336289 seconds)
    (23/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.783708466 seconds)
    (24/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.786579572 seconds)
    (25/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785045875 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.785179262 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.031612177 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.025895313 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.784742867 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.786215713 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.312050844 seconds)
    (32/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.785981397 seconds)
    (33/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.798771552 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.785336824 seconds)
    (35/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 21.912205045 seconds)
    (36/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.878106447 seconds)
    (37/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.838958735 seconds)
    (38/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.901708893 seconds)
    (39/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.786919439 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.004771579 seconds)
    (41/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.859687576 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.782766058 seconds)
    (43/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.785777446 seconds)
    (44/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.849482056 seconds)
    (45/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.795912223 seconds)
    (46/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.783589515 seconds)
    (47/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.788333621 seconds)
    (48/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.791291618 seconds)
    (49/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.852292225 seconds)
    (50/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.052363409 seconds)
    (51/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.788049301 seconds)
    (52/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.907913541 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.273077339 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.788925861 seconds)
    (55/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.785641263 seconds)
    (56/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.787254898 seconds)
    (57/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.787810312 seconds)
    (58/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.388040521 seconds)
    (59/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.788153787 seconds)
    (60/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.78730542 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.793531854 seconds)
    (62/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.791825506 seconds)
    (63/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.786581698 seconds)
    (64/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.788803403 seconds)
    (65/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.175100319 seconds)
    (66/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.856344849 seconds)
    (67/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 21.940473623 seconds)
    (68/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.024827358 seconds)
    (69/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.791737329 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.435218338 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.914170163 seconds)
    (72/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.78442741 seconds)
    (73/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.787352828 seconds)
    (74/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.787665875 seconds)
    (75/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.789218241 seconds)
    (76/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.788163608 seconds)
    (77/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.787642467 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.905577499 seconds)
    (79/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.785707418 seconds)
    (80/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.790768908 seconds)
    (81/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.911645186 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.865363583 seconds)
    (83/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.902345504 seconds)
    (84/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.786108149 seconds)
    (85/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.796957133 seconds)
    (86/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.605078699 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.852741146 seconds)
    (88/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.818379108 seconds)
    (89/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.610437044 seconds)
    (90/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.786167079 seconds)
    (91/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.158602629 seconds)
    (92/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.56436505 seconds)
    (93/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.785473717 seconds)
    (94/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.783144164 seconds)
    (95/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.798052708 seconds)
    (96/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.783656305 seconds)
    (97/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.785810481 seconds)
    (98/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.790757894 seconds)
    (99/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.866069999 seconds)
    (100/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.784974013 seconds)
    (101/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.908168421 seconds)
    (102/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.509228387 seconds)
    (103/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.011644583 seconds)
    (104/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.973403571 seconds)
    (105/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.781875584 seconds)
    (106/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.787461695 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.871089813 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.939056252 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.778194465 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.8448752 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.782984204 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.776901969 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.923033203 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.778198797 seconds)
  done (took 401.831087258 seconds)
done (took 780.326755686 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.34722877 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.323104431 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.426614004 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.333272169 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.312137543 seconds)
  done (took 13.45715999 seconds)
done (took 15.17282684 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.791122054 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.783130948 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.842124132 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.863743008 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.792702562 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.797437624 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.862479299 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.796236919 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.82760503 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.831238776 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.862857666 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.863539736 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.799230808 seconds)
  done (took 25.429013451 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.788006852 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.928643179 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.018840642 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.820933663 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.788871255 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.01452869 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.843980561 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.920894862 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.931366012 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.007815835 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.012450831 seconds)
  done (took 22.7931034 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.7867658 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.933697586 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.025178196 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.820993092 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.784650926 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.008934844 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.847876816 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.924964319 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.93236752 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.015298432 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.049501915 seconds)
  done (took 22.854216447 seconds)
done (took 72.792272361 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.77634618 seconds)
  done (took 3.487965877 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.80882869 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.945633813 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.777917691 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.776315617 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.777233279 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.77969465 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.775893959 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.779202129 seconds)
  done (took 16.133204474 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.777088229 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.776024436 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.777526641 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.776412692 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.777294953 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.775987313 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.778883694 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.776810774 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.779285553 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.777735999 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.777436158 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.778640716 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.778857651 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.777194687 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.777733022 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.778331891 seconds)
  done (took 30.155138064 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.779610763 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.779258097 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.778572271 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.778720475 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.778870669 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.77745725 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.778703091 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.777803473 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.779501325 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.779933496 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.780930366 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.776503015 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.777559856 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.779672586 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.778426337 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.783124547 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.779195023 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.779624251 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.783010405 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.7775753 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.778517154 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.778923898 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.783251523 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.779290124 seconds)
  done (took 44.419473408 seconds)
done (took 95.916726003 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.559495092 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.534650855 seconds)
  done (took 9.807768183 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.779475225 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.777665619 seconds)
  done (took 5.276064234 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.777744582 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.781767967 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.777324638 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.778369587 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.781302751 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.778659104 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.777859 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.778605869 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.779719568 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.776913678 seconds)
  done (took 19.504241889 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.778457591 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.777963987 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.779634563 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.779349828 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.783047536 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.771692708 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.775508943 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.773827524 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.775085333 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.774132893 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.775459549 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.770712159 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.77133872 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.771647497 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.771763545 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.771587589 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.774919635 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.771591057 seconds)
  done (took 33.662041333 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.769717696 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.77155843 seconds)
  done (took 5.242215664 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.766764673 seconds)
    (2/7) benchmarking "second"...
    done (took 1.769276086 seconds)
    (3/7) benchmarking "month"...
    done (took 1.771969578 seconds)
    (4/7) benchmarking "year"...
    done (took 1.770804875 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.769743674 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.77198295 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.771465873 seconds)
  done (took 14.095981094 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.771960991 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.922448346 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.982877353 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.615757955 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.772778059 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.772159462 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 3.098223038 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.77687153 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.773669909 seconds)
  done (took 20.186445968 seconds)
done (took 109.489354045 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.610030191 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.766979407 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.046270289 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.887881388 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.782846098 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.059738473 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.805842926 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.045520879 seconds)
done (took 42.70552548 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.790719893 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.764131907 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.792562043 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.795087001 seconds)
  done (took 22.051461592 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.766352749 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.106265805 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.789119578 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.616253821 seconds)
  done (took 21.993038993 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.148419367 seconds)
    (2/2) benchmarking "read"...
    done (took 2.115661696 seconds)
  done (took 5.968738418 seconds)
done (took 58.501517209 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764825604 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.765586653 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.767303563 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.764584641 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.764347149 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.764054023 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.764450034 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.764660039 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.764411406 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.764879269 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.766273991 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.765798397 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.766983406 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765243807 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764144656 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.763346546 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765029563 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.766858155 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765484614 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766664442 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.765610089 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.764478476 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.767223092 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.764754008 seconds)
  done (took 44.064246115 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.76557446 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.764433384 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.766971253 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.768251371 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.767190699 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.765147289 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.767175692 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.76332707 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.76531444 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.765660472 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.766627441 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.765881115 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.766430722 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.764795555 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.765342803 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.766281931 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.768168033 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766538198 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766067196 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.766391874 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.766844171 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770384162 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.765810064 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765428596 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.765038108 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765096461 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.764571391 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.766617388 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.767631384 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.763569792 seconds)
  done (took 54.684663538 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.766354773 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.764379523 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.767578959 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.766035928 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.767164577 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.764334356 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.766078325 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.766560641 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.766562405 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.767543728 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.766290526 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.766563629 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.766246162 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.767776059 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.767057892 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.76797487 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.766310028 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.767647476 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.767439022 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.769505278 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.765982812 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.765825687 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.766628031 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.767194884 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.770472031 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.762907773 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.765427048 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.766166461 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.76359113 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.764603608 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.766047581 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.767719962 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.765418101 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.765109779 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.765160524 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.764819512 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.767317975 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.765649936 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.767359778 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.767038496 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.765982106 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.766363874 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.764412235 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.76786027 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.765457028 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.765634039 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.764148996 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.765546351 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.765246493 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.766197512 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.765424354 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.765598062 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.763201288 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.767744325 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.7639835 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.766595591 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.766521022 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.765637594 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.765595772 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.761890861 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.766954209 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.764166281 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.767347437 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.764124201 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.767952202 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.76809216 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.765771544 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.765681609 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.767760892 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.763787194 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.768979177 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.767942037 seconds)
  done (took 128.864575921 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.765783999 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.764614453 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.769685335 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.763145185 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763607316 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.76420078 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.765391082 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.767766019 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769636935 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.765967666 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.766610459 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.768185273 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.765454481 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766048699 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768387719 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.76555747 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.764275387 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765128196 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.766113268 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.770145286 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764445478 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.764267766 seconds)
  done (took 40.552406423 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767428429 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.76526161 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.76646299 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.769053549 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.767867207 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.766022565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.769757079 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768056254 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76870295 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.767170056 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76760093 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.768924399 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769046173 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770659709 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765605823 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76832649 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766044909 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.765461678 seconds)
  done (took 33.517851361 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.768586369 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.770254739 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.76680841 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.767970272 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.766438148 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.7694795 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769068739 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.767564438 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.767944037 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.76943644 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.768136458 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772453952 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.766062568 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769400615 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771102222 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.76837794 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.76971985 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768803971 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768291982 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76835845 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.767418746 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769686903 seconds)
  done (took 40.61313505 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.769292918 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.768402713 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.768698217 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.770596206 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.770194293 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.771684088 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.768393198 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.768052554 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.767716209 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.772163673 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769397738 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.770153595 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.771076888 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.76804195 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.769804192 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768987457 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.770714037 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.772721455 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770430241 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.771104371 seconds)
  done (took 37.101975573 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771821342 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.771783567 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.770444857 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.77026563 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.769367817 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.771232363 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769169415 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.772463861 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.771222256 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.773170775 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.771486371 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.772645203 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771074493 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.774005963 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772437658 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770659281 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.772450525 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.772120624 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.771551882 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771381224 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.771967986 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.771815308 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.773070849 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.772334351 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.773851572 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771344987 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770706268 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.771270072 seconds)
  done (took 51.307371698 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.773210968 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.770468292 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.771417088 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.770357402 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.772165143 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.77274149 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.774103825 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.772372484 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.770392066 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.771291208 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.770000873 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.770786573 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.772624979 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.770730978 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.770595657 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.772723142 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771587647 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.772038048 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.773959669 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.772336664 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.772191283 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772611329 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.771514602 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.774423467 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.771737755 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.771989237 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.772241502 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.774095216 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773936523 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77227403 seconds)
  done (took 54.865901981 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.794354886 seconds)
    (2/2) benchmarking "in"...
    done (took 1.796582439 seconds)
  done (took 5.293405963 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.773205319 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.77541947 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.77366824 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.773204362 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.77439106 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.774332501 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774385599 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.772379613 seconds)
  done (took 15.895774736 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.774982428 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.779857167 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.773920551 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774195253 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.774044397 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.783183792 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.774905475 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.776873682 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.77798296 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.77591321 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.77719854 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.77695778 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.780117892 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.779041805 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.778203629 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.774150427 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.775925225 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.779040596 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.777258311 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.771056369 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.779453077 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.775761742 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.775723629 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.774626874 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.777036423 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.778628073 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.784579274 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.777247655 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.777613353 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.776305062 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.785857358 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.778849104 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.775097922 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.776107386 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.777077656 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.775138372 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.782243199 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.778496574 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.77737581 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.775888599 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.781728077 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.777531017 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.782530285 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.785055417 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.776480102 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.773549756 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.777501561 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.775833403 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.777824191 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.779438108 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.783389132 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.776636622 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.778275841 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.776400901 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.779367367 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.776875291 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.780456396 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.777498383 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.784018805 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.785499206 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.781969169 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.795262093 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.7847185 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.775890396 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.778801972 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.787563159 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.795516036 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.778293322 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.778352949 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.775735641 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.784121654 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.777983783 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.778343929 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.776994016 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.789661363 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.785189785 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.784863165 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.77629147 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.775998554 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.777393951 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779857752 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.780438115 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.779211085 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.780004317 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.784325198 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.797991885 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.777551316 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.783873305 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.779103766 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.7798117 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.78238156 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.782190153 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.777188577 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.780215569 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.780814295 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.780519857 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.781192435 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.780917516 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.779119702 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.787122495 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.779933889 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.77634226 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.779408094 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.786762526 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.780499441 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.776875759 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.779387533 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.778942622 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.783315131 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.77955047 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.7798457 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.779087633 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.780297163 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.784547815 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.778240368 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784981315 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.787620915 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.786574761 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.784256872 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.782770053 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.786788568 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.786549039 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78769231 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.798205079 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.781585496 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.783590253 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.788018065 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.786756332 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.784143358 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.780951833 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.785538791 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.780848595 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.78330814 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.782880337 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.78166181 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.781520162 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.780688386 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.782249134 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.780790397 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.78142942 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.784306799 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.785039288 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.784617892 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.785084886 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.786054464 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.783856653 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.785819414 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.789678627 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.782703761 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.783780794 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.783619166 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.784008035 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.785177822 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.784599479 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.782849672 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.783676289 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.785228908 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.782770846 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.784784071 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.786127885 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.783170749 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.783789664 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.788495027 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.784370221 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.783962795 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.785354803 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.786986664 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.783701071 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78619934 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.785134149 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.789615091 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.784991273 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.78759348 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783789383 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.780347052 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.784964823 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.785194882 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.785849466 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.785316283 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.793121263 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.788040268 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.79146162 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.784271525 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.789525513 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.784577929 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.786195829 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.783381771 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.784564124 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.784588143 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.784795062 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.785506576 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.786655225 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.80141836 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.793871458 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.789866013 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.785514076 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.787632013 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.788707126 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.790368535 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.78685683 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787954411 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.78635481 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.787100434 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.784173426 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.785192745 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.789813901 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.785177318 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.785005206 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.789423974 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.784594894 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.788522872 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.784896835 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.785953799 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.783428858 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.786684633 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.784120555 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.785529119 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.785798147 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.792392636 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786906694 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.782859708 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.785861821 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791943596 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.787246505 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.784527397 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.782510523 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.789990252 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.785949327 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.786478898 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79306142 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.784920429 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.787685604 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.784907744 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.78717384 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.787550811 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.785551066 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.78757351 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.792676842 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.791104214 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.783803832 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.791062251 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.785554892 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.788488742 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.784583157 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.788711858 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.787792313 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.78844759 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.789189764 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.788392036 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.795604995 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.789046334 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.787230775 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.788712423 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.789983484 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.788165745 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.793646932 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.789062153 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791577853 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.795290014 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.792135507 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.787603503 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.794136709 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.787020615 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.786319147 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.789098862 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.788834639 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.800112118 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.794773679 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.787492573 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.78801434 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.788129336 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.793044146 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.792754982 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.791295765 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.795273759 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.788871523 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.787553393 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.791531883 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.789680487 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.788220316 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.79736318 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787388134 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.792355982 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.791270254 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.78991745 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.791355715 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.789501995 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.791828108 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.788110995 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.791648248 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.792081766 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.788248725 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.791540487 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.790787822 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.7971371 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.786929637 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.790445587 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.79707528 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.79050743 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.790492356 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.793124401 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.788640513 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.789782183 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.791643819 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.789713549 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.788645417 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.79015161 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.792569785 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.799781432 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.792773593 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.795698885 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.792326273 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.797791552 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.789320695 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.788336331 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.78734244 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.791763642 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.797605724 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.788496192 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.78937093 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.79987466 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.790168908 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.794137513 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.794353636 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.792527381 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.790265787 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.789089401 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.789615223 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.794805415 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.796226541 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.79009444 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.790104643 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.790097367 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.79176018 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.794832607 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.792470255 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.793588922 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.79463573 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.793305969 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.799330753 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.789693007 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.7888007 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.792239156 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.791325847 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.791370794 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799916834 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.792927781 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.793446205 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79355415 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.792259115 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.803413307 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.793847617 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.792417523 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.790451416 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.792200817 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.793214866 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.794267172 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.794236913 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.79454714 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.79377726 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.792875259 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.801372359 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.800921485 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.795897915 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.794936358 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.792629287 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.794857401 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801142811 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.8102801 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79398809 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.793692458 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.797977546 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.802980751 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.795786512 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.798086585 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.793578238 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.802481864 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.794979393 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.795517009 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.795438546 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.80412853 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.791395176 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.790536309 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.792586023 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.799189364 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.795292232 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.792018463 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.797847175 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797131675 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.795931993 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.805642619 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.794724833 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.795765725 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.796572384 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.793583079 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.794922861 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.79330469 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.795521918 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.799397506 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.798032175 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.798598868 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.799496612 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.797735628 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.795501913 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799013223 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.802011418 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.798674439 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.795043692 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.796251658 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.79533388 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.798479934 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.794436319 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.794058637 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.798121337 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.796982586 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.795682976 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.798194982 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.802546112 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796335141 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.795643946 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.79458716 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.800089182 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.795288502 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.795329243 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.799401389 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.804235468 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.800698669 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.806458716 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.805160505 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.796920887 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.796129971 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.802046691 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.803351699 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.79583048 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.799168842 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.795255884 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.800684659 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.79836378 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.799973645 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.800865807 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.79918695 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.799550927 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.798155803 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.79688499 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.799584284 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.796404958 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.799374844 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.79843665 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.801429829 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.797889995 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.797486299 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.795361374 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.796364435 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.797945479 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.800388686 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.797639829 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.797357442 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.801295946 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.79843729 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.800064747 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.796727201 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.796402169 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.798740546 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.79704432 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.795516682 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.795875216 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.796744754 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.799414873 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.802482697 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.800832051 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.797180392 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.800085157 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.800871094 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.800518137 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.799975669 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.798267894 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.797994661 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.796911742 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.806367924 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.798411354 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.798118181 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.79806759 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.800251463 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.8049456 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.799641039 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.803441342 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.79768526 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.797589289 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.798303084 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.802736347 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.806373577 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.803815749 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.800927492 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.804590772 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.804438784 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.802615336 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.800226497 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.797491046 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.798718012 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.800256954 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.80613552 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80164305 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.803516921 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.801108287 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.802959708 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.800097213 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.801614586 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.798887473 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.799964348 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.80268027 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.806351423 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.809093566 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.798691491 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.802271055 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.799844462 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.80397104 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.807817389 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.802919577 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.797960121 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.800058453 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799815421 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.803410992 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.807416267 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.806798143 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.80421203 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.799387773 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.804276894 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.815876309 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.806934311 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.807012965 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.828301548 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.80099531 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.802507766 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802955325 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.804692122 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.802087458 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.803175982 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.804472562 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.809025457 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.800290718 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.801916528 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.810931357 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.802082011 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.802346234 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.802923244 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.802150832 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.807879348 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.800075983 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.807399115 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.802320269 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.804814148 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.804432655 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.803573047 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.799329883 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.802486211 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.800772439 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.806811487 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.801969623 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.803226674 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.812028399 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.802677543 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.802896477 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813425701 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.810052435 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.804267309 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.804111552 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.803548946 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.809583555 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.808829018 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.801344452 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.805266667 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.808372513 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.808639396 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.806633849 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.803698226 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.804890662 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803614753 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.803373581 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.802288565 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.812473671 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.814141329 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.803807265 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.804506818 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.81173499 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.797567995 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.810414905 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.810557248 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804811794 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.805403216 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.807297595 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.803801084 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.802749809 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.804539796 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.805046593 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.812679661 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.803139235 seconds)
  done (took 1069.663728894 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.803038722 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.805980751 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.801842335 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.805041369 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.804720026 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804470253 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.804896033 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.806145223 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.803765807 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.805815064 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.803716537 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.803413206 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.80245802 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.804870808 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.806815352 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.806630564 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.80224644 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.805609493 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.806106758 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.804842485 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.807017221 seconds)
  done (took 39.634642725 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.803676344 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.805727897 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.802249222 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.805019272 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.803805389 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.803634827 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.802615491 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.804809461 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.804633545 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.805702533 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.801744476 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.80362876 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.803899816 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.804425354 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.802768336 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.804866006 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.80336296 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.806105886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.80482492 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804807576 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804125445 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.805364123 seconds)
  done (took 41.425679865 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.802453372 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.806690733 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.80542344 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.807605991 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.80407184 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.806698587 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.803218644 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.807729056 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.804934388 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.805084466 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.811823179 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.812259103 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.807431963 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.806633839 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.806149417 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.807163171 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.952102759 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.805095895 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.806885899 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.806726408 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.806930476 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.81396457 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.806105135 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.807032358 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.807548753 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.806616606 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.805704809 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.806722663 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.808692741 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.804016265 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.811870972 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.808128856 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.808651771 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.808595663 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.807943354 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.80646989 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.813679629 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.809118399 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.806676609 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.807085707 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.814811327 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.82740864 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.809177478 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.809633119 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.814231936 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.806789197 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.809797262 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.811867081 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.81339195 seconds)
  done (took 90.489136518 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.808450588 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.80773432 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.810604904 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810154173 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.809837561 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.808907904 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.808119686 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.807462494 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.811262744 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.811296444 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.809909132 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.807462007 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.808759468 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.81211729 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.809350934 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.811695624 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.80913204 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809380068 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.80895338 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.812332395 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.810857824 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.811038108 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.81024423 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.812446923 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.812696174 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.809793352 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.811718068 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.810954699 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.810851535 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.810727008 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.811244304 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.81237958 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.813726358 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.809943324 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.813108406 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.812858903 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.809588906 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.811723346 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810005838 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.811991083 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.811694853 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.812660838 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.808382702 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.811247684 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.812061609 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.810647761 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.812654296 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.809338233 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.811388836 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.809038763 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.81125744 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.81140581 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.813068478 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.813679761 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.812082517 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.8120041 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.812636466 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.815263556 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.810177941 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.809120371 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.811413855 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.812456807 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.81047817 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.817216497 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.810475563 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.812370574 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.81210483 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.812576341 seconds)
  done (took 124.887220442 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.809170894 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.812532018 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812451671 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.811616792 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.813812357 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.816338142 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812879594 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.814035601 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.813024901 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.813678568 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.81240322 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.811445791 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.814254205 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.812706967 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.813831346 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815205213 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.812849604 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.81642569 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812455176 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813238519 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.813393023 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.810758475 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.814627929 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.810405449 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812771853 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.812155862 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.810623521 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.811920321 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814202561 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.815057164 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813262836 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.81340333 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.810949645 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.81408934 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.813563064 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.813254862 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.812731356 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813180831 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.816230215 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.81377838 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.815014181 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.814319142 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.814240263 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.813900673 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814001286 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.812923818 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.814999747 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.813211222 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.811039246 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.810952362 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.812848951 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.814058456 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812832714 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812734201 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.813572583 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.813411426 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813216627 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.813611541 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813814725 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.814792065 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.817592927 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.813437183 seconds)
  done (took 114.168152558 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.813346898 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.818657969 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.816697989 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.814110815 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.81209597 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.813624681 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.81390327 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.815720449 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.816494012 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.817228829 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.815646605 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.815414402 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818202559 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815533215 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.817599306 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.816766058 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81614178 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.81596178 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.815814238 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.817890702 seconds)
  done (took 38.061176694 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.815160462 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.813787232 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.81596282 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.815817345 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.814434502 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.814417526 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.814430159 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818116984 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815962953 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.814503693 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.81710637 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.814853657 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817013568 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.816021711 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.814783278 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.815705546 seconds)
  done (took 30.793223196 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.814615071 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.817414585 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.816724854 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.817842098 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.815568331 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.816087409 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.814760292 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.816775715 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.815476205 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.817554856 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.816370051 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.817271796 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.816965311 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.815761134 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.814262534 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.816698418 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.816234192 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.815188602 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.817134766 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.818738646 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.818445087 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.817626413 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.815673858 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.818045008 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.816413113 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.817284651 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.819061618 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.818357934 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.818523575 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.815772215 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.816277641 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.81747568 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.818087118 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.818645145 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.819829085 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.817934916 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.818547094 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.820965174 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.81593167 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.817905266 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.818715242 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.817112257 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.818969523 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.817996792 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.818837587 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.819066272 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.820332116 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.816301108 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.820057832 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.818314535 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.819913517 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.821639114 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.818640778 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.819325285 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.819281146 seconds)
  done (took 101.713924944 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.821116621 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.820072053 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.820687742 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.819553424 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.818935322 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.820759122 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.817255821 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.820631648 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818582573 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.821467258 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.819121177 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.820010413 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.820066999 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818912033 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.820399781 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.820363385 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.820895261 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.821885458 seconds)
  done (took 34.508803838 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.820450804 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.820257497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.818522184 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.818933861 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.818485244 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.819368858 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.820005908 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.819146099 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.819656792 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.820671381 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.821123516 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.821474371 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82037966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.819834466 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.821060932 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.820511031 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.820834448 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.820441536 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.819667988 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.822149516 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.821089685 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823372929 seconds)
  done (took 41.797599973 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.819607224 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.81926134 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.833815317 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.837724602 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.839131673 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.850864629 seconds)
  done (took 12.749525777 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821474212 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819339706 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.821971948 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820710947 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821598488 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819689649 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819964508 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821842315 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823383168 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822178464 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820261367 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823495102 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820279315 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821714241 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825248837 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821223021 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821258874 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822863799 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82095761 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823764005 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817695348 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820729807 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.8239742 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822130357 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821337948 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823177933 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821297485 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823876504 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821117402 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823308548 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822285223 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8235906 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823725483 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823806827 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823033057 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822565528 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821897739 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820297313 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82136541 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822682632 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.821604023 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821391904 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821895294 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.82099715 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823597064 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824083088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822505427 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.824770552 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822334487 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82466946 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820451808 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822317452 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822709903 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821605629 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819804567 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822514196 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820805435 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823317996 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822076179 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822564483 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819836113 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820922176 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824268537 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822953143 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823063594 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822680188 seconds)
  done (took 122.009506678 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824587662 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823759795 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825017152 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824702598 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822518548 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821601524 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823953672 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.824438467 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822173109 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823072344 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823643846 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823434867 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824832209 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.827420875 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824467337 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824313927 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825005514 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.826386042 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.828884364 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824694686 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825126297 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824299435 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825807685 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825225751 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826933558 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825585643 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.827548624 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825176425 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826244604 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826702133 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824784264 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824976326 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.824065544 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824888608 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825482904 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825965199 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82612621 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.825393689 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824101492 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825132873 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828070442 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.826868499 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825219989 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.825688904 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825412851 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826591929 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828308352 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824189763 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82452903 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827143906 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826744105 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.828602698 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.827345911 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826441614 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827898458 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.826310418 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826379163 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829157995 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826422428 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825612279 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.828363702 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.827690438 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826929325 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826029105 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.829382228 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.826491704 seconds)
  done (took 122.250117356 seconds)
done (took 2492.617478954 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.860264916 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.845181116 seconds)
  done (took 15.46213859 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.993636712 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.94578792 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.833110432 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.870383335 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.82786509 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.853193002 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.850985576 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.827761356 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.830181327 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.830912676 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.830398233 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.013886498 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.884285787 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.82802262 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.832319924 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.924425971 seconds)
  done (took 51.739879772 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.835873547 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.835719743 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.845277273 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.835180796 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.834580916 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.845077465 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.862036487 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.841438469 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.867137305 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.847274453 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.899007138 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.843870799 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.836498883 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.883625348 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.844721793 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.84968789 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.931553755 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.911177716 seconds)
  done (took 35.20930965 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.911250886 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.836006598 seconds)
  done (took 10.513724435 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.845815077 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.852013523 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.863918796 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.859445742 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.840713706 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.845229667 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.857383469 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.846660982 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.829149163 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.838255042 seconds)
  done (took 70.242601409 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.837925941 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.836331269 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.837208743 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.832909104 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.830746822 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.83162723 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.835211349 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.834319442 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.500698226 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.868524564 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.839616289 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.844144155 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.832486731 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.835363452 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.831729376 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.859534095 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.974111933 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.829713911 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.830092532 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.840424901 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.832996646 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.882987403 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.846482776 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.830196711 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.865144167 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.500520186 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.841681791 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.843389743 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.940409521 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.831315222 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.835284994 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.044917412 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.84187965 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.293596917 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.097115781 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.836864837 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.843591053 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.837898948 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.83124954 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.954134469 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.837468287 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.839868457 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.825243339 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.072872557 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.930329153 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.877177108 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.157800222 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.836758932 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.834007747 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.867958755 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.836167387 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.832938666 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.852808269 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.354555882 seconds)
  done (took 130.913315836 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.83463211 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.176105669 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.996214234 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.835300747 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.113294557 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.034632354 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.830701222 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.87466019 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.833510466 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.054473037 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.084678747 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.93491205 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.832057967 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.833390333 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.830887574 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.83044022 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.984132473 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.898544445 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.833908069 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.829910933 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.860734653 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.070491603 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.949135741 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.833677061 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.858009501 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.040425751 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.953446457 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.933932969 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.629872871 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.833682197 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.894211299 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.83301668 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.83403643 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.83006097 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.987068584 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.924110268 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.909504914 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.832264538 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.832454028 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.828459355 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.491229355 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03035281 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.926038708 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.95919619 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.078610949 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.033206562 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.607187827 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.833167423 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.563918324 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.998629661 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.061446628 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.06101594 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.952539595 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.833827739 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.086796802 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.83292729 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.833706163 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.078957772 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.054765296 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.929665522 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83877965 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.833531851 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.832408157 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.070981136 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.84108471 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.928795479 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839202643 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.83486807 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.927461945 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.937273614 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.065811716 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.041891184 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.864926062 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.169301159 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.339319669 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.080085788 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.897322853 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.082084751 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.83836537 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.83273934 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.910389124 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.677879666 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.084737779 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.075487812 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.078364257 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.86674524 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.553382864 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.838453774 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.05899421 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.054314709 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.097972988 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.081278922 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.065818696 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.156443121 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.83986081 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.836287266 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.080498972 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956745369 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.837928561 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.184843183 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.064767706 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.395509474 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.861152538 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.142492251 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.966093387 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.838078385 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.466567076 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.839392838 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.066069227 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.874870268 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.839129549 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.840451267 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.052833254 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.821034846 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838709866 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.710620798 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.89430739 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.839325126 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.064045887 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.839160116 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103388434 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.838505365 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.067219513 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.024941682 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.864601319 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.01018438 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.081624342 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.839635268 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.081822784 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.076136373 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.950149328 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.104122996 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.715741476 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.838900865 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122654265 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.837594796 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.837894117 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009530134 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.841998888 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.976521736 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.842860635 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.128456579 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85996317 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.069690572 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.839383181 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.088483781 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.870464146 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.889804409 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.845571807 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.961696662 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.842908475 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.666963242 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.996918554 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.843176147 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.838454333 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.392773946 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.839769923 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.991575593 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.065652443 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.8606567 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.912111068 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.497554177 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.843665922 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920869619 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.860138321 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.230418057 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.839132425 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.089438931 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.839975558 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.84021378 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.840871513 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.074121854 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.074238158 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.845160713 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.83904211 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.744976849 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.844244199 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.843745187 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.02198423 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.183452867 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.838404182 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.041151355 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841975404 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.97192096 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.842712531 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.914054659 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.17556958 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.83940257 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.842475151 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.845369679 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.844277614 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.845301209 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.049107318 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.879358337 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.378763671 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.977903771 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.117867181 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.15022817 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.079655795 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880787135 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.847428001 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.09317231 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.843251548 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.899720994 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.840514603 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.86021516 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.074482539 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.841723594 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.099747442 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.107248148 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.733462 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.886003582 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.843049023 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.842271933 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.841960259 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.987462092 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.926899395 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.842291127 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.845758715 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.956734645 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.959864423 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.049051568 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.84530594 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.907101 seconds)
  done (took 896.329614603 seconds)
done (took 1212.168373709 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.844155214 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.840821949 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.847358115 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.845307748 seconds)
  done (took 29.151909803 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.848518448 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.846950619 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.845432324 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.847333208 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.844754105 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.845752699 seconds)
  done (took 12.85365161 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.023043059 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.841306011 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.84565651 seconds)
  done (took 21.485379828 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.922850002 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.239640116 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.985476901 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.271527608 seconds)
  done (took 10.194026212 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.845741411 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.847161158 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.848428612 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.848953445 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.848895352 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.850635063 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.846712487 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.848699867 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.846342856 seconds)
  done (took 18.409153926 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.609261784 seconds)
done (took 98.476293223 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.105915663 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.163256557 seconds)
    (3/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.708712988 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.240847473 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.845435494 seconds)
    (6/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.844895268 seconds)
    (7/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.870253519 seconds)
    (8/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.911074584 seconds)
    (9/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.239261066 seconds)
    (10/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.159335319 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.085110006 seconds)
    (12/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.94805889 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.858533001 seconds)
    (14/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.843835679 seconds)
    (15/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 1.978078278 seconds)
    (16/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.923399835 seconds)
    (17/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.926057242 seconds)
    (18/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.863746523 seconds)
    (19/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.987161006 seconds)
    (20/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.862156332 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.004431128 seconds)
    (22/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.389784597 seconds)
    (23/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.944246782 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.846948081 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.710203353 seconds)
    (26/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.010467705 seconds)
    (27/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.026739768 seconds)
    (28/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.243108305 seconds)
    (29/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.716013235 seconds)
    (30/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.874149847 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.320982686 seconds)
    (32/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.649821395 seconds)
    (33/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.339610228 seconds)
    (34/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.750900549 seconds)
    (35/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.849054315 seconds)
    (36/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 1.975079955 seconds)
    (37/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.179403026 seconds)
    (38/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.845707089 seconds)
    (39/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 8.328452383 seconds)
    (40/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.439193348 seconds)
    (41/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.851288769 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 1.97336656 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.847271558 seconds)
    (44/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 1.991837737 seconds)
    (45/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.981981547 seconds)
    (46/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.846757325 seconds)
    (47/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.053493949 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.190949465 seconds)
    (49/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 1.998409556 seconds)
    (50/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.151215377 seconds)
    (51/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.33208617 seconds)
    (52/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.577151839 seconds)
    (53/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 2.003788744 seconds)
    (54/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.954136313 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.170275208 seconds)
    (56/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.982660192 seconds)
    (57/309) benchmarking ("sort", Int8, false)...
    done (took 4.746651503 seconds)
    (58/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.122406677 seconds)
    (59/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.397689559 seconds)
    (60/309) benchmarking ("sort", Bool, false)...
    done (took 2.065863876 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.239567149 seconds)
    (62/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.910127762 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.8745422 seconds)
    (64/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.234841968 seconds)
    (65/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.293597554 seconds)
    (66/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.157756338 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.974919252 seconds)
    (68/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.992786526 seconds)
    (69/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.148110243 seconds)
    (70/309) benchmarking ("sort", Int64, false)...
    done (took 5.540927458 seconds)
    (71/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.178521188 seconds)
    (72/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.935127766 seconds)
    (73/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.850169469 seconds)
    (74/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.319658512 seconds)
    (75/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.960733475 seconds)
    (76/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.104510964 seconds)
    (77/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.155859681 seconds)
    (78/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.006441512 seconds)
    (79/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.86769996 seconds)
    (80/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.992334749 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.856443846 seconds)
    (82/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.957366889 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.978457319 seconds)
    (84/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.963241241 seconds)
    (85/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.947062676 seconds)
    (86/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.047171512 seconds)
    (87/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.024929961 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.204064791 seconds)
    (89/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 1.876642467 seconds)
    (90/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.740603489 seconds)
    (91/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.873846762 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.791957638 seconds)
    (93/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.24921051 seconds)
    (94/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.86760528 seconds)
    (95/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.852703762 seconds)
    (96/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.639064338 seconds)
    (97/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.100028631 seconds)
    (98/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.105957561 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.962310727 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.161027111 seconds)
    (101/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.168833238 seconds)
    (102/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.851805521 seconds)
    (103/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.853805475 seconds)
    (104/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.050320091 seconds)
    (105/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.08111419 seconds)
    (106/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.852876339 seconds)
    (107/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.990796961 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.952924366 seconds)
    (109/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.479522849 seconds)
    (110/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.737484143 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.32713334 seconds)
    (112/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.995160635 seconds)
    (113/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.655994172 seconds)
    (114/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.036071351 seconds)
    (115/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.871177991 seconds)
    (116/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.388324044 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.942214285 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.117737891 seconds)
    (119/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.852450018 seconds)
    (120/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.890750099 seconds)
    (121/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 3.519713774 seconds)
    (122/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.932198 seconds)
    (123/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.851723595 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.042732465 seconds)
    (125/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.337158551 seconds)
    (126/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.019138568 seconds)
    (127/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.160540672 seconds)
    (128/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.869819839 seconds)
    (129/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.85306013 seconds)
    (130/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.192212823 seconds)
    (131/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.997713173 seconds)
    (132/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.092928239 seconds)
    (133/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.148070014 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.939250735 seconds)
    (135/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.880115796 seconds)
    (136/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.912457107 seconds)
    (137/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.954742538 seconds)
    (138/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.366220856 seconds)
    (139/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.852936709 seconds)
    (140/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 8.69982081 seconds)
    (141/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.023358409 seconds)
    (142/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.930419303 seconds)
    (143/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.039609591 seconds)
    (144/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.155633284 seconds)
    (145/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.885279545 seconds)
    (146/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.116457742 seconds)
    (147/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.987851933 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.166866999 seconds)
    (149/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.10109052 seconds)
    (150/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.856005368 seconds)
    (151/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.855373859 seconds)
    (152/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.152424033 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.977833542 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.853646883 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.368585354 seconds)
    (156/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.886544137 seconds)
    (157/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.955527674 seconds)
    (158/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.166083324 seconds)
    (159/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.010048104 seconds)
    (160/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.601185879 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.193456024 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.152342221 seconds)
    (163/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.858849469 seconds)
    (164/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.923078028 seconds)
    (165/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.599313971 seconds)
    (166/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.860119824 seconds)
    (167/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.865063625 seconds)
    (168/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.855352625 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.819764714 seconds)
    (170/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.007695107 seconds)
    (171/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.177058204 seconds)
    (172/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.104013062 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.990892121 seconds)
    (174/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.855974515 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.251183194 seconds)
    (176/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.936206255 seconds)
    (177/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.89211177 seconds)
    (178/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.103931701 seconds)
    (179/309) benchmarking ("sort", Float64, false)...
    done (took 5.595388435 seconds)
    (180/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.856354314 seconds)
    (181/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.156810141 seconds)
    (182/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.757955094 seconds)
    (183/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.127290508 seconds)
    (184/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.947889992 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.910745461 seconds)
    (186/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.858698874 seconds)
    (187/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.28551575 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.246026206 seconds)
    (189/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.14599164 seconds)
    (190/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.338955727 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.475959705 seconds)
    (192/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.012894509 seconds)
    (193/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.935467284 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.859217381 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.857667921 seconds)
    (196/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 8.383808779 seconds)
    (197/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.982628903 seconds)
    (198/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.942725115 seconds)
    (199/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.478869599 seconds)
    (200/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.131351943 seconds)
    (201/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.276321716 seconds)
    (202/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.856584132 seconds)
    (203/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.990817561 seconds)
    (204/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.165662978 seconds)
    (205/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.889537866 seconds)
    (206/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.871745382 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.635289458 seconds)
    (208/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.744250537 seconds)
    (209/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.355196495 seconds)
    (210/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.566898472 seconds)
    (211/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.558868423 seconds)
    (212/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.202694898 seconds)
    (213/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.197831994 seconds)
    (214/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.025564388 seconds)
    (215/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.929300595 seconds)
    (216/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.858836707 seconds)
    (217/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.900623145 seconds)
    (218/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.860526151 seconds)
    (219/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.875974627 seconds)
    (220/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.259333054 seconds)
    (221/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.088674921 seconds)
    (222/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.041714189 seconds)
    (223/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.119898089 seconds)
    (224/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.192117459 seconds)
    (225/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.548363856 seconds)
    (226/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.007076786 seconds)
    (227/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.963783923 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.898436043 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.988330996 seconds)
    (230/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.937587057 seconds)
    (231/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.860477289 seconds)
    (232/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.546319708 seconds)
    (233/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.182980334 seconds)
    (234/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.860497859 seconds)
    (235/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.51256253 seconds)
    (236/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.861393414 seconds)
    (237/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.818331978 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.818796635 seconds)
    (239/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.95621854 seconds)
    (240/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.860160544 seconds)
    (241/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.88710622 seconds)
    (242/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.990071053 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.523946354 seconds)
    (244/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.952370952 seconds)
    (245/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.45866372 seconds)
    (246/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.748787619 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.57458895 seconds)
    (248/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.268834064 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.014853522 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.074832599 seconds)
    (251/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.874229688 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.96913532 seconds)
    (253/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.749751717 seconds)
    (254/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.339566333 seconds)
    (255/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.861454179 seconds)
    (256/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.89438693 seconds)
    (257/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.955271761 seconds)
    (258/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.779912116 seconds)
    (259/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.157927716 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.276621921 seconds)
    (261/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.861817962 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.094895324 seconds)
    (263/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.380526725 seconds)
    (264/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.13217407 seconds)
    (265/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.126640658 seconds)
    (266/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.647140549 seconds)
    (267/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.895892077 seconds)
    (268/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.959689346 seconds)
    (269/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.861493189 seconds)
    (270/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.9797576 seconds)
    (271/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.925069495 seconds)
    (272/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.181684001 seconds)
    (273/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.148292794 seconds)
    (274/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.865856356 seconds)
    (275/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.002689925 seconds)
    (276/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.87759702 seconds)
    (277/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.12649785 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.86337346 seconds)
    (279/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 9.158984495 seconds)
    (280/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.999418342 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.984242677 seconds)
    (282/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.042426199 seconds)
    (283/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.4872267 seconds)
    (284/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.989790793 seconds)
    (285/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.249330587 seconds)
    (286/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.957659079 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.919817457 seconds)
    (288/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.86572311 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.641692064 seconds)
    (290/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.568619512 seconds)
    (291/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.147449109 seconds)
    (292/309) benchmarking ("sort", Float32, false)...
    done (took 5.558107954 seconds)
    (293/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.073272954 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.16820141 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.89357912 seconds)
    (296/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.045968021 seconds)
    (297/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.870780014 seconds)
    (298/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.96446083 seconds)
    (299/309) benchmarking ("sort", BigInt, false)...
    done (took 6.862633641 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.906146129 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.990927883 seconds)
    (302/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.143608425 seconds)
    (303/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.068629404 seconds)
    (304/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.979881638 seconds)
    (305/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.075413208 seconds)
    (306/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.886703498 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 1.995188274 seconds)
    (308/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.67185432 seconds)
    (309/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.093044258 seconds)
  done (took 1007.102093496 seconds)
done (took 1008.95533658 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.900150782 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.884066293 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.866563929 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.887919544 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.978296233 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.910447439 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.879615446 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.871393187 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.91874615 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.91875365 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.865765069 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.908182195 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.867489276 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.869581341 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.866608631 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.883146463 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.164634777 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.889744209 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.887415384 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.878719939 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.885294359 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.86549177 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.91817689 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.908993848 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.872612941 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.873811541 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.869342143 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.890053942 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.981433734 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.871226139 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.874189235 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.880733833 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.167745666 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.89046129 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.866356985 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.887797253 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.879793815 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.881475649 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.871625016 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.901489907 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.301618425 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.872600674 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.869647092 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.869380965 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.870520889 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.876397079 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.870547575 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.876912206 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.884619851 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.885267896 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.296697091 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.889282307 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.873571822 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.869131372 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.883333946 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.871428173 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.877187903 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.885587125 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.889430076 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.886492862 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.15813733 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.901887377 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.874243933 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.890195057 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.879323598 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.33385797 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.873313559 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.877787138 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.302950148 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.883174501 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.33219813 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.886430513 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.874344654 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.886205269 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.903250075 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.168255018 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.892376285 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.870851703 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.881044352 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.869550958 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.883401735 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.887373173 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.875123845 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.870829291 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.889395398 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.914661959 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.883655931 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.873224067 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.88387656 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.891014057 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.880517906 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.883850768 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.87669456 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.869402089 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.883921837 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.876355466 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.874831236 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.874837766 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.877065835 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.886050674 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.3019699 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.89498681 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.870458643 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.870230855 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.872093003 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.887860957 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.302145025 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.87793505 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.896008682 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.922905185 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.874663751 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.158377711 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.900491283 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.890697502 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.88531696 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.878312653 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.871732551 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.159612411 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.325080824 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.893634024 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.872729535 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.871110168 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.889816673 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.875339106 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.870493833 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.170983472 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.900252343 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.888891484 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.994709119 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.886163133 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.905716198 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.871388248 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.875734606 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.919302932 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890343799 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.906415448 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.876479034 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.890394318 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.891870609 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.872562922 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.884566562 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.887146905 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.87393012 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.881551519 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.871620402 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.919101658 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.888155628 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.887703972 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.894174149 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.998644758 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.871128373 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.162742553 seconds)
done (took 294.186842051 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.95035155 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.873903488 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.989530793 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.872043646 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.959465059 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.945122809 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.87305357 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.872806779 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.872258657 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.371250105 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.873235609 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.877840475 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.873042738 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.871992009 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.940663605 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.871601835 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.872168909 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.318306635 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.87392259 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.951882348 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.872415735 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.87353306 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.873673476 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.387871517 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.87408141 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.872469799 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.953836268 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.873284923 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.319978796 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.871754815 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.872484736 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.335346987 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.952635085 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.900910156 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.881404655 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.878444307 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.96168102 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.888048594 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.939660155 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.941622967 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.99266077 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.906410335 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.874766096 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.874048577 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.880036425 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.87551323 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.874183522 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.903396473 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.872835959 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.880253847 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.31880754 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.87925618 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.88048173 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.874032452 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.874754257 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.904027267 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.875559843 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.876635358 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.955026377 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.878826764 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.939706514 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.371402996 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.371570139 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.870327805 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.871208573 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.870762254 seconds)
  done (took 185.58022119 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.937961629 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.945245782 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.935040483 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.874107839 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.920098326 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.938297276 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.875873238 seconds)
  done (took 15.230732323 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.878981579 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.872695534 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.924942532 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.917327521 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.867887978 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.047826467 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.881837771 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.874041776 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.899270792 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.869820901 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.535400948 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.919991675 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.878849349 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.868888993 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.879738036 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.926339929 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.867759236 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.866649595 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.981414261 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.015238096 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.872622609 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.872439893 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.891430313 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.8780394 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.866717234 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.865511743 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.865103774 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.871104703 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863792377 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.865342488 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.864378292 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.916589587 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.86303971 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.860096355 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.863726941 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.862396297 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.859805475 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.861066235 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.860684883 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.859729358 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.859921738 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.8598619 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.858184595 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.85712018 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.857707249 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.88006492 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.856334168 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.859280457 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.855568693 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.856517125 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.882520332 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.85639827 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.854554908 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.860771207 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.896739888 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.860877926 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.855799771 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.854300112 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.855347269 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.851910214 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.850725973 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.999830648 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.902068404 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.85417545 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.898665983 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.004274335 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.849204327 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.850149569 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.849769695 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.935629854 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.846738726 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.896618927 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.849466947 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 1.961208773 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.849023763 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.025720749 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.86866518 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.850871309 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.849579005 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.846923886 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.851524437 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.844231914 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.846654262 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.848925032 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.846983243 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.843652749 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.843505765 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.844467192 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.846840637 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.840325831 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.890549627 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.839973206 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.840803737 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 1.978900884 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.837891255 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.952959693 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.86577389 seconds)
  done (took 204.69858957 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.847404478 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.844180777 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.838550519 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.852402556 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.838106892 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.840309229 seconds)
  done (took 12.833218733 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.837621062 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.839479683 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.834942125 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.83413193 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.835607627 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.834078594 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.834221377 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.835155417 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.837954257 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.834588168 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.834368589 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.833563644 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.833300712 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.835299849 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.832653057 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.832383376 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.831536324 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.829978915 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.83114786 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832428128 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.041846154 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.830279853 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.831050063 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.835442484 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.835547632 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.831577367 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.841146682 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.829255455 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.830506882 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.838404583 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.835430106 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.8285996 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.834288019 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.833179314 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.831513936 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.834844042 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831886684 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.828125148 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.826872331 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.826898943 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.827819568 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.831074757 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.825181704 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.826781987 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.826575154 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.83601716 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.82949263 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.839019435 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.823810681 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.825717931 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.825466428 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.822904966 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.826115014 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.82423841 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.830897508 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.828648401 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.828216891 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.823716584 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.824851401 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.828742005 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.824912503 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.824682047 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.823989866 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.826796418 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.82862371 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.822449068 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.827503007 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.825431283 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.822705319 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.82217857 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.822522597 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.82063572 seconds)
  done (took 134.760719279 seconds)
done (took 554.917798631 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.623008716 seconds)
  done (took 9.378228281 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.031013242 seconds)
  done (took 8.862079145 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.384136225 seconds)
  done (took 10.209084703 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.907966133 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.910526932 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.900124767 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.899940135 seconds)
  done (took 29.451867421 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.216225741 seconds)
  done (took 9.039986151 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.902274438 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.889071054 seconds)
  done (took 15.687263596 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.915586623 seconds)
  done (took 8.73837092 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.19983588 seconds)
  done (took 9.029583928 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.904027592 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.914109165 seconds)
  done (took 15.659775001 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.888031974 seconds)
  done (took 8.707666361 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 8.175573013 seconds)
  done (took 10.080737103 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.904978757 seconds)
  done (took 8.764600351 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.915128434 seconds)
  done (took 8.735485743 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.025731551 seconds)
  done (took 9.844613257 seconds)
done (took 163.945406255 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.888983128 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.887351697 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.884935961 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.886029509 seconds)
  done (took 29.36559533 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.920879383 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.922180344 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.929905329 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.922075546 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.9127399 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.911303688 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.92196576 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.921347382 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.913042653 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.918707043 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.921140853 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.918815515 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.922094493 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.930026361 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.930381635 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.919109141 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.921911435 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.922315455 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.912778559 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.931376028 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.918355708 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.921951047 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.887182303 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.889275986 seconds)
  done (took 47.861174105 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.079587173 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.958939009 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.041306162 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.941252644 seconds)
  done (took 9.841431022 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.887501865 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.951910066 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.939945821 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.936031095 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.940125597 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 1.991349062 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.941049437 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.026512083 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.015967747 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.015222459 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.895930166 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.910795168 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.912013202 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.935993971 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 1.994415943 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.88899259 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.888457816 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.005805784 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.950066988 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.069117036 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.889326514 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.943302646 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.939649088 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.941141987 seconds)
  done (took 48.631798806 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.890323465 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.896930082 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.89557057 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.890339228 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.891440633 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.890370229 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.897506893 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.892319378 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.911740674 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.891023306 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.890276521 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.889904848 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.898407366 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.890004244 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.891351608 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.903140704 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.904860698 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.891239452 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.895143912 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.897440864 seconds)
  done (took 39.721749946 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.888400024 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.734999701 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.234082714 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.141905403 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.890674413 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.889768185 seconds)
  done (took 31.604098102 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.90195089 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.896075727 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.891783031 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.947078681 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.026150286 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.89544549 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.890746103 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.899472172 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.933349854 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.954307639 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.90895476 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.917757953 seconds)
  done (took 24.885720224 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.891302772 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.8932113 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.892977828 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.904130954 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.901137754 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.89748071 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.898562146 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.889295868 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.903809538 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.907804642 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.897402919 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.903129087 seconds)
  done (took 44.60639986 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.596216063 seconds)
    (2/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.965502003 seconds)
    (3/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.890578265 seconds)
    (4/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.764720455 seconds)
    (5/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.353893064 seconds)
    (6/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.446772776 seconds)
    (7/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.78666647 seconds)
    (8/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.555020742 seconds)
    (9/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.368439862 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.824933523 seconds)
    (11/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100883378 seconds)
    (12/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.898038319 seconds)
    (13/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.981231813 seconds)
    (14/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.898992196 seconds)
    (15/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169540753 seconds)
    (16/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.256933804 seconds)
    (17/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085970561 seconds)
    (18/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140703127 seconds)
    (19/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.543510161 seconds)
    (20/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.9317834 seconds)
    (21/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.101003564 seconds)
    (22/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120127826 seconds)
    (23/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.187471773 seconds)
    (24/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896889953 seconds)
    (25/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898457735 seconds)
    (26/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.962202423 seconds)
    (27/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.312709017 seconds)
    (28/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.628713832 seconds)
    (29/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.934441536 seconds)
    (30/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 5.204090944 seconds)
    (31/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.141019088 seconds)
    (32/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.849694739 seconds)
    (33/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954120875 seconds)
    (34/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.902126382 seconds)
    (35/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.911974758 seconds)
    (36/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.902715397 seconds)
    (37/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903268886 seconds)
    (38/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.169994613 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.971105572 seconds)
    (40/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.033034947 seconds)
    (41/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972059148 seconds)
    (42/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.145579926 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90297623 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.31506486 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.599569709 seconds)
    (46/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.184338665 seconds)
    (47/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.007725132 seconds)
    (48/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.898548976 seconds)
    (49/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.900542945 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896007567 seconds)
    (51/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.824060225 seconds)
    (52/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.981266378 seconds)
    (53/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.89995821 seconds)
    (54/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903461694 seconds)
    (55/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.597236668 seconds)
    (56/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.897112519 seconds)
    (57/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972124169 seconds)
    (58/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.898392375 seconds)
    (59/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102137442 seconds)
    (60/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.706201399 seconds)
    (61/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.586479309 seconds)
    (62/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.901293208 seconds)
    (63/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898014832 seconds)
    (64/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.471757552 seconds)
    (65/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.963767624 seconds)
    (66/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.011667872 seconds)
    (67/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.649478401 seconds)
    (68/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.273190025 seconds)
    (69/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.310180016 seconds)
    (70/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.992189761 seconds)
    (71/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.893619779 seconds)
    (72/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893905312 seconds)
    (73/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.023433417 seconds)
    (74/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.855288061 seconds)
    (75/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.587480389 seconds)
    (76/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925877642 seconds)
    (77/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.027552003 seconds)
    (78/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.905231184 seconds)
    (79/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.528042242 seconds)
    (80/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198755363 seconds)
    (81/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.297058285 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.441101244 seconds)
    (83/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.803150315 seconds)
    (84/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168655398 seconds)
    (85/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.660988576 seconds)
    (86/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.864579919 seconds)
    (87/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097174944 seconds)
    (88/481) benchmarking "5d"...
    done (took 3.713043145 seconds)
    (89/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.80475017 seconds)
    (90/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.09854019 seconds)
    (91/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914364969 seconds)
    (92/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.882253904 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.142675624 seconds)
    (94/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.635225784 seconds)
    (95/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.985610443 seconds)
    (96/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.889098113 seconds)
    (97/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.309346169 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895074689 seconds)
    (99/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.880011248 seconds)
    (100/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875922478 seconds)
    (101/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.087104532 seconds)
    (102/481) benchmarking ("sumcolon", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.446413208 seconds)
    (103/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.901902384 seconds)
    (104/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988247618 seconds)
    (105/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.885453212 seconds)
    (106/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.950225953 seconds)
    (107/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798757561 seconds)
    (108/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.878580533 seconds)
    (109/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.866511182 seconds)
    (110/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.768809598 seconds)
    (111/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.868678109 seconds)
    (112/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.783858213 seconds)
    (113/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.898492271 seconds)
    (114/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.524189594 seconds)
    (115/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891250584 seconds)
    (116/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.790546619 seconds)
    (117/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.859572015 seconds)
    (118/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.942973839 seconds)
    (119/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898815253 seconds)
    (120/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.8033898 seconds)
    (121/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126524176 seconds)
    (122/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.158773209 seconds)
    (123/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.534349419 seconds)
    (124/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.812215411 seconds)
    (125/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.985737794 seconds)
    (126/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.227931817 seconds)
    (127/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.079242558 seconds)
    (128/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860774788 seconds)
    (129/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.071375443 seconds)
    (130/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399434868 seconds)
    (131/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.256807426 seconds)
    (132/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.901589732 seconds)
    (133/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.139173932 seconds)
    (134/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.918304271 seconds)
    (135/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.142267167 seconds)
    (136/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282026028 seconds)
    (137/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934045321 seconds)
    (138/481) benchmarking ("sumlogical", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.627465842 seconds)
    (139/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.483200112 seconds)
    (140/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.073942861 seconds)
    (141/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.873459014 seconds)
    (142/481) benchmarking "ind2sub"...
    done (took 6.859761315 seconds)
    (143/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.861603862 seconds)
    (144/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862871495 seconds)
    (145/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.794868884 seconds)
    (146/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.501652708 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.221762795 seconds)
    (148/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 2.018301164 seconds)
    (149/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.072830583 seconds)
    (150/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.186002621 seconds)
    (151/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.836549413 seconds)
    (152/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.799029432 seconds)
    (153/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.161438329 seconds)
    (154/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.997994494 seconds)
    (155/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.853556238 seconds)
    (156/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.512989067 seconds)
    (157/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 5.253694609 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.646217775 seconds)
    (159/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.886508733 seconds)
    (160/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.98236709 seconds)
    (161/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.023454634 seconds)
    (162/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.813194952 seconds)
    (163/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.872822059 seconds)
    (164/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934232095 seconds)
    (165/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875524274 seconds)
    (166/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.867578577 seconds)
    (167/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.22002924 seconds)
    (168/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.216782425 seconds)
    (169/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.858034524 seconds)
    (170/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.863329065 seconds)
    (171/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.807410339 seconds)
    (172/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.864159133 seconds)
    (173/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.862737388 seconds)
    (174/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.389282087 seconds)
    (175/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.82571199 seconds)
    (176/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.863590755 seconds)
    (177/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.873839988 seconds)
    (178/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.734646926 seconds)
    (179/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931541919 seconds)
    (180/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860823423 seconds)
    (181/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.862086769 seconds)
    (182/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.396437188 seconds)
    (183/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.36135586 seconds)
    (184/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.864455692 seconds)
    (185/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.515984116 seconds)
    (186/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.951391643 seconds)
    (187/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.935974085 seconds)
    (188/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.134129193 seconds)
    (189/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.216794989 seconds)
    (190/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.985908358 seconds)
    (191/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.559776664 seconds)
    (192/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.258430521 seconds)
    (193/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.971516064 seconds)
    (194/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.561126241 seconds)
    (195/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.788073447 seconds)
    (196/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.861129098 seconds)
    (197/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.801343336 seconds)
    (198/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866731791 seconds)
    (199/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.861908921 seconds)
    (200/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.867439476 seconds)
    (201/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.048431013 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.133500339 seconds)
    (203/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164796672 seconds)
    (204/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.317470566 seconds)
    (205/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931756655 seconds)
    (206/481) benchmarking ("sumlinear", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066128448 seconds)
    (207/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.56768689 seconds)
    (208/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.817594747 seconds)
    (209/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.863957576 seconds)
    (210/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868539834 seconds)
    (211/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.864649351 seconds)
    (212/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86044974 seconds)
    (213/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.370882925 seconds)
    (214/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.15770999 seconds)
    (215/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936509254 seconds)
    (216/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.894036593 seconds)
    (217/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.865971116 seconds)
    (218/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992569464 seconds)
    (219/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.87418161 seconds)
    (220/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.789557494 seconds)
    (221/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.862833507 seconds)
    (222/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866347016 seconds)
    (223/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284005417 seconds)
    (224/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.888619937 seconds)
    (225/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.809180218 seconds)
    (226/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.164847577 seconds)
    (227/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.730963381 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984633614 seconds)
    (229/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909976155 seconds)
    (230/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.872609856 seconds)
    (231/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.869227035 seconds)
    (232/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.564725317 seconds)
    (233/481) benchmarking "4d"...
    done (took 2.910946206 seconds)
    (234/481) benchmarking ("sumelt", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.788885397 seconds)
    (235/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274689101 seconds)
    (236/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89219812 seconds)
    (237/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.627352111 seconds)
    (238/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35449159 seconds)
    (239/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453146248 seconds)
    (240/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.152431581 seconds)
    (241/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179704246 seconds)
    (242/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.192839309 seconds)
    (243/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.932333223 seconds)
    (244/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.07859061 seconds)
    (245/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.948778852 seconds)
    (246/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.920254946 seconds)
    (247/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.952597257 seconds)
    (248/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800134432 seconds)
    (249/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.79074591 seconds)
    (250/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.518486536 seconds)
    (251/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199747954 seconds)
    (252/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127931013 seconds)
    (253/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867205776 seconds)
    (254/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080601959 seconds)
    (255/481) benchmarking ("sumlogical", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.555162111 seconds)
    (256/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.084636846 seconds)
    (257/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887516273 seconds)
    (258/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.524559906 seconds)
    (259/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150684338 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824127035 seconds)
    (261/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870111865 seconds)
    (262/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.164738499 seconds)
    (263/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953112362 seconds)
    (264/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930000969 seconds)
    (265/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852608681 seconds)
    (266/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.799956672 seconds)
    (267/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192302737 seconds)
    (268/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888512175 seconds)
    (269/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.554378677 seconds)
    (270/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861510329 seconds)
    (271/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.199904972 seconds)
    (272/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.262568673 seconds)
    (273/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.908257728 seconds)
    (274/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.216621926 seconds)
    (275/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051190483 seconds)
    (276/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.847288308 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.201932537 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.024238682 seconds)
    (279/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.878569499 seconds)
    (280/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853149175 seconds)
    (281/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.834678164 seconds)
    (282/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.061728292 seconds)
    (283/481) benchmarking ("sumelt", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.427699773 seconds)
    (284/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.703671769 seconds)
    (285/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.851468919 seconds)
    (286/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.979475404 seconds)
    (287/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.140869397 seconds)
    (288/481) benchmarking "3d"...
    done (took 2.749548748 seconds)
    (289/481) benchmarking ("sum", "3darray")...
    done (took 1.849582572 seconds)
    (290/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.99537123 seconds)
    (291/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.102816734 seconds)
    (292/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.848138193 seconds)
    (293/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.199705597 seconds)
    (294/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209028571 seconds)
    (295/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 2.953061104 seconds)
    (296/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905075892 seconds)
    (297/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.078083586 seconds)
    (298/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.511171167 seconds)
    (299/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148108023 seconds)
    (300/481) benchmarking ("mapr_access", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.397784403 seconds)
    (301/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.334102442 seconds)
    (302/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.847800866 seconds)
    (303/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.775190844 seconds)
    (304/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.548145211 seconds)
    (305/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.053872399 seconds)
    (306/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.848691427 seconds)
    (307/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.814671083 seconds)
    (308/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.065810939 seconds)
    (309/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.084279928 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.528129284 seconds)
    (311/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068292469 seconds)
    (312/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.094382055 seconds)
    (313/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.859013578 seconds)
    (314/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.123354595 seconds)
    (315/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92039716 seconds)
    (316/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.944937041 seconds)
    (317/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.160409451 seconds)
    (318/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.276518107 seconds)
    (319/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.097026355 seconds)
    (320/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.076352349 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.395189797 seconds)
    (322/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.06363267 seconds)
    (323/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.311897726 seconds)
    (324/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.019318813 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.851766435 seconds)
    (326/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057520525 seconds)
    (327/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067206157 seconds)
    (328/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.066307396 seconds)
    (329/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.216613554 seconds)
    (330/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01211816 seconds)
    (331/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.560909573 seconds)
    (332/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.860496037 seconds)
    (333/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.059336534 seconds)
    (334/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.145137741 seconds)
    (335/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909386487 seconds)
    (336/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.217799781 seconds)
    (337/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.0167156 seconds)
    (338/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.933857021 seconds)
    (339/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854190669 seconds)
    (340/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913699629 seconds)
    (341/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.855653226 seconds)
    (342/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858701626 seconds)
    (343/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.228072153 seconds)
    (344/481) benchmarking ("mapr_access", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.372299465 seconds)
    (345/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.864212222 seconds)
    (346/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928919381 seconds)
    (347/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.944773304 seconds)
    (348/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.360267654 seconds)
    (349/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.85314511 seconds)
    (350/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.859541202 seconds)
    (351/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.123129889 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.198871199 seconds)
    (353/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183058626 seconds)
    (354/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829529245 seconds)
    (355/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.850558922 seconds)
    (356/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.859737463 seconds)
    (357/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982280046 seconds)
    (358/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.778296403 seconds)
    (359/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859942254 seconds)
    (360/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124263054 seconds)
    (361/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.855860176 seconds)
    (362/481) benchmarking ("sumcolon", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.247621262 seconds)
    (363/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.995418791 seconds)
    (364/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86783117 seconds)
    (365/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.163140234 seconds)
    (366/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233204515 seconds)
    (367/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.503036645 seconds)
    (368/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.81023628 seconds)
    (369/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854925452 seconds)
    (370/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.07779932 seconds)
    (371/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162806492 seconds)
    (372/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.020493184 seconds)
    (373/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.961607623 seconds)
    (374/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12686332 seconds)
    (375/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.19292504 seconds)
    (376/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.886396397 seconds)
    (377/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.218421138 seconds)
    (378/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088443954 seconds)
    (379/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85838293 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.727522463 seconds)
    (381/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.859991042 seconds)
    (382/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981790125 seconds)
    (383/481) benchmarking "sub2ind"...
    done (took 7.05015324 seconds)
    (384/481) benchmarking ("sumvector", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.129662753 seconds)
    (385/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.359517894 seconds)
    (386/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.560976851 seconds)
    (387/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.11946336 seconds)
    (388/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.721279567 seconds)
    (389/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.857380396 seconds)
    (390/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.621596159 seconds)
    (391/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126555895 seconds)
    (392/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.127321596 seconds)
    (393/481) benchmarking ("sumlinear", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90283807 seconds)
    (394/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917517643 seconds)
    (395/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.861271547 seconds)
    (396/481) benchmarking ("sumrange", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27083143 seconds)
    (397/481) benchmarking "6d"...
    done (took 3.568745127 seconds)
    (398/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987618306 seconds)
    (399/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.723848606 seconds)
    (400/481) benchmarking ("sumeach", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.780813938 seconds)
    (401/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.975208137 seconds)
    (402/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.076561318 seconds)
    (403/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.095734664 seconds)
    (404/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.565468374 seconds)
    (405/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.859346184 seconds)
    (406/481) benchmarking ("sumvector", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128575311 seconds)
    (407/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157045881 seconds)
    (408/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120943297 seconds)
    (409/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.90730788 seconds)
    (410/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.72191017 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067802188 seconds)
    (412/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859392842 seconds)
    (413/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.866499413 seconds)
    (414/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.127467019 seconds)
    (415/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075236979 seconds)
    (416/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10030525 seconds)
    (417/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857844898 seconds)
    (418/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857608599 seconds)
    (419/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.665080605 seconds)
    (420/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786239956 seconds)
    (421/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.856871953 seconds)
    (422/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90993989 seconds)
    (423/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087155131 seconds)
    (424/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.879903448 seconds)
    (425/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.377452718 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.558404584 seconds)
    (427/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145990701 seconds)
    (428/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907094992 seconds)
    (429/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862606356 seconds)
    (430/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.127711778 seconds)
    (431/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.37311155 seconds)
    (432/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.412890102 seconds)
    (433/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863189413 seconds)
    (434/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074466599 seconds)
    (435/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.83261978 seconds)
    (436/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1529734 seconds)
    (437/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.860728794 seconds)
    (438/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.281095507 seconds)
    (439/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.158736744 seconds)
    (440/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.861198887 seconds)
    (441/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.382678589 seconds)
    (442/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.101058213 seconds)
    (443/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124518276 seconds)
    (444/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791510639 seconds)
    (445/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.868984593 seconds)
    (446/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072612143 seconds)
    (447/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.702281822 seconds)
    (448/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.860967976 seconds)
    (449/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.862777582 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277890558 seconds)
    (451/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Matrix{Int32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088875665 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.59730699 seconds)
    (453/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.414976616 seconds)
    (454/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.861211174 seconds)
    (455/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.865255903 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.283707849 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.886881177 seconds)
    (458/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462784024 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886610467 seconds)
    (460/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879292124 seconds)
    (461/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.379080829 seconds)
    (462/481) benchmarking "2d"...
    done (took 2.681307751 seconds)
    (463/481) benchmarking "7d"...
    done (took 2.14515157 seconds)
    (464/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.104698053 seconds)
    (465/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.390192057 seconds)
    (466/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.444331184 seconds)
    (467/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.864318472 seconds)
    (468/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.860322155 seconds)
    (469/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860965395 seconds)
    (470/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.78334612 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.21060568 seconds)
    (472/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.047716377 seconds)
    (473/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.143189764 seconds)
    (474/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.893209586 seconds)
    (475/481) benchmarking ("sumrange", "SubArray{Float32,2,Matrix{Float32},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.289028724 seconds)
    (476/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Matrix{Float32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889463628 seconds)
    (477/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.209507152 seconds)
    (478/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.971301543 seconds)
    (479/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.009061123 seconds)
    (480/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894709005 seconds)
    (481/481) benchmarking ("sumeach", "SubArray{Int32,2,Matrix{Int32},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.382304755 seconds)
  done (took 1655.721230931 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.870487848 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.263988785 seconds)
    (3/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 6.895672909 seconds)
    (4/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 6.903228388 seconds)
    (5/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.888588085 seconds)
    (6/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.895871989 seconds)
    (7/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963277229 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.883026921 seconds)
  done (took 57.355428712 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.872960379 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.889432703 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.874368288 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.868070361 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.875283594 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.86599746 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.075141838 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.878150738 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.878995493 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.875804557 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.869907214 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.868630537 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.17948617 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.891487692 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.866471013 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.865999651 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.868044383 seconds)
  done (took 74.170999755 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.870533681 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.261107904 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.925465717 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.865514727 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.819907222 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.880253226 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.873125755 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.926183829 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.874959355 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.10620069 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.170704893 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.905919614 seconds)
  done (took 90.278980039 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.87307838 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.867146973 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.86715312 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.866891527 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.868056946 seconds)
  done (took 11.146448584 seconds)
done (took 2167.042115118 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.097774106 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.926958256 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.971652544 seconds)
  done (took 5.698245482 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.014163302 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.059156051 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.171801883 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 1.937160451 seconds)
  done (took 9.989103072 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.17262376 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.248455564 seconds)
  done (took 6.220789791 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.263327462 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.874713165 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.280575603 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.868813192 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.871762942 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.874515514 seconds)
  done (took 22.420724216 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.869179979 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.869608861 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.869881972 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.869686285 seconds)
  done (took 9.278676014 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.869382194 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.605658687 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.870290445 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.882137762 seconds)
  done (took 21.027872359 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.017356673 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.98608257 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.011078409 seconds)
  done (took 7.815109041 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.01179389 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.705698388 seconds)
  done (took 6.517957605 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.01154074 seconds)
  done (took 3.813452911 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.896219725 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.137814102 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.376340134 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.398774506 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.519575273 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.68126866 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.199756946 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.120134181 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.289529555 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.316038811 seconds)
  done (took 24.736474388 seconds)
done (took 132.834267682 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.233694563 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.893381156 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.099137772 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.238663711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.108693193 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.071633116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.08841036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.229538166 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.908990208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.895938829 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.233973519 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.102609099 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.034446169 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.885740345 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.0438672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.887612485 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.098480363 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.239214617 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.90955411 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.130297099 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.095965024 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.875144249 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.070631336 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.882000201 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.090834282 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.012512427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.414542081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.879339386 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.046463905 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.423966635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.014732878 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.270213253 seconds)
  done (took 168.211059598 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.859667282 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.860047984 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.860052732 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.859970161 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.336502542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.856109724 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.857160445 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.857812051 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.305406521 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.305165543 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.846492099 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.31457353 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.844464683 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.844143968 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.847191314 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.845148207 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.479630585 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.844817339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.845419327 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.844866037 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.846758737 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.149538853 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.844930467 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.16036801 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.468003074 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.845368346 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.846116328 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.844825281 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.846383134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.846669089 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.845644098 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.848176799 seconds)
  done (took 208.701510341 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.845277977 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.845967077 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.847208276 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.847033826 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.847454481 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.846291329 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.846317819 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.8463513 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.674709538 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.662424116 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.844970504 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.847157932 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.848579478 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.846136021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.846135826 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.846275586 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.846335108 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.853573339 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.846001629 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.846313042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.850477232 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.517373837 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.846129312 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.526290691 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.846830536 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.849184416 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.847873083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.848098093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.846702255 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.847343439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.849912363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.84773333 seconds)
  done (took 219.885048423 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.085162154 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.848960204 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.849422788 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.843283946 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.849853402 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.848531907 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.824619144 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.09523337 seconds)
  done (took 19.025469907 seconds)
done (took 617.640832479 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.238051268 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.069061298 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.030073062 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.874029573 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.121962155 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.91848299 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.869408652 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.93418227 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.710286113 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.949573943 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.528866171 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.893566291 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.620746498 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.900053208 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.994503321 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.927844825 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.454460399 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.566449934 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.012325118 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.934309399 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.052078896 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.819647447 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.953180761 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.745897984 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.545595524 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.858003974 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.912424213 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.463555663 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.886625035 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.030372617 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.590720431 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.187098598 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.887227822 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.869728179 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.923720755 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.9029345 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.112016044 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.884083457 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.995410152 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.610483919 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.946860283 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.617587071 seconds)
  done (took 102.125422127 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.860628704 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.856516291 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.856353193 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.856861698 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.86535349 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.857704265 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.856870996 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.857072177 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.856699593 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.857291209 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.85683257 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.865680727 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.857314957 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.866072571 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.856072077 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.857061167 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.857369065 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.866138689 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.856661093 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.857873023 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.85695667 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.857807204 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.852792065 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.857638484 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.856760461 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.857502756 seconds)
  done (took 50.117730383 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.85284261 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.019089786 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.100527998 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.873423075 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.852821709 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.856119456 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.871589602 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.856396252 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.854842636 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.854793808 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.95823065 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.862306433 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.873651264 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.104229529 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.873729536 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.856285426 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.856514461 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.856833966 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.035053798 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.872099144 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.876574485 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.861650232 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.876884752 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.870602394 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.858991526 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.857874087 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.861091332 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.351096853 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.867415098 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.962160354 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.916429923 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.879872357 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.292398469 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.111913357 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.912673821 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.864964232 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.856133323 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.967272514 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.864165247 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.857839778 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.874583531 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.862597397 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.103717782 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.391476773 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.871642985 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.857664938 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.357831769 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.975848527 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.899212934 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.867531158 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.11050024 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.876534167 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.858924967 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.858858303 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.894948582 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.87466623 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.858821545 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.21695121 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.872270926 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.875817078 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.86215771 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.859410354 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.040587761 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.868064015 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.028118098 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.868726822 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.864840519 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.860649633 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.109679476 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.876751866 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.40717345 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.873901582 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.858913953 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.964567691 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.032836938 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.380209445 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.872410273 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.043497127 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.31337293 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.884303522 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.869818736 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.337829078 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.88708997 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.867019745 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.861904041 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.860805801 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.859416299 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.904147366 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.876976927 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.306719763 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.399688333 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.236384577 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.886319491 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.872113003 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.861042559 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.219224806 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.868131283 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.860233965 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.097252392 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.412823833 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.875863944 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.867038197 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.382155705 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.87699884 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.879840514 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.869176848 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.117820488 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.876969062 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.904125652 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.860460775 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.867574763 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.862996527 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.878782297 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.868342563 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.860755626 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.370321319 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.985142038 seconds)
  done (took 231.477821425 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.860608484 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.859687509 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.861792344 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.86221121 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.859176785 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.86098413 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.861090235 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.860086056 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.862683381 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.859848804 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.861047561 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.862803697 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.861436562 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.867733791 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.907497617 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.86370442 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.464314015 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.858890393 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.860679185 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.861369667 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.503458671 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.866170299 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.861493224 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.86257244 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.862299028 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.862917781 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.866795689 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.904883611 seconds)
  done (took 167.265541258 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.86244709 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.974287972 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.882605827 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.890918316 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.870245907 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.862217829 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.961686004 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.884711548 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.86913177 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.862152397 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.862732748 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.923956585 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.874861058 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.960283902 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.896969009 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.969186004 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.969972041 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.872535396 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.864222778 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.863630465 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.891157587 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.872986309 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.925170912 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.987171303 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.884250704 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.976912152 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.885128363 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.86464867 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.863692169 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.976034129 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.883685436 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.925320342 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.893609175 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.882408804 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.982687846 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.98162086 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.970775325 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.972307051 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.875283285 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.864951711 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.864956064 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.866495609 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.977994466 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.883847757 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.865803235 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.981111057 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.884050859 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.865201253 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.865140887 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.864463507 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.879610372 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.882602178 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.929437768 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.996419139 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.900677371 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.8891068 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.962475147 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.997429963 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.867899975 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.962311742 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.8779281 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.978992309 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.886499534 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.866084141 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.867888894 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.869419265 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.895108897 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.971900984 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.974208343 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.877340791 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.963104456 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.906430141 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.874320449 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.867326304 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.866496316 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.979998426 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.983379328 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.904970576 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.903385562 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.897145811 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.876439087 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.866831185 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.869843923 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.884004975 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.873202998 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.981134197 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.983845638 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.875910631 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.867206158 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.866586018 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.867193064 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.891670051 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.987627857 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.90416514 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.973469061 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.93811632 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.940733258 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.881906094 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.881593 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.871390111 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.929616299 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.883523848 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.879326247 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.170454577 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.927989553 seconds)
  done (took 202.409579312 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.271571072 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.917748184 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.923780958 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.184180116 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.232499329 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.822718122 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.914606172 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.917658245 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.948545907 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.14079266 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.991255844 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.935937359 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.901796483 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.888841159 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.917184388 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.949613557 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.923365588 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.245745082 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.120697705 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.463961746 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.907580494 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.18624987 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.240220917 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.5218725 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.965027057 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.354268205 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.543347735 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.091048233 seconds)
  done (took 63.229452173 seconds)
done (took 818.406623421 seconds)
SAVING RESULT...
DONE!
