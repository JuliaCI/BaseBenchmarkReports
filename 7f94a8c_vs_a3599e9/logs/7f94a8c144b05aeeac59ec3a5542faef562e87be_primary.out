cset: moving following pidspec: 31334
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.257317906 seconds)
loading group "string"... done (took 0.559021411 seconds)
loading group "linalg"... done (took 7.654429105 seconds)
loading group "parallel"... done (took 0.173706286 seconds)
loading group "find"... done (took 1.189314842 seconds)
loading group "tuple"... done (took 1.872480034 seconds)
loading group "dates"... done (took 1.275175037 seconds)
loading group "micro"... done (took 0.237093257 seconds)
loading group "io"... done (took 0.772140228 seconds)
loading group "scalar"... done (took 42.577017039 seconds)
loading group "sparse"... done (took 13.737264553 seconds)
loading group "broadcast"... done (took 1.196208736 seconds)
loading group "union"... done (took 14.346778789 seconds)
loading group "simd"... done (took 5.155650704 seconds)
loading group "random"... done (took 10.47598586 seconds)
loading group "problem"... done (took 2.221704364 seconds)
loading group "array"... done (took 24.228188266 seconds)
loading group "misc"... done (took 2.285645833 seconds)
loading group "sort"... done (took 3.904296212 seconds)
loading group "collection"... done (took 20.928080765 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.584454493 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14658934 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153638414 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.151806091 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.194968139 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.161272392 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162819695 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100245666 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.025491247 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.182646619 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.157164431 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.528790267 seconds)
done (took 5.342616769 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.238622263 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095353155 seconds)
    (2/2) benchmarking "String"...
    done (took 0.107278194 seconds)
  done (took 0.934495247 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078546786 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145289631 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097221681 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078828685 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097893704 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079211206 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097470058 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080725819 seconds)
  done (took 1.411868226 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086905173 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098859064 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083467001 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.100095159 seconds)
  done (took 1.105008548 seconds)
done (took 4.513831243 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.756355337 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279909998 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204539824 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.472865359 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203090466 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.223227839 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681850696 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.345821912 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253808008 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.102753713 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.148152586 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.397090242 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.141620768 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.682322003 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089610493 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127561744 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.18224077 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45065996 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.083094868 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112300988 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.118574207 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142667537 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132504446 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095247575 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.193280024 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082485871 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199187705 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.114379533 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081216366 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.292465211 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.203529165 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.695145777 seconds)
  done (took 11.062951066 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11125282 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.136045234 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.101677582 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140375326 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.13462398 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103020955 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086176454 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.100182177 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12536276 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180700768 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116564881 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.139633527 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098104624 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083378179 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119497406 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249462346 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123570181 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106628116 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.104302429 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106229346 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123601356 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.117448883 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112732798 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.096041033 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170605305 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.225514713 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110470169 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127236634 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097449647 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115265252 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146577143 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.145003259 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.09586145 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081735744 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.179089866 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127830704 seconds)
  done (took 5.290675196 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.112148917 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.196852349 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.126482053 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.177121273 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.08219774 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.147827616 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.09890542 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.118281785 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267592373 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.179553267 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179703942 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142080299 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101038406 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098584302 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081849499 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.112209965 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.100167783 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.683209798 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166504716 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.119158591 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119224604 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107436129 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.107714064 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079428526 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106594264 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081153886 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101006057 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.109104527 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.325541852 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1652019 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102642702 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.17246407 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122623449 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083774186 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.138562748 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.217298862 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.1089528 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138240334 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09858761 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.083959257 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181990919 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.108528049 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080914101 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.123932872 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.124746583 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118405061 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.102148652 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.100441196 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.209651417 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140355838 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098854402 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099450525 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.969513434 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183135724 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.090607911 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09812888 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.336941803 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.10092144 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10051929 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07985547 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.28167117 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.18686535 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.101943605 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080808333 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099764411 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083079204 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.404773873 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082716448 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.641302258 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085098482 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109989269 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084330889 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100638568 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106724825 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090397744 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.119779623 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081903185 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.103273307 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.080872569 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099880517 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.083868994 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113221706 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107529986 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082638062 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169639364 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081881437 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120021084 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129714616 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086639979 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.098552945 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134249529 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086112607 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.101966469 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138340468 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082897662 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.113242367 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.097183228 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085075204 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146913056 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.10138982 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.142758674 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.097152007 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.12730774 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.103423638 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11746785 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.117961339 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.102581566 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088217818 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.099633467 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078602401 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.170300208 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082663491 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100873876 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.083097948 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.114404541 seconds)
  done (took 22.924392046 seconds)
done (took 41.123825259 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.331330165 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10837387 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.108820529 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107933038 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.106401637 seconds)
  done (took 1.577584473 seconds)
done (took 2.366347953 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.300484542 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.181293593 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100100498 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.17580781 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096550895 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.18079819 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.167078389 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.115248291 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.209655388 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098667377 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.170589847 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.097544067 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07888509 seconds)
  done (took 2.784399258 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095973946 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.118803883 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084324098 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11536772 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078337705 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115629903 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094350792 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.122705269 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11337934 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089645708 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097224015 seconds)
  done (took 1.910995363 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095175051 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116532038 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084883654 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114244987 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078855825 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114240567 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094752371 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121223801 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11403048 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088590875 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097575927 seconds)
  done (took 1.902750689 seconds)
done (took 7.372289169 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092230333 seconds)
  done (took 0.869797859 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.965853633 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.050999338 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114415595 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.156439075 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.31440349 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.199162235 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.494222869 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.129558103 seconds)
  done (took 11.417781609 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.150891316 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089219368 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.105459622 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086504567 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.108457603 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.084436374 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105870895 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.103437985 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.088839836 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.105230063 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086163395 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106651677 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.104812975 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.08502744 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103414086 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087160157 seconds)
  done (took 2.4429259 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.12182471 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.120066512 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.112412207 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.113285675 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.088642078 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.110689057 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.11113931 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090510405 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.106387179 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106830852 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.093078564 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.110609651 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.107286352 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081704014 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.111785473 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111189415 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087315182 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110954046 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109977651 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092935671 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110834817 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.099300276 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.089356057 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111813075 seconds)
  done (took 3.406254934 seconds)
done (took 18.918893668 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164750476 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.11240429 seconds)
  done (took 1.062713937 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097964765 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117459194 seconds)
  done (took 1.004614727 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099437716 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100547167 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.127121073 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.113550216 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082136091 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.100147175 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.12494541 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.083167061 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.101378989 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082086308 seconds)
  done (took 1.80711127 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084441781 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.114371813 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104551327 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.098692931 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109991578 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.098310233 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.091751645 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102683167 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.115195986 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079238965 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.106720535 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118536343 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087931052 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.121027865 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.110005366 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085423959 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106723678 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.103157719 seconds)
  done (took 2.631967505 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081043565 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101113114 seconds)
  done (took 0.976469857 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.08386193 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098157422 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083800277 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101853702 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096886155 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.079246735 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098072258 seconds)
  done (took 1.436187527 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.502104935 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139818271 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.263534258 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.08668305 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.125423943 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.312236014 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.102596702 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086790495 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10885586 seconds)
  done (took 2.585147331 seconds)
done (took 12.29372706 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096062482 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.121774332 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115136594 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.481389787 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.111456914 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.10277517 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149494257 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.259446947 seconds)
done (took 2.23562918 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.144797673 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32879346 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120173565 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.069206266 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.102997464 seconds)
  done (took 1.420267297 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081302131 seconds)
    (2/2) benchmarking "read"...
    done (took 0.103205905 seconds)
  done (took 0.983637497 seconds)
done (took 3.352433946 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082571071 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.133951609 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.080809676 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.101542575 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.08110572 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103678748 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.0786062 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.101248608 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.07949285 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.102004335 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099547189 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082942949 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.099437237 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.082937077 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100772669 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080580098 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09792404 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08208766 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.098236436 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079734754 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097821693 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082317536 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.098506724 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080019067 seconds)
  done (took 3.04675234 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101440714 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.103296553 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105551794 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088799019 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105205565 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087917645 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10877797 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.100829018 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088333299 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103639232 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103952608 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087630463 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102887332 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087223911 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103742788 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.105261169 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08905164 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101691662 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084151382 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105127629 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.106467906 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083888676 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104857283 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105616205 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087733937 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105939262 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084932675 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.102890504 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106607756 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.087153069 seconds)
  done (took 3.746399125 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086628441 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097043458 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080738015 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105163818 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080172523 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.101552218 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.080397609 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099633332 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081788655 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09895312 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081638121 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099154482 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.07920131 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100506547 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080383871 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.1037038 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112145129 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08075642 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098743438 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081853126 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102022231 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.081012899 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09996338 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080558034 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.099006033 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080186034 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.100077072 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080028994 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.100049605 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079541186 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103290674 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083961558 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099540848 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085259867 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103972982 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079350155 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.103734406 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.079570073 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100643513 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097812943 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080586941 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.09884364 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.0807532 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.10590018 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.081331445 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101295062 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080833616 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100772897 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080581636 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.103244909 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.08021999 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099121548 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081617955 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100793964 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083111932 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.10026364 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098756876 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080698532 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099244015 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080808513 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.097922195 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080921157 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.101690469 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081756858 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114549065 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.087850465 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099638644 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081682323 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100583643 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081702856 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101908186 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.112956877 seconds)
  done (took 7.441562271 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08483182 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109937111 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082337422 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102498055 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07833681 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.101183624 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.1022611 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081927689 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10158837 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087703551 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099974707 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081121561 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102633955 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111118737 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082116313 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101778288 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086955188 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098258959 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080608458 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10457589 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.08055547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104889899 seconds)
  done (took 2.877693673 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.217036754 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109730244 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.147676724 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.111782353 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.086014646 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110678482 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105711372 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089355029 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106629497 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086681451 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105172011 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106092694 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.086917359 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105973253 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103359515 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088432911 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106214675 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087151607 seconds)
  done (took 2.775406026 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095453548 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103102657 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.105449542 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104093188 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.104008055 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085739203 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109551442 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112416293 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086566211 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103101641 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093301757 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106010826 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104719915 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084441655 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105110962 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082882507 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105681051 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083552651 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112148592 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109209531 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.107312892 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09397386 seconds)
  done (took 3.014623597 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098678888 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104847502 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122241611 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086730553 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099542296 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081895094 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109840444 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08239994 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.112592539 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103702783 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084429417 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.102014738 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.090198216 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103209846 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.108082101 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084601213 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105318454 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083438048 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104810848 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079375072 seconds)
  done (took 2.766916606 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105457399 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10453495 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.216064308 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095473985 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.1059733 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.084651127 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115348215 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104604028 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08429537 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129685803 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105260603 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084276962 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115256622 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110557003 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.103590838 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095451078 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11361647 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113853114 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084298003 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105001341 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130133847 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084224726 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113212231 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.104190464 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084787379 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.105312291 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103642349 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.091149493 seconds)
  done (took 3.814605185 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082752812 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10227531 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.082164904 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.100238309 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081359527 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099572089 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.082031625 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.100576761 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083616257 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100146262 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083933598 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10346964 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086500585 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.10293592 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084313847 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102587595 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083669827 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.101044302 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080966005 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101172026 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083886468 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103432663 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.084337377 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101186572 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079987904 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.103285585 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080291547 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101759856 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.083161959 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100867985 seconds)
  done (took 3.590183492 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.09220616 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111088284 seconds)
  done (took 1.02525878 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.081671022 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119000069 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080621592 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107770949 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088584666 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.105504564 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11261299 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088744388 seconds)
  done (took 1.606723564 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098045826 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11571982 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.084857587 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.119007843 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.114014179 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098202015 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170998191 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.105158735 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.088931087 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102686531 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.116449091 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084412753 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.108870624 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084000016 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109134405 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09031746 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.101474796 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.089607294 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.107489385 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102093785 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086815276 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114556393 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086486876 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.102045094 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084621462 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.11625131 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112886727 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.085395825 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108145204 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.111696167 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.091152707 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.09698975 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084374954 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.104844973 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.082105778 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113526848 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115925159 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08826721 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.112213867 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085495321 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116816903 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098502656 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.090036484 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.109845589 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094940187 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105303174 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.085511139 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.100066184 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100744304 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087349999 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098771421 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084915472 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09823838 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091661428 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.108216766 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116098093 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.084234153 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.105580671 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088357762 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.107606029 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090520519 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.106646117 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086537682 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.104216623 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110486369 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089102747 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111732127 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078961506 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.101517696 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.08197176 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113227691 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.127729671 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093101952 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.106638325 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085601891 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102721127 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106774898 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087377284 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112245147 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093649508 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105855495 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112013472 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092986442 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105101712 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.087900784 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.113571571 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.102030125 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.088121571 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102173246 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099079767 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.104188995 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082101869 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102320501 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11230142 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088254787 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103645941 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.082361549 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111760227 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079343758 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.106888056 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084503658 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105858527 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112947381 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091276289 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111340338 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.111367152 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.0925535 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104628068 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.087851167 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.101337883 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085440118 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107759002 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.090530967 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.099555382 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106281728 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087319638 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.104677389 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.093054085 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.102950346 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083956366 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113581022 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110483374 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.084395194 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101459613 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088564021 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104606354 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088122147 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.112008004 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.102207082 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.08063089 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.099173185 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089413619 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.105016094 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.088757641 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110636421 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107275959 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079910205 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.102570859 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089617196 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.112832945 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084068018 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106000616 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108656963 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08569383 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103719949 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.091006959 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106381325 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083607676 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109412709 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085766553 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.101573342 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.10895683 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087352214 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.1044427 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088775799 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108949683 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085403112 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.107590661 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10264215 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.091986055 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106381578 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083613294 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104472116 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.08332943 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.114780661 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.106396429 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.081216707 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.101395328 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093318511 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103516093 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084008374 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104066557 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086548422 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107308278 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.102327373 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085382111 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.106488684 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097208432 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.110787064 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105266368 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091745435 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11553134 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084608779 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.107115132 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.083676931 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106504007 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.105194383 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09280179 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.110912123 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090168 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.108060185 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080257946 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112217721 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112391298 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084094193 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.103307765 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084215896 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.109649339 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.110530733 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.090540882 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106333985 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083978584 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106094689 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089069992 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109176031 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.103981626 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085687279 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.110872388 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.085560624 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.113127045 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106159504 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.095484694 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108468679 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.080332072 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110579117 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082936084 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112031503 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.079074685 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.103702416 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103066497 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.087395056 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.104235819 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.088087061 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.099283917 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092157965 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114644998 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.08394727 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104929624 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.105040965 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094737289 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.107000925 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08918836 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.109610767 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089122597 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118646085 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104605495 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088521968 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.115206737 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.085283439 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.100102622 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110210553 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084748286 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.104913411 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.085644136 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.103720455 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089078291 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115416735 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108879251 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081127341 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108046652 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084465136 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.104394418 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081905871 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112381394 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088394592 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107867664 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114131846 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086990317 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.106766248 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.08911413 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.105548303 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.086250175 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10772861 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109481088 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087357844 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.107958037 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085224239 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107525001 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084628412 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.106815111 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086139241 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.106566526 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.10478971 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092848632 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.104971076 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085892454 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.108582701 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08656443 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107222671 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085333082 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.107154704 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108364815 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087143129 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105622191 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088386399 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.101197049 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092930633 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.106500474 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092418802 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.107045033 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.102186888 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092016443 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.107732419 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.090783379 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.108069089 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106058344 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.087709465 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.105811524 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089478164 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115893267 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082837292 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.115871648 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111446984 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086969692 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10857824 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.086539119 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107715673 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084254803 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.10809739 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.085909978 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.106458573 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104512987 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.092144187 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.10894452 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.086004418 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10883906 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.087197156 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.106624622 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.085928694 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.101514991 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083599384 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10634426 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105737509 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094602787 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.107320926 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.089150286 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.106080625 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087039442 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.106573003 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.101858131 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.095203135 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1163885 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087136684 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115088033 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.104523579 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087759119 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115723349 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.079150736 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.105260737 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083113784 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.104831264 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113366539 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087729818 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.115285084 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086009459 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105671968 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083099603 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.108125679 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.083931869 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.101456266 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.084180777 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110404181 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.10912594 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.085165075 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.106542435 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088501996 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108637053 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.100985067 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.106437844 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10679844 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.088307982 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.103706739 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085686503 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104988007 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090178336 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108072355 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083741655 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.104526751 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.08535159 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109172277 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.08546568 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.107598181 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.108009092 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093397685 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106394995 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.088618995 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111392845 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.080697086 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109501654 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.106417858 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086056187 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.1061981 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.0902906 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110858213 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086721099 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.114048052 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105995892 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086781879 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107097669 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084555124 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.10662312 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085339284 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.109054256 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.083747952 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.108411125 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.114265438 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.085370933 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.108916597 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085413491 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107787635 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090210831 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109095549 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087724889 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115458497 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109976058 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.087256343 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.113061784 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.090125413 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111264213 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108331611 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.088683184 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112352299 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085233211 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115872554 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085913371 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109246869 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.107715718 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085430721 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106177962 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086563319 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106244738 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090520748 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.108333354 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084046283 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106473092 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083801587 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.109196663 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110882318 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095181999 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110291263 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088733159 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.10346282 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.082089561 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10983147 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.103869388 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089191346 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109862258 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092863697 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109912952 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086313938 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106954292 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113672983 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093388728 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.11197454 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08535598 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.11256379 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087711143 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.110435516 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.106457907 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.087947756 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109410656 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.09272938 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.108832207 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.086395972 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115952086 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.111078404 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089415244 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109120186 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087400442 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107360649 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082211586 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.109363963 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.087970978 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115512111 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.109314835 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087445002 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117108986 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.086226477 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.107965913 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090287031 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107692331 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.113516399 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082756112 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.107835512 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088251786 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.110088065 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.081762785 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.108193354 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.083883223 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.111119577 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084985223 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.104660019 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117246964 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094407456 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110901837 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085303129 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107500991 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082026154 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.103945187 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.105917081 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090509768 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109195719 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.096580886 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.106861342 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.086426974 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.104031391 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087340185 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112535197 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10956626 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.08648009 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.103700449 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.086574526 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110624394 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093486263 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.107616429 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.08599534 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111952669 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109316463 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.086290174 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111606452 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084465053 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111881837 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096193276 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110527165 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107503029 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093317123 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115896673 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.088769121 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103707066 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087192412 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111124414 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106497107 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.090640477 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.109939288 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100854863 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112886278 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086063919 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.107674765 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.11020069 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087699365 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.115470332 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089175387 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.110093663 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091445584 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.110454491 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117767158 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091255424 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114348749 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.088325916 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111305688 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106999877 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088342844 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105874709 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.087189637 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109647501 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08931821 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114222204 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116412883 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086445868 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118097164 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.095664674 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.114135637 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.08302738 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.108760984 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086397833 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.105046028 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.108630055 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.086298348 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.105840935 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.086163773 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.106795978 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.088679517 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115263317 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.087960919 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.110461225 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107099155 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.082281074 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.111388461 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090391528 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109055997 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.084391625 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109298104 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.088512728 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115798953 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112145227 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08944043 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109785966 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089775092 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109664298 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.082677277 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.115611307 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.085859624 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.112001937 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08560466 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.110287495 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.108751729 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091961777 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115054645 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088359197 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.111861489 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121286433 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090666802 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.106171185 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.085007718 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114621019 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.085404785 seconds)
  done (took 60.165631138 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.150979472 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085243017 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104032253 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.083218749 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118475211 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105125907 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083401923 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105721572 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084057934 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108047151 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.082106352 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104529565 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115294493 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12999089 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097975914 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110377638 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082966835 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106671109 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103802561 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084779656 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.116352697 seconds)
  done (took 3.038665337 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106814453 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123941995 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.121929162 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.125048848 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.094641865 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121807834 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120664999 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.120951409 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.104067096 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117212208 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126905627 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.121534951 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.096210715 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.117477863 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116132228 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097166555 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.126341362 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.116219577 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121116552 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09964073 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120099147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121598536 seconds)
  done (took 3.409269624 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.08666163 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.107942476 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.089579183 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.103096999 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087149854 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.10430666 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.092230718 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.107420722 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.091625041 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.109899609 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.085533708 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.109374904 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11003345 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.083782337 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.108386699 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086259072 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.158172102 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11393363 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.085910858 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.11187297 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.081859047 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.112089934 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.103463339 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083717593 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.108575386 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.091715582 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.109689361 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.086267418 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.109230193 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.086832075 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.110203988 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.084525926 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.111247859 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.10857349 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.087151329 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.107833512 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.087460523 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.108785884 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.083380146 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.106789012 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088601755 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.105354072 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.088621421 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.111132674 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085204967 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.107784066 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.088394687 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109298903 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102844961 seconds)
  done (took 5.764695809 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10480919 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.168983437 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090783178 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14996887 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.128163496 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.118117988 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.091654541 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149480131 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.109459712 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086023301 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.129692061 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.127220667 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.110429578 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.093374292 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.116329566 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.109772535 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.090115307 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.108571967 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.113280955 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.088897176 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.115473931 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.093230773 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.127094424 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.124030025 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.114692297 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.087253877 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.109748156 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.114297799 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.103144972 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.116265983 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.11577237 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.094891076 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126682478 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.115807842 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.087325701 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.112764365 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.128575881 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.109783999 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09238637 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.107082575 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.090219588 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.115301836 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.117521248 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.107060518 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.111724973 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.115317575 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08855878 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.108256426 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123660222 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.09086658 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.119463271 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.125463703 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114118913 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.089496871 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.115780889 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.126599171 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089753977 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.109325162 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.092032994 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.123208213 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.108293609 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091991221 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124610861 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112390627 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.117874797 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.10449722 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.116574624 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.114261361 seconds)
  done (took 8.573910992 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09500404 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.117998638 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.127983788 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.126398758 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096082376 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.11743133 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116311732 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.0954715 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117606375 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123880114 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117275943 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141870538 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.090762724 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121214187 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11718948 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096702823 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119874603 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117632442 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.095994029 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117686989 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.11807258 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.127289363 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.094762334 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127532843 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.148738898 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.112204767 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.095223772 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117899677 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127583762 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.116763938 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.130641295 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.096485602 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.118150768 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.128016683 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.130463151 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.096178161 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109841266 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116768903 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.096665394 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.117954134 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.112258888 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.106238479 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117970307 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.111656722 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.095359549 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119499612 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12800945 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.130819977 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.121297303 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10115543 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.119342348 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12774744 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117205932 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095484695 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.128197995 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153666821 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.127462917 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.128465356 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118187165 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105834169 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126768959 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135470133 seconds)
  done (took 8.11015882 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108673239 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.1224205 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.124698797 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.105656923 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.087612149 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115642445 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087394952 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.108455112 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.120380257 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099220719 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.124494556 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115603213 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095879072 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12347587 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115382207 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118316194 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.092289019 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115947281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.122108559 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.114690219 seconds)
  done (took 3.106458103 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094835228 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.130970579 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088916257 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.117737089 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114334264 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095044939 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.114073103 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113114161 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090691208 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114214514 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100655588 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123038092 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112529476 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095654327 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12326467 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11782426 seconds)
  done (took 2.63501727 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097758768 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123967147 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.12819155 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.088468241 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.109860852 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084222971 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.112904303 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.106702085 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.085940643 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.127487133 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088317987 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.117630532 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.111872135 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087412233 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107882243 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.092325964 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108906071 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086278514 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.111403183 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127666769 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.100494049 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.111426612 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.111085543 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.09164321 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.112542307 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094072854 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.113145708 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.109321375 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087438508 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111784022 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089579317 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119725607 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.108022816 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.088608756 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10947707 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086556434 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.112122026 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.088854808 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.115439477 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110671092 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.087946287 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.11198546 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089600199 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.112537588 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08390038 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112275657 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.106777045 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.095994927 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109196338 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089297584 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.112925527 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.112666866 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.091463894 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.123099707 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.092525524 seconds)
  done (took 6.602038805 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099754834 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.114049199 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084167043 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110266159 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091491077 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114374637 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114930297 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09277066 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11265472 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087019133 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113460924 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.094589968 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11443155 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.115853422 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091709547 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115846016 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08511474 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113627491 seconds)
  done (took 2.763741906 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092486981 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111770787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097503393 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112407277 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088920662 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115208244 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08451868 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.111858827 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108914978 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090944738 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111232629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.09161926 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.110370637 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.091569136 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112756216 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089125905 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.114653514 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109620095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090882003 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106859159 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.092790212 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110597634 seconds)
  done (took 3.1426676 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.120593221 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.132202984 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096302998 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.243515614 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107701656 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.1403624 seconds)
  done (took 1.737714211 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109719989 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128112643 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113077283 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112470682 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123181117 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090467259 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115530927 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114854984 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125318155 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10791134 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114192122 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124957425 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125003853 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102021516 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122228817 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122032181 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113906579 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094037615 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112590578 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135463454 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092066226 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12580918 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114576267 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092936158 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115789043 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125063129 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125474041 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128752184 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093786598 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125400831 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121308115 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092281906 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125379068 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128807561 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11415912 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.104108951 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115204125 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136134227 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119579732 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102909898 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116530929 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121730801 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102399145 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119761191 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125161994 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114718932 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099064715 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115483526 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114782436 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142473201 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098904825 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124518394 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122818485 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125702891 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102177333 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.16485673 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10708122 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12479728 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122917754 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130467872 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124446782 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098220794 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124753443 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129395972 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12150102 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124451383 seconds)
  done (took 8.626910969 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103791901 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133163823 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115188972 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129908144 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.102700073 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115049423 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115587792 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092564899 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115658911 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113176704 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.16173027 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093443759 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125548819 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124766023 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090975663 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115873027 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115120476 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124343874 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092470961 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.143576986 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11527898 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124436149 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.124593974 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103348845 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130992355 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122755753 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114760139 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093656066 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115584182 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114014759 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098862165 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115783576 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1248226 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091076363 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125521526 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115589162 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091603962 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12176845 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115588082 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122080298 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102834649 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135493295 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115747707 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115032617 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108361842 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117047148 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115444417 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09101802 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116250755 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114365065 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106743994 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131157751 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129992663 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125311323 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114424019 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092878389 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115060967 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11535511 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093758258 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124154528 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125924883 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.092361194 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.166339062 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094152707 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116397826 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125502503 seconds)
  done (took 8.512571381 seconds)
done (took 162.696021085 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.229202219 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.235557639 seconds)
  done (took 1.365920271 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098748956 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.144007841 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100445382 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176766652 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106366337 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122890049 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.142708359 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09809782 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.112189435 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.090843556 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.114445191 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092355443 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.179960594 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085292085 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.113175324 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.113953979 seconds)
  done (took 2.800280819 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202198614 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.266201961 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107164891 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.112850867 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.093526483 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.118222627 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.111320859 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.097964986 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117624305 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.0907707 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.116548066 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.090980328 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.113219129 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.090307607 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.117866623 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.091415543 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.113968208 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.092079297 seconds)
  done (took 3.053507697 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114434388 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.157249835 seconds)
  done (took 1.186637166 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119878042 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.18725507 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.329589977 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.163557986 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.112528501 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.135096022 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.164797268 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.139112639 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.206799322 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.130097322 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131131805 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.10283044 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.148879995 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.123109128 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.099420966 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.125902174 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.150360392 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.097223218 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.12356282 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.123750476 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.122071211 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.113811837 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.122295641 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.098904135 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.189398616 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.128019315 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.089007875 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.115133845 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124038008 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.100502758 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.120775975 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.133244909 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.104343667 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.188318322 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.108086848 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.18746139 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.104149306 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119732851 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.121565085 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.097413407 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.126427333 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.124962308 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.110071082 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.126413548 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089950185 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.126005159 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.112767372 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.091612855 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.122341564 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.10247756 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.122049768 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.121122967 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.164039333 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.125981852 seconds)
  done (took 7.978923927 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799889055 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.16470572 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095575493 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.911292608 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.145803927 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109570596 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.801769256 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14277799 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.2400823 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.774193443 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.141678746 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129660414 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.236312106 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.245928478 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968186376 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314378072 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.680459411 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.1074696 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.159453259 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159955385 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.126248429 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145075317 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.135820623 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.435882872 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100839283 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120085917 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.100695651 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128268556 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.166445161 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.133489957 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.121624751 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.186002915 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.257287467 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.211398527 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122832532 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09577266 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118126309 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.177136964 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.279247288 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.223627159 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.188595772 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092801418 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.118479763 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.105347023 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.139482735 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114697828 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.172992613 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.183532667 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.202977689 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.098017768 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126981802 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.126989195 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.104733789 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.196682555 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.10445419 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.330532301 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322099761 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.118116072 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.104147458 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135197177 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273405324 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.130065509 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.234896027 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.123649095 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.221743462 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.117031714 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79680849 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.199303642 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.096784061 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.124382833 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.103433782 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124968495 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128541396 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175493522 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.400630771 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131870634 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.099079625 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118449237 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211994955 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.133927648 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118246631 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.171027692 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.100347768 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128337939 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131772205 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128882029 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17844928 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.238892669 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.131782823 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127396372 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.099154578 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.132958877 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122780763 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.219636633 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.229621496 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.170226557 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.221203472 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130813764 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.171956234 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.199055435 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103569105 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.203702453 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105292782 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.133298492 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129296083 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.226348463 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.152778635 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.107193278 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123009439 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.124913391 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.154976538 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.112182932 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.126861316 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.177871536 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.488089257 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.178964342 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.115207188 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.112898802 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127830319 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.169131796 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12680627 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269845586 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106092521 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.200839552 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103303775 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.116213634 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.127409762 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.17121658 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129761319 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.104919603 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131041899 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126191947 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.243957809 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228015533 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106675163 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254122117 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.192698833 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.125924638 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.181348677 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128921093 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.17753417 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126836868 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.105704008 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123811458 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.805587173 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.107062203 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.129617377 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122633619 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195236641 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.0959263 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.131143784 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.132059227 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092678615 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.794215225 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.13590113 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.104969759 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.132950706 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127301749 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127455631 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.103285278 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123907383 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.171353278 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.24032729 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.128982787 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.103255354 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.133523671 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.167791549 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.12517377 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.133040075 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.133100553 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.109960964 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.13028818 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121447766 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.108192601 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.202098121 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.172230085 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.230809595 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.577481224 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.120640165 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.132599054 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237501294 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096704096 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.298978541 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.127459877 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.211728043 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.196661312 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.104644269 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321395645 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.197215239 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195853308 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.112504911 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.205725911 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.093748295 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126538474 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.172930332 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.119093352 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100817245 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.194806812 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.109727149 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.132119348 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.968749426 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089755456 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.255300063 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.09266061 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.201683719 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102400599 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128662822 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.308452602 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095882716 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138513352 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.172552636 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123229435 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.132970776 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.709107723 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.135021371 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.13080775 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.103153722 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.232920484 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.171812003 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.127365082 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.128072608 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128642214 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.173000442 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.217708727 seconds)
  done (took 45.834097479 seconds)
done (took 63.124973932 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.290933478 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.226789255 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.281889644 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181430737 seconds)
  done (took 1.995237981 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175299912 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.159813395 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.128270201 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.116273219 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.160493839 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08963301 seconds)
  done (took 1.767259056 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.362223148 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278094538 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.248486633 seconds)
  done (took 1.831761735 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.299291397 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.257048685 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.485315881 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.334515868 seconds)
  done (took 2.443221225 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.220622584 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141110382 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.119626167 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.109821189 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.210962533 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.261412519 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.150354746 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.213516842 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.104267827 seconds)
  done (took 2.519524982 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.20858536 seconds)
done (took 11.705736103 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.13483694 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.312264274 seconds)
    (3/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.258759953 seconds)
    (4/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.236271017 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.207190211 seconds)
    (6/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.144375319 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.13491902 seconds)
    (8/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.169644322 seconds)
    (9/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.12844396 seconds)
    (10/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.098508575 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.131059514 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.099100213 seconds)
    (13/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.12681432 seconds)
    (14/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.159562266 seconds)
    (15/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.236732408 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092716405 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.096880584 seconds)
    (18/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.19148831 seconds)
    (19/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108012856 seconds)
    (20/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.173722286 seconds)
    (21/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.214066267 seconds)
    (22/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.232988338 seconds)
    (23/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.221982254 seconds)
    (24/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.100140633 seconds)
    (25/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.198902276 seconds)
    (26/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.192602634 seconds)
    (27/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.233138427 seconds)
    (28/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.103612526 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.231289948 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.146257036 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124874008 seconds)
    (32/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.147620487 seconds)
    (33/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.128833221 seconds)
    (34/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.228855978 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.123229991 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.145403603 seconds)
    (37/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.125561742 seconds)
    (38/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.105183803 seconds)
    (39/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.117950476 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.107418672 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.145408566 seconds)
    (42/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.120329333 seconds)
    (43/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110063481 seconds)
    (44/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.148805058 seconds)
    (45/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.101555047 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.122979528 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.099724481 seconds)
    (48/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.182613258 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.099462556 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.118293107 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.175560298 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.193127263 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.094031394 seconds)
    (54/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.254687934 seconds)
    (55/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.166526156 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.092579097 seconds)
    (57/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.123557864 seconds)
    (58/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.091327373 seconds)
    (59/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.117821095 seconds)
    (60/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.071710842 seconds)
    (61/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.131369324 seconds)
    (62/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100815288 seconds)
    (63/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.153117811 seconds)
    (64/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.231589346 seconds)
    (65/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.120025997 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.147435118 seconds)
    (67/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.116318788 seconds)
    (68/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.104731008 seconds)
    (69/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070863445 seconds)
    (70/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.197272444 seconds)
    (71/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118425933 seconds)
    (72/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.097485471 seconds)
    (73/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.126787107 seconds)
    (74/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.098948313 seconds)
    (75/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.189554802 seconds)
    (76/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146264116 seconds)
    (77/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.179698012 seconds)
    (78/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.207977382 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.092838042 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.145036494 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090961799 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 0.118666004 seconds)
    (83/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.092626087 seconds)
    (84/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.128811179 seconds)
    (85/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156856547 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.167944224 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.190451664 seconds)
    (88/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.180198494 seconds)
    (89/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.146177084 seconds)
    (90/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.074503993 seconds)
    (91/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.21029893 seconds)
    (92/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.102435967 seconds)
    (93/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.123213768 seconds)
    (94/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.145093179 seconds)
    (95/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.118580908 seconds)
    (96/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.124812482 seconds)
    (97/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.12151881 seconds)
    (98/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.081935634 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.137693924 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.191435751 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11994796 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.117677138 seconds)
    (103/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.07202567 seconds)
    (104/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.119299943 seconds)
    (105/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100291598 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.122432246 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.115300771 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118451978 seconds)
    (109/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.178190668 seconds)
    (110/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098990238 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.125429911 seconds)
    (112/286) benchmarking ("sort", Float32, true)...
    done (took 0.239544239 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.100454705 seconds)
    (114/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.152290525 seconds)
    (115/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.194108352 seconds)
    (116/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.107277844 seconds)
    (117/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.112942948 seconds)
    (118/286) benchmarking ("sort", Int8, false)...
    done (took 0.199497775 seconds)
    (119/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.17062196 seconds)
    (120/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.197052135 seconds)
    (121/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.097592186 seconds)
    (122/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.10114432 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.07496906 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.120517578 seconds)
    (125/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.07120584 seconds)
    (126/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.098958962 seconds)
    (127/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.158063805 seconds)
    (128/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.125636341 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.14976915 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 0.19152499 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.099754947 seconds)
    (132/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.164285909 seconds)
    (133/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.13016731 seconds)
    (134/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.096906051 seconds)
    (135/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071590118 seconds)
    (136/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12546619 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.144254399 seconds)
    (138/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.082477126 seconds)
    (139/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.202509608 seconds)
    (140/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.083758189 seconds)
    (141/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.098340113 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.098853799 seconds)
    (143/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125306966 seconds)
    (144/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099036774 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.117348304 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.100408741 seconds)
    (147/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127547053 seconds)
    (148/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.072667205 seconds)
    (149/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.12897035 seconds)
    (150/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.072796856 seconds)
    (151/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.161995565 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.091812576 seconds)
    (153/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.19467538 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.074360466 seconds)
    (155/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.106690141 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.100232006 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.191624436 seconds)
    (158/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118754375 seconds)
    (159/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.093373122 seconds)
    (160/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.182747247 seconds)
    (161/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.113825149 seconds)
    (162/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.101343176 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.1006618 seconds)
    (164/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.133842293 seconds)
    (165/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.100548432 seconds)
    (166/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.183149386 seconds)
    (167/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.132117589 seconds)
    (168/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239654732 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.119695352 seconds)
    (170/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.120446647 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117006107 seconds)
    (172/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.122311607 seconds)
    (173/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.09734717 seconds)
    (174/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09983927 seconds)
    (175/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.184214559 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.074499913 seconds)
    (177/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.197804958 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.173816341 seconds)
    (179/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.095284435 seconds)
    (180/286) benchmarking ("sort", Int8, true)...
    done (took 0.231208457 seconds)
    (181/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.129830339 seconds)
    (182/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.080877941 seconds)
    (183/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.133031078 seconds)
    (184/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.102435005 seconds)
    (185/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.124150669 seconds)
    (186/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.100358511 seconds)
    (187/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.099055357 seconds)
    (188/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.072767417 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.071289071 seconds)
    (190/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.347443435 seconds)
    (191/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066522086 seconds)
    (192/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.122451556 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.091923324 seconds)
    (194/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.12731364 seconds)
    (195/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.07264806 seconds)
    (196/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.073227345 seconds)
    (197/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.114199392 seconds)
    (198/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.179777337 seconds)
    (199/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.129142548 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.098388979 seconds)
    (201/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.07370133 seconds)
    (202/286) benchmarking ("sort", Float32, false)...
    done (took 0.182226797 seconds)
    (203/286) benchmarking ("sort", Bool, true)...
    done (took 0.22938433 seconds)
    (204/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091666268 seconds)
    (205/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.16205021 seconds)
    (206/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.103174909 seconds)
    (207/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.1000969 seconds)
    (208/286) benchmarking ("sort", Float64, false)...
    done (took 0.152396136 seconds)
    (209/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12124046 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 0.230672686 seconds)
    (211/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.098479136 seconds)
    (212/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.073331684 seconds)
    (213/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.100675078 seconds)
    (214/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.127609381 seconds)
    (215/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.131258467 seconds)
    (216/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.169938369 seconds)
    (217/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.121172589 seconds)
    (218/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.100651903 seconds)
    (219/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.120756219 seconds)
    (220/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.123584492 seconds)
    (221/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.147765604 seconds)
    (222/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.123246361 seconds)
    (223/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.098773405 seconds)
    (224/286) benchmarking ("sort", BigInt, true)...
    done (took 0.239498486 seconds)
    (225/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.107303526 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.091821317 seconds)
    (227/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071951989 seconds)
    (228/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.101308916 seconds)
    (229/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.083225735 seconds)
    (230/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.124076277 seconds)
    (231/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.072900341 seconds)
    (232/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.151741857 seconds)
    (233/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.096955281 seconds)
    (234/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.125992852 seconds)
    (235/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.118526083 seconds)
    (236/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.099790355 seconds)
    (237/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.073117119 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.11727128 seconds)
    (239/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.073882405 seconds)
    (240/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.07248265 seconds)
    (241/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118531686 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.073234897 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.11858872 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.073216883 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.118512494 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.091833412 seconds)
    (247/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.096815356 seconds)
    (248/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073558096 seconds)
    (249/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.072375452 seconds)
    (250/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.11947174 seconds)
    (251/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.13368416 seconds)
    (252/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.124773138 seconds)
    (253/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.193611704 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093593317 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.144076234 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.101716294 seconds)
    (257/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.09701416 seconds)
    (258/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.093402485 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.117943737 seconds)
    (260/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.116411899 seconds)
    (261/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.125868613 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.091833348 seconds)
    (263/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.118489575 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.072584372 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132889436 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.100501214 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.117349073 seconds)
    (268/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.073393048 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.117152153 seconds)
    (270/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.07382173 seconds)
    (271/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.072057007 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.12785591 seconds)
    (273/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118198354 seconds)
    (274/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.094226224 seconds)
    (275/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.081740264 seconds)
    (276/286) benchmarking ("sort", Float64, true)...
    done (took 0.238505217 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.122360051 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.096447799 seconds)
    (279/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.111181113 seconds)
    (280/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.072330965 seconds)
    (281/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.108132747 seconds)
    (282/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.073105965 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.097165042 seconds)
    (284/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.126527902 seconds)
    (285/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.072478009 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.133965156 seconds)
  done (took 38.25870491 seconds)
done (took 39.206116329 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101799219 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.15271945 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.100899144 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.144631808 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.132702484 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.097753739 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.127343153 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.103674673 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.133609818 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.133632597 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.104585327 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.1011628 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10293697 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.128983949 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.104035633 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.149946769 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.131491142 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.101065052 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.127742031 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.091571778 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.127846511 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.090877176 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.12095926 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074638619 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.130047223 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.09905342 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.125549053 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.127078272 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.093495588 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.118534355 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.096764003 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.125423876 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.093072085 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.133022443 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.100991511 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.127983918 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.102456664 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.130265274 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.093787503 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.120051396 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.125614199 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093781513 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.124986755 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.100817711 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.124021166 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.098310904 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.126876918 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.104823763 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.150015152 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.124019358 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.102063467 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.128969977 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.102938595 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.125239549 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.096227756 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.128553932 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.09643268 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148896271 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.126870328 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.098324825 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.125784325 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.100472967 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.124317913 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.099847098 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.127429107 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.127908313 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.105350377 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.123602397 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.103094431 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.123844207 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.092840974 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.127426384 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.095797866 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.11941588 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.102051589 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.130752071 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.092028326 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.125619468 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.098714893 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.125907006 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.117705326 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097305313 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.120590712 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099898539 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.121591004 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.076038988 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.095496737 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.126379394 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.091144102 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.128741894 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.124947328 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.100519668 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.120854902 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.106538589 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.118421417 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.098110999 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.119585501 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.092554459 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.122027555 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.096430098 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.120008904 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096401678 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.128219724 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.094705596 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.126326434 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.1052241 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.120509523 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.125279821 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.093719489 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.117949685 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.108971285 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12923733 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.092957687 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.125470331 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.091809826 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.126899866 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.091701424 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.119624224 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.092256626 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.119844586 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.099258778 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.119910198 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095151921 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.127527189 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.132325024 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.094104128 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.12208177 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097771836 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.118618911 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.099767411 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.118676471 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.0943308 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.121509924 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.084835122 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.122461788 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.093781543 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.126001738 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.097940603 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.127566874 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.095334816 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.128409842 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.097570976 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.125819752 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.099068203 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.119317893 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.079930713 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124616777 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096694779 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.12111058 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.092713884 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.120811637 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.092476149 seconds)
done (took 18.086833425 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088951723 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.190178809 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.161257755 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.152032477 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.113882223 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.120332175 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.130209407 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.126252525 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.122390071 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.152763198 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.117505067 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.141849266 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.157435276 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.092763347 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119586826 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098307933 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.122232888 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108945276 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.155711694 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.142182338 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.174568343 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.091640702 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.154925748 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144218399 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.128264401 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113041857 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.120234983 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.098168208 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.124399674 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.119260668 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.142953213 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.096048477 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.122108073 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.143065756 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.111327232 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.129522189 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.093262536 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.128475978 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.093044039 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.120880622 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.149231131 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.141450811 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10083298 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.125906053 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.097562286 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.122462517 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.09601653 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.129680762 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.104658263 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.126350639 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.135236846 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.166002599 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.097232322 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.130011873 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.092369842 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.132580488 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.130070867 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.097662479 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.120294135 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.097685022 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.119706083 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.097611534 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.136458292 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.150263991 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.098993583 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.130907852 seconds)
  done (took 9.18269746 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105192284 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.146536996 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.137898051 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.113678908 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.120789438 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.09532663 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.120760686 seconds)
  done (took 1.843366704 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090238894 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.143351782 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.118825414 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.145604921 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.143972238 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.116309251 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.132246725 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.094528078 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.14215974 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.121803654 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.117133638 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161531251 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.095266233 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.131623084 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.147575468 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.094138827 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147140607 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.094340315 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.125437514 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.146194637 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.098824936 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.143437928 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.096787689 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.122668487 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.108059662 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.123490019 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.171818899 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.100445811 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.124726855 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09884475 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.121456773 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.175667915 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.108783775 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.135015847 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.121641359 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.111018818 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.156245838 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092296953 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.139597542 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.09986569 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.137410026 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.121983354 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.096423461 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.120083162 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.10097628 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.132579925 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.097068548 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.123017848 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.097587106 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.142807691 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.095173771 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.137358333 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.094526739 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.127836356 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.122655357 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.102248988 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131391404 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.096644597 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.1428341 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.096946916 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.141577428 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.139311348 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.11085785 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.140394498 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.097292421 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.1371271 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10957438 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.127723477 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.122285242 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.100839604 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.1401389 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.094460051 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.123285169 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.105782689 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.125072179 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.119465107 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.1476519 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123261787 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.107337783 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.121909062 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096311332 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.123081285 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.119766946 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.127756574 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.094652111 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.129321202 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09749579 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.121432586 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.1237317 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.099844612 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.123024588 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.097596252 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.127714094 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.097069654 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12471518 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.1131494 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.124736708 seconds)
  done (took 12.662123813 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092021688 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.121779951 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.098894782 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.123263726 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.097337471 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.123063219 seconds)
  done (took 1.673854485 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115684617 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.127104148 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.111128662 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.131248561 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16577286 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.110800702 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.139971917 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.132881332 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.114151129 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.136646583 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.138730996 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.11170506 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.146336455 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.129959415 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.111677502 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.129641508 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.110970271 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134844751 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.13558222 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.103660292 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.147908655 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.130317512 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.104251211 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141198763 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.126536808 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.104228939 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134459334 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.108832064 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.137364151 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.131722712 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.103852628 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.127110127 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.102816695 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.133383497 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.139322758 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102896892 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13058023 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.1269578 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.108800082 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.128212069 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.1122896 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.131804673 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.135684896 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.100782412 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.133275799 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.129566164 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.102445483 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.13503725 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.110741268 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.130309609 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.127121766 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.103340222 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.127719438 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.100677331 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.13068664 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.131763423 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.101387854 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.138996552 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.102711184 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.131618721 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.126412058 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100503652 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.132764479 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.125626989 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.113092344 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12742295 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.10254998 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.131571261 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.130730987 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.104534041 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.12772793 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.100315073 seconds)
  done (took 9.871273851 seconds)
done (took 36.234269954 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.708918212 seconds)
  done (took 1.722544907 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.844787556 seconds)
  done (took 1.860390794 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.291454124 seconds)
  done (took 18.335276319 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.512240138 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.596711287 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.00896268 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180704952 seconds)
  done (took 3.315858312 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.973634923 seconds)
  done (took 2.009766475 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290499186 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.243813749 seconds)
  done (took 1.555828496 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.793937555 seconds)
  done (took 1.827376811 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.436302983 seconds)
  done (took 2.457848583 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333918761 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.193883398 seconds)
  done (took 1.559958299 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.562481557 seconds)
  done (took 1.593879433 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.045515788 seconds)
  done (took 8.077546928 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272978708 seconds)
  done (took 1.316677368 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304757335 seconds)
  done (took 1.339605987 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.603207994 seconds)
  done (took 4.639893023 seconds)
done (took 52.639595316 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.099687444 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127219532 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103290326 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125238807 seconds)
  done (took 1.484173386 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102004366 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.124688731 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.107649259 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.130106395 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.134894514 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.103999164 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.132354221 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.109021649 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.130756435 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.102811334 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.131059635 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.127866128 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.106572463 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.131528322 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.100060733 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.133436014 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.105983678 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.131918426 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.133332294 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.10468919 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.127606961 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.105043393 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.13474809 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.101038712 seconds)
  done (took 3.891208218 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101607571 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120119298 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.102056005 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.124985126 seconds)
  done (took 1.492576304 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101339577 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.134318776 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.112857983 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.135233185 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.138163267 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.114867132 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.126043384 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.099770512 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.127798222 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.107208144 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.124804659 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.120872725 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.142296605 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.133118263 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.109772255 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.12344079 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.097127812 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.141615635 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.133199873 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.109395753 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.125903129 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.107200526 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.123845044 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.116309133 seconds)
  done (took 3.945020836 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172124071 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130292677 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.145412928 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.102800724 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.170776314 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.149919228 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.095732693 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.150289647 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.095389142 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.141425487 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.125534983 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.142229085 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.138976469 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.094102074 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.124256176 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.093602653 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.138075423 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.137199 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.098580986 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.136308725 seconds)
  done (took 3.63019271 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098840724 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.122403904 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.0957832 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.124727721 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.106347028 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.130696231 seconds)
  done (took 1.724533425 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091658156 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.119731444 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.097536909 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.122405117 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.102308509 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.123565971 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.096219272 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.124148753 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097368346 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.12374927 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.097004206 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.124266442 seconds)
  done (took 2.366196287 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.517437173 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.130560935 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.129167905 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.098167591 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.131211614 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.096842398 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.138478788 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.099942847 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.152329221 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.096008079 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.125530914 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.098416464 seconds)
  done (took 2.858373247 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237357961 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135307291 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30188533 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.387381224 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160116139 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189373634 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.298585559 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176761545 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.237990058 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177430545 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214497466 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236607853 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162455099 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20184548 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147923733 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.155461286 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217238919 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.260622195 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163527372 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220801769 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240125958 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177501774 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191177617 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16103756 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148175317 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183457687 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.100940707 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140232702 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247121033 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187933325 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227117334 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173277915 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156878001 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221587938 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267274517 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234674919 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.299726984 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14794727 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.157735637 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.177800702 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.279098239 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149494182 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242948082 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13617401 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141893326 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229737355 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177984165 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.186954688 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.162605532 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147264011 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2086082 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252930574 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.203235226 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149166535 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.316666616 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156368854 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.206537568 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202206599 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262696872 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206078717 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215854558 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.098552843 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200834032 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233996871 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196789473 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.186618611 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.22081801 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157475237 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211269286 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200901884 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173210106 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232715537 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.198259704 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150755219 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180070543 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183749081 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209591233 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242884302 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223036539 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.10129368 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179245536 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160427855 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142825057 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.204022948 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105887641 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.253076375 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154191516 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.173311408 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227538865 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170458318 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171499499 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213704703 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240023434 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157402679 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.090574838 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164591309 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.166470785 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231955075 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118358782 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168878487 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172598226 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.140215514 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194142133 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.134348 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195234244 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.127584621 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185241609 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19381366 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.13666579 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171714459 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16151503 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.132872941 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214235197 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210380978 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152589789 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142564165 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221691429 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188526008 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.16084886 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.189598787 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.236907948 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.122124626 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160583427 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238729139 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251876847 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114237538 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233750191 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160949537 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115637861 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.141604378 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191515438 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165757055 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.171603517 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144377128 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.193374701 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24397233 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.106714009 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149800235 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205132365 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144406335 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14274313 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174464038 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158499612 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.147587039 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.133782222 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.163309015 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220755429 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190784519 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164407995 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176803877 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162649894 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268197196 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150300753 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.132371696 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160356394 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.129247865 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.205196081 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235709875 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109302633 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24214519 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.177164016 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21452428 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208929858 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112789361 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185793349 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133614322 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.099085552 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232646466 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17577378 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.168358897 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.203480443 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231602184 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189603509 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.220296915 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179937291 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184020741 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.174276733 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166243745 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.120128995 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169982942 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208490014 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099421621 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.156040262 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.142497092 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15684133 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123372986 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143286915 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232943623 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175498641 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202304976 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171939955 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161699075 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188527496 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.133897494 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183780925 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.186891418 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152467801 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.234676258 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199894812 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189946294 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147766798 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234842634 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.097296741 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131699526 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.147060986 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17553419 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114836102 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145813041 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173354074 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.188862588 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18831004 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207449995 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222768651 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212756503 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.201563341 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.103042746 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.177787183 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193293426 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208321833 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.169243148 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144734499 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.158585315 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188451137 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164321721 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263428604 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174844537 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180194034 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240455384 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.156280102 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105230322 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157695814 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225591376 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155834287 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.179505454 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125082751 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142851322 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164684743 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.137420666 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165109801 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188785855 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164312094 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220188968 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.158322372 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192015596 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129760734 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172769636 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165859159 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170470296 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08426406 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182696544 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238011224 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153199268 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176861684 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197241813 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135777471 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.318581182 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24981724 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204984534 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141299717 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164620604 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1661044 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170290917 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176345165 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18599473 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164522591 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195506691 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161847074 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.140647027 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148305499 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124416688 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152308636 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136148318 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.153635261 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.183417578 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.143485527 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192625328 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166863536 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162817492 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17461167 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151999288 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147886943 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157577998 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219446305 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212505725 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214538456 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.155414354 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.185188523 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237460535 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101129979 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134852726 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.139539627 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187503572 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117019422 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232783064 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.198059375 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243118697 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187171587 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201792073 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142476459 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121296692 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162892406 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177501197 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211702818 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160253356 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.164687868 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234510463 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120981878 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134020983 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.182573755 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.320952998 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120421959 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228168933 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.083957249 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.293562795 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129759428 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141088004 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16652759 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211028827 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.140508327 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.200468557 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183366851 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179323395 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168672058 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155208657 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.19999981 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255481752 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202961083 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210399945 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106704384 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159529205 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178454416 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223294853 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163244281 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.1200169 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236775895 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204326482 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.22643917 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117826391 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169813508 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197679871 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130974297 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218113244 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111272441 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238005106 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135981358 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195906592 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157388183 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145800901 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17959621 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.218958 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115563661 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222124402 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189569255 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140534913 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109430077 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200739981 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185207596 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162071392 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.106090463 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218094023 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.104851486 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230993733 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267035897 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111318066 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160822211 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152294997 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141878049 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158563493 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161081109 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116225776 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172524115 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214488322 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.139444574 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224569127 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209438429 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175472364 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206714641 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.12137767 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.697556539 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.134150899 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197897835 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161521399 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238444393 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158062685 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182496608 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164094835 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177777459 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20378039 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164464346 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23483457 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227746794 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.18775308 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137639619 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16280172 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17100696 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.15312086 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13194791 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20697939 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133902194 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.159011797 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.211792162 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177751926 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136663013 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115188628 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231155663 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136803826 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214257713 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187507619 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145317176 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178987652 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194183794 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139035279 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189431272 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240562627 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149519082 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126522351 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.136559537 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158815051 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268934487 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.130241514 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214208638 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187947105 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16275738 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171816485 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148853895 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225918107 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166091219 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193717122 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149386603 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.163806306 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162448641 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146778203 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.110188367 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166284103 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174954055 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.153647397 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162194864 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.170941733 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206745322 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125990205 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119682437 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323931344 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19687927 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248161248 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110721503 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144670838 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171039832 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155567555 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18656958 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18338221 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139989523 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139596287 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.144938569 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.13696131 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.141407166 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137790512 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234310077 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17372063 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217804736 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138277936 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.286481816 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118745299 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159535042 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117772873 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.111122742 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151889168 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152210293 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161334099 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221405403 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240077505 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.15047727 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.136301723 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159090902 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.106167637 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147978689 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174685455 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174031253 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185767257 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147784842 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081935427 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16406687 seconds)
  done (took 86.895991805 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166564626 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134895502 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149445995 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205123505 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178892193 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271163804 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212582107 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256151258 seconds)
  done (took 2.711070823 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095246513 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.149442362 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.166154711 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.14043508 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09213374 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.121185242 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.351790879 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.14137339 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.119458852 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122362886 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.179867428 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094016784 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.564066952 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.096020348 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.128314559 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109903726 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092891097 seconds)
  done (took 3.89342006 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.482091468 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.744019961 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.520168701 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098349536 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.293295833 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113709172 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.928210962 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202159663 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117751044 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495647321 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.779783218 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.171630112 seconds)
  done (took 19.085885605 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.116510994 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.14109243 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.132768548 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.161616035 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.148748733 seconds)
  done (took 1.842952096 seconds)
done (took 136.850380351 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105170636 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.418399823 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.077756431 seconds)
  done (took 1.669748814 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108771815 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142986942 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114838577 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.144786958 seconds)
  done (took 1.66407769 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098642457 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.12750786 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.110083359 seconds)
  done (took 1.483191122 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.334977838 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191705263 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.180710446 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107905186 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129568758 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103910635 seconds)
  done (took 1.4903404 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098528061 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128209769 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.104292113 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.137012864 seconds)
  done (took 1.61797245 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096040633 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.078334983 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.109115181 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083210325 seconds)
  done (took 1.511992974 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115068163 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132778414 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.111700453 seconds)
  done (took 1.51084204 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130349826 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.142662451 seconds)
  done (took 1.42470018 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107615697 seconds)
  done (took 1.254603821 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118782435 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.17102634 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.192436455 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.170383473 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.213651869 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.170291537 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.152147678 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.141826411 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130873189 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.143394969 seconds)
  done (took 2.756509493 seconds)
done (took 18.335783215 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103868238 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.522271964 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.39314227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146976034 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.730860327 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.388049842 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.050255269 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.153021442 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.168137789 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.098774078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.145701591 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.677736926 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.037709153 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.476105992 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.994299886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.380331074 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.678626324 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122224724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119501614 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095193156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.029726381 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.099526043 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.129268936 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094577694 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.707309685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.428373608 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095401142 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.374412553 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.095071709 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130131507 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.390911472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13074807 seconds)
  done (took 17.327830129 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096061658 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.176605332 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.106597039 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.141641109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130457642 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096021965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126520834 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.099546307 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183514166 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.130227347 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.117495204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.129236395 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.127918266 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.097815861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.145705603 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.099088562 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.13384935 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092095124 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.126140156 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120786119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113131212 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.124560174 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094359363 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122829162 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.096383445 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.140300433 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095187943 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122218555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120171543 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102620689 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.132223845 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101514822 seconds)
  done (took 4.995078613 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.14068724 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184819425 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13244161 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130219468 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.177127532 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.128162334 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199911699 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121337664 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185286057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.131758821 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139570251 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.101726671 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.16637069 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.10229416 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144523379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.127738739 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097647186 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122620767 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.099096158 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.131952497 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.143969198 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093707569 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.124956042 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.095392739 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123584903 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.110651597 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12754093 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120564923 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094664962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126882975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.101979005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126291523 seconds)
  done (took 5.315700772 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098646247 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126143078 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11130478 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.14648458 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.10283858 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.133452487 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.099978477 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.133223288 seconds)
  done (took 2.109782999 seconds)
done (took 30.893502713 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11105359 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134985414 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.115621788 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.142688105 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.110855844 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.140173652 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.099109826 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.1429149 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.143145589 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10881108 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.145790653 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.101069799 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.132002085 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.100814405 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.143475808 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.105421827 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.140821281 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.10866581 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.14261829 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.141302892 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.101118922 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.141931212 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111685946 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.144013781 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.112641176 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.142477475 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.14485657 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.104663013 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.1295763 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.096176814 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129024302 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.113918961 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.132090368 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.112564656 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.135271567 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.104425302 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.131999564 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.101829736 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.140970069 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.140834434 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.105737347 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.140968399 seconds)
  done (took 6.380044747 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.10893853 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.150348297 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.114529516 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.089542515 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.125709074 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.083751735 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.145266991 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087812826 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11772114 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.116958335 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.081746633 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.115496573 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08672109 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.109612744 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.082820163 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.08349688 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.117517759 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.084046622 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.084523393 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.113612417 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087962991 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.080539245 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.116514023 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.086751885 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.082293224 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.118024504 seconds)
  done (took 3.835595113 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10188423 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134841556 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115980953 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.187733421 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.164195887 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099519546 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.136133399 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.112452343 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.140222327 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120486256 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.099752124 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.153982236 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.116663274 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.137669771 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.094742973 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.145442659 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136084419 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.097579312 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.131987168 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119703395 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.146501434 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102379801 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143426368 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133042945 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093215618 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123219023 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100008502 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.137809195 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.104223258 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.138856733 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.09834203 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125875558 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124796011 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107351111 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.134033014 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.098192454 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.150579126 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103524198 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.135231756 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092379749 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.131399768 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.12468222 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.117586346 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.171409577 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.100387653 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.138738164 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.098042186 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.136499171 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121678776 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.114908305 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.139056514 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.100100752 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.133713047 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.099033098 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.130596873 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.114084634 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.13195011 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.100730977 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.139351442 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.129383609 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.108515662 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.131734948 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.112264076 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.128859113 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.106167197 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.130316071 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.094862684 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.129239063 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.122765243 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131586334 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.170826419 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102134393 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.132386904 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10273857 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.13281049 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129542273 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.096667302 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.141299793 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111744207 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.134748215 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.108603224 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.13060005 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09815328 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.145402405 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.09492559 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125642636 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092716373 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.130536436 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.12420697 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095043256 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140771971 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.100648144 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.133056975 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110203246 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.130941515 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.092716826 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130148304 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126659268 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.096277635 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139981157 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.103965739 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.130488402 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10251713 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.124717069 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095067076 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133515618 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12844612 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095051518 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.130438078 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.101950058 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.126544431 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.097660168 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.133058514 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.097499696 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.141123113 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.101695657 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.133022926 seconds)
  done (took 15.359854724 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.230745512 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216276186 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212996043 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.294190266 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13652799 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11973522 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.220413286 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156237135 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.126240175 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16408554 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.177738837 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181936267 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.175084601 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.195057779 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170859963 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.099859225 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.150554529 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165944877 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21643394 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259294459 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144957377 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099719254 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165397635 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160835969 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138386771 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132876666 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111596885 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137245071 seconds)
  done (took 5.941355059 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109863024 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15812806 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100102495 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146037637 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152388611 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094344689 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.134332283 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.097486232 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.144587742 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139492439 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.095759535 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13506279 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.102587141 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.136271745 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125590436 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.104685554 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.136215726 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.097967392 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.133715998 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099648206 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.142817694 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.104858075 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.135502249 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.094229403 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134199361 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.123514608 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087627247 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.147512951 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092747923 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.14636379 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123558299 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102771373 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.139035537 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.096834741 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.127692797 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.097291268 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127434833 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094289952 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125513276 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091096507 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.12532301 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.079488642 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.126744078 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.109775422 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130204675 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.081936939 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.137238687 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.099842959 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12519548 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.122203576 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.09698151 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127473125 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097363772 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.133893069 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098843842 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.127622761 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097428363 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.118074973 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105568365 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.133490278 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085222534 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.129088196 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100274452 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.12081146 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.107321571 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.136970381 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.097023113 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.133895956 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.104745337 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13782687 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.099249386 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.13804423 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.094070517 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.134467608 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.099686975 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.134084467 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098620993 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.130218852 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096160632 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125916993 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077592581 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.132113056 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076083655 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.131597716 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.096501134 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.131216513 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.100948793 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.138393845 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.141958641 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09554015 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.135426669 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.097537615 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.125138465 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.100283264 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11620098 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101677526 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.147654502 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.143630333 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094058564 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.126156717 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.111086453 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.129509319 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.099366435 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.113652347 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.1088294 seconds)
  done (took 13.413593565 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127604011 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.163011313 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.103177429 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144526381 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.166024254 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.166950742 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.104135932 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.138757437 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.099160549 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.146219307 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.10243137 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.140695692 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.096893665 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.145943298 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.166730663 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.108504529 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.133384164 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110798385 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.137424253 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170858575 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.120678023 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.152040713 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.118669104 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.133415681 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.09887435 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.144565011 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.169276295 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.116258787 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.146681073 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.150058056 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.114438002 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.169078541 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.120536644 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130090679 seconds)
  done (took 5.752978343 seconds)
done (took 51.841198385 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.26374547 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.52156102 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.257943155 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.255502556 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.294235792 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.277711787 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.268659892 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.273079147 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.574152842 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.26242455 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.501239928 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.97795765 seconds)
done (took 59.917045447 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.358036307 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.399126135 seconds)
    (2/2) benchmarking "String"...
    done (took 1.524419306 seconds)
  done (took 4.105565171 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.616562361 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.237222763 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.526367936 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.259522774 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.258026786 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.546545988 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.077336629 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.650576476 seconds)
  done (took 28.73728994 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.267503382 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.349229826 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.291006992 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.266869342 seconds)
  done (took 6.358408848 seconds)
done (took 49.360341706 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.280992485 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.349533429 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.266235118 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.237886051 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.380085545 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.292505647 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.604623854 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.288825266 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.279638445 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.241239518 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.293874672 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.272015085 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.264077123 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.611376681 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.265781112 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.263717172 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.308441082 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.747578746 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.678802112 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.264912957 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.293389155 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.290864769 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.270994155 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.263591346 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.310220743 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.261007183 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.27905393 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.268537214 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.0544669 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.265753607 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.286586495 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.792502039 seconds)
  done (took 193.011976018 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.259515893 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.305850516 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.429699211 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.314727488 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.771270276 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.463378455 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.397506243 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.856589064 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.287661622 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.295138837 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.513843447 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.265157022 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.601669786 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.244862539 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.290371144 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.345534706 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.557420347 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.679008782 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.314676048 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.442195864 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.288099796 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.461559341 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.363084218 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.56059469 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.316718336 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.276364658 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.28361276 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.283183068 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.447606064 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.474074606 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.297787365 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.328055991 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.917094056 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.125125123 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.280686077 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.295648872 seconds)
  done (took 152.819755619 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.304276885 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.26252273 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.262297236 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.262738439 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.297797177 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.26490259 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.876927596 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.859607751 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.761361248 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.573468334 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.692412578 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.553781394 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.263677119 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359254059 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.276139567 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.262339176 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.263809438 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.278992864 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.31041966 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.26443659 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.263136303 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.878877816 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.280616699 seconds)
    (23/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.263611745 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.445092135 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.283828236 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297356458 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.655444003 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.323558551 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.263918258 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297723153 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.600383985 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.318497495 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.264250662 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.670537778 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.010270026 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379730732 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.26533872 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297774776 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.264128915 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.547851569 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.265500597 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.266203805 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.266997084 seconds)
    (44/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.265187246 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.263548137 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.88071443 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272064848 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.248972554 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.957976896 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.264132813 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.265279346 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.877988155 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.965479712 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.284393824 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.264202543 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.268261033 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.266476483 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.265198291 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.29990294 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.740923145 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.36460397 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.285047646 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.270613203 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.301036777 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.265056275 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.291657549 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.266119651 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.761124247 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.349103325 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.481326721 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.88372615 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.27140402 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.366424913 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.388547383 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.267600731 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.266145431 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.266174488 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.266775728 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.380430828 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.266636469 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.708419733 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.448287646 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.286938554 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.696142782 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.367697059 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.267003865 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.682352518 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.267221135 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.267911402 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.047205412 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.366892636 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.266732154 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.268318081 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.268792335 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.709397455 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.267166448 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.861145866 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.567802773 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.27154993 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.672990465 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.272028258 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.726674251 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.851997387 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.957072599 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.269689056 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.384717956 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.449911401 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.289776899 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.268024304 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.767469192 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.272395729 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.328864513 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.267243976 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.670133901 seconds)
  done (took 375.056319608 seconds)
done (took 723.374468573 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.863401199 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.860084531 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.974826514 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.850171345 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.815296995 seconds)
  done (took 10.556007187 seconds)
done (took 11.747776774 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.471911463 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.470751039 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.334386555 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.47792745 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.300199974 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.493780788 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.451487359 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.293727234 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.37666302 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.363630612 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.377130685 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.332645357 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.303457773 seconds)
  done (took 19.240491356 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.588376615 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.591707653 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.332975242 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.59963332 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.309225271 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.598000329 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.474245052 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.48664113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.490617387 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.30635541 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.284068917 seconds)
  done (took 17.25615992 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.614145092 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.60358811 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.337302171 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.606874941 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.310494083 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.604951541 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.477811133 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.497353267 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.500959369 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.304717194 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.282879065 seconds)
  done (took 17.335136168 seconds)
done (took 55.024800503 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.279030376 seconds)
  done (took 2.473014547 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.316144553 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.482761396 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.301685375 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.284378364 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.279796796 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.280026246 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.286532088 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.279495913 seconds)
  done (took 11.706007579 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.279849297 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.279323939 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.277770077 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.277252468 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.278628145 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.276036963 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.277511724 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.276884436 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.280206603 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.277880583 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.280130767 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.281199359 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.279721467 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.278112745 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.27816128 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.282837919 seconds)
  done (took 21.657102292 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.28124794 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.277313539 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.280224535 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.279472039 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.277784727 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.279417493 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.279488996 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.277983598 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.276585958 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.279341326 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.27956887 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.278371886 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.279136837 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.279507454 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.279349748 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.280750575 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.280414686 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.278580795 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.283767184 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.278784212 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.279202928 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.278852843 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.279614162 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.279657216 seconds)
  done (took 31.903426991 seconds)
done (took 68.933481984 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.495198526 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.092117536 seconds)
  done (took 9.784758046 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.281803331 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.281906569 seconds)
  done (took 3.763009146 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.281658896 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.281498657 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.281477973 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.281930163 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.281390763 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.282068811 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.281411776 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.281327735 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.281826136 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.281224229 seconds)
  done (took 14.013668179 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.282375146 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.282564132 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.279888556 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.283107054 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.281642874 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.279605171 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.282252347 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.282462638 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.283179545 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.279783546 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.284213883 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.280052598 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.284154671 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.280954328 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.284631702 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.280465647 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.280359327 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.280660921 seconds)
  done (took 24.270071338 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.284062996 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.283376851 seconds)
  done (took 3.766250593 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.281537062 seconds)
    (2/7) benchmarking "second"...
    done (took 1.280526374 seconds)
    (3/7) benchmarking "month"...
    done (took 1.281707314 seconds)
    (4/7) benchmarking "year"...
    done (took 1.282877269 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.280882337 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.281179779 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.28201564 seconds)
  done (took 10.168928729 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.285119142 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.459490761 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.536866086 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.875553203 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.285749094 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.28678107 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.140269121 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.28810034 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.289979095 seconds)
  done (took 14.647164854 seconds)
done (took 81.610725594 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.316364848 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.296030852 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.493999201 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.291469336 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.293095512 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.578025563 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.304721783 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.40649756 seconds)
done (took 38.179249206 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.281206017 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.265778378 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.121630011 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.264450207 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.357210155 seconds)
  done (took 19.209763726 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.363744306 seconds)
    (2/2) benchmarking "read"...
    done (took 1.62455782 seconds)
  done (took 5.189114525 seconds)
done (took 31.881435311 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286372712 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.285391501 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.288404702 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.287351113 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.288189815 seconds)
    (6/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.287950566 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.284342537 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.282902917 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.284255445 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.28675663 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.285959854 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.286290745 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.287037467 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.287210526 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286412377 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.28356982 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284891382 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.285856721 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.284584045 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.283318249 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285023911 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.286208965 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.284794047 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.284962221 seconds)
  done (took 32.060214709 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.287711425 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.288375684 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.287026904 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.289594859 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.286525113 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.287035449 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.289717409 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.28471304 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.289136271 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.286855688 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.284153694 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.284694299 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.286355824 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.285216527 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286326593 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.285369027 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.287426795 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.285019772 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.286890155 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.285183352 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.28855146 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285860916 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.285919715 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.287743654 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.285917513 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.286043769 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.288367486 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.287988956 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.288521536 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.286490364 seconds)
  done (took 39.806680032 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.294620183 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.297755374 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.288865109 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.288777975 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.2906369 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.291326472 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.289748758 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.289614786 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.289795576 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.289732917 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.288883354 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.28974028 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.289956309 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.291758341 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.290140107 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.290633373 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.292330176 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.292724909 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.292461429 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.291007023 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.290108423 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.290486295 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.289626321 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.289710323 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.290148891 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.29184511 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.292906331 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.290615523 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.290970168 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.291947558 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.291696009 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.291901191 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.292603857 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.294153022 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.292984007 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.292225959 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.296645897 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.299552254 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.291908582 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.290651206 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.291652695 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.291788043 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.29144202 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.292138695 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.292445481 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.291592149 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.292655255 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.291562663 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.292555175 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.291091169 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.291790413 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.291944138 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.291007271 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.29171635 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.292026975 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.291308258 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.291541461 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.291773953 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.292203044 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.292540035 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.292730017 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.291902461 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.292788696 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.292288879 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.291925706 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.292901658 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.293181883 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.293518787 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.291876594 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.29359463 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.293798684 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.294077933 seconds)
  done (took 94.220327632 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.293717306 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.291565775 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.290667711 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.29015835 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2912689 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.293882703 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.29118327 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293873704 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291250181 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.294180722 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.293722822 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.291622058 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.29088264 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294449552 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.293429667 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.291939292 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.294170637 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.291059647 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.294220953 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.296050129 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294817707 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.291869763 seconds)
  done (took 29.648708029 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295447021 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.29690502 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.29220921 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294460306 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.29230483 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295009411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.295309585 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297119706 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295172616 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.292082206 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292372501 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295018836 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291887883 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.292384603 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.292868394 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.294257869 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.294291208 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.294292646 seconds)
  done (took 24.503497909 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.29362944 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.292595834 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.295857464 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.292761884 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.29352235 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.296053753 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29371032 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.295817974 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.296304762 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.294997425 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.296112226 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295571051 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.295187548 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2930244 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296925886 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.294982637 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.296476691 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294520446 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.2976904 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294578538 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.294636311 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.297124604 seconds)
  done (took 29.702620831 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.297132323 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297133739 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.294374382 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.29541555 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.294550619 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.297159214 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.298084427 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.295393548 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.299038489 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.298209672 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294775642 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.298275989 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.296875324 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.295289649 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.295779094 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.294985654 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.296924753 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296887194 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.297444193 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295058353 seconds)
  done (took 27.140775882 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.299865069 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300467513 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.300318456 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300790806 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300451358 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.29967439 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.299611741 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.300336738 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.299895051 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.300934564 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299849495 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.299547408 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300966178 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.300510438 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300680769 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301646813 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301463487 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301281648 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.300937329 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301570755 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.301642374 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301496787 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.301565482 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301562664 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302968507 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.301856269 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301819827 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.302483936 seconds)
  done (took 37.639419819 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.302338926 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.299439952 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.298887231 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.298676346 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.298515891 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.299716044 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.298423017 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.298426917 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.301374635 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.298182743 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.300917012 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.301681658 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.301494204 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.301668006 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.300997731 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.300621914 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302088834 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.299344308 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299122859 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.299702939 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.302823865 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.300649859 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.302536205 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299621161 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299512511 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.301558427 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.299656659 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.299072317 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302416349 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.299793818 seconds)
  done (took 40.225847536 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.32175238 seconds)
    (2/2) benchmarking "in"...
    done (took 1.321598177 seconds)
  done (took 3.859306677 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.300927443 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302405769 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.303136013 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.302479587 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.300529264 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.302607665 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.302129074 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300559509 seconds)
  done (took 11.631053077 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.301938802 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.303249194 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.304050213 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.302492345 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.303630527 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.302386346 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.310246016 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.327958604 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.304748689 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.304384587 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.312102125 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.313746205 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.306590287 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.306314215 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.303900154 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.307833886 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.304703793 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.304496387 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.303585623 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.303671839 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.304367666 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.305493024 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.306386368 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.302500273 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.306417032 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.317100894 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.331872353 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.305373999 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304332164 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.307997172 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.304639346 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.308410813 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.30645225 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.306261082 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.306438546 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.306308845 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.313064237 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.325773933 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.309839247 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329251252 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.306196259 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.303445422 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.305433147 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.306830454 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.306658418 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.306592804 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.307126441 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.303964655 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.307695934 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.311781768 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.313589987 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.308496375 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.304199483 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309402036 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.308206589 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.312477797 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.328399053 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.3114009 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.317062633 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.319054182 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.342031879 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.334830728 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.308129559 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.307929749 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.317703737 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.33076157 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.312487625 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.328782896 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.304570333 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.306946353 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.312862411 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.340401842 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.335866946 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.307952717 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.309125604 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.308051413 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.307064858 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.308983077 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.313770894 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.331311249 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.30876398 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.309971889 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319582519 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.331600402 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.308307727 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.308806837 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.310088146 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.309748281 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.310176501 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.318824647 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.330790385 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.309274739 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.30866249 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.309110927 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.309993025 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.309544291 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.308341156 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.310064986 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.307333628 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.309983784 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.309246611 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.313071928 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.318189176 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.31084613 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.311375785 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.316556459 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.33199414 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.30903428 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.314975541 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.31063397 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.311734183 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.311168877 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.315190053 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.308044459 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.31325857 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.319812483 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.310092988 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.312377564 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.310726426 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.311851815 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.32056566 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.337345991 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.311148208 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.310573878 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.315068318 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.322505724 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311899764 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.313307119 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.311305237 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.308179168 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.308240424 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.312495896 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.310622775 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.310796137 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.311619557 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.313041619 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.309468325 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.312016435 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.312804557 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.312337651 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.311708888 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.312975355 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.312070309 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.314051829 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.313597776 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.313580718 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.318176076 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.332613028 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.31275737 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.313670824 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.310428819 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.313276527 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.314592897 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.313257691 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.313411653 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.31436098 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.313272631 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.313927483 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.313227211 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.313482743 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.315112172 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.315190596 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.31763027 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.31378505 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.317193365 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.312706752 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.312171166 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.314385868 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.314363222 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.314587328 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.314454351 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.313866851 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.316992406 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.324666752 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.314812624 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.316231086 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.317618807 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.314256136 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.315928184 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.315670718 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.317947334 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.322964665 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.315577348 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.321122388 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.336321533 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.315552776 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.315372472 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.314471945 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.314549054 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.315977468 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.321016482 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.324826306 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.326160597 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.34128661 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.316046251 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.319572342 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.316151282 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.321900799 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.318383068 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.31604244 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.31518487 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.31468276 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.316514914 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.3149268 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.315981615 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.315459476 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.314489938 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.315451098 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.315598379 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.315487787 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.316091431 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.314728227 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31627247 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.31307308 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.316577328 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.314736836 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.314186287 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.313239862 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.315827064 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.317717453 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.31717922 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.315719713 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.321618965 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.315100162 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.317182292 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.315562208 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.315455557 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.314661055 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.317184602 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.316907647 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.314892469 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.321450092 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.338143616 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.316046069 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.321359349 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.335931864 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.314533543 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.315816334 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.313622026 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.310698938 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.317382187 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.325306435 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.315882551 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.314620148 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.314322365 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.313297874 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.315149933 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.318897687 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.333167856 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.313436682 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.315466881 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.316251284 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.311602917 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.314940343 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.315927553 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.315424956 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.314835126 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.315407246 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.316382766 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.312030687 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.311607917 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.314605824 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.312716266 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.315333611 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.322001313 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.318248957 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.31414222 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.31164248 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.313367644 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.318060658 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.31039963 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.311049926 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.311358216 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324376933 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.339167879 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.316631072 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.334943514 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.31075979 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.316890782 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.334253229 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.316174619 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.312730506 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.31169835 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.311020884 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.312276723 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.310426527 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310974951 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.310775981 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.313258256 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.314706648 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.317501831 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.310576699 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.310039327 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.310744043 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.311658666 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.31201778 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.313508346 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.313329916 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.31267949 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311224285 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.31037718 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.311388428 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.317359353 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.332176911 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.311717866 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.311586465 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.310138811 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.311134014 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.312897157 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.311905605 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.314703928 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.321570542 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.315968681 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.320681115 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.313881162 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322140274 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.313788559 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.316373105 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.323506476 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.311076679 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.311613322 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.311553108 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.312934135 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.318668452 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.334509935 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.31578628 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.317899652 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.313659274 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.314088595 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.313247673 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.314117948 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.314185526 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.314101063 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.323069014 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.336095882 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.316807147 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.315009569 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.312868358 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.314817349 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.313707921 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.314060608 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.315103809 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.314692478 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.314081524 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.313422402 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.314057734 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.315778571 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.313587905 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.31421216 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.313188113 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.314933836 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.321755893 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.338095244 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.318325911 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.314061947 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.320978425 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.337541335 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.320147271 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.33681548 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.315518798 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.31511084 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.315612789 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.316337171 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.31555087 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.316708947 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.3155144 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.316507612 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.320116638 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.316801809 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.317317522 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.314971491 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.315226585 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.315966668 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325395741 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.340078171 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.318249674 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.320250221 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.313265909 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.317072229 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.320707831 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.31588976 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.315765271 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.319739175 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.327886258 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.326458136 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.316212045 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.316472942 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.316480112 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.316741755 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.317312738 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.31701614 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.317413286 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.316952086 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.317128866 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.317396495 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.318523681 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.316624532 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.318119002 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.317645565 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.318237307 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.327336923 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.340515023 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.317494707 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.318356257 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.318950465 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.317614606 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.317790211 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.317813889 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.318263182 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.318103107 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.320144159 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.328798397 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.327080356 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.320125692 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.318192673 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.318239938 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.318701753 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.319072376 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.319335108 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.318910832 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319172826 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.32078822 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.320309698 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.320505048 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.318888587 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.320422568 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.3195954 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.319347696 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.322464402 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.327427499 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.319483363 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.316481716 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.319717244 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319529015 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.318695427 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.319343497 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.325871165 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.345769398 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.330819785 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.32951093 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.325459465 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.324058982 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.323195154 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.329694606 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.319143126 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.321120918 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.319996689 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.320700485 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.324466475 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.325488632 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.323151142 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.325505417 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.343007975 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.321901289 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329428059 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.34255469 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.324400165 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.321751573 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.3279785 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.319770337 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.319380975 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.322330357 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.320543636 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.329471991 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.342341764 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.322306932 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.322984592 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.320919775 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.323248236 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.327001136 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.322639037 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.323423426 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.320044454 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.322547332 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322458168 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.322374342 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.319854894 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.321637133 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.32310042 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.325895235 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.330595935 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.320208981 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.322931635 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.321952407 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.322536196 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322342028 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.324394078 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.32144132 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.319424837 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.320810222 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.322106774 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.321996211 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.324116319 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.323911495 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.323600384 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.32320713 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.322317829 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.3255854 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.33275423 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.330090248 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.319582939 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.323690189 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.321599586 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.322760043 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.321608779 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.322364676 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.321784896 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.321233143 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.32286789 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.324031984 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.322002709 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.32515267 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.33852863 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.343465167 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.322071968 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.321519051 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.325098165 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.323894202 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.322124296 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.323517706 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.326031637 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.327952254 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.332532569 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.323410433 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.330095133 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.343648466 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.326019314 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.330242388 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.328221096 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.332515045 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.325591838 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.326845377 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.322857035 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.331398641 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.340602786 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.325514084 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.335248925 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.354781622 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.346866738 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.327622679 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.323584313 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.323979494 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.325601472 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.32320598 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.323735121 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.323556962 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326884534 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.325822946 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.326406665 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.33109379 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.324073884 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.325012262 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.324168041 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.325948345 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.327592678 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.32358004 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.324277836 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.32475706 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.324444802 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.325160695 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.326788012 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.325823129 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.338131495 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.354639138 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.325134159 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.327031962 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.32413237 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.329269002 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.330211024 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.33934333 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.336286919 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.327039055 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.328537118 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.32780099 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.326692298 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.32461444 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.327658048 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.327450247 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.324985344 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.32575204 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.339906382 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.353589756 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.331371179 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.326585765 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.328424759 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.326671545 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.328685355 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.326709471 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.328897845 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.328563163 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.329749286 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.333684678 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.325651296 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.327600605 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.329542583 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.336044876 seconds)
  done (took 787.197819309 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.327499293 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.325831021 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.327277984 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.325801651 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324081075 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325181125 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326711264 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.324840864 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.325747193 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.328202233 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.325574786 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.325417117 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.325503475 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.327094456 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.325364245 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.326098512 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326325942 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.329271821 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.326016898 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325977591 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.324603018 seconds)
  done (took 29.086185674 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.327434035 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.325269727 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.325487611 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.327649666 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.325235966 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.328043015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.324743662 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.326512607 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.327008554 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.324211797 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.327899829 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328494514 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.325279628 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.325274701 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325993373 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.329259315 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.328874967 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.324216657 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.329837161 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.324844232 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326619689 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.327284038 seconds)
  done (took 30.425884846 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.329726929 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.32752754 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.325959647 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.323368288 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.327185518 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.323599526 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.327009419 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.325885395 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.326448654 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.326767543 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.325968644 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.326494658 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.33329924 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.333571856 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.327288452 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.326771833 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.470500365 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.327069244 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.326554234 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.327131293 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.324344178 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.330989865 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.343185873 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.324206034 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.325362772 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.327536545 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.326923545 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.327056129 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.326336125 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.328571912 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.332542418 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.326124582 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.328838209 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.328353905 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.326859682 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.329723128 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.332184466 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.327967865 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.327763015 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.32906267 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.338219794 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.348168607 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.327457909 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.333269367 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.347062668 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.327741418 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.33091623 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.33598263 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.325579147 seconds)
  done (took 66.516914095 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.329131263 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.328128147 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.326608192 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.328997685 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.328759232 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.32851609 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.327168528 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.328455656 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.326304919 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.325391726 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.329546282 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.326714013 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.32597778 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.328401585 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.328581071 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.326002528 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.326557272 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.32564174 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.326988904 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.326596116 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.327935746 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.329891698 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.328726317 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.329178087 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.331814392 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.328071285 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.326718188 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.329941603 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.327213508 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.327527026 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.329585255 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.328666477 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.329628169 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.327397292 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.327020463 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.331752932 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.329479111 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.327066384 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.329317437 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.326975529 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.329070338 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.33100499 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.329814421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.330734971 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.326292523 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.325800182 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.327465322 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.328727284 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.326642548 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.329301496 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.332317264 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.329232487 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.33063579 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.328855657 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.331574127 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.33060022 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.328264731 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.326985276 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.331844644 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.32614362 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.325383295 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.328590286 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.327418652 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.32819274 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.327763389 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.327016669 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.32781207 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.329120187 seconds)
  done (took 91.567989211 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.328750572 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.329767551 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329789649 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.329192887 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.329656835 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.331382519 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.329208823 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.331045288 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.330214988 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.330140943 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.331293627 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.331579587 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.331391339 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.331225133 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.330786388 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.329559016 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.329389231 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.329467365 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.330684341 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.328551242 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.329287785 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.330232616 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.330155036 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.330559116 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.331870073 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.330659649 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.330978768 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.333709781 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.333631843 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.333765555 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.333624035 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.333727257 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.333596877 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.331781419 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.332778969 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.334341145 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.333184286 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.332842237 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.332933516 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.331801843 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.333880191 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.333258091 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.333908417 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.331928566 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.332376078 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.331575996 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.332365429 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.331663358 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.331098327 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.331078534 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.331302572 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.331478286 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.331765525 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.333155649 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.331698147 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.332112248 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.33154549 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.332205109 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.331391195 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.331128951 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.330975945 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.331161687 seconds)
  done (took 83.794032879 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335025262 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331575985 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.33058823 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.329723436 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.331894927 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.328352226 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.331879984 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.332389238 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.332038 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.332150534 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331983691 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.329619928 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.330834847 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331593923 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.330205947 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329756845 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.330277 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.330945035 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.332381265 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.33034114 seconds)
  done (took 27.866439778 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.33096137 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.333226589 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.331005633 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.330317321 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.333042708 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.33153532 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.334200921 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33335442 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332343944 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332994731 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.333660547 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.33395468 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.332514846 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.331846246 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.333983467 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.33131069 seconds)
  done (took 22.565291999 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.332545095 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.334569793 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.333629095 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.334315215 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.331950429 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.331390268 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.33521214 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.332174935 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.332179357 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.33626548 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.335065607 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.335281722 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.336333624 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.334161344 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.33239284 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.334699993 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.332834303 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.332493431 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.334208329 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.334488345 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.333800096 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.332268558 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.335335081 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.334408006 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.332616782 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.333352859 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.332391666 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.334277155 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.333172883 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.335754518 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.33302098 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.333712809 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.332992896 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.33396542 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.337783787 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.333680812 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.336866385 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.336303614 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.336108735 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.336590151 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.335725184 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.333129018 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.336104491 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.335840164 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.333714547 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.336614316 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.334046406 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.334791713 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.334091396 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.334246177 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.335800209 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.336279826 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.336952019 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.337947843 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.336684147 seconds)
  done (took 74.64322739 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33836878 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.337755137 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.334702389 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.33710601 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.338028057 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.334719011 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.338045591 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.33768635 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33621533 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.337780207 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336338923 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.339045834 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.33650524 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.338693947 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336881356 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.337964444 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.33562819 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.336108554 seconds)
  done (took 25.315523459 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.338447227 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.336679832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.338219951 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.336253767 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.335899881 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.338167667 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337191754 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.338855731 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.338918368 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.34083077 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.339793262 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.338819836 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.34022455 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.339760078 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.338089664 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.338297729 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.339568851 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.340051713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.340441323 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.336846965 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.340796929 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.33802692 seconds)
  done (took 30.699493858 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.340307737 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.339491654 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.338431182 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.355496816 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.356532072 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.360793452 seconds)
  done (took 9.341873434 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34576796 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340262731 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.337453092 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339998801 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339830704 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337990639 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.3373702 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338296971 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339585726 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.33866402 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337789346 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339537103 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340771483 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337422297 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340883968 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341438728 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337888356 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339565575 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339431426 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340998894 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339161843 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341451977 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337523008 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338725378 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338389161 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338402914 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341819254 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339087333 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338949152 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341940451 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341578505 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340182165 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342113913 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340248277 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342392862 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341804834 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339676671 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342210106 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343344206 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340564777 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.342278293 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342712761 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34158361 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339112447 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342942977 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340356226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340727475 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340316368 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339832605 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343274497 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342645241 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341318639 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342682667 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34248429 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344973572 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343748526 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344294899 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343558704 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344079925 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343657377 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.344198327 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346804189 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343027135 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343889666 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344031797 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340908879 seconds)
  done (took 89.784885458 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340840084 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.34176424 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341870375 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34374179 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341091677 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340723351 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342226962 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341337945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342108647 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342790612 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34420796 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341669259 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341845091 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343076918 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343020608 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341729871 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34170822 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341555288 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341511014 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34529165 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342674865 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342807566 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342699281 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342645401 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343199863 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345632293 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341836889 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34219156 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342209923 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341568673 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342831082 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342983218 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342962783 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.343390223 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342765008 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342726602 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344522108 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34420426 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342775676 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346188458 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342551798 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.346848212 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343237222 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343016058 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345066996 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343990535 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343627288 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.3437366 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343876566 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344724536 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344851802 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34520276 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345226121 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345196757 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345813175 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344978861 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344136243 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34506618 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344966396 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347635903 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344697051 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346054662 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3481394 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346083204 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348950484 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346031373 seconds)
  done (took 89.938442609 seconds)
done (took 1830.383725635 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.426508392 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.390521116 seconds)
  done (took 14.0747871 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.510229189 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.465724582 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.344980816 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.381898576 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.347123743 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.359920207 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.367530615 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.347405951 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.34725588 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.346600305 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.345900523 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.533626694 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.39785666 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.346163787 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.347629694 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.440585963 seconds)
  done (took 43.489948327 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.372701857 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.357291016 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.464916342 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.374190503 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.372877998 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.536246446 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.409213637 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.35719285 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.520912621 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.398286768 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.889985485 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.372448237 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.356964172 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.441312487 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.369437743 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.540326621 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.603690894 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.900715209 seconds)
  done (took 30.896454861 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.79344902 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.365990731 seconds)
  done (took 9.416401278 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.367984909 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.349997886 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.349359403 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.347675343 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.339331257 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.356650215 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.347764689 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.342512124 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.90709074 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.479089089 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.349969041 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.354260405 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.365615291 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.348969727 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.344877945 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.383131526 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.497837075 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.346706535 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.344369222 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.351789662 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.346753208 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.471244505 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.388695461 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.347826626 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.470824578 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.86240265 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.356314568 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.352720867 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.479406278 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.347726011 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.346461787 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.345707856 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.347033847 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.944243459 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.820099813 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.357327484 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.386169474 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.356169521 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.345191489 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.54046146 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.34863046 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.353883345 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.348590435 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.804074372 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.480073485 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.466758583 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.547717658 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.37175377 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.348750599 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.406793754 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.347723254 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.349323911 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.376389925 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.090591471 seconds)
  done (took 111.990223549 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.343471693 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.740155997 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509744188 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.358200757 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.060594128 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.062276492 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.358084389 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.616732725 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.374500901 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.339994231 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.628193787 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838775971 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.365959139 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.414276232 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.748997815 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.430777704 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.341651078 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.196417753 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.358128838 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.341425524 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.823752876 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.350920904 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.348859067 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.47875397 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.378985735 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.784626797 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.669819652 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.84679576 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.359227755 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.342975907 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.799902332 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.361625334 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.355174552 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.342971971 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.599993774 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.69525425 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.681778284 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.365024356 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.381059787 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.343270287 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.364434396 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.784551368 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.699455837 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.366683148 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.35733103 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.805199849 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.358382803 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.347979427 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.350500512 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551983648 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.041643306 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.348404738 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.680311364 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.352811296 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.639100624 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.38331837 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.407659347 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814649623 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.360229848 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.459365634 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.396019551 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.345860522 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.349002606 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.34368048 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.347300285 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.678819185 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.728954004 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.346181355 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.676025852 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.810975432 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.360242276 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.868084099 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.253031205 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.358448174 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.396088669 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.345445966 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.011294372 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.824547821 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.372601617 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.344789059 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664047618 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.362270793 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.618627595 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.366542726 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.34576355 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.850900377 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.359466159 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.36685236 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.345943446 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.352064161 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.111795095 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.346111404 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.623184319 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.414374213 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.345761134 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.345777927 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.364718254 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.345888591 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.361151139 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.349289214 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.859849096 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.370014594 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.310393626 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.363990918 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.346532558 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.370688947 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.349465634 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.346113687 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.570598403 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.809363257 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.374010098 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.346942269 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.346724369 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.374096909 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.470444811 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.347682465 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.64559249 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.372429411 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347400488 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.355062289 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.106984245 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.409511071 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.347343253 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.378167327 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.251333104 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.555417938 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.379179547 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.346955945 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.347487202 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.372651647 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.526692143 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.366418842 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.417476805 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.352700415 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.044046727 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.376024752 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.365785126 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.685904102 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.360398747 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.163559108 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.364068821 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.349968392 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.632641446 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.60874735 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.642787543 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.349371584 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.37191753 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.030288943 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.393992193 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495887059 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.369263197 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.335233156 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.547798483 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.45481428 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.352349851 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.94823981 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.348804045 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569333052 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.354688161 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.652039228 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.831038954 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.374017348 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.357934509 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.049353875 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.049599064 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.099403621 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.348481467 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.619266437 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.327443399 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.820983369 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.349630374 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.350174506 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.931255357 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.350560406 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.353068817 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.352236336 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.351473025 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.423921521 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.52363362 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.665097919 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.35716146 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.78807415 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.401713357 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.350978063 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.363080219 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.354010034 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.699990716 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.369263502 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.356104209 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.39131423 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.35172168 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.357685918 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.809559854 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.28461277 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.358200043 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.504135355 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.972021746 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.368745631 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.353574945 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.970693802 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.569922795 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.883347914 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.393236051 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.648489985 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.373123138 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.390853748 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.003904772 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.438322387 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.852325024 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.370136192 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.358777419 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94056693 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.368874741 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.405865875 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.353298611 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.353846806 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.876616037 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.370026451 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.355612107 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.536272128 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.371831614 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.62421006 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.354002027 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.39672404 seconds)
  done (took 1113.762375994 seconds)
done (took 1324.889307453 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.353064873 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.356107269 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.342869383 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.357437691 seconds)
  done (took 26.679582855 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.361667055 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.357557585 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.357494694 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.356792188 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.358277698 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.356591642 seconds)
  done (took 9.414396655 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.385231987 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.357212907 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.357363915 seconds)
  done (took 19.367540311 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.554227989 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.637697032 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.703992514 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.524461375 seconds)
  done (took 10.688419981 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.360300951 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.358267576 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.358644999 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.360074854 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.361570012 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.364685108 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.360382506 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.360022921 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.363806285 seconds)
  done (took 13.514720226 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.360643389 seconds)
done (took 82.294713827 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.374852132 seconds)
    (2/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.337928853 seconds)
    (3/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.729018963 seconds)
    (4/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.387918286 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.982818727 seconds)
    (6/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.361842724 seconds)
    (7/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.595227879 seconds)
    (8/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.618323025 seconds)
    (9/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.374894441 seconds)
    (10/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.338054613 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.40027242 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.379023979 seconds)
    (13/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.455640768 seconds)
    (14/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.363282011 seconds)
    (15/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.917287608 seconds)
    (16/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.399511021 seconds)
    (17/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.802285896 seconds)
    (18/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.196801774 seconds)
    (19/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.836699639 seconds)
    (20/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.753417562 seconds)
    (21/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.471195336 seconds)
    (22/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.872070654 seconds)
    (23/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.706464281 seconds)
    (24/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.379813096 seconds)
    (25/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.85364169 seconds)
    (26/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.338616867 seconds)
    (27/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.356022502 seconds)
    (28/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.382470547 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.362113974 seconds)
    (30/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.253555303 seconds)
    (31/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.457629092 seconds)
    (32/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.560310494 seconds)
    (33/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.456685329 seconds)
    (34/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.586464503 seconds)
    (35/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.213632244 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.719032796 seconds)
    (37/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.397258688 seconds)
    (38/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.472159827 seconds)
    (39/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.385936545 seconds)
    (40/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.54983679 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.75989615 seconds)
    (42/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.435516901 seconds)
    (43/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.087272334 seconds)
    (44/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.813022764 seconds)
    (45/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.360717134 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.166428971 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.472516866 seconds)
    (48/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.462461212 seconds)
    (49/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.638757662 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.197626194 seconds)
    (51/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.374435085 seconds)
    (52/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.763222217 seconds)
    (53/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.420584587 seconds)
    (54/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.864177122 seconds)
    (55/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.563960301 seconds)
    (56/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.758268615 seconds)
    (57/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.728689257 seconds)
    (58/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.438611903 seconds)
    (59/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.361649593 seconds)
    (60/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.344745061 seconds)
    (61/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.496985914 seconds)
    (62/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.853513024 seconds)
    (63/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.717285202 seconds)
    (64/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.187095315 seconds)
    (65/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.403841345 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.214058024 seconds)
    (67/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.088187039 seconds)
    (68/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.487211532 seconds)
    (69/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.612816246 seconds)
    (70/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.346167582 seconds)
    (71/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.364648601 seconds)
    (72/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.476863353 seconds)
    (73/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.483576315 seconds)
    (74/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.478267908 seconds)
    (75/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.556135965 seconds)
    (76/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.668717894 seconds)
    (77/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.343989671 seconds)
    (78/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.474120963 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.999146481 seconds)
    (80/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.98770729 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.091532751 seconds)
    (82/286) benchmarking ("sort", Int64, false)...
    done (took 5.548821773 seconds)
    (83/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.490157287 seconds)
    (84/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.366472247 seconds)
    (85/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.160238492 seconds)
    (86/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.346644293 seconds)
    (87/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.055589923 seconds)
    (88/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.356643077 seconds)
    (89/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.795933339 seconds)
    (90/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.352432547 seconds)
    (91/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.092791813 seconds)
    (92/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.47892607 seconds)
    (93/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.606818438 seconds)
    (94/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.375742947 seconds)
    (95/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.738039551 seconds)
    (96/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.539271521 seconds)
    (97/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.523632237 seconds)
    (98/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.749652959 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.761766151 seconds)
    (100/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.375927667 seconds)
    (101/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.376345348 seconds)
    (102/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.797265763 seconds)
    (103/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.833932204 seconds)
    (104/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.439650296 seconds)
    (105/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.385145757 seconds)
    (106/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.376258828 seconds)
    (107/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.812669893 seconds)
    (108/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.773780065 seconds)
    (109/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.356265527 seconds)
    (110/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.405754476 seconds)
    (111/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.597014101 seconds)
    (112/286) benchmarking ("sort", Float32, true)...
    done (took 6.357621161 seconds)
    (113/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.373630135 seconds)
    (114/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.539486509 seconds)
    (115/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.340231412 seconds)
    (116/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.085139798 seconds)
    (117/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.380980107 seconds)
    (118/286) benchmarking ("sort", Int8, false)...
    done (took 4.416692657 seconds)
    (119/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.341490636 seconds)
    (120/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.839809327 seconds)
    (121/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.347538506 seconds)
    (122/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.366411805 seconds)
    (123/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.366603089 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.402392172 seconds)
    (125/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.341805673 seconds)
    (126/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.341261521 seconds)
    (127/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.34746943 seconds)
    (128/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.394585887 seconds)
    (129/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.374667223 seconds)
    (130/286) benchmarking ("sort", Bool, false)...
    done (took 1.884194154 seconds)
    (131/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.401410215 seconds)
    (132/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.104022571 seconds)
    (133/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.38223708 seconds)
    (134/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.432785523 seconds)
    (135/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.340558522 seconds)
    (136/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.617636997 seconds)
    (137/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.359076812 seconds)
    (138/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.106076636 seconds)
    (139/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.464595102 seconds)
    (140/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.356021549 seconds)
    (141/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.156722367 seconds)
    (142/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.119468634 seconds)
    (143/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.647993461 seconds)
    (144/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.447088247 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.263802447 seconds)
    (146/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.473073105 seconds)
    (147/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.362377039 seconds)
    (148/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.838530303 seconds)
    (149/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.388318999 seconds)
    (150/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.877995101 seconds)
    (151/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.605389075 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.766621734 seconds)
    (153/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.468652686 seconds)
    (154/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.341553185 seconds)
    (155/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.706532225 seconds)
    (156/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.389144423 seconds)
    (157/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.45343217 seconds)
    (158/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.371866952 seconds)
    (159/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.133979328 seconds)
    (160/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.354633557 seconds)
    (161/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.282304123 seconds)
    (162/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.723855025 seconds)
    (163/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.413278596 seconds)
    (164/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.068451767 seconds)
    (165/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.403776112 seconds)
    (166/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.321100775 seconds)
    (167/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.46943634 seconds)
    (168/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.364756128 seconds)
    (169/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.371046133 seconds)
    (170/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.389534233 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.729298704 seconds)
    (172/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.390523082 seconds)
    (173/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.344760838 seconds)
    (174/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.390403431 seconds)
    (175/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.342167954 seconds)
    (176/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.343760844 seconds)
    (177/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.358931249 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.354831156 seconds)
    (179/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.436762541 seconds)
    (180/286) benchmarking ("sort", Int8, true)...
    done (took 6.363599311 seconds)
    (181/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.409828984 seconds)
    (182/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.743304641 seconds)
    (183/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.380482408 seconds)
    (184/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.464927378 seconds)
    (185/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.449457905 seconds)
    (186/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.390045765 seconds)
    (187/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.175123476 seconds)
    (188/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.351637668 seconds)
    (189/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.374051205 seconds)
    (190/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.408905848 seconds)
    (191/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.349738824 seconds)
    (192/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.464985994 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.938581724 seconds)
    (194/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.413289504 seconds)
    (195/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.156570913 seconds)
    (196/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.360455478 seconds)
    (197/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.358204865 seconds)
    (198/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.575536656 seconds)
    (199/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.957602554 seconds)
    (200/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.36495266 seconds)
    (201/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.566630224 seconds)
    (202/286) benchmarking ("sort", Float32, false)...
    done (took 5.377159048 seconds)
    (203/286) benchmarking ("sort", Bool, true)...
    done (took 5.469769047 seconds)
    (204/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.437922668 seconds)
    (205/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.600757355 seconds)
    (206/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.370517222 seconds)
    (207/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.357507409 seconds)
    (208/286) benchmarking ("sort", Float64, false)...
    done (took 5.642995639 seconds)
    (209/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.382503579 seconds)
    (210/286) benchmarking ("sort", BigInt, false)...
    done (took 6.372502873 seconds)
    (211/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.350343452 seconds)
    (212/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.553748301 seconds)
    (213/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.006226271 seconds)
    (214/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.576190274 seconds)
    (215/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.562780615 seconds)
    (216/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.364298166 seconds)
    (217/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.474954574 seconds)
    (218/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.416077548 seconds)
    (219/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.447642654 seconds)
    (220/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.110719539 seconds)
    (221/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.384553905 seconds)
    (222/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.387747706 seconds)
    (223/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.392861464 seconds)
    (224/286) benchmarking ("sort", BigInt, true)...
    done (took 6.366018253 seconds)
    (225/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.711307416 seconds)
    (226/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.413657923 seconds)
    (227/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.893340609 seconds)
    (228/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.352870984 seconds)
    (229/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.143370273 seconds)
    (230/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.399211144 seconds)
    (231/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.569247461 seconds)
    (232/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.99151001 seconds)
    (233/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.375602688 seconds)
    (234/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.448452156 seconds)
    (235/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.451534696 seconds)
    (236/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.349696267 seconds)
    (237/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.358766508 seconds)
    (238/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.934859232 seconds)
    (239/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.361423448 seconds)
    (240/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.968129496 seconds)
    (241/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.198498244 seconds)
    (242/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.354270906 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.025230546 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.110513624 seconds)
    (245/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.396099749 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.581716082 seconds)
    (247/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.364882736 seconds)
    (248/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.347715368 seconds)
    (249/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.364337955 seconds)
    (250/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.478781172 seconds)
    (251/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.783364589 seconds)
    (252/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.416448481 seconds)
    (253/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.355434053 seconds)
    (254/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.573488288 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.688033737 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.750608951 seconds)
    (257/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.148268958 seconds)
    (258/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.401254225 seconds)
    (259/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.29430546 seconds)
    (260/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.391539541 seconds)
    (261/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.394087116 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.281023323 seconds)
    (263/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.457822983 seconds)
    (264/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.189228603 seconds)
    (265/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.715998467 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.452350922 seconds)
    (267/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.450865752 seconds)
    (268/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.870476501 seconds)
    (269/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.478963941 seconds)
    (270/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.34979628 seconds)
    (271/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.985659938 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.207016583 seconds)
    (273/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.38724257 seconds)
    (274/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.38491887 seconds)
    (275/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.642416146 seconds)
    (276/286) benchmarking ("sort", Float64, true)...
    done (took 6.376505764 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.457433495 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.412441825 seconds)
    (279/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.349834464 seconds)
    (280/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.18791664 seconds)
    (281/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.656122451 seconds)
    (282/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.197989944 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.412756725 seconds)
    (284/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.394569324 seconds)
    (285/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.364397293 seconds)
    (286/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.735406293 seconds)
  done (took 944.923779934 seconds)
done (took 946.191945507 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.40286256 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.397650171 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.381291571 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.402985868 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.492818443 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.404782595 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.392542328 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.383849392 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.429142063 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.432157844 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.379410745 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.403209812 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.381460096 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.381512785 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.381586789 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.396062686 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.395934413 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.381598069 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.397849234 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.391593612 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.397983842 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.379128948 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.432390263 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.403767713 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.386158848 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.384935916 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.385385797 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.401384513 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.493832132 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.384879798 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.387018414 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.393371012 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.39696908 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.381064997 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.376609781 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.401955854 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.394476725 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.391361782 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.386449902 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.414136217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.80340628 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.405594266 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.383156945 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.385162593 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.383962772 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.388055783 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.383832208 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.390255016 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396618119 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39845918 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.804872978 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.421331183 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.386309819 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.384355061 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.394996473 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.382745826 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.387253531 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.400938781 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.402326071 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400759369 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.3850004 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.388780978 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.38639917 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.400704888 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.390741768 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.833372825 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.403579351 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.388088127 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.801750875 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.413026482 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.817082835 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.40992348 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.387123638 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.397483331 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.41551432 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.398777907 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.380538487 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.385248989 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.393223688 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.384216115 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.396036344 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.399020194 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.389490582 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.386047348 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.400208846 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.408867387 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.396764578 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.387307003 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.394714349 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.404888145 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.393695286 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.397876692 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.389823657 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.381720964 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.396674691 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.390437989 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.390617542 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.388849151 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.390880556 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.397875302 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.80654839 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428385045 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.384416673 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.384057355 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.387318359 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.400351258 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.808674537 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.412410389 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.408829972 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.435269269 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.389063816 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.391890734 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.390773419 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.406292228 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.397854753 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.391325634 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.384153632 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.39175721 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.815700066 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.426754209 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.389866126 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.386268793 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406037688 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.391395664 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.385063892 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.406720532 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.389654206 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403370481 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.509766165 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.400408683 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.418854571 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.386996408 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.392640866 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.410548632 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.405789441 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.420403465 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.391640027 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.406660179 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.405425894 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.385598852 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.399939607 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.400952234 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.391055525 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.396152816 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.384847026 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.412326912 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.402710493 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.402834634 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.411902791 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.51077069 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.387788229 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.394782744 seconds)
done (took 233.232787307 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.449105897 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.385920077 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.472359479 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.386652163 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.487194294 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.486043634 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.384018895 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.385937932 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.38545212 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.767510644 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.38534664 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.385591974 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.38088164 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.385884352 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.46879084 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.388588864 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.385435283 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.733596225 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.387856502 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.458659799 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.386820027 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.385702491 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.386912887 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.767313084 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.385994574 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.387453781 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.459977672 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.389060915 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.730994385 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.382083805 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.38866445 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.731239785 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.477785758 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.406914771 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.399207295 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.397854151 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.489422805 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.406086027 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.469430379 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.468924926 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.473042038 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.427865844 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.384880298 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.383544646 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.392089853 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.390554798 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.388646177 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.416752051 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.386314354 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.388645363 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.735342063 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.3995081 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.397608445 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.388600081 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.38886794 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.410189222 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.387645594 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.390136772 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.478719348 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.392446987 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.45322715 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.768837327 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.772738552 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.391245315 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.388641491 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.388154479 seconds)
  done (took 152.10909382 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.45892877 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.46229167 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.501855301 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.407698847 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.441319508 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.505880475 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.408966501 seconds)
  done (took 11.484976369 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.398298734 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.392534391 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.441131204 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.440722061 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.392341956 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.539434564 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392243787 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.402910131 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.389006532 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.444472583 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.391944736 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.392032795 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.398467424 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.386456973 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.440396469 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.403966898 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.507231158 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.393303443 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.394072868 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.543198409 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.390888877 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.399964131 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.444957717 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.403995108 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.39320732 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.398882684 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.959448038 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.393834295 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390862347 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.393550559 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.3913256 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.430593861 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.394679388 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.392316162 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.391980962 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.508850631 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.394428344 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392062037 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.394418206 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.39144584 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.393273886 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.394369826 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.394356084 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.391520837 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.394072927 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.417589085 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.394699731 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.394269407 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.393690397 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.394769177 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.444633988 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.395507586 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.392200277 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.392169448 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.449724135 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402108559 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.395419727 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.391696182 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.395654009 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392493575 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.545171576 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.443229158 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.395244391 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.442936063 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.394800632 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.39542527 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.394054521 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.394331118 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.448374249 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.396222267 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.443384639 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.393443657 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.549383379 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.419549909 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.396485915 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.398493044 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.398073268 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.39670428 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.392622314 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.401950624 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.393536357 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.396274919 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.402096591 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.393842572 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39415953 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.497354706 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.505293594 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.394200691 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.408728459 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.40389714 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.395709012 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.449334735 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.398457633 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.394533219 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.448923735 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.512462532 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.450701158 seconds)
  done (took 159.131630609 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.401484148 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.406212846 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.398973545 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.413364202 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.396519273 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.398228322 seconds)
  done (took 9.718919519 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.399404678 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.397950875 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.397410508 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.397996422 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.398189624 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.398962918 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.398876936 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399920429 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.401506267 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.398651843 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.398362148 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.399480738 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.399065719 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.39909829 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.398973564 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.398367555 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.398152094 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.395376365 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.39923359 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399217681 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.494520349 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.399021196 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.400437207 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.400308618 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.40310229 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.399800824 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.40699087 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.399734886 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.39907129 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.403190499 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.419577237 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.400191042 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.401084912 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.405808859 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.403619478 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.400697875 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403867455 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.400212946 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.39861846 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.400192141 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.400451612 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.400539684 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.401158499 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.400777953 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.402425916 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.404423491 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.405848694 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.4080012 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.400976409 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.401883765 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.401307829 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.400789376 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.401706102 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.402131074 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.403250363 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.423987097 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.40416983 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.401371632 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.401201011 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.40215703 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.40190261 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.400607654 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.403077463 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.405568966 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.409168356 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.40307245 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.402218431 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.40610861 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.402093394 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.401533594 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.403250415 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.399815694 seconds)
  done (took 103.327948994 seconds)
done (took 437.066558597 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.734246115 seconds)
  done (took 8.042187201 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.522012456 seconds)
  done (took 7.83055793 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.83915924 seconds)
  done (took 22.153964362 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.467977984 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.453723062 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.432206978 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.401415383 seconds)
  done (took 27.063459408 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.745753095 seconds)
  done (took 8.053342902 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.395734421 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.396579506 seconds)
  done (took 14.101195778 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.453049416 seconds)
  done (took 7.761617696 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.469060103 seconds)
  done (took 7.784545427 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.424285728 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.420721965 seconds)
  done (took 14.165328426 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.376335526 seconds)
  done (took 7.684881195 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.355402753 seconds)
  done (took 8.665319923 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.413753955 seconds)
  done (took 7.726675857 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.460498527 seconds)
  done (took 7.772467875 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.376962544 seconds)
  done (took 9.689324683 seconds)
done (took 159.803182795 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.399474208 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.39999015 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.401166991 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.400313364 seconds)
  done (took 26.913124154 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.439723927 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.440183532 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.442306138 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.452113225 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.444466151 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.440032504 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.43359104 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.434105837 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.45201791 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.445137484 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.442571649 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.442895251 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.442766459 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.433267214 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.44380184 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.443252555 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.452203339 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.44283248 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.434091859 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.444945422 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.409778153 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.452602211 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.446149489 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.410953514 seconds)
  done (took 35.879631539 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.92847609 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.479251596 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.56248664 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.461723272 seconds)
  done (took 7.746512821 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.461306671 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.462563837 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.475453089 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.513370339 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.552127693 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.472355815 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.436548777 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.431069695 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.416913108 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.463173365 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.538094043 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.479314784 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.571881818 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.410300136 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.607348992 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.410624681 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.409015577 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.461178583 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.514215885 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.527773501 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.410588335 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.462234777 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.468889272 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.479046392 seconds)
  done (took 36.750523585 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.410857179 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.429146535 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.409922865 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.409937322 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.417771591 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.409267996 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.410077549 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.411509166 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.409962161 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.416342526 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.409521695 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.422981546 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.410277709 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.40973575 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.416993945 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.411859049 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.416575164 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.410127377 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.411130478 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.417004523 seconds)
  done (took 29.587758366 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.405202376 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.258717842 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.756873442 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.66050477 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.403203982 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.412964131 seconds)
  done (took 28.215741639 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.479754053 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.636760503 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.418995336 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.763752914 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.867371219 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.439224903 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.412201541 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.650024396 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.971391662 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.965455179 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.477571242 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.486986672 seconds)
  done (took 20.886450167 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.406664158 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.430745673 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.422684906 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.431828979 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.467233286 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.441381981 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.419199428 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.407554943 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.475810832 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.495145332 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.439664373 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.467259074 seconds)
  done (took 38.623765074 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497510927 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.451691893 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.293068265 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.453295059 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.124683024 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.619572594 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.434498818 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.86534979 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.411846086 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68258613 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417464306 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504985149 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663904223 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42118088 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.41773498 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.395980152 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.659088017 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904126533 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409604496 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.490387667 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441700134 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.420848343 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.573258479 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.446720329 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6204075 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.550131173 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.669963658 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.185295937 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.702090409 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428970349 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419932732 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409168976 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683569319 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072744951 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531979548 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420290093 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409885181 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.956253953 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.397348255 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.473449211 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.409648006 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.419419652 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419728093 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411044616 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.344262177 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421459396 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881675159 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.416490182 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.121943654 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.410346135 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421087891 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504806827 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.414369394 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.401916396 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412095761 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.435794769 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.408385104 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504602095 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001903535 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.895920405 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434112598 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.353409908 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.410707983 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.404846688 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062729154 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.540354532 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.415178667 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.415277077 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347087582 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.476782258 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435153697 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.558698622 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.434884568 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061262743 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.122049284 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.445722867 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.350304416 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970262755 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423716033 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.355138048 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641306741 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.190928517 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34957617 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.355988968 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.347863683 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124818413 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420087639 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.828264339 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439396848 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.891930571 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.424630145 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431540657 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436808581 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.637441629 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.292603962 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414457533 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.414458507 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564240338 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434892344 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.873608206 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348205351 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.419190435 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669469328 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.627095938 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415098604 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.418230971 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.659041279 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.417876749 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.436575119 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.41531407 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.452702901 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.999591836 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.454423341 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.89977485 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441385213 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.192545083 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157755608 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424774621 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.525809153 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.416213006 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67098667 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.190426971 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.574363673 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483955379 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41881116 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.41669907 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.498697932 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015890264 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.574454341 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.412268196 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426509532 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.435447003 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.417540561 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.365067112 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.418885192 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438894678 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.202081639 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.640442132 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428629911 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700294063 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352039716 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564408708 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.426387513 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.640220798 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.617668333 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.434493663 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.674780683 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849024126 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435347153 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.435573591 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436135859 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517363535 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439511243 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.421140783 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.680151286 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.421293854 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.420802671 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.516673998 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.203320724 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420709156 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.423038109 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421656509 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033829369 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420747163 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.426590094 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.308318126 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.432272789 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487702833 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.424369923 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.42816222 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.220181089 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444095779 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.424158849 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.42613804 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650023535 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.429201727 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.411141385 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.503766863 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.631856086 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.014023304 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.459156669 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.353767037 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.129753189 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.111335586 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419146275 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.608498203 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.42077687 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428870431 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.431202894 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.430208088 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.005977818 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.448461558 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.417630566 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.434316563 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432054677 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.425245902 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.420122189 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.199899259 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.94530048 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435338454 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.439658117 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563417812 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.434740494 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.354793919 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.938037081 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.426264787 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.422234651 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.198624883 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455540688 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.42363527 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916723891 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679539244 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436350219 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.433805516 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.536131442 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.46468698 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.422380579 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.430480441 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.440266633 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.436508196 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43926076 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.433549673 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.422897167 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.794440908 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991510689 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178409825 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005318533 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378505774 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.443033162 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.313510992 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.885378672 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35757376 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.079659601 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611331692 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.910665297 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366265581 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641324974 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.639962643 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20809382 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.442951699 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.65137565 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.346922735 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.449122746 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442485799 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.636300578 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458481825 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.424608973 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.361145183 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.704090269 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697348255 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.424319516 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.511430976 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.886504481 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427294016 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.211078167 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.436534602 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.76585768 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627756646 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.05302662 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.812819849 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425694367 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441135893 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.920392358 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.434681465 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.949747886 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.064969269 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.454550124 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.648831319 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360371141 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.436927649 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.436225538 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.420565482 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.717006637 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.432298216 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.688562301 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.437012325 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358986842 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.434056675 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.974812026 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.308852538 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.431814408 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426988044 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176465886 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428599019 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.728479158 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.436596996 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.196906206 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454714945 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.361049088 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361512019 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.119261432 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.436543791 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401982146 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933264135 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.428690846 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450159683 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.454368371 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281919743 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.682579158 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.441096386 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.029623932 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679073161 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433901856 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449955417 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.528318012 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436352126 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.419915777 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.308939488 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.663494094 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.485532799 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.651511486 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.322365148 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.336227868 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.430494658 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638996344 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.309888357 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.432303831 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701824539 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.165405039 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.450163042 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.129015938 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472583449 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430080893 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.449307163 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448269129 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449313459 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519239878 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.43935357 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.439314761 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.440607389 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.606893663 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433927319 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44048058 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.442958997 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.523394757 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.94979389 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.208898768 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.210787425 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03504355 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.196130204 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.045059392 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.470062758 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430321706 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42970018 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.364293823 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581712758 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.956805081 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705215493 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.561030386 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.435635659 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.47206426 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437211263 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.452576761 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650996931 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705612572 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408912899 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.43699205 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.225828222 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.590105715 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44130496 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.64229293 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945144705 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004364413 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545511257 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.440918842 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.900589069 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.705291253 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.522017038 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.432399042 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.0239312 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.438042436 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.766243355 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.464365675 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438143499 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.588075455 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.443398086 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0963918 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.469113395 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.588008811 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.206684916 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.474775707 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.69719108 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.908435855 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.450954727 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039266187 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.182469286 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713621472 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503600347 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.444405425 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.544726123 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582105564 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.434231536 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.339306816 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435068035 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.278221281 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.143866278 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.444641167 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.032383319 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724107714 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.431667375 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.437802252 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465274868 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.444062959 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.657256461 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.147305282 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.65810157 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.445697498 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.444057641 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.004694229 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037134223 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474320801 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370620151 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.437365226 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.690090512 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.698583052 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.458290064 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.888482978 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.146036295 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997492324 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.406270508 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.458012528 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435798103 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157592116 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.043577533 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.238803244 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960744866 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.093425764 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.440885944 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.718471083 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.440945438 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.445536577 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.720468396 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.439584083 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.435618641 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474065289 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.042703816 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.232492888 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.449701453 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.578066569 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.382231228 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.664807905 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487368163 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.372783716 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436155494 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.62029328 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.437075588 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567200208 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447596307 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.4390167 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453455093 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.179741919 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.709992532 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.443573454 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.418370595 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.424639479 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.464087084 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.55464316 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.719304011 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442412197 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.112816477 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.78774889 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6943002 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.448657108 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.425370966 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.442944328 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439671396 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.158214903 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.449333835 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.448055106 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013477495 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.449195043 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.456808751 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.444784592 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.65612075 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65029181 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.439022842 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460074794 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447281749 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461583269 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.338859848 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.206704364 seconds)
  done (took 1687.132008438 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456718358 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.464642566 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.468378643 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.482334867 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.490844357 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.562127217 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.540012679 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.462577441 seconds)
  done (took 53.27766861 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.448133621 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.601304517 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.477749075 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.445038602 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.456159488 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.448491726 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.906413131 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.468718579 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.450514864 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.450004144 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.457471253 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.448032937 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.119904351 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.449553184 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.443360313 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.431724098 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.455074247 seconds)
  done (took 67.312803239 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.441846486 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.054798054 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.551838038 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.451043601 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.526153762 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.472950295 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.386374538 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.477166057 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.442591862 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.821673402 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.113975277 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.489192978 seconds)
  done (took 86.580765256 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.459420615 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.458399998 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.459365349 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.45963095 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.458447075 seconds)
  done (took 8.645766229 seconds)
done (took 2128.866911848 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.448082499 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.157274867 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.067331033 seconds)
  done (took 5.575498803 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.59143135 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.639877274 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.759803055 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.78122199 seconds)
  done (took 8.12457711 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.721275057 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.828493993 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.631471041 seconds)
  done (took 6.533702679 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.727520353 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.45149284 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.45713576 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.445884661 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.452538901 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.449725332 seconds)
  done (took 20.700704361 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.4488392 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.450447421 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.447447744 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.45083902 seconds)
  done (took 7.148698619 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.423215627 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.161126626 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.432716253 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.446288915 seconds)
  done (took 18.816279537 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.194371384 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.207421104 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.192286802 seconds)
  done (took 7.947101606 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.474323476 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.479006189 seconds)
  done (took 4.306287128 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.741848707 seconds)
  done (took 3.094624939 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.462394537 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.50056143 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.495231548 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.430451463 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.77531275 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.840866726 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.07032135 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.672958924 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.396434257 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.648012133 seconds)
  done (took 31.645749362 seconds)
done (took 131.328968901 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.253883264 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.82216044 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.652182532 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.22530417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.678100452 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.651072279 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.662527156 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.191516921 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.788026167 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.733486949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.267946679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.677240243 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.608880143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.824022841 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.608756548 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.448455594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.678110302 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.292311048 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.910292803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.111409347 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.66775948 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.864629905 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.100082718 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.88609322 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.677227258 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.602351004 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.444753972 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.452369042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.083523885 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.463723184 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.604240223 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.286019821 seconds)
  done (took 193.574837076 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.445707887 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.446018742 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.446821632 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.476719291 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.448143386 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.456836502 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.465260355 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.467491754 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.455124592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.456547924 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.453994056 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.447454276 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.450539013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.449324622 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.465824877 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.448617481 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.466518997 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.470006683 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.447843224 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.472042868 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.449116729 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.475907559 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.461685122 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.452085981 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.456328976 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.449577163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.448300733 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.454916182 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.448885319 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.449564081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.458453055 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.458716217 seconds)
  done (took 207.956991683 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.449188109 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.466397477 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.4495619 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.457276454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.467878697 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.458316356 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.460123405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.457652001 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.461680285 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.457078781 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.450200437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.454297695 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.452133853 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.45050309 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.469984039 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.450222578 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.468132002 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.45825388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.475812954 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.457163992 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.46793126 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.450455761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.449995447 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.450284975 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.477255513 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.45187817 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.46886253 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.451269491 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.47057015 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.465686078 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.460482705 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.489572996 seconds)
  done (took 208.085781684 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.653861409 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.460156857 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.458808161 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.414217909 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.459966534 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.458957291 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.456956938 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.648042183 seconds)
  done (took 15.37087523 seconds)
done (took 626.342568884 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.766400713 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.47762172 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.661824851 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.479347682 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.279472277 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.497792261 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.477468554 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.647987097 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.396680794 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.657101652 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.71424616 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.50248076 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.856428239 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.484948277 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.733195285 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.585932167 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.352807602 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.467330255 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.796275955 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.027957821 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.75174666 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.989214192 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.678782428 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.386967283 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.862409841 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.95917825 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.214247374 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.343745358 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.49715606 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.800406185 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.158385082 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.45135845 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.549392383 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.542328827 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.602174724 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.583946201 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.447741842 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.546453665 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.684066646 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.744160203 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.035560555 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.214443013 seconds)
  done (took 97.268712023 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.443583294 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.443294072 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.441848982 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.443447293 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.444397506 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.442779156 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.442931573 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.442668344 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.443905732 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.443882696 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.443620715 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.445135007 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.443912326 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.445172446 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.44298637 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.444756284 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.444741608 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.445987338 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.443652561 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.443490726 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.443849791 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.443578921 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.44423722 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.444322456 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.444494436 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.444443043 seconds)
  done (took 38.904309591 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.463679368 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.707637104 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.885265759 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.477085451 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.461628478 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.466569142 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.542634353 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.472466761 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.466565447 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.466219384 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.617708153 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.475440958 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.494980232 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.902825225 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.47568579 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.464898813 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.464448471 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.465269142 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.718869973 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.481813506 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.560538702 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.474047569 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.543807992 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.483250953 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.485804901 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.465741123 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.469548535 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.053469041 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.490444011 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.620407395 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.281672009 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.548970959 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.997913676 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.911931185 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.282095028 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.474016628 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.465627175 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.622515284 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.467299947 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.465930155 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.543787561 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.474862493 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.882488675 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.149088766 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.493944684 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.467033904 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.071448346 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.640017461 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.711635325 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.483218252 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.908739806 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.478360654 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.468741154 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.46655106 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.712090229 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.482823219 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.466200605 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.066588618 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.491830133 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.54521827 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.475898043 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.467547542 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.731373814 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.467964461 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.712145269 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.468910633 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.474670633 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.486873196 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.886098644 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.478811272 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.163959277 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.494224058 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.468905839 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.621304143 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.724317853 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.1141792 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.498497402 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.739446381 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.013941591 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.571845217 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.480875718 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.045818857 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.574878232 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.481258817 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.471905004 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.470122672 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.46859937 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.514420311 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.545368492 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.110841933 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.178180409 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.107269548 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.576266843 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.490680012 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.469929204 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.072140307 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.498536181 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.470022828 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.884424827 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.171881991 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.495643443 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.476188344 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.164688721 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.4980936 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.549143584 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.482977446 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.895108861 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.478974792 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.515570007 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.470633077 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.476009375 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.492353143 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.548519611 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.482405125 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.470691693 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.132759915 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.657200314 seconds)
  done (took 192.941544681 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.464264243 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.464263716 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.46458223 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.464147065 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.464056339 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.472230396 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.465543104 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.463925908 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.470611904 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.464550677 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.464076607 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.467479453 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.468747286 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.485275513 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.475956378 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.471939477 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.120131029 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.466446073 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.464702761 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.465431061 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.259213354 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.474847395 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.466925944 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.467189661 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.467526304 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.467566708 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.47318761 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.468612711 seconds)
  done (took 155.926179416 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.474277436 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.038125267 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.501222094 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.603804098 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.500814334 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.47030801 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.601363341 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.539212827 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.500779039 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.470478046 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.471295312 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.777945898 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.483946174 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.99100777 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.671937118 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.630835622 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.989205363 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.501001426 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.470012669 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.471495249 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.604860601 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.482605994 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.777273979 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.050268752 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.502068782 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.040579236 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.466438201 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.473829873 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.472887623 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.041986121 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.500094477 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.779715556 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.558754953 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.538670285 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.068420095 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.017429385 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.020010705 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.631416472 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.473933841 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.472755727 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.47203507 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.458427492 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.037015247 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.494373434 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.475182849 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.033498391 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.50337123 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.476522839 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.481927611 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.473053511 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.533564188 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.562861228 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.80617845 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.045575642 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.571610244 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.494784971 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.606171189 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.881402486 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.477956336 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.991450639 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.467109965 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.045703261 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.496722417 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.457990835 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.475318419 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.480407208 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.625217153 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.616624468 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.995492359 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.495264493 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.986739981 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.64360278 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.483713229 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.47597721 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.478849839 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.043076694 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.008263175 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.646333692 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.618731127 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.675973294 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.470341472 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.475268206 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.459509297 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.554377895 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.485172502 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.046257535 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.006824152 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.496929714 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.481377634 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.478781915 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.479106131 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.652343702 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.072087189 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.572686399 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.984787963 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.79938965 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.784112429 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.480383746 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.537956838 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.506626252 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.78471252 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.481340071 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.536321846 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.939329297 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.784494457 seconds)
  done (took 174.955818256 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.719150779 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.701847096 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.579304139 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.641285232 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.092249866 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.051130625 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.77699624 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.619645347 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.590845626 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.736470777 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.640822221 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.576990978 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.693648373 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.564628668 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.22741253 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.577035816 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.58773951 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.627307327 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.636512917 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.49707944 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.160220518 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.775099616 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.67463882 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.369619487 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.580166239 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.25654936 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.044116783 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.022988075 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.658115551 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.813059816 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.0248218 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.607641014 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.449434877 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.173182892 seconds)
  done (took 70.129851763 seconds)
done (took 731.486942097 seconds)
SAVING RESULT...
DONE!
