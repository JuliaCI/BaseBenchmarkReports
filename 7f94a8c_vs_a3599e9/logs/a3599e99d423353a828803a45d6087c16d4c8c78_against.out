cset: moving following pidspec: 21680
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.257523979 seconds)
loading group "string"... done (took 0.559681314 seconds)
loading group "linalg"... done (took 7.666667489 seconds)
loading group "parallel"... done (took 0.174921104 seconds)
loading group "find"... done (took 1.192403859 seconds)
loading group "tuple"... done (took 1.87518026 seconds)
loading group "dates"... done (took 1.278410195 seconds)
loading group "micro"... done (took 0.236738188 seconds)
loading group "io"... done (took 0.774193468 seconds)
loading group "scalar"... done (took 42.738941637 seconds)
loading group "sparse"... done (took 13.305551966 seconds)
loading group "broadcast"... done (took 1.162352548 seconds)
loading group "union"... done (took 14.308204454 seconds)
loading group "simd"... done (took 5.149613503 seconds)
loading group "random"... done (took 10.068631051 seconds)
loading group "problem"... done (took 2.203836247 seconds)
loading group "array"... done (took 22.793168938 seconds)
loading group "misc"... done (took 2.151515979 seconds)
loading group "sort"... done (took 3.483326412 seconds)
loading group "collection"... done (took 19.599481037 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.583718164 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143903188 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.152009086 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148433617 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191121581 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.157833874 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160599269 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098367167 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.004377982 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.176921673 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155966635 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520102621 seconds)
done (took 5.28470024 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.299029834 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095150526 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104565602 seconds)
  done (took 0.935880091 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078146842 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145480846 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095491982 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078935548 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097011535 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.079943587 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097277233 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.081592313 seconds)
  done (took 1.413003661 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087174465 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.09874491 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083119974 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099277717 seconds)
  done (took 1.107252926 seconds)
done (took 4.580000592 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.7404163 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.273887658 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204064805 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466320357 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.200546897 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217197651 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.673678285 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.378011733 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25301103 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099896654 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14369403 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386485518 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138187018 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687184026 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091649577 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125985868 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179787817 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.462439992 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082483016 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.111476812 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117637772 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142096394 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132828721 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092736789 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184660031 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082099565 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19542172 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.109121322 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080385175 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.293862531 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202363221 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686014561 seconds)
  done (took 11.012272939 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110949268 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134547214 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098606922 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13840968 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137661425 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.10191303 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083783126 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097054418 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123577564 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176891712 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.118488379 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.141333611 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098559437 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084059302 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.119122841 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.249236548 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.124378725 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.105705965 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103672773 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106207195 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124551693 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115578458 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111882266 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094619823 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170012519 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.227253564 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113478118 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129707582 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.101365427 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.115233787 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144929699 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.146604468 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097656346 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081470165 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175711662 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.127204397 seconds)
  done (took 5.285145559 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.08785238 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.192728769 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124051494 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.171921504 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080725692 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144661032 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095852312 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114560782 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.258156228 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.176473097 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177360659 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.145809478 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101342969 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.100720643 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.083812665 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099828074 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.653899752 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166480767 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.137240082 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.098195837 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106352384 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101165 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.36362715 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.093002879 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.098102269 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083166664 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083728643 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163695202 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08188899 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.168840785 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101800747 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100593732 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133377136 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.197680339 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128119056 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116753821 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09796175 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.156794887 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097558609 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179962395 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088442316 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095688707 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079870693 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121618644 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133416992 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.120896288 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100557671 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.098675999 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.208192477 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.098703628 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099964306 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.92739368 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182608946 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.106271669 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096228905 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323282481 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.102140645 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097632935 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077647873 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.281830054 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.185609135 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09873129 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079531629 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09786817 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081084448 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.397944266 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080051411 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.840128468 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082331539 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10762016 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.078524573 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09817829 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080573207 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104866945 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.103377463 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098500392 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.097376529 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080274002 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097302317 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.077876807 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.096350239 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081330981 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112250341 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101559957 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.079144402 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16566892 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.082059467 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.118137882 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128004026 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086318005 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09748864 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131159153 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082363028 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097393462 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133250703 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080678034 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110552646 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099218236 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142479484 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.083174736 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.143375442 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081554613 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126450425 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098590538 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115009081 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112393122 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099930645 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083861186 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096123598 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.076588652 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166193395 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.08127766 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100294124 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.082804151 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111640711 seconds)
  done (took 22.762832651 seconds)
done (took 40.885651357 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.329091073 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105926736 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104844305 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104996522 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102142236 seconds)
  done (took 1.559586069 seconds)
done (took 2.345872381 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291961705 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173165805 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096818578 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168811223 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094619146 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174374162 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161336007 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113065767 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.205274043 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.096290452 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.166374142 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095712769 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.078200592 seconds)
  done (took 2.729095309 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095747672 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116852294 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083427034 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114467283 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077399986 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114417029 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094283186 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121359611 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112510902 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089188239 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095548846 seconds)
  done (took 1.898125368 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095568762 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115382388 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083641333 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11304449 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078025523 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113103428 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094960473 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.119690878 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113610673 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087973665 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096693825 seconds)
  done (took 1.894454419 seconds)
done (took 7.297675018 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092260307 seconds)
  done (took 0.873971824 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.942574254 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.026864374 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113371837 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151034958 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.303372881 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.19760724 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.487617406 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12653056 seconds)
  done (took 11.338611377 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.149615648 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.08734005 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10595433 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083847002 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.104487673 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.085729379 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101897818 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104581698 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086089235 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.102197073 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.087189112 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.103255776 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.099962136 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086888471 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.100619219 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084740836 seconds)
  done (took 2.416525821 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.121193495 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119310249 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110733722 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110784844 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086869569 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107982381 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107484445 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.090961237 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105809106 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106503382 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092441673 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109832416 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106699589 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082212032 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10973914 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109825686 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087166786 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.108340025 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109138281 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.092384337 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110262983 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.098445547 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08893207 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.109840495 seconds)
  done (took 3.376104695 seconds)
done (took 18.791487456 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163067028 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109329713 seconds)
  done (took 1.05878728 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096470857 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.116416936 seconds)
  done (took 1.005937566 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099386859 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098256391 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12480835 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112114968 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082922244 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099699838 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122592713 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082347569 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100751089 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081532991 seconds)
  done (took 1.801034571 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084291333 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112137573 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104109083 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096540502 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.108506059 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097420979 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090552368 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.103162981 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112887102 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077996089 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105034696 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116900094 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086108088 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.119212211 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106850833 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085856025 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104686557 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100545725 seconds)
  done (took 2.609433318 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081224374 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098795739 seconds)
  done (took 0.97625347 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082994289 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09604918 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081083536 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101015919 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09497536 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077783401 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094409693 seconds)
  done (took 1.424022088 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.493263089 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.137283224 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.260142659 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085461091 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123574408 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.307194441 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.09923502 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084399791 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.10603909 seconds)
  done (took 2.550476509 seconds)
done (took 12.216538044 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094302164 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119152722 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111722988 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469835255 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108581213 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.100462952 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147461265 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.254566951 seconds)
done (took 2.20480014 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.145695657 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329106258 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120646139 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068641338 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.102477259 seconds)
  done (took 1.42227562 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081296722 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101637691 seconds)
  done (took 0.983252151 seconds)
done (took 3.355504973 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082794982 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097760646 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079080389 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09766065 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078871987 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095437687 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081021223 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097916378 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.111883487 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.102232712 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.100494164 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082399297 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101408656 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0789951 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096449058 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080784645 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.096568549 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07855743 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.096478564 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080125847 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099631585 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.079189613 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.096649415 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080905817 seconds)
  done (took 3.007826815 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100270335 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.10098478 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104538215 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085920979 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103084597 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085482565 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.105122976 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098928338 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085777372 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.10155871 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10042829 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084970745 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.101068919 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08446044 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102387894 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.10307671 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.0866846 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100758958 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084213675 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.10419837 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.104508788 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081613822 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103958786 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102339021 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084434852 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103369545 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.081927263 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100173546 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103558594 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084198929 seconds)
  done (took 3.677787626 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085580929 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094627324 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078635478 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103727319 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079544152 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099129452 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079235196 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09763105 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079896815 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097618417 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.081447085 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097927289 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079605891 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.099805638 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080123557 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.104123661 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11039777 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.08095352 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097433448 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080736045 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100287868 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079315275 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098134216 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079627315 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.097928284 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079480431 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097626075 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.080050318 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.098539441 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.080214114 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100574257 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.082815369 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09822887 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.086251914 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.101743977 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.079301364 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.10278113 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078975596 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100393299 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097321679 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.08055145 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097779242 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080716814 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104168779 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079384533 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.099421264 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079225192 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099511868 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080197701 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102037946 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078722085 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.098356986 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081069714 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.10010164 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083048137 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09816953 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098211116 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.081072675 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098646061 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080469412 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096662573 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079508943 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099775151 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081860729 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.113482211 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085673945 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098237856 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081181968 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.099738894 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081961702 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101045162 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111202888 seconds)
  done (took 7.365468512 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084092396 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106953917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080120996 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100977715 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07767581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099631129 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101442743 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080623802 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099461562 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087119137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100012702 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081726326 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100721147 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10986355 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081189634 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.10047731 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.086355367 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097368502 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079992367 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103610842 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07978238 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.104148427 seconds)
  done (took 2.850995292 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213861962 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106869929 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143894948 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108407412 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085014613 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110238612 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104778119 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089232708 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105363411 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084117306 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105344959 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105390342 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084322315 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105187908 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103290453 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087294948 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105897168 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086480651 seconds)
  done (took 2.747244902 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.09337697 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10115355 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103361425 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101697519 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101974221 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083885144 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106941963 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109726255 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085265507 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100894183 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091419218 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104262091 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103213678 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082570075 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102795061 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081955071 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105149265 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081806247 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111497279 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107481551 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105991414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092696099 seconds)
  done (took 2.973151228 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097504677 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102955529 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120393911 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085250372 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.097029068 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.08042043 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.108137885 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082249832 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110278547 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103497281 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082663716 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.099644314 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088999479 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102356718 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.107342609 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082539923 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103300476 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082809206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104658436 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079416234 seconds)
  done (took 2.737882024 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102835364 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103379792 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.213879653 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094724073 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104573181 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083745029 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114202918 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103738961 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083700314 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129751038 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103019087 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.08276414 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113278582 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107577414 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.100076223 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093078034 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110502053 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110704684 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083781337 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103619078 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127645295 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084608899 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.114680601 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102794169 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084653113 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.103364933 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101184013 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088399589 seconds)
  done (took 3.772396214 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082113485 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100305747 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079390032 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099145773 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079390144 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09823401 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079927545 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097826332 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082971863 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098775281 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081958049 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100176023 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08492695 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102062066 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083248347 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.101595141 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083283762 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.098809606 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080021689 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099692934 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080995039 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101134146 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080838451 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.09884465 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077651301 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101120898 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078566152 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.099564072 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08190315 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099422265 seconds)
  done (took 3.536562487 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091417368 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107801585 seconds)
  done (took 1.020776415 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080214462 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116783141 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078590329 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.105426921 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086316188 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.100828256 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.110021131 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087082155 seconds)
  done (took 1.587674057 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097559065 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112516385 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083658454 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.115115378 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.11180764 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09616968 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167238158 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10188706 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087512823 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100718877 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113706978 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081724076 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10667941 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08194027 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105908752 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088394833 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099148971 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088216836 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.104349621 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099751159 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084869265 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113184751 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083634326 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099256521 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.081535623 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.111189441 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110213988 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.084456329 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105529072 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110757771 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090032543 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.095038408 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084115072 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.103669289 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081913399 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.112590923 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11471462 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086370703 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111010313 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084539932 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114330604 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095275964 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087204491 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105933884 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091415111 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102887739 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.081687961 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096908918 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097500975 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084276596 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09620318 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082251806 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095560562 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089367838 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106288872 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11258277 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08171236 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.104153797 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085874338 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104787706 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.089582266 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.105454046 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.08541775 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.102144221 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10945123 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.087684861 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.10976893 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077535697 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095063261 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.083545147 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111157468 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123904995 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089946143 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103223364 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084027922 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102316619 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105765652 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086322805 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110311183 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092524498 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103903555 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110284229 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089905712 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102939081 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086772903 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111938792 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.100422395 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085945847 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10008406 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098643742 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.102413843 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.081995281 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.102159403 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.111509179 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.0871298 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102803383 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081730881 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110670216 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078122052 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105194687 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085246746 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104798397 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111993673 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088317368 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108917943 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10771109 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.090186003 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101657704 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085054245 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.099118624 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084278569 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105398222 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088855495 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.097349445 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103781402 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084686419 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102342137 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089399443 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099334777 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081878426 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.110405243 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107824169 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080544028 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097909378 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085383517 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102666918 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084397653 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108720344 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099138341 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079290691 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096942848 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085873687 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.1023261 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087853208 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.109241905 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105207876 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07916025 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.101356898 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.088838149 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111916063 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.084120951 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.105227749 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.107815991 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085229515 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.103622531 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090378176 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.106600016 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.083363532 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.109067249 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.085291558 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.100097098 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109151004 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087079472 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.102927225 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088897812 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107148871 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084593372 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10496154 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100598132 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088865536 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102163459 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081151511 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101315149 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079500314 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111258419 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.10280538 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078378545 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098084277 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.091596962 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.100200925 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080963496 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101813857 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.085514457 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.104530295 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.101018777 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083683169 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.104063347 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093880576 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107350767 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102839374 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087696827 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.112410489 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.083279674 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.105902588 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081475916 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105357807 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103098297 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088976049 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107358037 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087043298 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10524015 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077739397 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10751399 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10936079 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082508039 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.101195083 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081165063 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.105414475 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106905009 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086906339 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.102565373 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082353962 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104844847 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088848289 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106833125 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.101182671 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082800081 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.107052263 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081699791 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.110513993 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103228163 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.093034575 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105996698 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078490552 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10713992 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079533211 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108485702 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076626529 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099766565 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100058416 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084556925 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100982389 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085419734 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095733055 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090043119 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110457114 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081533177 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.102173068 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101415822 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092327847 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104045828 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086024954 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105993627 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087431266 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114872494 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.10071252 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085837934 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111763299 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08267373 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095767813 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087770335 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100728926 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100853622 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.080955341 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099332013 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085924654 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111562589 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105055012 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077445292 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.104788075 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082406048 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100710737 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079147416 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108242092 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086209401 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.104093483 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.1093043 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084197907 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102599071 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086073763 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.102147869 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082126573 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103899828 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104670083 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084470637 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105328748 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08232104 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105399002 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081202396 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104228937 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084018736 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103466218 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100821515 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088759283 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101090578 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08276377 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.105209313 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.082606688 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10467742 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.081818946 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102050529 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105835987 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084846889 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103048968 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085318543 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.098945326 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090294231 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102633238 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089564951 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103255307 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098762265 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088811417 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104348417 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088872492 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104781144 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102190401 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084375532 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.102685555 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085575987 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.11160265 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080674142 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.113120658 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.10837798 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.0836447 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105478731 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.082508748 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105130623 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.081927785 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.106198282 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083583087 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.10387239 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100395722 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.0887805 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.105904163 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.083640365 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106225972 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084556316 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103590233 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.083175808 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097601793 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.08261207 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.10339331 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104202328 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09190349 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104622923 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086203821 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.104784179 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08499174 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104288359 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.080167462 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110927705 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113321306 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082771215 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110877632 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102003642 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.085003636 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112607452 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076027937 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.102664714 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080110303 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10087363 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109375946 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085495364 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111172879 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082319649 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102569513 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079077854 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103671175 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081121805 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098244142 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080275085 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105461793 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103712999 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081670989 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102697931 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085993511 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104307335 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099855936 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101854628 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103425467 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.08438067 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098812755 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082200709 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102531714 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085898457 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104674373 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080630023 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100519925 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081977056 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105091195 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.083074164 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.103274908 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103076671 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090565576 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103193396 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085590731 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107565897 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.076542019 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105632999 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.103140717 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.083944438 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.103072711 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086948442 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107226 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.085080703 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111064961 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101880984 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084890818 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104498173 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.082141916 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102607877 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082976792 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103989235 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081901166 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105270045 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111652603 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.082619146 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106385652 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084150385 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104628299 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088024377 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104486378 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085239609 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110680784 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105823895 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086209465 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110343777 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086730563 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107708588 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103920792 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085244915 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109475846 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081771249 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113171501 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082771093 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104727895 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103994863 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081839927 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102649516 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.084089217 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102430094 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088024882 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.10672169 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.081275679 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103086749 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081212157 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10543922 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.107143555 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090273952 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106136732 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085876809 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099559787 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079676804 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104575185 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.10083838 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084784886 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105429201 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08972508 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10611675 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084448325 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103149887 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110273099 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09096561 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109873952 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.083147937 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110142659 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.083906935 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107395393 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103597949 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.084072263 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104976369 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088749494 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106881098 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082132153 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112926891 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10701771 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086524163 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105258255 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08416586 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.104652026 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.080260706 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107582243 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.086010255 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111276814 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106244754 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084025814 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112983303 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08406764 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103246528 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088214361 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104100721 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.110777314 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079237507 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.104633261 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.086876881 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107219994 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.07975088 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103260085 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080712631 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106581425 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082846531 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.09951975 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113914948 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09142106 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106652533 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082415938 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103282754 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.077879779 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099509698 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.08199659 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105605582 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.105657945 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092705688 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.103590715 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.083115785 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099828428 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082878361 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108229994 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.107747119 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082661065 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101409427 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.083914529 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108102055 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.091532984 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105332119 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083974046 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110110273 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105063037 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082944285 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108499652 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.083335268 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111746224 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09644165 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.108943811 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106397196 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092907816 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.115068829 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086532001 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.102418271 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.088082788 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110190881 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.106063577 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.087415171 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107344897 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098220775 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110156912 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083965902 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.106243967 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.10768766 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.08407668 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113647973 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086009871 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108326167 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088802003 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108462365 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113757445 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087816691 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111392873 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086248626 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107058539 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.102750838 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085247155 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101902353 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084327716 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104355632 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084711868 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.109262291 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111831799 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.083887896 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113766151 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091753546 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109452896 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080401384 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.10424628 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083705896 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100456421 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.105820601 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083678489 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.104342459 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082696056 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.104501942 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.08556771 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112000874 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085572817 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.105602408 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10338794 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079068636 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.109258003 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087745583 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106018396 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.08085175 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.105701405 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086450846 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.111729364 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107937593 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085511169 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107355013 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086531219 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.106568867 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081916047 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113437195 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08330364 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109961442 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.084362167 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106544352 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106298417 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089025135 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11043927 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086231142 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110196554 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115934026 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.089510811 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103951393 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081411585 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.111912839 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.08234839 seconds)
  done (took 58.507538594 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14877278 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081486142 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099200665 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079811348 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114986811 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100646028 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080389958 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100641406 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080638665 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102462783 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079782518 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101737263 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109246596 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126388323 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094240624 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106453484 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.080273618 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103232372 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098943606 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081352489 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111685813 seconds)
  done (took 2.955749096 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105216436 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119240424 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116611045 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122135048 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090128236 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118575162 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115090478 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117420824 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100282429 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113577567 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119611977 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116132382 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091690606 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112530589 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110934564 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092784446 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120971428 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111530805 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117948449 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095662992 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114698523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.117067432 seconds)
  done (took 3.31154219 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085022936 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102761563 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085833929 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.10050193 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084059713 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099985142 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088265758 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104338631 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088680175 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.105456889 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08272856 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104191563 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.106684021 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080141565 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104743378 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082567406 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.154993177 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10895571 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084200622 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.10866036 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077993562 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107933086 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099906012 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080341521 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105667895 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088130514 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.107586191 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.084054041 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.107806888 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.083588733 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107130037 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081590867 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.108173105 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.104750138 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083654545 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104366164 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085087274 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105953713 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.080005467 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.103765983 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085489048 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101978162 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085533322 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.108330001 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.084192482 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.103880056 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.08623545 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.108663055 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098162098 seconds)
  done (took 5.607021052 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.10486107 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164901992 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086403673 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145502262 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121892564 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114317646 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088221538 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143734854 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104692741 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084287082 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125010555 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121876774 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105592954 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089725623 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.113478086 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104370575 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087211842 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103965685 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108730159 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084957895 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109642178 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089380039 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.122110136 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119546313 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.109830655 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084250363 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104995846 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108907455 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097434294 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111957554 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109539581 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.092393744 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.122021365 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106885327 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083166723 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10894626 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123039724 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.10516904 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088319143 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102629221 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086610356 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111082949 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110957327 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102530715 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.105807553 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110539253 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085320371 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.104415905 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118593448 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087703951 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.115969867 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122936419 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088670968 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106008369 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111725566 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122816251 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085138437 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.105432948 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088756668 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118688073 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103205339 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089289336 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119546242 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107602361 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.113405301 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100603512 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110759071 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10979048 seconds)
  done (took 8.261526728 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095111923 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112751971 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123176449 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.12301239 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09159591 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112648138 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.112228827 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092195819 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113857655 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.118250271 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113225101 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134136504 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08695213 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115645395 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112642021 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092607132 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113117093 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112311169 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092467609 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115780132 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113563282 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121858356 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.092706937 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.123696281 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.143391433 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106927254 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092324396 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112833141 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122408117 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11164756 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124696052 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092922552 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112202508 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122024313 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.127132542 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091514531 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105927582 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11301528 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091206384 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11439586 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108639371 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101837091 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11272497 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107098756 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091893687 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.113844051 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122424668 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125812062 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116518339 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096146543 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113299078 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122978962 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112614206 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092420064 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.124658696 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.14864006 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12179578 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121932376 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112652006 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101742787 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122371378 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.130636937 seconds)
  done (took 7.825644257 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108090289 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11762267 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119797496 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.10150008 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083647061 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112463768 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083079871 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105925434 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.116320119 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096358236 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119374731 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109093783 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093929356 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118139486 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110146075 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11288875 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089197132 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111892925 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117101986 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111073358 seconds)
  done (took 3.024755333 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094020804 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127510197 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086783746 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116800793 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109563048 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092270048 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109009637 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109409078 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086546605 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.1095078 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09757176 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120467932 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106924004 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092487469 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118761587 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112424907 seconds)
  done (took 2.576179316 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09754192 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.118881267 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.122944244 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.085845451 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107099421 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080692874 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107422312 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101808809 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081149144 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123667976 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085192757 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112597632 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106478225 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083759991 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.104794735 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087759612 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.104591486 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083544175 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.108169739 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120774382 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096859026 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107320807 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105977357 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088117409 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107006847 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09172237 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107938023 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103941737 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083906594 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106506557 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087095584 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.116542545 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102376818 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084899482 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103967088 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082707897 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107728283 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.086310519 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.111779494 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.10610375 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084034946 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10685684 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086184113 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.110016069 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081567289 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108192555 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101469432 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.093068319 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104839024 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086216134 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107833763 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087513574 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10836716 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118046694 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.090289818 seconds)
  done (took 6.378710812 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09955108 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109419029 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.08153648 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10709573 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089312174 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110507612 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109305186 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088156171 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110586963 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083832809 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111844812 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.092096457 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112725624 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114346389 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087698307 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111210459 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082208156 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108581781 seconds)
  done (took 2.706949109 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091476009 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106535975 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093288866 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108717307 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086282167 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111857916 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080486843 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.107150959 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105582849 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086650189 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.107401322 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088505055 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109421135 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089664036 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11119454 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086283338 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.112468268 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104699136 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086413803 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104317912 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087780527 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106067311 seconds)
  done (took 3.065991956 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117796632 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127302746 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.093235246 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.235401165 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106121176 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.137078072 seconds)
  done (took 1.712324894 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111131448 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121872855 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.108484377 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108141587 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116483862 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08739351 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110158918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109171589 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119738674 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102843869 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109698964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119763894 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119000716 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097952412 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11780015 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115671796 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10836971 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087675162 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107896238 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129643463 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087536163 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120678263 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109184959 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087194333 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110114539 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118429256 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118332894 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121916364 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088504012 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119910817 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114863198 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087879711 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119450236 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123758456 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109989001 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099181591 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110585531 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130614493 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115975662 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097573053 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110351094 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116938523 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097304972 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11605182 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118947049 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110536094 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093671471 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110037592 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109592624 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137275294 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094418305 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119780126 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116499281 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119531025 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098283915 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.158083923 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102847794 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118617492 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116714891 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125704418 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119234286 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094176371 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119601328 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122891284 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115788339 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119361297 seconds)
  done (took 8.281526266 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102482457 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128338885 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108875811 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123425174 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097420722 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109546175 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10842363 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08758297 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109870883 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107728367 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153778266 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089648986 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119571955 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120078836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087721862 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110468798 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109756891 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119278044 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087860019 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138685538 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109497581 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11968974 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118874757 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097894426 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124535673 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118617407 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10915028 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087961717 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111968588 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109252076 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094867968 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112081335 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119501184 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08686564 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119850732 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110492841 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086854564 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116162972 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110021 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115176882 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098391939 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130488672 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110443916 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109508156 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101741074 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110791727 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109987866 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086465826 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110360478 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108289272 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10205881 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12566236 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125010251 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119652891 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110518928 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087848361 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111335339 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110158457 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087900383 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118116648 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118540365 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088114243 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158382411 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089358831 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111719469 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12146458 seconds)
  done (took 8.164730874 seconds)
done (took 158.455473029 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.243023748 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.231461776 seconds)
  done (took 1.373766207 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099956986 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.141133305 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100645489 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175186809 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106645406 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119302469 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139474178 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.098794769 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.111324938 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087961166 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.113385157 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087456399 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173536867 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107483891 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086637047 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109987894 seconds)
  done (took 2.765847875 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19971218 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.259265612 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104937419 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.111146165 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089999806 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111970319 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.106359648 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091935442 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.112055325 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085943595 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.111450611 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.087516172 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.110116548 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085895159 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112086932 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086970122 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.108638533 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089255671 seconds)
  done (took 2.972417687 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113042449 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150705927 seconds)
  done (took 1.176759442 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.12064812 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181690408 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.321178942 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157897228 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106951758 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.129017756 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157905892 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133188075 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.199330228 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124371489 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122662442 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097983045 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141016881 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117228884 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094488631 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119994611 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.14264135 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093190481 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117709826 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117678188 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116223069 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107473146 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116996225 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094117073 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181394858 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121686162 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.083865577 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.109048101 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116072467 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095162415 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114276807 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.12553733 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.0984344 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.180342816 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101791002 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.181519065 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097134301 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11415918 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114951727 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092838134 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120748906 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119211224 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10465428 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119719126 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084462687 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.121410825 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106611981 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086212834 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116060159 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.098549354 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.117742671 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115738987 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156868278 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120193135 seconds)
  done (took 7.65557727 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795657301 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.158020112 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090606254 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.891302226 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137797761 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104121595 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783759783 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135722685 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235376044 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759163162 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134557534 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122135784 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229015536 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239461634 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963920647 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.314425857 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671826302 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.108220134 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.156399729 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15466799 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120470573 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.138780369 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130667562 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.455256403 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095973398 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113062098 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095688164 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122457536 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159169658 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.127542166 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115593598 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178898799 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.248619971 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.208102791 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116402645 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090113245 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113381383 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170251191 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268996652 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215199393 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181115063 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086524226 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111687004 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.099583672 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133158034 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109534102 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16500865 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174846878 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195480719 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092997244 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.122988606 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.12098326 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099563834 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187171506 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098509344 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319467293 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312646403 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112772073 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098599868 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.128808996 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264485493 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122989345 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225683916 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118537532 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215179555 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111667936 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76732793 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191106151 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090832322 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119845025 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098695954 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118017518 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123643867 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.172082799 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.394820977 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124409077 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094015104 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113949125 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.206237556 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126945479 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111756003 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163661001 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093248954 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12344593 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125789864 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123954206 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171554093 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229407648 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124651093 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11954069 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094409102 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126492889 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115810868 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211711945 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220338429 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164081999 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.21100411 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125961073 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164751817 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.192586683 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099556916 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.196646101 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098351668 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.128472575 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123327687 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218543965 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146149279 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101172219 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117122208 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119116072 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148347513 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10537181 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120330541 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169168803 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.506885232 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170247938 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108430415 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.10734685 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122058204 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161320393 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119115771 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262758493 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100882261 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190768447 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097708685 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110433 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119828077 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165950628 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122933545 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100165636 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124134584 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120825854 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236232378 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219490144 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.101170958 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245479256 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185357842 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.120860386 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173496092 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122533001 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167693596 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120279326 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099315669 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118014534 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797202509 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101572531 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122736898 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117374369 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.197387493 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090413651 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126116703 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125524816 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087416595 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780342778 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127931267 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098898738 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125854469 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121499742 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120502291 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097474186 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116762881 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164218372 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231270073 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122428911 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097939659 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126417909 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161518758 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.119750685 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12629317 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125703657 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103359552 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123170729 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115812424 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102687126 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191766731 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162779331 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222263799 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.570195353 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113250094 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125896783 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227501343 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091416542 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290862499 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120352808 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203225289 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189516386 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.09868532 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312135167 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.189810695 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197354716 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105269716 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.19682054 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087636479 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.11930875 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.167251613 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113375854 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09816774 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.187332173 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104156798 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124520955 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959775727 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089405419 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250578887 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087859573 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.19391558 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097847728 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12462343 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.300186067 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090388856 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.131359603 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164971664 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116691379 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.12731023 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.704788795 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.127076901 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123011489 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096405158 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222091642 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163465086 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121636028 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120962731 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121164638 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.166291039 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209028715 seconds)
  done (took 44.371347827 seconds)
done (took 61.220015676 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286359853 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217649048 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.265667207 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170554259 seconds)
  done (took 1.953641818 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172039908 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151990805 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12236288 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.110317846 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151276207 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085924139 seconds)
  done (took 1.733313233 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.361337347 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276192762 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242002888 seconds)
  done (took 1.823188316 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.293081518 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248679166 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476331325 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.329769002 seconds)
  done (took 2.412262806 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213622795 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.135470482 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111932194 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104174586 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199745092 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.249918659 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143889731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.20457016 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099566566 seconds)
  done (took 2.450506765 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.203728801 seconds)
done (took 11.516716476 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.284106491 seconds)
    (2/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.149120069 seconds)
    (3/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.257623834 seconds)
    (4/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.260196236 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.194158369 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.123040818 seconds)
    (7/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.098396724 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.129419728 seconds)
    (9/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.255675696 seconds)
    (10/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.200789131 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098775889 seconds)
    (12/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17673813 seconds)
    (13/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120685777 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093823989 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11994185 seconds)
    (16/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.214955567 seconds)
    (17/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.151373605 seconds)
    (18/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.12505316 seconds)
    (19/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.24179563 seconds)
    (20/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098436694 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.155931811 seconds)
    (22/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.123157082 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.089154882 seconds)
    (24/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.121958454 seconds)
    (25/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.168374435 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.160123213 seconds)
    (27/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090786513 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 0.223088101 seconds)
    (29/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.169747416 seconds)
    (30/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093270761 seconds)
    (31/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.110489199 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094041351 seconds)
    (33/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.151504953 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.10340112 seconds)
    (35/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.091172543 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.119085129 seconds)
    (37/286) benchmarking ("sort", Float64, true)...
    done (took 0.230397721 seconds)
    (38/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186203405 seconds)
    (39/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.164768292 seconds)
    (40/286) benchmarking ("sort", Int8, false)...
    done (took 0.200534986 seconds)
    (41/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.199942354 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094177985 seconds)
    (43/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.120592902 seconds)
    (44/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.20562955 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.142451428 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111871081 seconds)
    (47/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121672385 seconds)
    (48/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.091536453 seconds)
    (49/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.192154421 seconds)
    (50/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121445187 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.127325511 seconds)
    (52/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.164221241 seconds)
    (53/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.147731618 seconds)
    (54/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.218125524 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.114295044 seconds)
    (56/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.193718116 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.105046242 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.114026386 seconds)
    (59/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.097386741 seconds)
    (60/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.140464984 seconds)
    (61/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.209291688 seconds)
    (62/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.116256754 seconds)
    (63/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.096745779 seconds)
    (64/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111276279 seconds)
    (65/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.149635276 seconds)
    (66/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118094137 seconds)
    (67/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.129021309 seconds)
    (68/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117917276 seconds)
    (69/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.144361814 seconds)
    (70/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112833032 seconds)
    (71/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.19398297 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 0.087458173 seconds)
    (73/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.214446407 seconds)
    (74/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.095941064 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.097871855 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.174061185 seconds)
    (77/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.125613491 seconds)
    (78/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.127369111 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.138017206 seconds)
    (80/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.145560268 seconds)
    (81/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.113893148 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.100517967 seconds)
    (83/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.098780828 seconds)
    (84/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.186515138 seconds)
    (85/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091327329 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.113790461 seconds)
    (87/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066916744 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.206141765 seconds)
    (89/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.125619853 seconds)
    (90/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.156097321 seconds)
    (91/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.187898208 seconds)
    (92/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095659117 seconds)
    (93/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120735708 seconds)
    (94/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.137619237 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.086633069 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111357797 seconds)
    (97/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.119177891 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.138149466 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115518664 seconds)
    (100/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.085160609 seconds)
    (101/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.123934618 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.114264944 seconds)
    (103/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.18514526 seconds)
    (104/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.192284959 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.093113344 seconds)
    (106/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.149724458 seconds)
    (107/286) benchmarking ("sort", Float64, false)...
    done (took 0.172592801 seconds)
    (108/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.160432062 seconds)
    (109/286) benchmarking ("sort", Bool, false)...
    done (took 0.182613832 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.120719101 seconds)
    (111/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.190506955 seconds)
    (112/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095109907 seconds)
    (113/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.120755149 seconds)
    (114/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066399916 seconds)
    (115/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221976677 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.135997917 seconds)
    (117/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137595822 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.111621704 seconds)
    (119/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136479208 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117807114 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095042699 seconds)
    (122/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110121958 seconds)
    (123/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.094988053 seconds)
    (124/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.090571907 seconds)
    (125/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.11546722 seconds)
    (126/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.152159683 seconds)
    (127/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104081157 seconds)
    (128/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.091413707 seconds)
    (129/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.148572821 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.11995055 seconds)
    (131/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068367983 seconds)
    (132/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.192954249 seconds)
    (133/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.143139025 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066413812 seconds)
    (135/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165663364 seconds)
    (136/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.071104871 seconds)
    (137/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.106751172 seconds)
    (138/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.097492029 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112097885 seconds)
    (140/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088754283 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119893993 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.086020688 seconds)
    (143/286) benchmarking ("sort", Int8, true)...
    done (took 0.219974592 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111250597 seconds)
    (145/286) benchmarking ("sort", Float32, false)...
    done (took 0.174094649 seconds)
    (146/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094364409 seconds)
    (147/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.065354237 seconds)
    (148/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123323729 seconds)
    (149/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121201193 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095654562 seconds)
    (151/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.182316709 seconds)
    (152/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.069197356 seconds)
    (153/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.091541201 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086359238 seconds)
    (155/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114460232 seconds)
    (156/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067005097 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.108799102 seconds)
    (158/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.068477444 seconds)
    (159/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067286577 seconds)
    (160/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.121762875 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087290145 seconds)
    (162/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.153719458 seconds)
    (163/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.170425152 seconds)
    (164/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092202005 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110542419 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093482747 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.182461704 seconds)
    (168/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.126153406 seconds)
    (169/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.068106174 seconds)
    (170/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.173097534 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087489251 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.13858265 seconds)
    (173/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067848544 seconds)
    (174/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.115162018 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093440832 seconds)
    (176/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067130293 seconds)
    (177/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.105243355 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096886732 seconds)
    (179/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.094912083 seconds)
    (180/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.089156699 seconds)
    (181/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.12169404 seconds)
    (182/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.06795039 seconds)
    (183/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.06743894 seconds)
    (184/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092241849 seconds)
    (185/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067019157 seconds)
    (186/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.128609436 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 0.452815236 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091789616 seconds)
    (189/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.116856247 seconds)
    (190/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067203721 seconds)
    (191/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.117042394 seconds)
    (192/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.088205823 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.090944336 seconds)
    (194/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.091649844 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066230652 seconds)
    (196/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.185828976 seconds)
    (197/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.095002023 seconds)
    (198/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068587593 seconds)
    (199/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.089795542 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.122031546 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117785633 seconds)
    (202/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.06756812 seconds)
    (203/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069405111 seconds)
    (204/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.094476782 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086995608 seconds)
    (206/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.111917622 seconds)
    (207/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.087595736 seconds)
    (208/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.100771504 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068418897 seconds)
    (210/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.071828328 seconds)
    (211/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.123224288 seconds)
    (212/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.092232335 seconds)
    (213/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.191025791 seconds)
    (214/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.110193672 seconds)
    (215/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.086493929 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117295582 seconds)
    (217/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068914329 seconds)
    (218/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.177230033 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085607482 seconds)
    (220/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114363403 seconds)
    (221/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100792899 seconds)
    (222/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.090332098 seconds)
    (223/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067891 seconds)
    (224/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.087168225 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.09213751 seconds)
    (226/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.097001148 seconds)
    (227/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119172284 seconds)
    (228/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.137331721 seconds)
    (229/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.093555587 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110002288 seconds)
    (231/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067443147 seconds)
    (232/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.11023885 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086946608 seconds)
    (234/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.06594434 seconds)
    (235/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116321367 seconds)
    (236/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118267713 seconds)
    (237/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.088779485 seconds)
    (238/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.065388358 seconds)
    (239/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.112277297 seconds)
    (240/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067602792 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112089458 seconds)
    (242/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066809138 seconds)
    (243/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118252101 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.156529016 seconds)
    (245/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.180704944 seconds)
    (246/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138476708 seconds)
    (247/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.079198275 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.124266933 seconds)
    (249/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.088858485 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.071326791 seconds)
    (251/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.094405993 seconds)
    (252/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233830139 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095613361 seconds)
    (254/286) benchmarking ("sort", Float32, true)...
    done (took 0.229951932 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.094191857 seconds)
    (256/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.069048807 seconds)
    (257/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.071940985 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118454599 seconds)
    (259/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230874974 seconds)
    (260/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.125836597 seconds)
    (261/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.078517971 seconds)
    (262/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.073470658 seconds)
    (263/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.108221659 seconds)
    (264/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.168733522 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.096879786 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111487213 seconds)
    (267/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067803454 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.084780625 seconds)
    (269/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.118393304 seconds)
    (270/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188828146 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.098753766 seconds)
    (272/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159443313 seconds)
    (273/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.167726796 seconds)
    (274/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.068029745 seconds)
    (275/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.087132869 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117917025 seconds)
    (277/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066517786 seconds)
    (278/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.117404312 seconds)
    (279/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.087122607 seconds)
    (280/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.11284203 seconds)
    (281/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067169469 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.118730631 seconds)
    (283/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08967326 seconds)
    (284/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.121262693 seconds)
    (285/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068859802 seconds)
    (286/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.113653769 seconds)
  done (took 36.555708291 seconds)
done (took 37.504269025 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101361535 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149138198 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096543429 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13771379 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125494367 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092523571 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11981728 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097658992 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.124829229 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125099652 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098314769 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093836604 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096344363 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122225815 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098365953 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140195282 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127638268 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092779927 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.12167626 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086764149 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.12334198 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086042986 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.115086958 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069631638 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.125501892 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094234197 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.120491234 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.123060392 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087481613 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.115261682 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.091290618 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119441072 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087497447 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.127193754 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094781168 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.125168743 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098649025 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122944803 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087568329 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112593828 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119661038 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088542515 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.118994186 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095480648 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116689123 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092534685 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119313227 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100088954 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141382222 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.121634843 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094969408 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122399851 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095962942 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119697962 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090561975 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122274609 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090810571 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.141614282 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122968975 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092373105 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119198879 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.093852679 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117366384 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095766534 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.121897614 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121945753 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098349568 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117020868 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097325068 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.118419613 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087072427 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.122468164 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089333264 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112213595 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095290102 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122501398 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085037762 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118462661 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092287685 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.11744312 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109975403 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089668298 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112766246 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093740662 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113658521 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070763443 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.091249104 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118534041 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109255569 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09676892 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116709686 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094338646 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112697283 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099906092 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112046464 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092743803 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111830998 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086532287 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114461569 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090249717 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111879802 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088911326 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121066029 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088173455 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119705545 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122591172 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088316521 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115962437 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087650464 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110898786 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102213316 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.12139846 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086024214 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117433358 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087265979 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121396537 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086165241 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112524802 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085877831 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112224319 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.091981672 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112059378 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088969364 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120927473 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125722184 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087417048 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115935984 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089807729 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111986164 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092619756 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111675051 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088050639 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113644027 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078409735 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114266959 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088390976 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118565362 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090549779 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122718455 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089288684 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121286014 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092800086 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118219833 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092174058 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111425497 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073633272 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116991036 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091313261 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.115142972 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086385937 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.115686542 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087439405 seconds)
done (took 17.126561606 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088961574 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.186469142 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151107504 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142516495 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107710872 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113939276 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121188771 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118995513 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114834503 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142433211 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110446175 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133624042 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147537077 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086179486 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112561445 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090582484 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114429382 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101532495 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146710687 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132950049 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165123936 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08557935 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146965892 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.1366853 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120488211 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105529668 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11285097 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091526847 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11658759 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112780234 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.133461419 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.09025453 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113249944 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134251525 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105364569 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.121361332 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086591553 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121044504 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086779189 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113546283 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141471575 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132921619 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094870584 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117550525 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092279775 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114732793 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088845981 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121962358 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097117503 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117849135 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126547268 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157459038 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090243974 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123356139 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086201416 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124049576 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121405071 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091020468 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112127195 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090707015 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112556814 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091283381 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126799286 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141980121 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091125484 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.121677657 seconds)
  done (took 8.690352541 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107903026 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142237454 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103397462 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131579396 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113309044 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.090117517 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.1163377 seconds)
  done (took 1.815078415 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090828748 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13692314 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11184345 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142299593 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132359572 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109537374 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.126020489 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088441735 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13274899 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08884243 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136030767 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152465403 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090633649 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122119843 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138851332 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088774903 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138749081 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089353191 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118152618 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112900374 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117673552 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134033208 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.092647209 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.115738786 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102931994 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.118273698 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16244513 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094165179 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114874642 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09341011 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115327446 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167991046 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103704181 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.128106912 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088435476 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12964167 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.147303119 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088086203 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.132799234 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.095097204 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129036365 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089208426 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.117907567 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086708681 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119128601 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125929422 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090172064 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116332837 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092940864 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135125732 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089922889 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128213644 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089470781 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11906698 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089653149 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120448984 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124013016 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090375984 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134226533 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090816251 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131689858 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104610183 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129534653 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131479577 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092097363 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128038154 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103567883 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118570174 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089239985 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118149961 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130712886 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088508303 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115478718 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100440312 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117979633 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113652099 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13955941 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089686832 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12581688 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114901788 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089871804 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114165999 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112964024 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120999677 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088752592 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.122289727 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091450639 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11393243 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087820637 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118660402 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086327571 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116106244 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091646982 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.118330834 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118156462 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106629964 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117300646 seconds)
  done (took 11.978996795 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.093571063 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114052709 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092199858 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114886416 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090667693 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11630517 seconds)
  done (took 1.642222487 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116922929 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118640608 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103183901 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12231619 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157470476 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103468359 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130638752 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12425257 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.10763438 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128862475 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129373835 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105261498 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138535793 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12256306 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104503938 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123135818 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103510268 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126808333 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127771817 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09806682 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138690612 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121373853 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096515121 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132779591 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116834527 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097395948 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126041319 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102465908 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128734851 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123225561 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096165365 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118990178 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.09666466 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124913927 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.132853384 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09698346 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123534311 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.12125791 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.102128126 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.120329368 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.108011014 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128281924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129347612 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094247307 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.126475179 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120759567 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09500245 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126300446 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104186835 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12049336 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119298624 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095412274 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119150564 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094983244 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.121677973 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124125101 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094675658 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131748293 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.097882375 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123415649 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.120525823 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093070147 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123967363 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11675315 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.106131784 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120718062 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095541569 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122809105 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123421511 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096885605 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119961515 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.094611712 seconds)
  done (took 9.34469077 seconds)
done (took 34.478763729 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.706883766 seconds)
  done (took 1.722601493 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.851936761 seconds)
  done (took 1.866993275 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.722288915 seconds)
  done (took 18.769105267 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.507446893 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.604223405 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.016977524 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179833502 seconds)
  done (took 3.323770797 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.976577548 seconds)
  done (took 2.01088386 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.288649133 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260473501 seconds)
  done (took 1.564755611 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.797006636 seconds)
  done (took 1.824746426 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.397050387 seconds)
  done (took 2.411110047 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.337091587 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184971854 seconds)
  done (took 1.554075299 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.565177442 seconds)
  done (took 1.59622009 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.020331636 seconds)
  done (took 8.055955758 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.27336626 seconds)
  done (took 1.314866821 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.3097017 seconds)
  done (took 1.342181857 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.598803242 seconds)
  done (took 4.634162705 seconds)
done (took 53.019989012 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101037692 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127765344 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.103219967 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126074079 seconds)
  done (took 1.490257665 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101956935 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121734238 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099922272 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.123059553 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126960432 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096693925 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123219928 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10022465 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122502021 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096469486 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122631771 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120408712 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098949686 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124456795 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093173131 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125370529 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099383433 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.123090841 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124593512 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096645728 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.11991229 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097622052 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125913028 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093170535 seconds)
  done (took 3.718206804 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103661927 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120873626 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097005035 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118901761 seconds)
  done (took 1.485119533 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102018358 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132145568 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105094119 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126770354 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131299223 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106233967 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117630096 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092833168 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119553547 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100311334 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117037487 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.114181708 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.132717656 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124943218 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102000491 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114864998 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.092034505 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.132485838 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124846811 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101342159 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119877766 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100118206 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116178959 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108407738 seconds)
  done (took 3.775904142 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17694551 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.134499616 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139860098 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096227191 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161004734 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141310996 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088880208 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142384066 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087387713 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132780126 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118640257 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135059773 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130268104 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087515949 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115038396 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087144707 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.131618597 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130989234 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092377041 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.130339985 seconds)
  done (took 3.514195624 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104644312 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.124383527 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090388289 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.119912737 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09944288 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122419635 seconds)
  done (took 1.71407937 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.098409073 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.121581405 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091340804 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115998281 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.096115155 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116884904 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08979439 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118183793 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090782507 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115560382 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090946465 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.119841194 seconds)
  done (took 2.31579931 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.511935017 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.124726104 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120480451 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08993338 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.124531349 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090381263 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.132185428 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092103413 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142722354 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088731267 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11780399 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089886149 seconds)
  done (took 2.775053125 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242646964 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12708659 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287255085 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370338736 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157938754 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17748763 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.285997088 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165443791 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226132734 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167507717 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203824276 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225372335 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152410455 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191892689 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138343526 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145088314 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205931575 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249607353 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154293024 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209260841 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230019298 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167977523 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181253322 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152060234 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139925545 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174030057 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094066436 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130576571 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236284247 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178085898 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215902563 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162358062 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146365783 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210166872 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254526258 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221500476 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284127576 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137812436 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.148348131 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170503183 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.269102303 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139464586 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231601606 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12849358 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132089001 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219173511 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168483699 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17796306 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.154032694 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139351449 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197035696 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241876628 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194924676 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139354456 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304701011 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151217788 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.201647591 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196145992 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255463174 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201870664 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214726922 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096263806 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190500214 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222504758 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186722623 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175992868 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.209014522 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148487688 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200697188 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189323488 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165471266 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222844678 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187304537 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143244755 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170432927 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173474427 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172178778 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25814114 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213966253 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096518534 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169391038 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150766546 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134742675 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19586464 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09880194 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24117882 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144624542 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.165077244 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21473548 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160733683 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161770595 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203723728 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229881259 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148893684 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083042185 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154488831 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156921643 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19288128 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141181826 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159768902 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162974141 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131830529 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184509824 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125740194 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184713986 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118269579 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174000361 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184015148 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128848464 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162935851 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152826646 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125360266 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202734499 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199006238 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1434361 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132829581 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21049163 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177923378 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.151255619 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178597761 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.229179698 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11662111 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150636338 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229861818 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246130115 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115109843 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230386288 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158756583 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107552279 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133578568 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183401015 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155878094 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161441841 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135749477 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184209795 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235533838 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098411216 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139756843 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193268335 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134652598 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133247651 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165546291 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14963752 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138464904 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.124021849 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155371077 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209967828 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18116977 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155418147 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16642494 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153668311 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25686538 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142564466 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124730768 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149185937 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122237111 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.195771729 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224533913 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105052464 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233660743 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173657304 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204833997 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199109497 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108795311 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178082251 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132370945 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092996451 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224095133 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.169137257 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161957715 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196985375 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228164364 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18336895 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.185701986 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200144235 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174059911 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166277246 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157807481 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.113495986 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164824582 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199383667 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096717615 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.146799164 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13772603 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14878402 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115825552 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136319442 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223993039 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170772544 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192423701 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162083367 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151085719 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182384779 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129880648 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175953726 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17832376 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14937769 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199224326 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224039539 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187962336 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144701977 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22954864 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094688558 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12575869 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.11477588 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19830605 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108446546 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136790389 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165042699 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183819351 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181312084 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205072826 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212621306 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20287131 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1930429 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095029852 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170255908 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187292307 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203786201 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16716776 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143508387 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151474428 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179934511 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158844954 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258577707 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168795985 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176852105 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238123113 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149672416 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106094864 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153042014 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19425912 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15597102 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205431955 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120521698 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143072883 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16350952 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.134634303 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161277435 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185491386 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162517565 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219305769 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.151006209 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186231653 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12864297 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165321074 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160738199 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166234529 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081529648 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175893436 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234383025 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151128077 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170222462 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189243377 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133253658 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.31201314 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247679307 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19764958 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138931588 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157278263 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162090504 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165165537 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173442111 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179827898 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160994043 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187316131 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161781038 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138033284 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140974995 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121505811 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151954912 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132863394 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149266286 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178133009 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139876464 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186380037 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163286739 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161847801 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172878518 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.152385068 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145886612 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151394474 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216738916 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185105229 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242000773 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152527989 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181252211 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235777883 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098856165 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133858555 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133504437 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179663852 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108536871 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223452366 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188593997 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234884835 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185506965 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195982257 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141518045 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120382731 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157543206 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176673135 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208272432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154730354 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161079861 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233684416 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11907001 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133320272 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178485219 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.319555373 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.121230552 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226507607 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.08118821 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.285241164 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129866296 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13259962 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138109406 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239186166 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137803239 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191838216 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174135312 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171487826 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166500966 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151215278 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192422417 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246246548 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202602355 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181083295 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13380428 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157587808 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178776294 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222145183 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158788848 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.112431835 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234557057 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196491808 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197844786 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143061268 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170937314 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170097529 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159575619 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217587904 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106582612 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237991265 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136158199 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196569813 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155155993 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146768961 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176959477 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.217476281 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115094315 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217486316 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185017052 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137188941 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106528674 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199330839 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183151585 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158471075 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.0995781 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210136076 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097691857 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223789003 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232808788 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136184543 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156036816 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148727888 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136076752 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156183044 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158413852 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113784004 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168692919 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204623977 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136890206 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220608657 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205917935 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171164272 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204002266 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118702922 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692667549 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133130195 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195427656 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161871906 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.237362862 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150668467 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175026525 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160767369 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169896142 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197250148 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162801063 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231117529 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222554598 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180148693 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132538941 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159490747 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164353875 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143285195 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.123780127 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168805534 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161022186 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.156070196 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.208441948 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175252327 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10605299 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142494743 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22794796 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133909524 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214363833 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181543562 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138682579 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175324533 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189093258 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134342268 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.181345924 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239183911 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141242464 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124629783 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13575873 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157859088 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.266558083 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096450516 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236387586 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185974469 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160180872 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170134613 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14919206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225580334 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158429848 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188284212 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149254802 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.16145707 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158020285 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13866841 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.103188079 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157289146 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168688385 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151945247 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160616352 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.169190381 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198780607 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125304735 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118358967 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317220607 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196422683 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246951539 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107564539 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138367991 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165011147 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152938631 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178392276 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180640483 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.138021393 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137749998 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136521248 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.132347232 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.140304088 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129751235 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226394723 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16742594 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210307727 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138398493 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28073296 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112453314 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157328551 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117960938 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.1044171 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153228842 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147964597 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160065599 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223369748 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238120363 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150774085 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135382519 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153211163 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098555945 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137481551 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166439143 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166684363 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178757798 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147369042 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080042179 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15912324 seconds)
  done (took 84.046168679 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187404192 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.136343347 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150011474 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205358917 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.180502347 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270576526 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212076305 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255344037 seconds)
  done (took 2.732763813 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.100641804 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148674611 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158805472 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133406471 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092433024 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.118980621 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.34929761 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133494525 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.119826999 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121701837 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.17586728 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094914129 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.560132254 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091682232 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118650112 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.1100915 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091923874 seconds)
  done (took 3.848867816 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.487957899 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.74275377 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.518165624 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098347234 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.29109869 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113529304 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.953583843 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.201992877 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.11821224 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495239406 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.777557602 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.162619568 seconds)
  done (took 19.104145358 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.122863431 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136629986 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123748035 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153022989 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.142837779 seconds)
  done (took 1.826719697 seconds)
done (took 133.37779171 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.11261696 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.415302396 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071476908 seconds)
  done (took 1.664941563 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.115934711 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137998632 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109745399 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136531345 seconds)
  done (took 1.654887572 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.106507774 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132420405 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109267042 seconds)
  done (took 1.493868322 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.327396308 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192421489 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.176398026 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.114073203 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.134862778 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.10438979 seconds)
  done (took 1.502041799 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105772413 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128370795 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098780325 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130850928 seconds)
  done (took 1.614774348 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.103030623 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.077633032 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102245767 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074984915 seconds)
  done (took 1.502456573 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.12112186 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133120603 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102589021 seconds)
  done (took 1.508963359 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.136264833 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139870395 seconds)
  done (took 1.427938455 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113157389 seconds)
  done (took 1.259140752 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.12542068 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169672589 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.181486357 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.161603674 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.205246802 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.160950521 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.144304181 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.139103401 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.129884639 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142843451 seconds)
  done (took 2.712672115 seconds)
done (took 18.292163698 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110551043 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.516743598 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384505524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145549926 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721934604 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.37949588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032848321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146804504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166293809 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093424601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140505445 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673222376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026385249 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474484759 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.985006337 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378184845 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677030365 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122951259 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119502436 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094040665 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.020189629 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093677894 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122391843 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09277909 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705249283 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425681408 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096053216 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377551559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093165433 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126870798 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383271463 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123860662 seconds)
  done (took 17.188013453 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102332258 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174269923 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098379959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138608738 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124229241 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094498153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124438509 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093141443 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179990629 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12321547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111084503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122541994 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12640557 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095683363 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142486055 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09181495 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126318758 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092460957 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122159624 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12116624 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112941784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120844021 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09477316 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121883939 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094746243 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.13649868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094579708 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12195696 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120974923 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099119896 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127873998 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094186179 seconds)
  done (took 4.899224041 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.148335812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183272104 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128888617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.125739816 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16973479 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125053243 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200377172 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11812114 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183225382 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124090847 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139983579 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092511114 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157978559 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095456048 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.1442035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120922504 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096289164 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122345942 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092391491 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12373717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139552922 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093550825 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121959555 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093297075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123418052 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107917865 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124822537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12028091 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094550045 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127204241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099523248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124621142 seconds)
  done (took 5.224726988 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.104623647 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125769164 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11003455 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138775865 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094185303 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126256826 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096591982 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125185054 seconds)
  done (took 2.079159194 seconds)
done (took 30.5382355 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.119046113 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.133695353 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107336773 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134909015 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102700539 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132722844 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091558335 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134842294 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133863361 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.104174342 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137097294 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09565538 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122426908 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092274373 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136075685 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097096404 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133410145 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101392899 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133916719 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132678629 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095265172 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134036834 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.104780822 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134082226 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104138232 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13481776 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137084772 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099927532 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123358968 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094342932 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125171084 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.105918933 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.128211406 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105643624 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127662693 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098295984 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124423053 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094029642 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133511686 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132996594 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099862931 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132911626 seconds)
  done (took 6.094280145 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.116197689 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.1465495 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105381956 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.083445963 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118495683 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.07991698 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.1394795 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.085717403 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110561203 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109710469 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.08046118 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107626922 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079257456 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101146585 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078021757 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07626591 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109292749 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076086591 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075902428 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105752279 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080232831 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072970621 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108914975 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079346813 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.073769325 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110347062 seconds)
  done (took 3.677447827 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107425542 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134662986 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113029492 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185237894 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161470524 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099046469 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132831466 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109790149 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.138522109 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119812707 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097148986 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149713697 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110190458 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130674661 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091985231 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138063773 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136372397 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094456506 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128256794 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113283445 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139809442 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102268824 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.143090758 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133456949 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093806793 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124027512 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.098560237 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135639603 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.100216193 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.133030562 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096682192 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125832009 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12265591 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105919113 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126578647 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094265762 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14268032 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102344611 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131199816 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092278425 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130224282 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121705502 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114573036 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161859886 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09394624 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130242462 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09491667 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133378978 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121049755 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112176861 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131309323 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092494058 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125868738 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092472069 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122184754 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106851095 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.126090947 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094769453 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133788891 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126762875 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107639004 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125850865 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109645543 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122453926 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09986009 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.123060926 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092793444 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12185997 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113572704 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12486644 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161881412 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.100000551 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124359677 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102433279 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130003488 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128110996 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093640639 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137806571 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104032334 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125270331 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101540008 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127363889 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095300024 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142324684 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093828222 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.124975573 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092897037 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129997195 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124158192 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094487977 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136605188 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092500522 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125678607 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110707476 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123370111 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093956761 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129666747 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126221178 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092959555 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137356926 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099615631 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123831004 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102811686 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123091386 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09507117 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133456478 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126733125 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092953093 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.126164243 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100161138 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123616909 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093851343 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126452011 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09546333 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132832554 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098711055 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127841639 seconds)
  done (took 14.944541922 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.236700722 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.214406144 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.237025276 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.264924668 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136990286 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.114467075 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.242699968 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125920655 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124845592 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160517114 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174978068 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182302636 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.168638548 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.179128124 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171846017 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092770403 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143091818 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.16376774 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21556317 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258232818 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145568253 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100634739 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162017442 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16159154 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137370795 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132496399 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109693576 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137218082 seconds)
  done (took 5.874014131 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.116543502 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155761969 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09775602 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145757483 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149567519 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092244618 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129645527 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094907761 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136418614 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136373215 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092693642 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129976948 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099620924 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134243627 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123707087 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103915427 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132006757 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09572181 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126456635 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097343656 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134024008 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101592533 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128358207 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091025994 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134093337 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122085551 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.08800788 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143796653 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092416528 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146626119 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122302385 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102834702 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137982394 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094302162 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123888289 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09579366 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125720747 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094474296 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124886619 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091165699 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122574224 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077959788 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122592082 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106303003 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130411714 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080364182 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131028324 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098827695 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12463755 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120320386 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097294687 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125436528 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097969436 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130527728 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097234142 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123988089 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096531434 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.115302452 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100518819 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12589758 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085376289 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.12021706 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099703645 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118070935 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101599416 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128065973 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092438527 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125995503 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097559679 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12977062 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095769482 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130954257 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091809523 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127281521 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.097027849 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130405583 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095968377 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123559148 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093620284 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12485617 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075488386 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124427372 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074982001 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127061704 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092525249 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122174774 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095428079 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130702566 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138075328 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095700018 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132644799 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094522632 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123133519 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097321019 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113713233 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096987856 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140030687 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141163036 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095132599 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121649626 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108970024 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127320946 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093303289 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106454532 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103803082 seconds)
  done (took 13.07871619 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.135860516 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153907655 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094307362 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144440235 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157804235 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157362028 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102081819 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131391611 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096576481 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142671976 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09384167 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133240039 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.095009518 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13895454 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157879298 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104299763 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126084991 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107724411 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128533589 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170443975 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112246236 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142940852 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110207757 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125836011 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098740755 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141472828 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162369283 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107330379 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.139388019 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142220382 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109805405 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161961129 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112799694 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130148644 seconds)
  done (took 5.56761975 seconds)
done (took 50.392730357 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.307417024 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.495953449 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.256317687 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.253879791 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.320982765 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.260112357 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.267091746 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.259507064 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.473742306 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.259831187 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.50978974 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.939530215 seconds)
done (took 59.790479614 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.261296034 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.397465585 seconds)
    (2/2) benchmarking "String"...
    done (took 1.543207071 seconds)
  done (took 4.124851076 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.616147865 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.222556701 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.522997804 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.256954256 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.25991801 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.545198695 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.083201688 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.684536338 seconds)
  done (took 28.759064437 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.268583942 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.350794381 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.288212344 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.26742927 seconds)
  done (took 6.360209938 seconds)
done (took 49.303977593 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.28742444 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.315691 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.269888732 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.252272508 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.378132784 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.285975516 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.645575578 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.319639197 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.287073832 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.242364916 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.282446346 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.291315566 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.263676235 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.658295288 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.279398582 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.264688117 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.368245877 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.810320013 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.681113873 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.270028643 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.263546374 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.287578831 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.268421878 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.266662842 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.285073015 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.261619744 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.26155581 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.271809019 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.061878591 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.26670503 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.286749106 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.817975941 seconds)
  done (took 193.238324669 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.262756025 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.274805337 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.41369316 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.314777209 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.842833824 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.465349114 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.398900932 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.922030072 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.287251444 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.276001083 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.440623279 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.267542479 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.515503843 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.299188841 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.29397484 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.26591385 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.479888137 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.540656067 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.321351174 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.419451741 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.284457692 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.332396293 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.25713793 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.426268623 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.300199545 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.350770083 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.310080524 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.272925334 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.474191056 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.417984929 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.270537881 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.309154665 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.921443689 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.127007985 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.280458126 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.288832331 seconds)
  done (took 152.113994051 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.331137547 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.26350407 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.264037637 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.263558096 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.298600433 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.265496744 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.880451882 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.861389159 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.76476747 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.665488032 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.799357422 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.565958843 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.265594996 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.361993034 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.280821307 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.265952771 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.279627795 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.311372306 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.270246099 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26514338 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.882128623 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.281466191 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.290551877 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.45080089 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.28390491 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298854112 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.660171297 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.265956094 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.299969384 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.602944894 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.319100524 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.265221868 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.708320606 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.338100088 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.386337281 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.265401721 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300151256 seconds)
    (37/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.265886923 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.265836577 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.549407203 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.266652742 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.26498181 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.26633238 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.269819182 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.991328717 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.271681192 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.884265591 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.272460198 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.292577815 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.271667888 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.266537754 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.146606106 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.039776792 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.285480723 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.267923548 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.269121624 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.266758457 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.267827256 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.302249958 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.009833513 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.367025105 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.287489017 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.269870377 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.300507355 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.268968748 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.392216301 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.267837871 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.520923283 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.346538426 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.482179079 seconds)
    (70/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.267877038 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.884021576 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.273638871 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.367779797 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.390875504 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.267005581 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.266895564 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.267877934 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.269199308 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.381334493 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.268828931 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.267354095 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.714993601 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.449615518 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.289005263 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.724335092 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.36730959 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.268888044 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.708636456 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.271615247 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.267982325 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.076762753 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.36715027 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.268239957 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.268824852 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.269352002 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.711853494 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.865119879 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.602625573 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.273398795 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.125763134 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.274311097 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.733659445 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.856701613 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.011800594 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.274669914 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.383784466 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.452646797 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.289833163 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.268554863 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.811436757 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.274051292 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.329016678 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.268387656 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.67037677 seconds)
  done (took 377.009414433 seconds)
done (took 724.877037575 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.875157695 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.8738776 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.982659237 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.85912973 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.819541178 seconds)
  done (took 10.603273664 seconds)
done (took 11.797829117 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.475124744 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.475301663 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.33494327 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.479332114 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.305724901 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.494601737 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.453491537 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.290844757 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.383253222 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.363537524 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.383116063 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.333032017 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.307541764 seconds)
  done (took 19.27412552 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.601580251 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.602438174 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.335716268 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.600860267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.310442883 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.61115139 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.475158017 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.491192989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.492884326 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.307114393 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.284502802 seconds)
  done (took 17.307568539 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.592111578 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.614107445 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.339130403 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.611128587 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.314135571 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.606831065 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.47760453 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.495114369 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.490319571 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.308834351 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.285240892 seconds)
  done (took 17.330702915 seconds)
done (took 55.107020289 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.282187251 seconds)
  done (took 2.476976925 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.318178668 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.483581767 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.304573903 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.285799861 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.283219592 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.28222588 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.287637522 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.282536091 seconds)
  done (took 11.72471208 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.28051761 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.281068481 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.280566064 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.279530673 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.278666026 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.282793418 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.278113269 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.281384764 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.281305298 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.278137367 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.281677355 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.279696571 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.279848425 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.281103469 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.280039525 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.279058111 seconds)
  done (took 21.681184723 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.282615423 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.279683134 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.279440807 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.280969964 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.27864653 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.278847732 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.280581258 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.278689203 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.279524855 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.27916955 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.280468282 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.280216848 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.281032322 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.280287651 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.279874213 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.281254212 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.279987314 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.280789838 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.284078969 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.280400559 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.280788482 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.280426833 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.280726695 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.2816475 seconds)
  done (took 31.930594046 seconds)
done (took 69.009996754 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.491142881 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.019526174 seconds)
  done (took 9.709169922 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.282873555 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.283281135 seconds)
  done (took 3.766182647 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.285312758 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.281719117 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.282883863 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.282073633 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.283638634 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.282743766 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.283739329 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.284038818 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.282698803 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.283923589 seconds)
  done (took 14.030365023 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.284402274 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.283792385 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.281247086 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.284059091 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.283590176 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.281125927 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.285025956 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.284475439 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.283789085 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.282188934 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.283707635 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.281061126 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.283720526 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.283073729 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.285013661 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.282980049 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.282339249 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.282562297 seconds)
  done (took 24.299444024 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.28452168 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.285005645 seconds)
  done (took 3.770807533 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.28493943 seconds)
    (2/7) benchmarking "second"...
    done (took 1.282647601 seconds)
    (3/7) benchmarking "month"...
    done (took 1.282152386 seconds)
    (4/7) benchmarking "year"...
    done (took 1.282516551 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.281969378 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.28288787 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.282892008 seconds)
  done (took 10.180201357 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.286637341 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.465329927 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.544915731 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.884903658 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.286940865 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.289350361 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.128312 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.288517123 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.291928981 seconds)
  done (took 14.668553413 seconds)
done (took 81.623132371 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.30792751 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.298113499 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.48843958 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.293182424 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.299033502 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.622379943 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.324507808 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.406900961 seconds)
done (took 38.242585786 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.289979255 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.273520663 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.072637433 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.262664065 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.343669096 seconds)
  done (took 19.155577358 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.361204047 seconds)
    (2/2) benchmarking "read"...
    done (took 1.618963999 seconds)
  done (took 5.182137068 seconds)
done (took 31.831539509 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289497709 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.288429417 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.285055318 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.286039273 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.286141526 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.284398238 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.287881709 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.287380555 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.283162877 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.287104011 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.288166566 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.285578925 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287208627 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284896906 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283446619 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28884828 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.285970638 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286276526 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.285503005 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285383179 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.287604764 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.283513452 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.282910663 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.286719106 seconds)
  done (took 32.068111254 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.2887342 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.285793442 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.289101009 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.289781102 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.285727578 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.288789897 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.285525101 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.283836965 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.290106281 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.287575753 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28598312 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.286428405 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.288777143 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.286397911 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28837307 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.284340702 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.287730738 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.287513086 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289191197 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.286096861 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.290071933 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286301 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.286293004 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289655437 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.286223875 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285517691 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.290917611 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.287722127 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.286842412 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.286733169 seconds)
  done (took 39.826148879 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.295902998 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.296536466 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.293425476 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.288754479 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.288922821 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.289101102 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.289824689 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.290575745 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.290765068 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.28996408 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.289627845 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.289718442 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.290646983 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.289233393 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.290660198 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.290185168 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.289882811 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.29051783 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.288370346 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.288984271 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.289598702 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.291992256 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.2912588 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.28919153 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.291067118 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.289841044 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.29219733 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.290112528 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.28949945 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.292299801 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.290226395 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.290042924 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.291775803 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.290507171 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.293045794 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.291144904 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.296039596 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.299553481 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.293674281 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.291547501 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.292152592 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.292412351 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.292382458 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.292452965 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.291631192 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.291828448 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.292692207 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.293358063 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.29210324 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.292311802 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.292385902 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.293085472 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.294060194 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.293675333 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.292349959 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.293456768 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.294160817 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.292951074 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.294116824 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.293241642 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.293457595 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.293860941 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.292256621 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.293655771 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.293748373 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.294329614 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.294340976 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.292969146 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.293928419 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.294219538 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.294330294 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.29347508 seconds)
  done (took 94.235140435 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.294330023 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.292208004 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.29182391 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.291917335 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.292189262 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.294243444 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.291273098 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2943172 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292670658 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.294436137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295470926 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292259838 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291965299 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.29650943 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295423073 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.292872793 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.296196591 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.292065919 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.295683088 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.295500919 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294326437 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292368474 seconds)
  done (took 29.670103366 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295685307 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297717003 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.294196182 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.294850672 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.292924116 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.29640461 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.296314623 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.297652601 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295528179 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.293242322 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292382749 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296036605 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.294517256 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293786108 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.29338441 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.295146089 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296784692 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.295110096 seconds)
  done (took 24.523761661 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.294559621 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.294756324 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.297474813 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.293904024 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.295169834 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.297281463 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.294468709 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.298259289 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.297411483 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.295065368 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.298057867 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297898188 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.296913908 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295264737 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29689592 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.295469009 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.297944156 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294365812 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.297318652 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.294918565 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.294963994 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.298534909 seconds)
  done (took 29.729346176 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.298016023 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297946094 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.295813776 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.295245729 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.29489651 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.29976135 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.298389028 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.296247702 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.300316124 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.299248216 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296160893 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.300120131 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.298718593 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.296222561 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.297053417 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296840591 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.29998144 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.297506918 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.299601148 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.295929127 seconds)
  done (took 27.167822249 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.300402898 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301002699 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.301867118 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.301177654 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.301015502 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.301554576 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300794146 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.301897258 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302139753 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.30116671 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.300162388 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300635244 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.300901682 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301706393 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301591963 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.300875038 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.301651232 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.30239215 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.30155921 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.301994033 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.301755172 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.301264832 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302275913 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.302520543 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.302368916 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302372894 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.302742849 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.301488522 seconds)
  done (took 37.658606332 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307270676 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.301945887 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.298388629 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.298439366 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.300016196 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.298935025 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.29973145 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.299474409 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.303282602 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.299268595 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.302133599 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.303284558 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.303728342 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.302200665 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.302545204 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.302012922 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.303517897 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.299897315 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.299927179 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.2997653 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.303015707 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.302481856 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.302642441 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.299893836 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30080748 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.303592712 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300889131 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.30007581 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303316632 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.300758505 seconds)
  done (took 40.262791246 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.321960108 seconds)
    (2/2) benchmarking "in"...
    done (took 1.322582484 seconds)
  done (took 3.862853974 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.301680624 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.303823838 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.3038717 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.301443951 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.301506985 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.304311591 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.303559474 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.300639176 seconds)
  done (took 11.63996214 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.3033698 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.303968794 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.30453024 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.30393494 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.304657502 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.30299203 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.31086487 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.32612064 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.304940301 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.305393384 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.311377629 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.311356866 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.30610564 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.304496149 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.302813036 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.305404311 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.305353125 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.305309461 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.306023015 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.305559784 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.306178022 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.30719268 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307397865 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.302745254 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.306132947 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.31742386 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.329639737 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.306096293 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.30424282 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.307923664 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.306186091 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.303478037 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.315974684 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.307175094 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.305735968 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.306566328 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.31365476 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.32730137 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.31267839 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.328002197 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.307113889 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.303655908 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.30801437 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.30700868 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307436338 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.307430568 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.307312558 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.304173825 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.306445609 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.309443359 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.312359578 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.306473922 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.306385569 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.309405533 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.30737772 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.312982791 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.329225584 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.309642112 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.316878683 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.317716201 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.340871854 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.334164941 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.308978677 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.30910869 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.318402962 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.331799154 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.314848569 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.326706331 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.305603187 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.308942741 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.313130616 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.341400349 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.336360744 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.310450546 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.310453403 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.310051011 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.30943121 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.309792392 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.315375286 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.333245057 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.30963039 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.311390991 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.320050049 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.332719778 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.309362299 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.310506511 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.311193521 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.310364664 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.311188594 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.320482804 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.331501621 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.310770595 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.309525733 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.310347551 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.311410117 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.310969485 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.309366132 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.311174435 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.308261915 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.311406293 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.311307621 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.314187814 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.319727034 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.311778301 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.312511257 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.318680685 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.332790052 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.311146959 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.317191623 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.312226188 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.312327302 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.31357382 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.316617884 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.308002081 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.314184804 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.320076202 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.311936321 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.312353692 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.312260164 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.313333413 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.321565818 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.337700837 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.312341395 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.312627903 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.317151998 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.323710755 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.312504882 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.314524864 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.312810143 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.309200168 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.310879238 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.31333853 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.311055863 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.31275839 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313081593 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.313687298 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.310590195 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.31294491 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.313617595 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.312609023 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.312750532 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.31298599 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.314971294 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.314294664 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.31475934 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.314584605 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.319132993 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.335327382 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.314030766 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.314379607 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.312779717 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.314839638 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.314790498 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.314663784 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.313594023 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.313887385 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.314216693 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.315087587 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.315356775 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.314306992 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.314688285 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.314966314 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.318001047 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.314409002 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.318285207 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.31359122 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.312448282 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.315015007 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.315350772 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.314367886 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.315062331 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.312159341 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.317776254 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.323967788 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.315515173 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.317294892 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.318249335 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316618955 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317007615 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316192635 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.318896135 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.323480445 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.315958897 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.32137959 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.337176185 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.315527681 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.317128116 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.315351217 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.314696178 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.316582707 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.319444981 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.324720023 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.327272125 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.343986154 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.316228968 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.320784145 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.316786912 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.321025742 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.319580338 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.316670657 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.317972839 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.316665531 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.31631007 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.318602305 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.31844672 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.317400662 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.316580421 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.318493767 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.319058411 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.318617398 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.318821444 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.318137196 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31941001 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.315747858 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.318383186 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318462863 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.318708629 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.31603324 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.316004251 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.316917398 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.319310798 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.318294894 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.323851372 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.316210472 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.321250863 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.319378151 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.31823571 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.317287008 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.319107779 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.320874139 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.317546986 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.326348159 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.340524333 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.320838217 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.324737353 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.341594018 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.319633284 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.321169411 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.320033459 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.317167879 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.32305829 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.328222881 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.320587109 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.320405439 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.321831308 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.319636215 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319616571 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.325382584 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.338906286 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.318433432 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.319310791 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.321082163 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.317797857 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.320630986 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.320624764 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.320100382 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.321434831 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.320950586 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.319894592 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.321685154 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.320133093 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.320750991 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.319529575 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.323968476 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.328971087 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.323933061 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.319577238 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.322500129 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.321655976 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.325281425 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.32091538 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.321829403 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.32067573 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.333059931 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.348341799 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327715334 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.342909856 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.322260276 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32662434 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.344473288 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.32470637 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.321231338 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.322436818 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.321858005 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.321016067 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.319712102 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.32198912 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.322786007 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.323804547 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.323962737 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.327218469 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.322919106 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.322073471 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.322821802 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.323761362 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.323624571 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.322131755 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.322231007 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.324827192 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.323422806 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.320995705 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.323807383 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.328801818 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.345213495 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.323737946 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.322651058 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.324208417 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.322717073 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.324430399 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.324187582 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.327081902 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.332393169 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.326979532 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.332524766 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.325770887 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.333724683 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.324287187 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.328360727 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.332733685 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.323144075 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.322938487 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.325259492 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.325426003 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.330439395 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.34710757 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.326450487 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.329190851 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.325344273 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.326101908 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.325935438 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.325683852 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325842181 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.325209787 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.331790812 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.347247427 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.328286541 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327229657 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.322864397 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.326498441 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.32540903 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.324975126 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.328378996 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.326948584 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.326388197 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.325721203 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.326237494 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.325939133 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.326974399 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.326231796 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.324143628 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.326108605 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.332216638 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.350470396 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.330806302 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.327778345 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.332769882 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.348787957 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.332891917 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.349866487 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.326895978 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.327661387 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.326732099 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.328311394 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.327071072 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.327905752 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.327166379 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.328472225 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.331562765 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.32703993 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.329830903 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.327591554 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.328222667 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.328657588 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.338325831 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.35248251 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.330518086 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.332147713 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.326680962 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.329857362 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.333911386 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.328696262 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.327787248 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.331610165 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.33972927 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.338432214 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.328151237 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.327797715 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.329278801 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329429067 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.329311744 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.3285461 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.329551681 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.329208406 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.328787786 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.329111946 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331788545 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.329555257 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.328544761 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.330527927 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.330711503 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.338987484 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.351784509 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.330879607 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.329115526 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.33085501 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.32900806 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.328828781 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.330706339 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.331695749 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.330621044 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.330348494 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.338024852 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.336477069 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.332496359 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.329842158 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.331243574 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.331555791 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.330277107 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.331474236 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.332330345 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.332729215 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.331262566 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.330711539 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.331588518 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.328953833 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.33121239 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.331471411 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.332285446 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.335606263 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.338473539 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332925422 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.327916578 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.332035949 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331871899 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.330539465 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.332304526 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.338317374 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.355790632 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.343267843 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.342084166 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.337365482 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.332390825 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.334501011 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.339742936 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.330973794 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.333803591 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.333439974 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.333292964 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.333857437 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.336452431 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.333648357 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.337642488 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.353212556 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.331830333 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.341005042 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.354796721 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.334090522 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.335279958 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.337319949 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.333429486 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.330839037 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.333127966 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.332466963 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.340333747 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.356353597 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.335307605 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.336513432 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.334182453 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.336135833 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.338018107 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.334080376 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.334688153 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.332180329 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.334296452 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.335183721 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.334709832 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.332433548 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.334167807 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.334555219 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.337741958 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.341580601 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.332131491 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.33523193 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.335167782 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.334423927 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.335278614 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.335867382 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.332517846 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.333090945 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.33483049 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.335039215 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.33576117 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.336829787 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.335084685 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.336863963 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.337344211 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.335947112 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.339725636 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.34578878 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.34361551 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.333797893 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.335542417 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.336021292 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.337209037 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.336317696 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.337122479 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.336449677 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.336248303 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.337052034 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336583176 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.335238342 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.338367814 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.350561152 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.357580369 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.336266617 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.335784104 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.338643489 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.337526034 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.333982316 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.336627892 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.337552061 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.340811445 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.346845963 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.338348755 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.343181739 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.357807021 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.338575478 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.34124998 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.341516491 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.345273372 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.339747659 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.33719329 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.338324851 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.342863028 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.354105185 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.338105922 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.34899122 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.36840479 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.361005506 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.339438297 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.338333206 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.33690396 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.338369349 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.339508956 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.338649838 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.338640808 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.33901462 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.338738259 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.339603797 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.343456903 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.338624633 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.339827482 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.338596392 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.338299931 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.339855645 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.336629955 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.340109597 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.339626914 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.339722265 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.339164476 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.339661862 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.339591167 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.35111749 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.367428673 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.340151797 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.339063345 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.336975467 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.341935547 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.342280131 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.351315338 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.34823913 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.338639312 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.340946417 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.341487677 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.340925284 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.339067399 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.340141175 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.340115081 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.339278338 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.337853102 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.352357371 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.368538148 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.345763992 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.340802002 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.34272045 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.341795333 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.341146902 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.34109555 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340896113 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.343760598 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.344155812 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.347364113 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.343061298 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.342096101 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.345708345 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.350284774 seconds)
  done (took 791.656234579 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.341195449 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340096029 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.339835541 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.339416362 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.340175129 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339314273 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340167897 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.339999445 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.338587093 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.340705242 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.340692436 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340012219 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.340475635 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.340640366 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.340222933 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.340018761 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339438738 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339964527 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.339741181 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339956454 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.340561461 seconds)
  done (took 29.396018554 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.344047336 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.340992653 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.341364239 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.342606173 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340498278 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.343420154 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.341605369 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343824377 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.343864075 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341196245 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.34349341 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344368662 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.34129428 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.340808602 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340909942 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.344043448 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.345318774 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.341358119 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.344359428 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.341779374 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344631917 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.342157365 seconds)
  done (took 30.792899821 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.34540693 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.345148649 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.342664258 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.341298557 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.344218056 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.341534736 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.343943487 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.343825234 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.343652402 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.344221507 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.343645163 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.346660166 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.352462977 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.350884865 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.346015914 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.344519698 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.489122582 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.345352487 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.347177747 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.346581126 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.343453407 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.349860968 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.364389286 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.343201037 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.343068052 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.346002785 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.34561969 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.346073021 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.346504994 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.347484933 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.352030744 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.347040052 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.345829503 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.347637571 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.346254408 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.347261194 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.351621818 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.347060282 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.344749744 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.34614471 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.357700816 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.368953426 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.347696636 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.352448387 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.368995428 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.347986981 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.350560183 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.357179671 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.34587981 seconds)
  done (took 67.454641355 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.348017207 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.348805365 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.344765496 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.347854635 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.349442711 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.347359152 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.347260215 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.347392015 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.34502808 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.346184041 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.348644393 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.346294754 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.346700562 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.348462691 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.347756429 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.34545803 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.346234227 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.347353881 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.34676311 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.346844859 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.346515503 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.349124478 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.349448372 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.347971452 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.349547047 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.347441978 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.347776399 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.350237443 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.347336959 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.348548104 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.350498855 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.349401918 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.351674367 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.347621897 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.347016017 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.350484426 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.350371491 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.34714404 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.351669675 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.348390837 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.350836348 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.350266513 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.350499556 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.349579199 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.346896805 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.346669057 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.347462747 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.348090226 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.347394001 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.351058733 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.35154734 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.34787148 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.351715342 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.34924858 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.350563372 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.351231366 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.348891061 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.348665522 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.350950073 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.349066053 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.348510516 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.350773374 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.349505293 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.351561859 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.352718125 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.348891064 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.348402021 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.352894833 seconds)
  done (took 92.974492692 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.350863881 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.351613863 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351366017 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353148724 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.353412937 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.352768705 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.352794878 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.351964496 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.352013946 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.351729934 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.352648349 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.351089383 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.353274807 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.352649953 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.351139129 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.352697002 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.35222408 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.352474696 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.35328726 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.353183437 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.352750878 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.353285346 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.352202356 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.353598822 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.353972464 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.353234009 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.353286908 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.353431074 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354305226 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.352869402 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.353286555 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.352880593 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.354304259 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.353300676 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.354874088 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.354599533 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.354295347 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.354364166 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.35366873 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.354381794 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.35406735 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.354443663 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.354928569 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.354383094 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354221294 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.354224167 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.354422411 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.35509147 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.353641912 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.353212405 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.355203343 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.355637116 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.355613991 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.355026707 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.355532346 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.355344818 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355712223 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.355845086 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.355323664 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.355117894 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.355269717 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.356378794 seconds)
  done (took 85.192800776 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355343761 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.355156549 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.352747006 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.351900008 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.354972501 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.353047709 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.355258849 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.356103231 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.35656418 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.357056591 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357029391 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.353155631 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.35353289 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356926526 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.354283167 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.354652588 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.353932182 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.353941966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.357531199 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.354420994 seconds)
  done (took 28.363977082 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.35484604 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.358189282 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.35511406 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.355598099 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.356866773 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.355003951 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.358320106 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.358353292 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355802983 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358725188 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.358389387 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.358282984 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355087392 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.355513522 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.357784129 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.355019344 seconds)
  done (took 22.974975546 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.355093749 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.35827548 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.358177901 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.359303386 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.356524036 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.355217957 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.35832361 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.35573883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.355947141 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.359222713 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.358955019 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.359824915 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.359166603 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.35863829 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.356347897 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.36010528 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.356483763 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.355601073 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.358047711 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.359132892 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.357597591 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.356740864 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.359319886 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.359591753 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.355335037 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.357714353 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.356756268 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.35705616 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.356722834 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.359608277 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.356582319 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.357818035 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.35648987 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.356353039 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.360441425 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.357219637 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.359068738 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.360211759 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.360532057 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.360347472 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.359642673 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.357244317 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.359755939 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.361249305 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.358031792 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.360484331 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.357758994 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.358653467 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.359147332 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.358354546 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.360738053 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.361226754 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.362303016 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.36291055 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.361714987 seconds)
  done (took 75.984589739 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.363080392 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.361273531 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.359301603 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.361887406 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.36111147 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.35850843 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.361923928 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.360988462 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.357969997 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.362815433 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.359354179 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.363479398 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.359311422 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.361997891 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.359712923 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.36123497 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.359217997 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.360289165 seconds)
  done (took 25.765586866 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.361169626 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.359746749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.362618795 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.359863737 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.360535692 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.362327923 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359495494 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.361530694 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.362001798 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.360973168 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359935055 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.36129751 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.363851249 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.363373271 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.359920212 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.361148003 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.363139081 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363084639 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.360317075 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.361489968 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.363665469 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.362881695 seconds)
  done (took 31.228274163 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.362124424 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.362328557 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.36228104 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.37843308 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.38258373 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.385880745 seconds)
  done (took 9.506611626 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.370627149 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364991387 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.361658012 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.364854173 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36464283 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362195116 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363329194 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362098652 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364170847 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.361968161 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.362310735 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365315376 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365499489 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363241168 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.364038414 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.366174138 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362558157 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364268591 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363910866 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365304562 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362295266 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.363673763 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.361401936 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362980881 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.363156909 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.363168618 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365471681 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.362976151 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36309806 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36468428 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365748951 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.362375311 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365477743 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363633869 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36694166 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366194851 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364111784 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366291269 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365878547 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36304262 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.366584637 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3660592 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366280647 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.362986353 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367002767 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.362711231 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364393151 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.363213024 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.36363348 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368491927 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368014718 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363867029 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366666549 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.366883913 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366398987 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36795556 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.365680047 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36366922 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368223923 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365483458 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.363957684 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.368083183 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.364917594 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365435706 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.367391461 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365552718 seconds)
  done (took 91.374440928 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.365950371 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.365189532 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.365456552 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367275513 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.365357614 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365785327 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.364988619 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.36407915 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.365729207 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365700772 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368535706 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365892873 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367474147 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.365490439 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366515351 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366377439 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.366694998 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.366621114 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.366055339 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.369711003 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365836681 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.365751122 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.366665639 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366639639 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367378781 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.370124159 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.367039974 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367472942 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367412041 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367532764 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367559211 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.367265847 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368484819 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.366437397 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36649718 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367891841 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368187736 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.367188401 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.367925511 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37010606 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.366829764 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.371406527 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368081528 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368509451 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.367662425 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.368022063 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.367705111 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.368066913 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.36895951 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.369309107 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.368689259 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.369537574 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.369112528 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.368200743 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.368900496 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.36935238 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368188997 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.368520448 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.36812613 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.370877837 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.369120876 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.367913405 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.371916675 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.36880913 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3684825 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.368753528 seconds)
  done (took 91.543804837 seconds)
done (took 1846.057457 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.413307394 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.372813087 seconds)
  done (took 14.066613728 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.532160793 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.487473776 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.371278957 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.366830748 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.372435485 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.387922776 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.387828221 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.371033214 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.370699372 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.371181111 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.371320308 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.56165704 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.425513848 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.371762415 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.370509585 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.467527474 seconds)
  done (took 43.8748987 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.399924737 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.376969673 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.501684868 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.394980492 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.400726484 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.582483505 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.436731694 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.376079564 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.573866279 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.424229832 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.119060374 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.400240433 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.376010874 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.615532618 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.398275799 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.584522147 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.660880729 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.132845557 seconds)
  done (took 32.037580789 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.899966916 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.41876144 seconds)
  done (took 9.603149688 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.39916596 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.377519138 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.377359431 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.374065378 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.36713309 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.386711298 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.377195437 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.367811957 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.618463008 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.525884467 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.378992091 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.383169769 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.397593153 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.377375482 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.3749713 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.413037106 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.57739857 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.375616985 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.373435473 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.381156103 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.376452442 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.470221643 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.421722349 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.37493703 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.519374206 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.598179764 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.385338845 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.383597052 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.564193642 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.375655488 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.376603166 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.377785931 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.378398027 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.004087401 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.874764755 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.390859212 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.423824812 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.385781912 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.375543146 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.534979411 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.379839273 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.384717047 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.370428527 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.883810318 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.51687114 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.506091481 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.818477439 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.405121277 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.379451606 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.44375051 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.380120269 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.380452511 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.409788689 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.194112695 seconds)
  done (took 115.543655303 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.415672722 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.762353754 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.54182139 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.394055543 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.254467147 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.109631816 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.391675735 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.708873563 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.432377102 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.373809789 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.730453431 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.936818527 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.40374661 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.406690121 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.88843196 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.446293635 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.373789418 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.306932652 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.397870117 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.377435184 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.895494686 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.373647996 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.378311685 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.64266004 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.414185897 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.868789428 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.98450844 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.966969416 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.396175659 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.37371886 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.89912736 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.397636044 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.413761994 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.375746141 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.656240472 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.783927176 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.789465893 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.404323284 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.381287798 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.376701184 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.398283084 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.88083079 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.796800718 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.399225646 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.392397358 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.909955254 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.400140632 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.383634068 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.378068623 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.588431517 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.249941552 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.376459848 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.968846962 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.375137263 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.675829459 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.440873952 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.429131047 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.914858648 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.401065914 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.611392127 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.413737518 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.375677482 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.375937873 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.379854709 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.378357019 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.775332627 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.687840775 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.379565165 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.766966111 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.900902485 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.395998196 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966594197 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.330899152 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.397295631 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.437682764 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.381902176 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.114474756 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.930198491 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.401625386 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.376350557 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.765681195 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.400966833 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.718800552 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.395851955 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.397847911 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.908681181 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.385120035 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.390525395 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.378077679 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.377218664 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.150129841 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.378587545 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.665624104 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.416141189 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.377379293 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.377475134 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.391231528 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.378983052 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.395651356 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.380069024 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.951503353 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.410857132 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.39082078 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.397039909 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.378507404 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.379915598 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.378686744 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.378735772 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.610118278 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.835980396 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.404147615 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.380482153 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.3787912 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.381901297 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.632743169 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.378947129 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.737730284 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.404340467 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.379553283 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.403785456 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.135990812 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.449994678 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.379406137 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.3823105 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.330136377 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.59343585 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.401098626 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.379084519 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.379059345 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.399113406 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.769519075 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.40201688 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.459657382 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.385112668 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.128281218 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.399585244 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.397475471 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.91337536 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.380560305 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.380212385 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.388053069 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.38102714 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.678460673 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.667013864 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.665393853 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.399553848 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.380689914 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.110182075 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.406508917 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.530831338 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.402897388 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.379704515 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.58227966 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.623226512 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.381017392 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.013504621 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.383216175 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.605989517 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.394791229 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.697974093 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.918723271 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.40335415 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.385559231 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.132777623 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.120218058 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.206955071 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.384547164 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.742654306 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.375270999 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.870476501 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.38144077 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.382711043 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.959224999 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.383447802 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.389131931 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.381860505 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.382477679 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.445737352 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.559887581 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.714935884 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.386339923 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.872350737 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.468689992 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.399181445 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.393438636 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.383890646 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.732665335 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.425903238 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.385330688 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.38570411 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.385818425 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.38754388 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.895031761 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.333934194 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.391495663 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.540046233 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.059491662 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.406619972 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.385199848 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.005340179 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.610584548 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.969979216 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.448532802 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.732702887 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.41241629 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.426437618 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.183013212 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.407344274 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.89538908 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.404965534 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.391636171 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.023911457 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.403378504 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.474178576 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.385364939 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.383625715 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.962585912 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.404002929 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.386806419 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.767772839 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.407341635 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.651087371 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.385273365 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.397825292 seconds)
  done (took 1126.066240696 seconds)
done (took 1342.473506647 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.384956456 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.392879626 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.375067985 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.392245493 seconds)
  done (took 26.84658135 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.396583401 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.392582821 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.395014935 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.392526041 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.395114816 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.392304215 seconds)
  done (took 9.667635694 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.574255012 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.393441868 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.393902987 seconds)
  done (took 19.663548542 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.624099429 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.836382079 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.800530438 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.91818119 seconds)
  done (took 11.482929046 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.395106884 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.395671048 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.395400691 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.395441564 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.397411995 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.398998775 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.396030598 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.396939601 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.399628772 seconds)
  done (took 13.87180693 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.401419489 seconds)
done (took 84.235118776 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.367522138 seconds)
    (2/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.398989143 seconds)
    (3/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.373117018 seconds)
    (4/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.428016482 seconds)
    (5/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.409507631 seconds)
    (6/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.506054704 seconds)
    (7/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.478655285 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.663457085 seconds)
    (9/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.228499205 seconds)
    (10/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.375522386 seconds)
    (11/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.436214595 seconds)
    (12/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.36840781 seconds)
    (13/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.524136115 seconds)
    (14/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.329181274 seconds)
    (15/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.420233626 seconds)
    (16/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.447349809 seconds)
    (17/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.382252826 seconds)
    (18/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.523022048 seconds)
    (19/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.926885706 seconds)
    (20/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.40394182 seconds)
    (21/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.091314323 seconds)
    (22/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.488345901 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.414646071 seconds)
    (24/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.418210008 seconds)
    (25/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.319005588 seconds)
    (26/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.699125672 seconds)
    (27/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.375757771 seconds)
    (28/286) benchmarking ("sort", Int64, true)...
    done (took 6.390213553 seconds)
    (29/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.117931972 seconds)
    (30/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.517492135 seconds)
    (31/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.370680864 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.543307629 seconds)
    (33/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.073131564 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.931272739 seconds)
    (35/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.770814427 seconds)
    (36/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.395545248 seconds)
    (37/286) benchmarking ("sort", Float64, true)...
    done (took 6.39168578 seconds)
    (38/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.388841091 seconds)
    (39/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.941405322 seconds)
    (40/286) benchmarking ("sort", Int8, false)...
    done (took 4.462044135 seconds)
    (41/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.419539606 seconds)
    (42/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.522160281 seconds)
    (43/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.515335572 seconds)
    (44/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.051966548 seconds)
    (45/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.199120889 seconds)
    (46/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.672566543 seconds)
    (47/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.392747134 seconds)
    (48/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.983523287 seconds)
    (49/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.371762393 seconds)
    (50/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.479652466 seconds)
    (51/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.970730479 seconds)
    (52/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.389564625 seconds)
    (53/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.409139196 seconds)
    (54/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.37851045 seconds)
    (55/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.449614665 seconds)
    (56/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.385140746 seconds)
    (57/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.112171942 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.242979436 seconds)
    (59/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.493375591 seconds)
    (60/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.062358099 seconds)
    (61/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.998086631 seconds)
    (62/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.269067433 seconds)
    (63/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.405335893 seconds)
    (64/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.433913284 seconds)
    (65/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.877593615 seconds)
    (66/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.422134357 seconds)
    (67/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.946563865 seconds)
    (68/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.354755434 seconds)
    (69/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.119291833 seconds)
    (70/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.41640567 seconds)
    (71/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.609417207 seconds)
    (72/286) benchmarking ("sort", Int64, false)...
    done (took 5.693862102 seconds)
    (73/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.941524977 seconds)
    (74/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.373727418 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.817485186 seconds)
    (76/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.390785841 seconds)
    (77/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.462416664 seconds)
    (78/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.794927607 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.358871169 seconds)
    (80/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.809778362 seconds)
    (81/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.500740472 seconds)
    (82/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.803750106 seconds)
    (83/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.522037208 seconds)
    (84/286) benchmarking ("map", identity, BigInt, true)...
    done (took 3.066431381 seconds)
    (85/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.41843173 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.169923759 seconds)
    (87/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.986327679 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.222827901 seconds)
    (89/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.808903469 seconds)
    (90/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.382548703 seconds)
    (91/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.406676502 seconds)
    (92/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.455210492 seconds)
    (93/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.616064267 seconds)
    (94/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.140780516 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.472949538 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.256991662 seconds)
    (97/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.090932042 seconds)
    (98/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.377671791 seconds)
    (99/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.412265394 seconds)
    (100/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.725850793 seconds)
    (101/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.551691482 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.825493957 seconds)
    (103/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.236894188 seconds)
    (104/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.225952864 seconds)
    (105/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.563596931 seconds)
    (106/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.818825384 seconds)
    (107/286) benchmarking ("sort", Float64, false)...
    done (took 5.79203479 seconds)
    (108/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.362490639 seconds)
    (109/286) benchmarking ("sort", Bool, false)...
    done (took 1.947131573 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.438688641 seconds)
    (111/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.374457487 seconds)
    (112/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.659688938 seconds)
    (113/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.428300993 seconds)
    (114/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.108791139 seconds)
    (115/286) benchmarking ("sort", BigInt, false)...
    done (took 6.40187881 seconds)
    (116/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.264566787 seconds)
    (117/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.431150881 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.411697146 seconds)
    (119/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.423930417 seconds)
    (120/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.281943174 seconds)
    (121/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.683327893 seconds)
    (122/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.292629893 seconds)
    (123/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.429330517 seconds)
    (124/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.223700358 seconds)
    (125/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.141475297 seconds)
    (126/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.595195892 seconds)
    (127/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.169656559 seconds)
    (128/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.495115538 seconds)
    (129/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.754545648 seconds)
    (130/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.532538494 seconds)
    (131/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.376348127 seconds)
    (132/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.413844814 seconds)
    (133/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.133604353 seconds)
    (134/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.38361305 seconds)
    (135/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.415959225 seconds)
    (136/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.377512915 seconds)
    (137/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.336774815 seconds)
    (138/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.430007257 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.266968087 seconds)
    (140/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.487744858 seconds)
    (141/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.423303476 seconds)
    (142/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.832320148 seconds)
    (143/286) benchmarking ("sort", Int8, true)...
    done (took 6.416759735 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.442427915 seconds)
    (145/286) benchmarking ("sort", Float32, false)...
    done (took 5.442838107 seconds)
    (146/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.443617636 seconds)
    (147/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.961243713 seconds)
    (148/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.404459222 seconds)
    (149/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.430749628 seconds)
    (150/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.420720802 seconds)
    (151/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.188675717 seconds)
    (152/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.37910557 seconds)
    (153/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.395823999 seconds)
    (154/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.275539369 seconds)
    (155/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.469226064 seconds)
    (156/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.765301253 seconds)
    (157/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.798872182 seconds)
    (158/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.41255442 seconds)
    (159/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.743345894 seconds)
    (160/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.415164395 seconds)
    (161/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.407360444 seconds)
    (162/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.868307566 seconds)
    (163/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.190286925 seconds)
    (164/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.522026208 seconds)
    (165/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.037042832 seconds)
    (166/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.425193268 seconds)
    (167/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.513665634 seconds)
    (168/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.437749491 seconds)
    (169/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.59182335 seconds)
    (170/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.388505326 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.446301237 seconds)
    (172/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.270772063 seconds)
    (173/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.348021481 seconds)
    (174/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.470073603 seconds)
    (175/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.425010803 seconds)
    (176/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.130667942 seconds)
    (177/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.418075951 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.466025514 seconds)
    (179/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.38045409 seconds)
    (180/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.498549555 seconds)
    (181/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.42541047 seconds)
    (182/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.379200099 seconds)
    (183/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.376853877 seconds)
    (184/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.567157265 seconds)
    (185/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.399595205 seconds)
    (186/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.154215422 seconds)
    (187/286) benchmarking ("sort", Bool, true)...
    done (took 5.547277576 seconds)
    (188/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.481298644 seconds)
    (189/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.41527629 seconds)
    (190/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.387167255 seconds)
    (191/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.955725814 seconds)
    (192/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.485353035 seconds)
    (193/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.652463368 seconds)
    (194/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.485337866 seconds)
    (195/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.380946918 seconds)
    (196/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.424856192 seconds)
    (197/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.382026362 seconds)
    (198/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.390728134 seconds)
    (199/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.407349927 seconds)
    (200/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.113349967 seconds)
    (201/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.606357467 seconds)
    (202/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.598065484 seconds)
    (203/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.568585056 seconds)
    (204/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.416670394 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.425969701 seconds)
    (206/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.001200507 seconds)
    (207/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.442363696 seconds)
    (208/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.807318183 seconds)
    (209/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.656101542 seconds)
    (210/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.387200319 seconds)
    (211/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.431995097 seconds)
    (212/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.48620717 seconds)
    (213/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.382242401 seconds)
    (214/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.917959601 seconds)
    (215/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.276245405 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.426592386 seconds)
    (217/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.403924989 seconds)
    (218/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.403915899 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.443296186 seconds)
    (220/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.420874542 seconds)
    (221/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.974304274 seconds)
    (222/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.71780132 seconds)
    (223/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.334301009 seconds)
    (224/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.452985334 seconds)
    (225/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.382621813 seconds)
    (226/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.49138808 seconds)
    (227/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.428393824 seconds)
    (228/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.289036527 seconds)
    (229/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.655430802 seconds)
    (230/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.845613635 seconds)
    (231/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.402329333 seconds)
    (232/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.408851046 seconds)
    (233/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.785513861 seconds)
    (234/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.403129015 seconds)
    (235/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.436049237 seconds)
    (236/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.402933737 seconds)
    (237/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.493603944 seconds)
    (238/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.867037434 seconds)
    (239/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.453937997 seconds)
    (240/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.941191929 seconds)
    (241/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.643457531 seconds)
    (242/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.403204362 seconds)
    (243/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.435955553 seconds)
    (244/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.506347374 seconds)
    (245/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.384985518 seconds)
    (246/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.314485597 seconds)
    (247/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.335948182 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.436423164 seconds)
    (249/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.486428392 seconds)
    (250/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.392599334 seconds)
    (251/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.65902795 seconds)
    (252/286) benchmarking ("sort", BigInt, true)...
    done (took 6.445564119 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.788418643 seconds)
    (254/286) benchmarking ("sort", Float32, true)...
    done (took 6.403434188 seconds)
    (255/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.383920218 seconds)
    (256/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.126508236 seconds)
    (257/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.424646442 seconds)
    (258/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.421439112 seconds)
    (259/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.404402266 seconds)
    (260/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.517291619 seconds)
    (261/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.964249323 seconds)
    (262/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.391764802 seconds)
    (263/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.413514141 seconds)
    (264/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.407821766 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.504465615 seconds)
    (266/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.488911469 seconds)
    (267/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.385371816 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.522189148 seconds)
    (269/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.513136789 seconds)
    (270/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.503707874 seconds)
    (271/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.256681496 seconds)
    (272/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.519616339 seconds)
    (273/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.407906115 seconds)
    (274/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.117732493 seconds)
    (275/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.494766754 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.447672054 seconds)
    (277/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.746774013 seconds)
    (278/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.476253703 seconds)
    (279/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.679745627 seconds)
    (280/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.432589734 seconds)
    (281/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.392904927 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.43656127 seconds)
    (283/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.494466622 seconds)
    (284/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.430980218 seconds)
    (285/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.937459241 seconds)
    (286/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.413124975 seconds)
  done (took 974.217127398 seconds)
done (took 975.52062843 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.439148207 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.43425478 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.416978762 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.437646226 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.528158166 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.440896879 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.427675303 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.420801012 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.464724385 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.466868745 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.416678881 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.440291439 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.418229995 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.416762665 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.417465055 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.432952502 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.584271901 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.418821894 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.435531976 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.428151063 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.433276492 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.416671298 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.468325262 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.439818327 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.421237785 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.42013434 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.42194246 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.437415443 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.529573696 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.421555383 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.422019088 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.429054094 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.585997453 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.418178483 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.413575617 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.437659514 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.431124001 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.428924213 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.422687614 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.450167043 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.130225345 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.444703056 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.420806635 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.419808866 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.421803301 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.425138182 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.420158983 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.424045989 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.434226159 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.434746415 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.13944155 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.461503432 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.422759998 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.420545196 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.430276712 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.419701123 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.42386955 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436064433 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.438564696 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.438924221 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.575037144 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.425037656 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.421497422 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.436853629 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.428307832 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.181669841 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.441419564 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.42375656 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.135077919 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.452917315 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.177343846 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.457401057 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.422831176 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.435375153 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.454523799 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.589788665 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.416283291 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.420292219 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.42969327 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.41963073 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.432205612 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.436156406 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.426643361 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.422793826 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.43760015 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.444589216 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.433454571 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.424189814 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.431388804 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.44076281 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.431072645 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.433979214 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.425218821 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.417953418 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.431159755 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.426592772 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.425836453 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.424806905 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.42683609 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.433512763 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.050628582 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.461501987 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.419548598 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.419561228 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.422130817 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.436730341 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.053630472 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.443573377 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.445167789 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.470887989 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.424719114 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.580243652 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.427350109 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.441497034 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.433116001 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.426902873 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.419157436 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.581081366 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.047016508 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.458689184 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.42687571 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.422994812 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442948252 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.425678387 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.421298802 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.641393489 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.432061498 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.440874061 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.544765129 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.435299557 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.456591584 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.422929914 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.42811849 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.451135388 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.441953795 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.456470175 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.429566753 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.443849999 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.441443769 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.422361249 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.435326722 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.436948168 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.427656107 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.431771153 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.421019062 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.44909561 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.440702682 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.440187981 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.447420641 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.546410464 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.423949128 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.58422202 seconds)
done (took 242.200616674 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.490634686 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.424089205 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.509839197 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.424813428 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.527820681 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.529263203 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.420010121 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.420670604 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.422191764 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.83591973 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.421396958 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.422306845 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.42508909 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.422387063 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.507424898 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.425838651 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.421564059 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.766689736 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.424643263 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.494889372 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.42142269 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.421354024 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.423210983 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.810545528 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.420560686 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.423806678 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.494270563 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.424629896 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.801555648 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.418590866 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.424345972 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.770405689 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.51440574 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.441390143 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.434141002 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.431934996 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.528720962 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.447005069 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.50686158 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.506584166 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.509872242 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.463580518 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.422902219 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.422145989 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.426450991 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.425858981 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.42236048 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.452506996 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.424901547 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.423663144 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.797137604 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.434876649 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.423662747 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.424543922 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.423455534 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.455755222 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.424555679 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.426748831 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.51556506 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.427350777 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.490052453 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.844002015 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.806614797 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.425669541 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.427420251 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.423347034 seconds)
  done (took 154.699723757 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.494923147 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.498905939 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.546850658 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.447360569 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.479045868 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.551357714 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.448744781 seconds)
  done (took 11.799514747 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.432883582 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.427311076 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.476610534 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.476612979 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.427973076 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.574827128 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.429234202 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.438067423 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.424845553 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.480660427 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.428705707 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.429064067 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.435235647 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.426121639 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.476073116 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.439299776 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.54375019 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.429382502 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.429840489 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.578241301 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.426882357 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.435925186 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.478833989 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.438577684 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.429403413 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.434466385 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.993359727 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.429554747 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.427086779 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.42923808 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.426123498 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.467013783 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.42992009 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.427357388 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.426511862 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.545760971 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.430113655 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.427792921 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.430025379 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.421396826 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.430313975 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.431379567 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.431251788 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.428361747 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.42994521 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.455444212 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.43019412 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.43066299 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.429901566 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.431139066 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.480811004 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.431539224 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.428228971 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.427393481 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.486383782 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.438237158 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.431478327 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.42854341 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.430580934 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.428841454 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.582361628 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.479766581 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.430517535 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.478735251 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.432685906 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.432257711 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.431709836 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.432095134 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485319051 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.431993592 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.478907033 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.429758341 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.586436084 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.453531931 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.43145263 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.434517757 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.43313124 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.431939174 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.429002139 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.438420541 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.430905138 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.43329523 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.439203346 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.430825721 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.429650354 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.533968803 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.541892231 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.43035931 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.445490687 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.43950295 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.430869109 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.48566132 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.433999396 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.431168975 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.484951739 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.547611925 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.486230552 seconds)
  done (took 162.657326642 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.437914984 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.440511703 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.436127388 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.449730855 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.432933202 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.433018525 seconds)
  done (took 9.968277932 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.435983684 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.436736004 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.43432098 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.43426961 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.434601848 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.433644459 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.434555784 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.436281377 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.439853995 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.434015211 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.434213017 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.435445491 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.434913956 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.435675661 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.435180896 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.435236918 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.435188877 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.43283309 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.434207218 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.434796415 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.539241783 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.4364509 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.43541829 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.436350679 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.439515455 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.435355748 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.441714871 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.435681715 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.435359488 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.439864541 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.459581667 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.436218715 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.436696856 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.442257523 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.440640862 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.436764822 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.44056232 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.43623879 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.432457015 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.436266324 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.437286881 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.436965954 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.437110166 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.436245145 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.439698576 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.442560312 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.440563616 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.444140594 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.436953025 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.438154479 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.437074432 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.43725792 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.436291461 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.438395393 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.43832189 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.460620497 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.441253942 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.437485387 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.438475346 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.438345546 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.438719374 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.437685928 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.439790486 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.441349836 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.434842435 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.438685686 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.439800524 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.44278444 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.438282019 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.437351052 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.438285756 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.435695039 seconds)
  done (took 105.971601281 seconds)
done (took 446.424654499 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.664142278 seconds)
  done (took 8.006628167 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.957892385 seconds)
  done (took 8.301731518 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.687259325 seconds)
  done (took 26.036947025 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.441602002 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.4814757 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.466042092 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.434272339 seconds)
  done (took 27.169212027 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.851039204 seconds)
  done (took 8.194461984 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.431936272 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.431779538 seconds)
  done (took 14.208751815 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.883590379 seconds)
  done (took 8.227129287 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.58713033 seconds)
  done (took 7.936543012 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.433514947 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.470866301 seconds)
  done (took 14.259564242 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.41195503 seconds)
  done (took 7.755279643 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.767666323 seconds)
  done (took 9.110878963 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.439153138 seconds)
  done (took 7.783852181 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.434319022 seconds)
  done (took 7.776971509 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.712394684 seconds)
  done (took 11.056041306 seconds)
done (took 167.166358215 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.431785015 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.433060358 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.43557848 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.433596628 seconds)
  done (took 27.078193558 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.474084886 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.472958981 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.475651148 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.484681417 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.476862239 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.474336159 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.466128334 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.466675328 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.485727508 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.477049851 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.476368313 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.475981912 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.474148629 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.465171155 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.4762305 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.475818328 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.4846561 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.475384261 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.46778866 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.481038277 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.441952606 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.484770881 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.47764422 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.442598454 seconds)
  done (took 36.698137017 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.960916575 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.511823225 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.595364489 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.491855156 seconds)
  done (took 7.905688083 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.493965192 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.494384603 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.505945325 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.546102504 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.575816236 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.51113237 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.469298075 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.464022333 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.449980721 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.496122104 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.571374045 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.511826297 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.585968326 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.4417957 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.636427828 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.441905438 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.443174784 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.495468525 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.546450058 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.5608292 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.443810936 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.494129069 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.49758816 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.511869104 seconds)
  done (took 37.535870741 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.442915929 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.462337945 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.44279311 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.441104456 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.451005573 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.442026567 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.442826384 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.44326372 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.442952987 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.448710245 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.442801275 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.455374875 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.442376678 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.442351706 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.448303104 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.443447868 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.449184847 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.443136781 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.44284071 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.448884979 seconds)
  done (took 30.26546407 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.437945349 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.290349545 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.788024089 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.692535031 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.439020018 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.443950507 seconds)
  done (took 28.439724338 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.526993023 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.711427987 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.452983192 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.86491983 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.959790004 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.464760446 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.44504799 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.719274744 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.101939379 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.112690846 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.518889228 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.5223545 seconds)
  done (took 21.75146246 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.457683935 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.448228134 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.458082973 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.463190281 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.508652726 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.469298548 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.453675858 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.438662854 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.517557735 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.534568211 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.470174407 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.510897062 seconds)
  done (took 39.081112943 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.528085201 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.491492751 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.522579286 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.475219879 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.166149976 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.652572556 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.475544104 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.950062824 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.44391415 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715143235 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.44264803 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538218811 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.699789857 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449315268 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449660076 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.56495367 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688996044 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027696658 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449976284 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.098568622 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.475617676 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.451578894 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.224286548 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.48387969 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653381779 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.58936208 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.721903226 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.217791548 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.790571558 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460954222 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453049625 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.442224057 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716529023 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154615075 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560659238 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452693422 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450941867 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.990794761 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.431611845 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.105768187 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.464527167 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.452762536 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.454211936 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443060554 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.378846391 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453250953 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.948017449 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.449252196 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.154046601 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.442966039 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.454083613 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538175521 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.44663636 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.435842221 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488462651 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.449850484 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.441784172 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.538157287 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037873668 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.408834397 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.446333266 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.407496625 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.445462867 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.03595769 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.204341959 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.574800282 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.448648068 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.44911679 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379410534 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.09888893 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.468083988 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.583748855 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.467290789 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.107622921 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.261740405 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.477089621 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.385026225 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074466256 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450300828 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.387349347 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.674943461 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.223125593 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384839793 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.389364284 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.380074913 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.251624719 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452015821 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.982927305 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465626182 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954568492 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.456776388 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462857763 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469122528 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.670237085 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.324776556 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445686726 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.452160108 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568137148 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468015605 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.935440761 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38119727 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.450331149 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705043673 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.658568221 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.454114917 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.59590133 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713498863 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463986655 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.469200097 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.450945204 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.463760342 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.136773331 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.489421565 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.430461416 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465511971 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.225035534 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.289532677 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463692305 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.555944071 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.449044807 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74985189 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.320247867 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.608198164 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517271508 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.451832952 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.448506579 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.127758994 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.051005309 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.607800316 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.444861577 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.458184393 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.467247361 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.448962943 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412415239 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.447681152 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459265932 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.234824621 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.673749507 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.457090021 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.73213062 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.38272165 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.587769033 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465207151 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.673221897 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.862738209 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.477913082 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.710543611 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937628932 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.474424825 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.4684581 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467576862 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550611651 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.472728564 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.450298837 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.715052127 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.452597939 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.453740227 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.044765381 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.226096049 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452296269 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.453785003 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460377104 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.125576157 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44198074 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.455057179 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.341003124 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.459956398 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514498663 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.451931845 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.457688166 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.594868982 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496536011 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.452261098 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.455439921 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67946049 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.457337703 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.943087938 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526834218 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.684478443 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.123725899 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48182847 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.381811012 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.158761402 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.140398274 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.447942855 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.638342284 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.44880678 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45878137 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.459400493 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.450547562 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119301623 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472371282 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.94097208 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.45374314 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.45827153 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.453895333 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449548389 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.589863195 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.455111796 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457440917 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.468548584 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591452402 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.463435515 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.382096817 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.965699665 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.455356618 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.448342138 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.226844842 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484056838 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.970567072 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.972907083 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.709818213 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448877866 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.463111587 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.067874973 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.48699237 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.494034944 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.46682094 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458911325 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.467515528 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.466796367 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.461709232 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.961443356 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.823875233 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019275372 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.286118424 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104985775 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51216243 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.45888266 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.341112947 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.942382714 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.385572381 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.109436745 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.669282937 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.960249588 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.408530151 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695072396 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.858390828 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.383137617 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.469797742 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680900787 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.491145685 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.454699879 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464346195 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.663512728 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.486829933 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.460800808 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.388551798 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.73177289 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.751455563 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.452017871 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532336347 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.947828129 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460858722 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.231315833 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.502257272 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.942706599 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.672300781 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.0831408 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.848429355 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.466493694 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.474364647 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977663098 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.463328705 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.982195965 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168894275 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.481985344 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.700191187 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393801745 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.465157133 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.464160308 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.449142357 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.042067829 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.466854043 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.71172178 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.465211062 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388468519 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.466437416 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.10305089 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.341905171 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.46097421 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454231773 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.293064533 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461834764 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809770905 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.464283512 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.555394246 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477642631 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.390695446 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.389345445 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.147976796 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.457299894 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424453806 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032209226 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.455481287 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.50153421 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.46177709 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312513167 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.712874271 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.468690298 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.159737283 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711486442 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4784753 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478997623 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.556131409 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.467931482 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.438803804 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.337162151 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.692472081 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458972807 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.679730403 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.539488099 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.353272338 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.507094743 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.691217581 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.338820597 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.457995822 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.755836974 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.197146462 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.47782055 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.27471018 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504667486 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.464891661 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.474283129 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.457628678 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476768309 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550282875 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.468263483 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.468423724 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.467910079 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657128651 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468404873 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461952554 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.518134062 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55123891 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.470200806 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.537880109 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.231836596 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167012104 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.327876778 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.178894011 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501385234 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.459001589 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.459993816 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393588446 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610781809 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.986971518 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.732350408 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57759154 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.481953865 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481713038 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458652299 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.468333531 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.700590529 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734276097 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440315179 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468968637 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254500215 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.618115328 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.470852949 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.671257809 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.06408393 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121732259 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.585353729 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.459601598 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959086904 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.734546845 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.552128426 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460122141 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.055788309 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.486653744 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.942921875 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.4878374 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.474567565 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.616326931 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.470829128 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184347488 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.492817865 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.61625175 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.233640376 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.088907028 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.72814057 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.046768569 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.472247451 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17239498 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.3399636 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.743088429 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.530548437 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.472648129 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.577471307 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610025401 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.460811349 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.367407247 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461368614 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31099884 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.173384078 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.47269765 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167089587 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.755975457 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.460218388 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.459440359 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494188926 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.472257017 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.687954726 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.275757012 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.686851411 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.474284225 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.464188843 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.036017323 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.163951578 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504930051 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397142551 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.465834508 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.759536651 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.729063295 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48572101 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.915825321 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.174104326 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112107366 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.446262753 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.48529413 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474626754 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312950534 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177933736 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.631708429 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081989975 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.132855391 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.472448732 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.745300685 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.467919926 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.464748683 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74806082 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.467545248 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.464023552 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484593086 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.177198198 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.39868769 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.473755141 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.206377306 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.409861418 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.694171734 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.526363937 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.402224255 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.47520136 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.672410222 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.465008049 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.586616167 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.47757498 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.480755292 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477495611 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.2071369 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.746102301 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.471729316 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.461282692 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.460696874 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.476060541 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571289308 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765955328 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472448489 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.141576837 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.819660856 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.724610514 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.46741946 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.474981597 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.469778137 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.468101873 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.193991701 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.486759677 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.466693924 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.110685413 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.486578757 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.483975738 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.470630472 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.684048211 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680054945 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.468126456 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.506893585 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46722815 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.510778736 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.366844376 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.239266741 seconds)
  done (took 1719.889030854 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.471094733 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.505036197 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.516910063 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.503777355 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.546106402 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.488038616 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.556687379 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.495186485 seconds)
  done (took 53.458422165 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.478612319 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.637306687 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.503579039 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.470538772 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.477901851 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.471536644 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.994247441 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.491767783 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.484069046 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.479204473 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.468040147 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.478928494 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.24115971 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.485774198 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.479114286 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.474682201 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.484385272 seconds)
  done (took 67.984624168 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.485785701 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.494591867 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.514246501 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.473447077 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.479556061 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.489559743 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.26940192 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.535344258 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.470432436 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.673560273 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.126319011 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.499511547 seconds)
  done (took 82.889898249 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.486983591 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.486777407 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.487344038 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.486728975 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.487093052 seconds)
  done (took 8.811843183 seconds)
done (took 2163.13501175 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.476006036 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.303978031 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.192790321 seconds)
  done (took 5.876248792 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.618369313 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.666278959 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.786742762 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.792345591 seconds)
  done (took 8.240609845 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.749222837 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.856283219 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.656787238 seconds)
  done (took 6.63993756 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.801208056 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.490703818 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.47581977 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.469961419 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.479827423 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.476982629 seconds)
  done (took 20.805503544 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.4750121 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.476824348 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.474050045 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.476037958 seconds)
  done (took 7.280857981 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.451193212 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.184648439 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.452061668 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.47241076 seconds)
  done (took 18.939041305 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.22090008 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.233984115 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.217443833 seconds)
  done (took 8.050398344 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.503988366 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.500425424 seconds)
  done (took 4.383520269 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.769714761 seconds)
  done (took 3.148435901 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.487488796 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.528693367 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.717026843 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.644274799 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.17708471 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.471310516 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.482908496 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.929347242 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.605901726 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.191337545 seconds)
  done (took 34.613947514 seconds)
done (took 135.600825984 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.850803316 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.874753191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.680943273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.823135307 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.700220181 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.681620571 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.756451595 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.786956069 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.32888501 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.317629473 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.866854838 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.700245344 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.708649997 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.874931723 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.709032833 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.498186674 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.702206551 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.892937497 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.476909657 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.490184996 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.756595422 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.460189517 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.690149018 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.478225484 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.702582197 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.633650288 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.040812932 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.498581118 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.473714626 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.30107952 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.641909162 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.47290704 seconds)
  done (took 203.251758254 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.472255375 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.510415789 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.473496654 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.491981416 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.472957434 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.492818152 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.473023679 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.492922951 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.475336124 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.484014896 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.472492071 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.48039566 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.473879426 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.473696974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.475515822 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.476635731 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.479337767 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.477617049 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.480366992 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.475879957 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.495359534 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.506993687 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.482830228 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.473557173 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.484439009 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.4764328 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.49585791 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.475370387 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.492909958 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.484103557 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.474748871 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.495289111 seconds)
  done (took 208.825266301 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.474786886 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.474365682 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.476055513 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.474165999 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.477239404 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.47821489 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.476605915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.491759567 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.476333427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.476802688 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.477494577 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.476195667 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.478377066 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.488108762 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.475325719 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.478036519 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.4775231 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.491086959 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.476611199 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.499301248 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.500968505 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.477672573 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.509962158 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.477687736 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.477221355 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.477599867 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.495807845 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.498100799 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.501347888 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.477709124 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.478086203 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.498200662 seconds)
  done (took 208.848070438 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.682243811 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.485222474 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.486866712 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.440582448 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.486242531 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.48462006 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.48597301 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.678890798 seconds)
  done (took 15.615455403 seconds)
done (took 637.91969214 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.052036443 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.723123385 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.703719808 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.505642226 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.396959068 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.52786836 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.505438252 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.697698729 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.482308608 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.710993431 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.892123004 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.524581812 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.105240748 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.51192757 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.786382847 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.614904991 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.432936092 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.584834865 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.868632446 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.19332156 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.793083571 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.175814148 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.733335533 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.500705109 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.137574387 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.109885955 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.335989139 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.427367018 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.527141625 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.865549658 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.459144035 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.594648168 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.582394326 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.590267753 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.645192938 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.617424851 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.576197046 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.577981959 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.722142923 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.877325531 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.195200525 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.296229656 seconds)
  done (took 101.548847941 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.470260683 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.470443283 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.470167135 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.470125142 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.472335911 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.470658192 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.470367437 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.470113166 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.470831995 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.470049758 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.470302 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.472235248 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.470302339 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.475682419 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.471006917 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.471376792 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.472375716 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.47338219 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.470942415 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.470772368 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.472146475 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.471735022 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.472169584 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.471455386 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.471853171 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.471701305 seconds)
  done (took 39.644244536 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.489132127 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.763297286 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.96303508 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.503316098 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.489513992 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.493831353 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.58114818 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.491608894 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.49262326 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.493324446 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.656733549 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.493611776 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.526703814 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.987874329 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.501427337 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.491304078 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.490695618 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.491116654 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.765830236 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.500591448 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.60502556 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.492614926 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.583460431 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.501233779 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.5166173 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.492337248 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.495935288 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.072015353 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.515223755 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.660896806 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.453589728 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.58944408 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.047433283 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.979779545 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.460572713 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.502758056 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.49440583 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.663230845 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.494963376 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.491464505 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.583784728 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.494336885 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.957005447 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.194955134 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.515806522 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.493328216 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.094950548 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.685062409 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.784872632 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.501539947 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.98225743 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.497112944 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.49575141 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.494090586 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.784789939 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.500904922 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.49283385 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.137746408 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.521908206 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.584372323 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.494680386 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.495461705 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.771869914 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.494463341 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.767687875 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.496656431 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.501807571 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.51650467 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.957434477 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.496920894 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.226351949 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.517116346 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.495182682 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.665241549 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.768715429 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.132036301 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.519062782 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.779128789 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.063219735 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.605702181 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.500245398 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.060975628 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.610437364 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.499288036 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.49837503 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.4982054 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.496717297 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.550245616 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.583802012 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.154592377 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.233272598 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.167152568 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.610968309 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.508639195 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.496438408 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.141839477 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.521433274 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.498447016 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.953078989 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.221162436 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.518442758 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.503148989 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.22765105 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.519876988 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.588838287 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.502521616 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.966623123 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.498919612 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.550347515 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.496521022 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.502713963 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.522331121 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.587752335 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.501881849 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.497418333 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.190296184 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.691711339 seconds)
  done (took 197.410085721 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.491296573 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.48996816 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.493521698 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.491011567 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.490900439 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.498874832 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.490990299 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.491779211 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.495954231 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.491207189 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.491749858 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.491740211 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.492330794 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.5177866 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.502470197 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.497763451 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.146925107 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.492909893 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.49196091 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.492254883 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.335862234 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.502482627 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.509671845 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.493197987 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.491897688 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.493131544 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.503577039 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.494712397 seconds)
  done (took 156.766369065 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.5000657 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.16114968 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.522343037 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.654613866 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.525963763 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.49843861 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.65528778 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.569518637 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.528557708 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.497813644 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.49882219 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.866906307 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.509989183 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.103734114 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.728730379 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.678435709 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.109921186 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.521842185 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.498841476 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.499173895 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.65894452 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.511842722 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.877532681 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.213570774 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.532066831 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.205080549 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.492962861 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.50215267 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.500344291 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.204522742 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.529340498 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.877126342 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.601921282 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.576750073 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.233273954 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.135555679 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.127257876 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.675603222 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.501031037 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.499534326 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.499142831 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.485507977 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.208917919 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.532374838 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.501934952 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.196268302 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.534507286 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.503339041 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.508930189 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.500696855 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.572500512 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.603021943 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.910812158 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.220485138 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.622542677 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.515732256 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.65967586 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.898675602 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.505469175 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.107871228 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.48662045 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.212879427 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.534434569 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.486880888 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.502461347 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.506941575 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.685367919 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.668979126 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.133780643 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.532241703 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.106824469 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.706633587 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.509711936 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.502713929 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.504244966 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.213928386 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.165304714 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.713676323 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.673515264 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.741008964 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.494836933 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.502847485 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.487578376 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.596258018 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.510815109 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.21579433 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.159413165 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.528547098 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.50644737 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.506046253 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.505950495 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.713684934 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.236443593 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.627237881 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.10920986 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.906956539 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.894732064 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.515907393 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.573694298 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.524510601 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.891871617 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.516091783 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.572350091 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.963105152 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.886459304 seconds)
  done (took 181.614201556 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.786940071 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.849227681 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.609213277 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.67601697 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.195796685 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.114389654 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.896737233 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.668769304 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.630430211 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.78866435 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.797408834 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.596809921 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.75128983 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.595156018 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.300464567 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.607597283 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.629393855 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.665863278 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.68239641 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.610091689 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.256548954 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.833860425 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.726818732 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.488612122 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.609331762 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.378813834 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.130287596 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.064495155 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.705821235 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.968961453 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.081523727 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.711782038 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.619158987 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.315981093 seconds)
  done (took 72.751795301 seconds)
done (took 751.122753524 seconds)
SAVING RESULT...
DONE!
