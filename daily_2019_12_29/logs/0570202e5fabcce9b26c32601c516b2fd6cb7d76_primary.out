cset: moving following pidspec: 648
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.385451724 seconds)
loading group "string"... done (took 0.581359504 seconds)
loading group "linalg"... done (took 7.216258839 seconds)
loading group "parallel"... done (took 0.160103836 seconds)
loading group "find"... done (took 1.143046101 seconds)
loading group "tuple"... done (took 1.75321488 seconds)
loading group "dates"... done (took 1.251748199 seconds)
loading group "micro"... done (took 0.221422708 seconds)
loading group "io"... done (took 1.021897505 seconds)
loading group "scalar"... done (took 37.898021416 seconds)
loading group "sparse"... done (took 11.821676318 seconds)
loading group "broadcast"... done (took 0.943684737 seconds)
loading group "union"... done (took 12.159792273 seconds)
loading group "simd"... done (took 4.486306418 seconds)
loading group "random"... done (took 9.052198351 seconds)
loading group "problem"... done (took 1.835777023 seconds)
loading group "array"... done (took 20.821272292 seconds)
loading group "misc"... done (took 1.685008469 seconds)
loading group "sort"... done (took 3.328451089 seconds)
loading group "collection"... done (took 17.313438594 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.521468177 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125270485 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118498625 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.120147011 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147805752 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.112740172 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.12509644 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086731697 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.809925938 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.149677134 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118291134 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.429765026 seconds)
done (took 5.179074613 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175603988 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082108856 seconds)
    (2/2) benchmarking "String"...
    done (took 0.08306147 seconds)
  done (took 1.302570459 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066022978 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122650874 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066936191 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066465845 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.067785907 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066918193 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066170033 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066492446 seconds)
  done (took 1.660776529 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.073084115 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069334583 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066829029 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068241777 seconds)
  done (took 1.415423387 seconds)
done (took 5.769178408 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.786253612 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.203028479 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.189890994 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.412952094 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131162197 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.158284047 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643889218 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.325280654 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.18766767 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080251186 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109174904 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.3287453 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111614831 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628689637 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074653963 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091205685 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.136188756 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.436444482 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067384059 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082186123 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089231323 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128201949 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.08493031 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074193352 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143724302 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067990016 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136612938 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080328807 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066670155 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214680093 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173020739 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.661907565 seconds)
  done (took 10.283239629 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096471654 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096799498 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069216821 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.123158267 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.096545448 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069559687 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070580208 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067858679 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086992915 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127815699 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.088506182 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101647887 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065840494 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068727704 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085383233 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204616228 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082913529 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08206166 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.071089044 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075526168 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105302568 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077930252 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077991524 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077056495 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128944486 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180162774 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09813448 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09723457 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066328346 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079403766 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115477691 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125417732 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.065563471 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066323429 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.124214683 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09473434 seconds)
  done (took 4.585782303 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.001252406 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.14398007 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090570681 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.135141213 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065588594 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.1088425 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065219622 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.081647742 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209554143 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.46659715 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.594516495 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111807877 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104343176 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067606909 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068432086 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066986148 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.501938838 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09707926 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108068193 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082310824 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071520215 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069598787 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363798314 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068338816 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.06391761 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068508252 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.111447223 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057617801 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125287235 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068157844 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.944104613 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.126553721 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06667379 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100704058 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161781767 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088069712 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273691222 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068225094 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064446739 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153880981 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070957048 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067012649 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.084164168 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103556205 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113109338 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065983807 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067030017 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165029279 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064894506 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080550978 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.637609895 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152493012 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076863417 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.064201903 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.254104505 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08816427 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069389537 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064322685 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.064623023 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.064247726 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183987355 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.130309452 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068397064 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066682395 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068686283 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06937429 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.389579133 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066088579 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.914158432 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069672118 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077744818 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06936795 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070024216 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072847987 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073556032 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087642494 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066709086 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075543384 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.0661538 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06672175 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065273714 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067422724 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08380421 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.379628388 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066947952 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068822576 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064924722 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.089470458 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097036274 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.067415206 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065893376 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100653579 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06829257 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065957992 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107420904 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066647226 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083955534 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069771422 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113147191 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067535805 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.195248139 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.067902254 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096187205 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070353296 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099044969 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079558168 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068238187 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.420632372 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065504254 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065244099 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068194263 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066081142 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067727611 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066335172 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080046202 seconds)
  done (took 21.206193561 seconds)
done (took 38.213280037 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235204791 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078444236 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073927203 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076822821 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074516845 seconds)
  done (took 1.771569371 seconds)
done (took 2.984103269 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122815981 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100766219 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065118821 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.097309216 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064524603 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.101906579 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101443088 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.082222278 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100706259 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064653223 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097716805 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064155896 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064393031 seconds)
  done (took 2.361387619 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084148551 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08365958 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070077538 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084060522 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063777702 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082857486 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0816056 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.089162459 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081654939 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073021228 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063918153 seconds)
  done (took 2.064820058 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083071971 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08487069 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069938186 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082526661 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063884289 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082593282 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081512243 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086383561 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081815747 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074284471 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064156474 seconds)
  done (took 2.056307413 seconds)
done (took 7.682369836 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078150193 seconds)
  done (took 1.271541014 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.59498431 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.108991219 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081701173 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111970155 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.189984791 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118858895 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.272054642 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087080563 seconds)
  done (took 8.941708332 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103466682 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.070179857 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.06997773 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068287955 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071806393 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070698839 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069488955 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068545386 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071301217 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068065963 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07182137 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072312695 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072115647 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.071404477 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068975623 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.069546099 seconds)
  done (took 2.42653536 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092124281 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.091643023 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073647334 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.075153838 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07182535 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071889523 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074643521 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073809727 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070600201 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071991418 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074958118 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.074111076 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071399127 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.06508852 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074215758 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075266627 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070768718 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073480902 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.07428763 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075268457 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074853817 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064573227 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070973825 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073830439 seconds)
  done (took 3.084838028 seconds)
done (took 16.926413389 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11510284 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.072175121 seconds)
  done (took 1.390545534 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081707944 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083805858 seconds)
  done (took 1.375993634 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082672362 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064969815 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090170931 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078003284 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066290723 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066278807 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088087476 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066386596 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065961494 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06609314 seconds)
  done (took 1.945759481 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067845356 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077985843 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069809683 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081300402 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073560235 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064193373 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071746419 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.06768277 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077783533 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.0630451 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071272489 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.0832665 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.071261901 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084820107 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071570438 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068492797 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070874446 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067021334 seconds)
  done (took 2.515782749 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064745109 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06673651 seconds)
  done (took 1.342962357 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.066698202 seconds)
    (2/7) benchmarking "second"...
    done (took 0.06336296 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067056134 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066577251 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063343653 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.06228649 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063232455 seconds)
  done (took 1.660658445 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383974906 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.113263823 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.310752684 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070859853 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081798524 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255869606 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065476218 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070123928 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070511068 seconds)
  done (took 2.675284506 seconds)
done (took 14.124565326 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080232649 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086276225 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095671137 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.373069604 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091460786 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.066166308 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11440527 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.187131952 seconds)
done (took 2.316172516 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213222723 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.637274056 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.401987381 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.204613406 seconds)
  done (took 2.461046888 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344234335 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.088423679 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059874138 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066581022 seconds)
  done (took 1.78403438 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066195383 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068816763 seconds)
  done (took 1.357790018 seconds)
done (took 7.037629645 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066092275 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066327921 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.083567924 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.062784011 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06371506 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065725629 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063400818 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063326343 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065580549 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066864011 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.068716056 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066353733 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065807034 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066370141 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063909157 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063692537 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066317339 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063547465 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063724708 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064240599 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.06621056 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066032808 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06372992 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063445592 seconds)
  done (took 2.837464404 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084154889 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066463433 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071606048 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071129659 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069143845 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070779585 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070656954 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065811287 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071432284 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068644714 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069160766 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069111498 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068090663 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069267484 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069155267 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06980488 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071178519 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066266801 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06832748 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069272296 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070866023 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065759228 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069050535 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070871561 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06902585 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070530034 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068525227 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066223674 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071317512 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068686851 seconds)
  done (took 3.320548136 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069886749 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062770563 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064171634 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070179225 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063277677 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.06499842 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063138086 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064079357 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064513073 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063524923 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064916885 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063531524 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063247043 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064193386 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064002682 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.06714467 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.079327637 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063839117 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063384282 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064216263 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.06731921 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063400192 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063899693 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063976425 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063725696 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063311352 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064209232 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063244796 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064204024 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063464172 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066678788 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06707879 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063393171 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.07052802 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067289112 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063087318 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067620296 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063443969 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064271712 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063354589 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063358196 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063557983 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063493788 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070503714 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063763906 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065207669 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063477072 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06498567 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.177062279 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.06568233 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065470217 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063620231 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065314396 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064920397 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067070836 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062912644 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063788946 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.06274093 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064172333 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062693162 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062973452 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.063035335 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.0656247 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063633647 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.078146373 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069974204 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063091479 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.06464175 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064317939 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065685164 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064760897 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076948321 seconds)
  done (took 6.044012481 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089752768 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086687992 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.064787745 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065071179 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06201388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063848144 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070032809 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064445912 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064951347 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.081713704 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064442021 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064775698 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064850399 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067142244 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063626337 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065224923 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071996695 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061399271 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063452772 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067295489 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064270472 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068980886 seconds)
  done (took 2.740808882 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.154971211 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070336759 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105367918 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.075217838 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069927424 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075454669 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.0696072 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06966039 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069361797 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067157559 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067425571 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069607534 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069696839 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066730096 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067562868 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067524092 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069956788 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067794452 seconds)
  done (took 2.609911299 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076301708 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065563687 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086457368 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066071707 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065593079 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068255423 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070197439 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073666086 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06816864 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065892403 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073989443 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068501151 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068268426 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065823299 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068197168 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06550795 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068074544 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065622909 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0735138 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069672316 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069934833 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073785144 seconds)
  done (took 2.775139834 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079338519 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068103527 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081391751 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068412967 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06188172 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063981365 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069828366 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065512764 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069341398 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067211929 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066006652 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064318519 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068461959 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065165314 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068128658 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065224131 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067483593 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065029842 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067686273 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061493603 seconds)
  done (took 2.594140606 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087167011 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.06893811 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067614199 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07584029 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067563645 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.06751028 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075134232 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067324104 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.067408424 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.088486769 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067626258 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067252777 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074837796 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071954506 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06709429 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074596154 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07462507 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07482687 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067505071 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067729046 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088154693 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067477892 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074924598 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067566105 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067220794 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067523037 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06769419 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072071844 seconds)
  done (took 3.254814327 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066387925 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066453197 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063386656 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063381669 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064489741 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063872552 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063703411 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063569684 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066299306 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063355454 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065765353 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065768492 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065869767 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066118294 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065602151 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066063281 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065986242 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064427065 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063471135 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063223163 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065651781 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065775935 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066246838 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063472679 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063254478 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065953667 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063143882 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063534229 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065714448 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063525817 seconds)
  done (took 3.18780813 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075482401 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073227122 seconds)
  done (took 1.394363635 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062820881 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079955269 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06325591 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070015613 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069728133 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066580319 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073620124 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069572837 seconds)
  done (took 1.797732567 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081377421 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077484226 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067662427 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07978588 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07663335 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083587808 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134873688 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067172825 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072878685 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064160725 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079740289 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065420464 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072877289 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066389817 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072054006 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073186978 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063633771 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072063498 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068503689 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064867653 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067578307 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075086494 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068703828 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061235993 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067398198 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088457957 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077370986 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065494996 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068973358 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073447931 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071917115 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059701696 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065992227 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066569468 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063947263 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075976111 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080742209 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068812724 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074577132 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066966124 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075367987 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060882626 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070798456 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072649065 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076702725 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066409868 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066218486 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.060890894 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063882372 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068698216 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061332917 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068931127 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060606436 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073083435 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069858147 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077777498 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.065100858 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06805575 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069193235 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06977513 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073138227 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.068393587 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06931604 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065990278 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076579373 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071006799 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074922175 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061251672 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060313146 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064426067 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075987198 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08913742 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072792805 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066759669 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067125742 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0635248 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069792937 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067437742 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07257072 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072441581 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066253052 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07126549 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073457485 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066614449 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068425358 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07405986 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064515625 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068888295 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.064785622 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083192394 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065302828 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063898541 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064220622 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076804774 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069743584 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06597881 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064329292 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073327867 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061042131 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066651011 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066719827 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067400909 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076605988 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070078646 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07012129 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073418288 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072619093 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065284999 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.067403194 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061633562 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065943787 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064253542 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07209464 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.058937098 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067491674 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065717644 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065327555 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.072920512 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.063240168 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.06523363 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072860397 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070379279 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.189180749 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063444113 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070066335 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066592371 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070281343 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074662654 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064883254 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061793869 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061454391 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070699904 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066335828 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070398 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070763713 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.06940871 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061029229 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064301853 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071710064 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075988487 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067905478 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067504139 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072906479 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068087883 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065851229 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073095786 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.070009175 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065898475 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072266127 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06727363 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062059623 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069678364 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069337974 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.065484199 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071078094 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.069150418 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068860555 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.06708236 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065098676 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073713472 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067457849 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06547958 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066476863 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065800142 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077227195 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068576746 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061556028 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063686505 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075041831 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.064376363 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066035293 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065546491 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069614145 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067736979 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064143059 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066614318 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069579896 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075698196 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070385732 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067195483 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072026244 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077892664 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065887829 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068920518 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065842583 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067695882 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067470494 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.075901886 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.072495953 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071307226 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.069467608 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.063227489 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071637288 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073679903 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065615118 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.064401651 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065577197 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070761511 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07222588 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070777276 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066366544 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064518235 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067167643 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069718022 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069224195 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06650883 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065360549 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072457197 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064727172 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072947055 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067047158 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076722494 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069800688 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.06130473 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069597548 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065160615 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072916927 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061480403 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064748306 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.065715513 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067241645 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066022771 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069511378 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060908978 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073519805 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074052817 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067171934 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065954678 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066020833 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073287206 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067398243 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070064348 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069175763 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071503275 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075649706 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064694927 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.06890471 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075615026 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064841225 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.059350428 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.070565004 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.063548614 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064129001 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064327211 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063762756 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068400734 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072391099 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.071921006 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.188258942 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070370991 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067211557 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067157026 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06213629 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072265018 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070438438 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.06834287 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074642166 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068204973 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067022996 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070724528 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066779567 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067665766 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.06753931 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070082993 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067982237 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068452981 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.067135892 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069739568 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067095738 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064720285 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069565125 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.067080243 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067396152 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072325946 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066976524 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067092591 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069561428 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067948753 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067793527 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067686038 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066645116 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070283382 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.0681852 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067125147 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069308618 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062089905 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074086668 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065621789 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075198988 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067054553 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06376496 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073940109 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069199824 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071670181 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.06785918 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067364548 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068256183 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066326221 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07011088 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074494628 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064607718 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078308156 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074467093 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067946329 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.069728169 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066726656 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068021719 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.066175435 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067686597 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06742215 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.067170624 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067925436 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071376765 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.070119411 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06749418 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069459071 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067653408 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067383261 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.06789285 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061099556 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066592972 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.066448468 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066595619 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075863679 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066941495 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066837808 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065315266 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067315838 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065501854 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06268006 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073802844 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074420705 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066431348 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07321192 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065632975 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068125186 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076665665 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060090237 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064292265 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063650151 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064137586 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073314747 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066595642 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075584098 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066334494 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065692788 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063252518 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066652911 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.065189145 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060714292 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063754361 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069751032 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065161647 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065494103 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066301776 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068846833 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067385669 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07598858 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065625907 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067467778 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066326886 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062792139 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065138524 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064558235 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.06741525 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065769862 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.063016309 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062414372 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064862384 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.065910582 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.066525663 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067533278 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.066310215 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071484962 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064967077 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.068053358 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067289297 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059820504 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.199820342 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067385774 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066401776 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066775224 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071054913 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071179543 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068081365 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076127566 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066886017 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068035625 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067288163 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064419141 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065866099 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066990728 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.06638848 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066709763 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.067893631 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074516133 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.064884688 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070454567 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067058555 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067360707 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.0736636 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.06810987 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070155693 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072583216 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067143852 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068425688 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074886754 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07093996 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07040843 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067257155 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068493475 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073191309 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065474952 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074051998 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067560895 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067777455 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.0687766 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065280128 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067121114 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066832395 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066423792 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073391456 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067649628 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066366913 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.06646111 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064829054 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068513243 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.06906267 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074184501 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069339516 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069618717 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061215862 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063877116 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06758935 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065805287 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068605662 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069215789 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072884208 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069573917 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066590063 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065476331 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075710225 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072069954 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070471926 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.06515878 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.069687644 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068092293 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069148988 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067791063 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067037635 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067969995 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070386044 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067616151 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.066160723 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073507823 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069571611 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067026646 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067780791 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066914197 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066530956 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061413075 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.066157599 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068588647 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071188389 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.06842774 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066014227 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07637337 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.0640272 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066615338 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069251212 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065570991 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070989878 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061295935 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067580151 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067122471 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066832308 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061375059 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06593154 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064732659 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.06868624 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065758052 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061352822 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076749099 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075560782 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069536647 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065591631 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065296377 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061542591 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06155899 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.065889016 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067944831 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067750783 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.076289896 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065459087 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065162834 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.060822919 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065312084 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068573606 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.068350505 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.062237962 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.060661684 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065471168 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06827791 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.071248872 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063785855 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064937845 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068286951 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.067418123 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.194647886 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071908463 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063415986 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071120159 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079577617 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067621853 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068573498 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073699972 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074904772 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068072694 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062017846 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066792776 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.070438474 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067715599 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068191939 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067526845 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082369926 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069853553 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.06646291 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.065243369 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069842528 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066357989 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.075191643 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068537593 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067164804 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070862232 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068986615 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075365651 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070105427 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074244956 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.07044651 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070080647 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.066057078 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067342735 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064549572 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065738893 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067829816 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067246672 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071507697 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074407431 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066343623 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076739433 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076108234 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068856103 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063657065 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066083124 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066277028 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062111304 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067836722 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.064936392 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064336687 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06469989 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065425157 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068376113 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07160133 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068001663 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067006671 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067198677 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060828903 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068314985 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069264793 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068555308 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06362756 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066589687 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06723188 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071306346 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069751967 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064243017 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.068548087 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068224366 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067360573 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061483388 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072871655 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065461324 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.067914376 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065348947 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065984014 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066511606 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069577803 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070542313 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067173277 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.06839171 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070274641 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068192584 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063112113 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063208525 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071654702 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063934787 seconds)
  done (took 42.584183533 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101182531 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063073315 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061075274 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062394414 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073170703 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062236379 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.061405565 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.062337663 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.062640396 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064681069 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061447126 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061741819 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069810595 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077196057 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072714743 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066138687 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061502897 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.062346935 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062067355 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062774414 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069771596 seconds)
  done (took 2.733628298 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073181601 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.076552508 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074737215 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.082296104 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070171521 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.069711883 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074991211 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070283455 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077717861 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072482459 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077907961 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069836387 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071770769 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071687504 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072252761 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070203415 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077807641 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070751275 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070191542 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07471951 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069883901 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075260246 seconds)
  done (took 2.9292736 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067138442 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065917716 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068012011 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061185208 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.065806719 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061039996 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.068897008 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063806138 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068764882 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064992714 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065075879 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064865011 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067515786 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.06088899 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066227152 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063531586 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106844038 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069012424 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065868917 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066762973 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.060847339 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067824672 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.060913607 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061765172 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065090591 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.068731327 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066204538 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.0636604 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066247465 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.064660276 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065640431 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063400567 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067521607 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066534974 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064726471 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.064377182 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065558923 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065640078 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.060682258 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063632032 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066025066 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.06105786 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066131957 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06703364 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063550351 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06347046 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067290775 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065556347 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060429121 seconds)
  done (took 4.542740431 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.078767516 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.108763521 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067948749 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.09062755 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079215245 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072344018 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069534611 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089184736 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063236652 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064395038 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080489499 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078019026 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064989155 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.069599914 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072008805 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.064870534 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066162926 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064037029 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.068573738 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064495094 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069060537 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.0718438 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079538787 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077638687 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069133032 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064256266 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064292425 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069193681 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.077805059 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069385301 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069828774 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.07016081 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080132209 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.070210056 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064173411 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06760062 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080480856 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065562671 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.066978896 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.062681077 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067170101 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069326645 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071707316 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.080823435 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065347466 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.06959469 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065125743 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062155365 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077118472 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067507504 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073147607 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.0790783 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069104768 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065270297 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069717386 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081701338 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.064928867 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063827243 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068279585 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076679738 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.062924675 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068455652 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.077751679 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067064905 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07180258 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078129072 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.069985765 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068548804 seconds)
  done (took 6.317260098 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074948181 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095040621 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083596149 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.08296076 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075524099 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075243473 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075195081 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075147794 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075280489 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079563127 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075650271 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114273042 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070637914 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07749314 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075699885 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075157792 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075000272 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07575943 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075582154 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07482119 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075541162 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082336928 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.07507336 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082597822 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080037869 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070491949 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075034209 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.075127426 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082528193 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075247802 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087795579 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075086077 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075317672 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082520156 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079387158 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074454446 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064986062 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074538498 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075204935 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075083725 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070129267 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082153292 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074387224 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070503611 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074622173 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074371182 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082349979 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079497887 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077046033 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.079300316 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.075663806 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082403188 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074619247 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.074925397 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082773739 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085186222 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0827177 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083217768 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075101651 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082609684 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082207556 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08536677 seconds)
  done (took 6.188796699 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082651069 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073626797 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.081748267 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.060982283 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063688522 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071405533 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063992317 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064084446 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074154779 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.073479031 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076095713 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071298584 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074199021 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075760266 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071554872 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074267563 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071077614 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071529741 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073391271 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07132465 seconds)
  done (took 2.776441563 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074304787 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08257755 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066740837 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071321797 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068909755 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071060928 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068465678 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068926385 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066805567 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069591563 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075884118 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075386958 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066750168 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070883675 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075304623 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.070885943 seconds)
  done (took 2.47431315 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083618385 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072778154 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080232573 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066821615 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.066486606 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062636957 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065288478 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061052911 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062080643 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077696038 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065844146 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.075687733 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065667974 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064893745 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062311824 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070962483 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062106827 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.062474915 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065234369 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077691515 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069269667 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064452974 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.069318407 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065463773 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068169369 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.069555123 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.064818117 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.065708018 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.062722698 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065582443 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.06831245 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069134877 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062549717 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063941219 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064464543 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.062725586 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065620456 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065633195 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070811201 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06579889 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063937036 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067296057 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065490559 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066629702 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061805848 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.065777179 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062473488 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067832707 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063363636 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.068356151 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065798732 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067790321 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066435354 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072585767 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068441999 seconds)
  done (took 5.020018789 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078904034 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070083291 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061515647 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064129866 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069209123 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06694439 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069756309 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067417588 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067635198 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063955737 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066866067 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.069095793 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067056656 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069298031 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067343761 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069477586 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061835302 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067536953 seconds)
  done (took 2.559051268 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.070929725 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06623787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073659128 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066019434 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065340921 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068820609 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061511788 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064516467 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064551363 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066023935 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066013953 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068426905 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064339668 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068278412 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065947373 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065628556 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068728873 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064704514 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065307235 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061791065 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068119943 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064272645 seconds)
  done (took 2.795900191 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094303674 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.083225173 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.140140479 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078976626 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.084189397 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071020819 seconds)
  done (took 1.888360256 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091494317 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100867098 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066345948 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068846339 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075365708 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069551178 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069155493 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069631933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077789161 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075262776 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069343753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077984977 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077806083 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077264589 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07544901 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075610163 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069433993 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069230485 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065400193 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082970665 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069557489 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077465278 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069680932 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069363339 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069458 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0772042 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077598422 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075368786 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069162893 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077627274 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075352154 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069768741 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077946644 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075866867 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068575476 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077610817 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069607748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083222062 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075649311 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077615066 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068853743 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075236629 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078266847 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07427009 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078073896 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069843596 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074222924 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069944675 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070234073 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085497938 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075625313 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077248467 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077527677 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07831605 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080969407 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085107258 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075698515 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076932764 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075337626 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075420363 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077145573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075042729 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077201106 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075923492 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075786869 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076964579 seconds)
  done (took 6.307419568 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103037027 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.067260047 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070270261 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076233328 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077357001 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069826704 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069791714 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070005365 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069640011 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.066618916 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108242471 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069939437 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077298626 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077210941 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070320652 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06991463 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069841954 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077542993 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066720469 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085889726 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069908724 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077077297 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076961681 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077446072 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076280681 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075593006 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070067813 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070747028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069570145 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069727188 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07447021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069959502 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076800515 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066883347 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077019707 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070458048 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06955589 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074617419 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069396219 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075295262 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076920705 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082765668 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069381846 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070406271 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075413202 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069431353 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069582316 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066715456 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0700092 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066198814 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075911026 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075427276 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075915377 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.0770099 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070041738 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069728337 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070079116 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069919842 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070232453 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075687394 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077467528 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070108412 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086018275 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069780918 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070197789 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077517845 seconds)
  done (took 6.220327952 seconds)
done (took 129.114985992 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.186642775 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.165876448 seconds)
  done (took 1.683113854 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068876991 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098251496 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077225397 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12804994 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066848506 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.101150628 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099348992 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077692329 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.06563181 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065965446 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066346876 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068318758 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130975619 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066121942 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065915539 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068276165 seconds)
  done (took 2.658420967 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.09918455 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.160740382 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101908409 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065307109 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099148544 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072832721 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064747948 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075263949 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070947311 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065280906 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072983429 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070381421 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064660657 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070583081 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.071135817 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072633668 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065662987 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072432737 seconds)
  done (took 2.782081895 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098825621 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091323798 seconds)
  done (took 1.540371302 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156567 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.110781151 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146077155 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350344302 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164251827 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148409315 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143960286 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.142763032 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115874393 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.139411194 seconds)
  done (took 2.965075138 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098929138 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.154245227 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.2659171 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.117287177 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072518691 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093862599 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.118284252 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.077977651 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.079931738 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.07983821 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079584129 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076147584 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098972394 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072889979 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073542111 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075755737 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.102871623 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072711137 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073763928 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.075320433 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099784249 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065833258 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072940811 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072728594 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.077271217 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077264481 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.06543024 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065183348 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.075343261 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074677002 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076200288 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091986533 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076679671 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105245807 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070769154 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106236874 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076256759 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072482164 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074000296 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.073597384 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077308504 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077530212 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.072626492 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.076046087 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065535604 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075969213 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065386997 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065424193 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.076746003 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066507874 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.076967085 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.075823084 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105183709 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066544394 seconds)
  done (took 5.945429922 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102033116 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.104607296 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072068478 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112279735 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103628782 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072562306 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.103324649 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.095460667 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.103979848 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069770442 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06818703 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070654845 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081571126 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082472833 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.11448736 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106394338 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073570591 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071059592 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.105586342 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.104977511 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068407489 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096466551 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090666297 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.102821786 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067083491 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070286975 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067838587 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070233372 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076619206 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079471211 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069482207 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080236507 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08450544 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078428331 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067056128 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06755087 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068686437 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079559041 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079039957 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078330875 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077462287 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067248803 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068033013 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.06928127 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070041255 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067511238 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078675852 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079833348 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078204768 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06887784 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069896715 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067710779 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06931211 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079735524 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077126061 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080685535 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07934741 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068177951 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06876023 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072595913 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080066653 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079132107 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078977045 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068932769 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078344716 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068505886 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079557617 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08473078 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067939434 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069490331 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068470684 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06898254 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069592319 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077296864 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077803037 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069291009 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069219329 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068281138 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.079751492 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077820179 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067953746 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076415823 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067152043 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068157633 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069711763 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069987836 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077828579 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079698924 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069875309 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068152175 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06935917 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06847 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067708948 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076609749 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079630575 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079290059 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077570542 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068629776 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076972755 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077060225 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06897232 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077839011 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067654989 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069557464 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068938093 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076650821 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075403647 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077397999 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.197498626 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069081726 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079152776 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08145103 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069730896 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078481436 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080813892 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079326782 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068662029 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081563869 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069100285 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080359196 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070135951 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079768971 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069328771 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079866312 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068576876 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068291561 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068729942 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07893671 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072584619 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06900665 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070544878 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.07000193 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.07942536 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082410921 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070800217 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078752783 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079061644 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070234723 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078666883 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068529892 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07911546 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069958708 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069521617 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067153811 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081569496 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068366801 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068649393 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069054962 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.0803812 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068636447 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081066962 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078897523 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069125436 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080896034 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079583325 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077236797 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080337026 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070495149 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.06862152 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067745831 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069261399 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078165187 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080290923 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071360028 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068868943 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07767891 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079639451 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067773115 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078556323 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07828074 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078160417 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069390787 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069585596 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080921564 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080301628 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.077995621 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078096957 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07870975 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068496633 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077937282 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077972032 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068435221 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084360088 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067698904 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082287194 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078666615 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076108172 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078270295 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079583975 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079740628 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.07980519 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082523777 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067697024 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068262064 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079131943 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068112791 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069215868 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.077818148 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069341139 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069373961 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083496317 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068609283 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079665402 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068718371 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078442789 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067518183 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069590773 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081946243 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067427038 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068417015 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077778959 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.068305474 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076080543 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.078468449 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.076502145 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067420368 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068852942 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207757344 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079180761 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069482701 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068775085 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070725452 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078416439 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.077435652 seconds)
  done (took 18.61183593 seconds)
done (took 37.53944852 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212685849 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153034842 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.183516205 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119579557 seconds)
  done (took 2.12180491 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.117769065 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101583178 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093294833 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065600793 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099223191 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065382742 seconds)
  done (took 1.929502487 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.312972717 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.211765372 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.188857289 seconds)
  done (took 2.097694778 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202164484 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.189096989 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.42268852 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.262903622 seconds)
  done (took 2.57241587 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144576118 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.089265597 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.06774995 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083979976 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133779551 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.161255822 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.10124301 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.125923501 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079083508 seconds)
  done (took 2.425331442 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14966895 seconds)
done (took 12.690324534 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.228281163 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089893469 seconds)
    (3/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.192429114 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.147836907 seconds)
    (5/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076564348 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.07274692 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.1228763 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091934562 seconds)
    (9/309) benchmarking ("sort", Float64, false)...
    done (took 0.131648306 seconds)
    (10/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.184116377 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078714291 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074885302 seconds)
    (13/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.191179301 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.205834927 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.230620554 seconds)
    (16/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.134882986 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.105375091 seconds)
    (18/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.154287466 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073206474 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076039391 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.090419594 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183739956 seconds)
    (23/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077270276 seconds)
    (24/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075363539 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.155105571 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076803895 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.183259943 seconds)
    (28/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069947328 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.20400368 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071900193 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07400831 seconds)
    (32/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.177190044 seconds)
    (33/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.174798557 seconds)
    (34/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.154192452 seconds)
    (35/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.200342627 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.094456063 seconds)
    (37/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.110486173 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.113974349 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.07461426 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.152018761 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.167468759 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173376891 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073416645 seconds)
    (44/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073739907 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.16033492 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.085865784 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08817156 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088791073 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099720429 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.11086476 seconds)
    (51/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077642475 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067202796 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071836368 seconds)
    (54/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.051507431 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.177748155 seconds)
    (56/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.20527223 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.06685027 seconds)
    (58/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.178923311 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091221719 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076429935 seconds)
    (61/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.159135759 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080596388 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.093429165 seconds)
    (64/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074189011 seconds)
    (65/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.06798134 seconds)
    (66/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.11514697 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.072533383 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.144952026 seconds)
    (69/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.162460495 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.076987351 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.147771913 seconds)
    (72/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051387191 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.076458927 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 0.065765409 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.165336661 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.198477098 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.194424278 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069053094 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052496963 seconds)
    (80/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.120482056 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.051787825 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.072153379 seconds)
    (83/309) benchmarking ("sort", Int8, false)...
    done (took 0.139819664 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.064511801 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.072909114 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.076356224 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.050408298 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.267703918 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.147493056 seconds)
    (90/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073185934 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.201002201 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.14209418 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095495127 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.157388382 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.158368153 seconds)
    (96/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.051649748 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.069765255 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091933922 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.090638756 seconds)
    (100/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.051129917 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072602215 seconds)
    (102/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.100745121 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.053383953 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.051761032 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096083965 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.086729736 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183897935 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111480588 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053665024 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.102797622 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069593068 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.146339308 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 0.132863424 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.094353985 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.067763589 seconds)
    (116/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051379188 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184020692 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078028596 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 0.137913879 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075044733 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.098002111 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.140040568 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.086083941 seconds)
    (124/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052187618 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075334137 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07235073 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.081430713 seconds)
    (128/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077236561 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.091877502 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072288894 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072709062 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.109147468 seconds)
    (133/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.205711432 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.156785332 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.153353396 seconds)
    (136/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.0515421 seconds)
    (137/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.050835769 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05122467 seconds)
    (139/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.067368953 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.051224973 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067677394 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.087777555 seconds)
    (143/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120642729 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.066763388 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.076547345 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.191769965 seconds)
    (147/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.061117385 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072400183 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.052825727 seconds)
    (150/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071088904 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065335268 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.07339972 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.18054134 seconds)
    (154/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.160008879 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.080145048 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050762774 seconds)
    (157/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.052755659 seconds)
    (158/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069660719 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.143610932 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089422121 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.309182678 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081693561 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073958874 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.172450255 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068077559 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.076706984 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052981238 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071741297 seconds)
    (169/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.082543523 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.076461495 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066697615 seconds)
    (172/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.051736802 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.066324966 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.076587787 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090832815 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.144056484 seconds)
    (177/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051383623 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.074645874 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087430999 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.119785177 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.10542912 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069417 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063652857 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074801513 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050983231 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.071778776 seconds)
    (187/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.060801447 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071512573 seconds)
    (189/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.071103564 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07304213 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.111552624 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089762296 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050548337 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073701772 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050382102 seconds)
    (196/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061013807 seconds)
    (197/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075960119 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.067724454 seconds)
    (199/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051736116 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.064557173 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052572773 seconds)
    (202/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.063892109 seconds)
    (203/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.303037339 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06613347 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.06800656 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066521567 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.092452137 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.072722009 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075612358 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075436006 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.116434051 seconds)
    (212/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051613076 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088745329 seconds)
    (214/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086838304 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.139761512 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.052064812 seconds)
    (217/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051515276 seconds)
    (218/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052775055 seconds)
    (219/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.066555356 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.051416565 seconds)
    (221/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.051162262 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071519834 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.073845284 seconds)
    (224/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052164839 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.051787946 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.051339447 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093223683 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064146538 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052585561 seconds)
    (230/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080584926 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067389486 seconds)
    (232/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.069753814 seconds)
    (233/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.067303963 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.081079627 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140660357 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072348073 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066685666 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050866892 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12558892 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129178794 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066136293 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089692075 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.154020643 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051097252 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.19485987 seconds)
    (246/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072909872 seconds)
    (247/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.071058672 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.090904889 seconds)
    (249/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.063977194 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091536137 seconds)
    (251/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.074463573 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066090173 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.06608045 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.065721765 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065839253 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.052041053 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065644014 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.072098767 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065611434 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.133981053 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068135212 seconds)
    (262/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.066576846 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065511028 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.074608413 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065903214 seconds)
    (266/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.051917866 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.110456068 seconds)
    (268/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069606831 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.074347525 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051079876 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082369607 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.06584152 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140668685 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066672329 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109208303 seconds)
    (276/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050298182 seconds)
    (277/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.065674477 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.073423786 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.065091837 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072311631 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064098531 seconds)
    (282/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.06526536 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.066917612 seconds)
    (284/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.05141434 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064073819 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.052133897 seconds)
    (287/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.052910658 seconds)
    (288/309) benchmarking ("sort", BigInt, false)...
    done (took 0.185892454 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.096597208 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072907756 seconds)
    (291/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052217286 seconds)
    (292/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.071242861 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065577867 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065482418 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052439241 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071295841 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072416787 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.051628192 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051014477 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.183279683 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.177346562 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051570052 seconds)
    (303/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.063719696 seconds)
    (304/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.051286984 seconds)
    (305/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052389183 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065944265 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.071296875 seconds)
    (308/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066371824 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.052281724 seconds)
  done (took 30.997104873 seconds)
done (took 32.394727355 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083274794 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092146607 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.074587707 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093235536 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.080785836 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.075748757 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.072271621 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078310919 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.080004167 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081727121 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.078606373 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.05424192 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074074038 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074240874 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075352285 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091246758 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.079127806 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073623663 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073109323 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064721262 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073489164 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065191681 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067428521 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054267213 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078499619 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072501241 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.072481132 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.074259724 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065469657 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06568654 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.069189892 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.073470241 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065524347 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078511403 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.072261984 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.073046619 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.07504038 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.076817008 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067463172 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065554219 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.074582828 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065553249 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072826356 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.073836654 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.072113901 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.071361884 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.073853082 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078440394 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091647161 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067486772 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.074868414 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076231149 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075797463 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07266461 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06935968 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072936109 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.0708341 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091493973 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073660133 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067709578 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.074602323 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074521196 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.071211286 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073237118 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072753221 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074977943 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.075504322 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071283925 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074651305 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071061408 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065236932 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072747785 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069051765 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065573722 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076006039 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077102679 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06486187 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071284869 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072699642 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071232583 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.064694208 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067227966 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067199666 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071891741 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067138824 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.053840518 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069102108 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071958631 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06434216 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073166228 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07271507 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.072567444 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066990408 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075607213 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064530149 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070652146 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065834643 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065503556 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067433013 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069396829 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065293156 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067174616 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074481293 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066635617 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071301924 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078432393 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.06520538 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071903655 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.064717862 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064407584 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079438216 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.074890232 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.065748923 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067675201 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.064637439 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073058331 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.064715357 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065136873 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.065219299 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.065327707 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071147612 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067667066 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067208473 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072981622 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.07840644 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.064634205 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06804641 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066372227 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064153817 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07007551 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.065004858 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064448192 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.066191329 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.060990839 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066241089 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065056257 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071985536 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.066293591 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.206252007 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.0680681 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.07583735 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071158676 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072431345 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072228462 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065010992 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059849457 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068353883 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067634686 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068245529 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.06654818 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06731145 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.066150608 seconds)
done (took 12.444002561 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066308796 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.140643707 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.096882525 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095963798 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086518916 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067067609 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076176059 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.101784714 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067659895 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.10210414 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087925983 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086667166 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114884516 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064823082 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065974335 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069981804 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067377565 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.08188463 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101566234 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087361606 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.115710497 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065376958 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092798942 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090010541 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088566594 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103975151 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069571927 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069864985 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069820928 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093476874 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088627625 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069841971 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067079313 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099048416 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094116808 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083990932 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066154262 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083586281 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.066613757 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066211762 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067494988 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.098838524 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080813086 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081538475 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070315584 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069647147 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068010155 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.084417858 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090070199 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079367391 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086595819 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101824621 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06909626 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065702507 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064337665 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086693943 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065406498 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069630202 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066118161 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069366421 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065924665 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069879359 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.080953874 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.080966911 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.070408831 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.080141269 seconds)
  done (took 6.815690704 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083617839 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091512459 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.084555264 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084207143 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066293723 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066517788 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066248653 seconds)
  done (took 2.032103274 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.066970935 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089569655 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089352972 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089856464 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.081760575 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088088526 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076127861 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066887951 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.087549973 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067868236 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087980327 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100957531 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070027267 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074144866 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091225558 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066393768 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.090778676 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066783081 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069884333 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090906295 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068843461 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.095426317 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.069495357 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066917191 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081160184 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066979704 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.11433863 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071123832 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068255388 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069224333 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063940899 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.106362574 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079857929 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.074426421 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066069418 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080605408 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081205593 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06508508 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082708611 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.074584244 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08009519 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066663998 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067333211 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064561191 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070376777 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077088187 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067217998 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.066889145 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.068680671 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086052932 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067040448 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.079918054 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.069422629 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072384045 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068211473 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073538597 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076720778 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067276135 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08678267 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067900411 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083544417 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083689117 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080300649 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083185201 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068991952 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080344701 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080229509 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069223914 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068216822 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069881637 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.08263585 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064637399 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.06827727 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077211066 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068260354 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.08944457 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090143593 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068419771 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.080408056 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066786039 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066307799 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.066829549 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089643762 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071904202 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06645635 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070511592 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069603772 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065045601 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065607108 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070463284 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064441939 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.067888765 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.069547962 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069063891 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068936235 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083286834 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.068626311 seconds)
  done (took 8.802224068 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068913994 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068121165 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069444523 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067934465 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.067899034 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067869728 seconds)
  done (took 1.923313988 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.093290853 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.068936956 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081204115 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071957394 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105515922 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087605533 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.087555998 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077701797 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083283034 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.078495744 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086863345 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088297213 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.092441528 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072546197 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.08630809 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071623651 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087028045 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075115454 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.07807858 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072475215 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.086726799 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072065671 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072520541 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082103877 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075894953 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071928626 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.067322683 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078568704 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078273162 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078209571 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072343523 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.075959749 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070532452 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077864694 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.086906386 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070522796 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071497043 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076882454 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071693535 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076069569 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.08801107 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072452102 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073813188 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076788816 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.078114124 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070868318 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077541792 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074644088 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086162863 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076561585 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076861949 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070985154 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075485139 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076570578 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070866727 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078117163 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.076518994 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.086391716 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.071791743 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.07019222 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068588004 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075746261 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077526533 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075968156 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078249355 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.076845345 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070873906 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072779336 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0724971 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071537016 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.076781123 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068591806 seconds)
  done (took 7.065945784 seconds)
done (took 28.117135459 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.53293526 seconds)
  done (took 2.014532752 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.614570079 seconds)
  done (took 2.120012801 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.464170162 seconds)
  done (took 7.963846249 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.399663168 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.523449152 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.719616455 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.132139143 seconds)
  done (took 3.316781352 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.70615734 seconds)
  done (took 2.216939686 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.214444213 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.201073325 seconds)
  done (took 1.939524991 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.375627273 seconds)
  done (took 1.877136629 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.132138659 seconds)
  done (took 2.636307747 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.256358982 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174966939 seconds)
  done (took 1.939738138 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.47303295 seconds)
  done (took 1.980105652 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.863788874 seconds)
  done (took 6.373373268 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.210273253 seconds)
  done (took 1.762369913 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239712405 seconds)
  done (took 1.7479293 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.716157289 seconds)
  done (took 3.224625111 seconds)
done (took 42.622131415 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.080686648 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081842648 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081517865 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079032213 seconds)
  done (took 1.818275719 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077433761 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.07342929 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076653315 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072319189 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.07769425 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07333458 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.074451555 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075583238 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.07306509 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073660456 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073372673 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073181808 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.075144233 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074894285 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.071401507 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07563988 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.076504944 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073055215 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.076067334 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07376832 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.071041404 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.075287827 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.075414747 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072260657 seconds)
  done (took 3.294776556 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078188316 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073183535 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075655938 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072192242 seconds)
  done (took 1.81520862 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078800547 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.095820856 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089572298 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078641645 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.093235428 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086920384 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.069391335 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.069225906 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070815467 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078193836 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.06873157 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096457662 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08891207 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078202471 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080079809 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.066275103 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.06854614 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.08815718 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078177593 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078940594 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.070594597 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.078031859 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068774136 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.088493103 seconds)
  done (took 3.417887029 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086702149 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105334384 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081552081 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090528936 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.092024505 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065861809 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087940373 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091324288 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.12758941 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.065748371 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.070813482 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065611939 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.073260286 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065429956 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.081755193 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10776958 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.111696379 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069393102 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.097464098 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066121957 seconds)
  done (took 3.22484426 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.07368895 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070020922 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066536568 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069558313 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077770102 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072894835 seconds)
  done (took 1.952708277 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068613852 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.067831282 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068351891 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.06728598 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073055882 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067452214 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066745904 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06792227 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.067993241 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.067846718 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06716756 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.066397028 seconds)
  done (took 2.334262496 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20254232 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.069249987 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07021978 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.0667841 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070872473 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0670294 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081078006 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.068343462 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092295592 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.067156462 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066846911 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068918953 seconds)
  done (took 2.51046826 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208438475 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076436193 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240149973 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150913603 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111666067 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116537032 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112523565 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114777032 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142032785 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100926668 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168868154 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168035694 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108344803 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137657802 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.089480824 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101439972 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154909018 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163375255 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105807992 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168207662 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146341998 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126729596 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152764267 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102083765 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106268852 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12247742 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.071917627 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081556954 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170778616 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134097756 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144404532 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111430642 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092268354 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177951488 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172519091 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141139441 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147444004 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084282869 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105701752 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13427653 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199146782 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088285963 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160923772 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108665974 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080244913 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131077934 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116982697 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118762921 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104847232 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089205241 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14078673 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176912088 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.132074088 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085684849 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120674574 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110669485 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.110955815 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110163366 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175994616 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15254177 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121007808 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070456197 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104141542 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145385697 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128255616 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.103713191 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.117564361 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086896892 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128463319 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148376166 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115305081 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136758171 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111532406 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08504946 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114408579 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134125649 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120332853 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151244587 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117889062 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.07057749 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117961832 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09634385 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077434467 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141299745 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072812195 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167057031 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095300286 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105118989 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.119622924 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104679354 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104719697 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149783632 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137660334 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099884204 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.064219991 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.35083125 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.125631511 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149481559 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089815827 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112432733 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120920125 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080506426 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141598467 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077627911 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127627724 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079563607 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130451509 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133088045 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078740886 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127200508 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106166991 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104308889 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135388465 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164616792 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089503426 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083320729 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17238877 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124987197 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.105311967 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145796773 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15913245 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103434924 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101983944 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151274604 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180969584 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090878621 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165030935 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107719625 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084274085 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088410299 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1242489 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112624434 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.124828634 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082280696 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11843024 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169474746 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.07539726 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096189086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134363395 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079359876 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081249577 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105846066 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105419354 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.096935129 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099723842 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102770789 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1363461 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123770458 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106091501 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124872961 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098927865 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.3177898 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088653719 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102636206 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105135185 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070444462 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136547991 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158693193 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080506423 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165405451 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124179942 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116343164 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120591667 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08403702 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141718966 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08003524 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070482483 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14554751 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111106687 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110283653 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152153018 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116974842 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126044257 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.11844269 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133330333 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1313962 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.131349916 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106506089 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089338764 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112799298 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127436599 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.073529884 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090505534 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080374329 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104886803 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096268146 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083317731 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141884035 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12480895 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110096312 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112936775 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097125161 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148995371 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076632258 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128728868 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.121122456 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096039096 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.154532732 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154654536 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131356154 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099914851 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137801216 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070639613 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074060866 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088590621 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12349339 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082479989 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083292973 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.263066856 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148703096 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130456781 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137361251 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124260448 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121598861 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158851293 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070706706 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118216394 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148612863 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121636379 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.106394671 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091192619 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09912868 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145327117 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107732138 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183347262 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117500362 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124940121 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154465634 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101855671 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080252094 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104024248 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136332653 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104427191 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145135086 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100402422 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088989033 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111324858 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07495056 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099447748 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127963319 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119279868 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135973916 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.115989331 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13325082 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078250405 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116313339 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122014305 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122906244 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064576908 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121437662 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163514103 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095409194 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120134737 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153512466 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079367865 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134593519 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17565852 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146918397 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085962302 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.253827883 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120157697 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130167981 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121607708 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142407551 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108013227 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138661483 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110839052 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087314859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088577981 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09770268 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106181875 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095965385 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106940259 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.11407754 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.0960022 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134163088 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104934886 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111228004 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119385295 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.098337655 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090981522 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096600278 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177431963 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119103345 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171408968 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100408247 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.145009227 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164211542 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075147811 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079633592 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.078056234 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140898299 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084628908 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131279162 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.10793062 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11787955 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124681623 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143341028 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096006224 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068783451 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109791509 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133827736 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12523831 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099128855 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.104003725 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16483006 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.102271339 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079789848 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114802692 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117123042 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103534895 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172058674 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.062184453 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106351315 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07652174 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080549973 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128517782 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296912042 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.081825683 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104235143 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12080868 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112829344 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130098597 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100489906 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112100445 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12693754 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151074344 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129050535 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.08975431 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112552079 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129445147 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158538677 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106373437 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097204899 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174208366 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154028828 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.161550218 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088465621 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115081254 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115418719 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109616862 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139412374 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084288957 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164312885 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083175444 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136949267 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103801273 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089437017 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12965859 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.108571187 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088042491 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149065905 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118035074 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083409704 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078453914 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118289442 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120473209 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106692896 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076529906 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13987549 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074067398 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132992698 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161666702 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080986531 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107999996 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096797264 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.0795487 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106234982 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10201054 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087272497 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099604641 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.318778492 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089514027 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151651555 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134319461 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114109794 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136455744 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102943974 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640662816 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078404135 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154059628 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117875994 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175457159 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10115247 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119889309 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111008942 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122887189 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145459798 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104424882 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.180678347 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132623453 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.116449787 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080691165 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102246068 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104514731 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088100536 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108590677 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114155296 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115638773 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093053922 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115840521 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12444915 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082471523 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096565235 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157798224 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11718438 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144527322 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141847094 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.086411955 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118586108 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138621283 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080383906 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121642793 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154223467 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106428611 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099461485 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081090197 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.100237226 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159378798 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.07376089 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159005441 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120278316 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254149738 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114830259 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114240974 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132299563 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108503589 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122907101 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093585839 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111294921 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114823164 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082848781 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077624997 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105499846 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11254784 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100204279 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098172705 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100142254 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154023113 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.073052969 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099110138 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115593855 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144641561 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174395952 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.091429707 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083399759 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118821966 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114359663 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.112961428 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122487873 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079376282 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08224525 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081330346 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.078766739 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10985463 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114030634 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115388627 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11218399 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163956963 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083524241 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.230403994 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096252774 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105749197 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070394041 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078677284 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09651719 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098914107 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107980829 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110484029 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159843789 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096636394 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090520923 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092330852 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074518888 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083819968 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129833027 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110965139 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119494978 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099137107 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062810185 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107624704 seconds)
  done (took 59.012915263 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110509433 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082555679 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095361061 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145335725 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.123369025 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203403296 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154491377 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.188851342 seconds)
  done (took 2.778759752 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068750771 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.096196479 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.103479222 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.083453647 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066907217 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.069600245 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.232625769 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.082207736 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066981661 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.099351419 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079616567 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069770622 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.42917894 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.066925679 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.06807848 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062133866 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.06778657 seconds)
  done (took 3.461508368 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.390605072 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.61239885 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.351782087 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072974369 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.437877787 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087722526 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.118404171 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.132422243 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.073821302 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.537344119 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.400790029 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124733514 seconds)
  done (took 17.99994453 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075971014 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.069766688 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.084835808 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084582656 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073164653 seconds)
  done (took 2.052623684 seconds)
done (took 107.237760977 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.082034146 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.609897679 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053546952 seconds)
  done (took 2.355925845 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084505613 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085923699 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086192852 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08479412 seconds)
  done (took 2.007972999 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074122501 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.077027728 seconds)
  done (took 1.812247769 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234157016 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.164871573 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096676663 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084181232 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079968222 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.080192465 seconds)
  done (took 1.908590328 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07211361 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.075630277 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07313205 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.076777141 seconds)
  done (took 1.957072721 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077627395 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052868376 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054758781 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.057797946 seconds)
  done (took 1.903957075 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087212452 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080441232 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.079309712 seconds)
  done (took 1.910357347 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.102402218 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.086908853 seconds)
  done (took 1.851812119 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082503633 seconds)
  done (took 1.746387069 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100754721 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.10287161 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132043525 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.112111461 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.140641854 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.110097742 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085566897 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086191543 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.077047568 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.087346731 seconds)
  done (took 2.698410323 seconds)
done (took 22.39292528 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079640199 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.363622325 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360657121 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091138113 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670712032 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357074537 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.976690181 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094054187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116449195 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069419489 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08547924 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650216702 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.96037738 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.315170539 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.944939847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.318465006 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649898254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069365603 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068634135 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068709531 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.955539122 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068339817 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068355799 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068791209 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648767379 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372824899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068760896 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.317021713 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068874725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070345646 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.35633599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069570478 seconds)
  done (took 16.094461511 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071099629 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.121303593 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073730095 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.085713906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071570076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071008018 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072516915 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069430933 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122059008 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068310073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085590608 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068562419 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072582105 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.085882501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088459742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068688333 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069482234 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06889556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069382837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069657588 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087543093 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068172741 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068927693 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069199565 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068807671 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080564205 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069534243 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068614701 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068992289 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070818102 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071366055 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069752877 seconds)
  done (took 4.110544497 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115518154 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125923588 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074485677 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105141467 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112486248 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.07030041 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144537829 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094424516 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127590567 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068482814 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086008606 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068206516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103238747 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069261655 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08880751 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.06925392 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070314962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069479867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068785819 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068696083 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088010265 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06900068 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068988847 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069627731 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068983479 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082230287 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068968985 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.06893581 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068700428 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070640677 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072272795 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069408387 seconds)
  done (took 4.343181524 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072925895 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076121946 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.084927926 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084692268 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070029255 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072869503 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.07378735 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070178762 seconds)
  done (took 2.285367508 seconds)
done (took 28.502892855 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079668612 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070024766 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073252844 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082850421 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073223104 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.079318583 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067580619 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.076526548 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073019565 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073795699 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075420344 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068087569 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071944373 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067748131 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074992829 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068055001 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.080005764 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072427442 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.079745679 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079948173 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0704403 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073501011 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07591679 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.080553256 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.080280587 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.07974062 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077734248 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.073624468 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.069215535 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071218712 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077506635 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084772359 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068602998 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079993602 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.068549454 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068300403 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072196403 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068062073 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.080111415 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077668532 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070020775 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.07671256 seconds)
  done (took 4.78955075 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089077424 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.093407202 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08536323 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062054711 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.068313476 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066340208 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089890125 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060913366 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059844317 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088669124 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.057563691 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.060019086 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065792934 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053770273 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.060878485 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057029675 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062153493 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056123267 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060627426 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060318765 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.090585163 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053906955 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.078946624 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.064082706 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056516595 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061961257 seconds)
  done (took 3.449837193 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074979886 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085938457 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.090936369 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133019254 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.107207393 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080586168 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080081966 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096132315 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089481164 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067210667 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07183455 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093738277 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090717397 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074530259 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068035265 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.0873984 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084600659 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.069593376 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073697292 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.095723494 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087884042 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086686189 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097713981 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084648711 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067732018 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070943188 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072262457 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.083309993 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.074128016 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078002718 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072316152 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.072136525 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070727111 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080467986 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072397645 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070903334 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093829532 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078513091 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080323995 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069716383 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077689138 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06972933 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094806823 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.138987287 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068170165 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075351357 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072121523 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078537421 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068582726 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089831609 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080449098 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068106616 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07203246 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068175817 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068436368 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082383164 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070910571 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071081835 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078262022 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075203901 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.093768529 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073580548 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08499975 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069054064 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.076567564 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067811975 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069690099 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067698236 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097422462 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070437593 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112994098 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.070195791 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.069769124 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.07775906 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.077163458 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.075264511 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069733373 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.085064508 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080083096 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.072514272 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077852853 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071812548 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.071427077 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093431111 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071425978 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070119561 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071474344 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075137428 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071295406 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069560772 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081887849 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067950033 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072878443 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086028344 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06833289 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.070442501 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.074350249 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072944839 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067958519 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079621183 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07316666 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069671798 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.078188983 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068120104 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.071150873 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081821513 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.074763509 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067343908 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072882739 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074211487 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069740113 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070304305 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071745765 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070060182 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076990517 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075471159 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072801546 seconds)
  done (took 10.821582027 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.165890214 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.158463846 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.07120855 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.150183345 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077390404 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080406888 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.152912851 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.096343958 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069082576 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069090559 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069047702 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.111984419 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107452746 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.11983642 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.07971055 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069135524 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085562524 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115553433 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.153875876 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148225493 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.085999129 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078033913 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070653875 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069788904 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070764397 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078954678 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.086251932 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07716561 seconds)
  done (took 4.484916355 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080503215 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106148828 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.075648045 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092533245 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091702037 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068539326 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071228471 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070136498 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.082362368 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.079069851 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.068370741 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074370244 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075336611 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071718572 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069718652 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075423484 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075518607 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070105122 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071901218 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.07382355 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.0793104 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.092606974 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072667283 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06793359 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074048484 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067674188 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.065849983 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.085247034 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069005933 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.096177377 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.066095391 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.073453905 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083250887 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069763044 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.06853657 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068212353 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067814248 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068390922 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070181884 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066589756 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.066561398 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057810752 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067737777 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079894072 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.075480648 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056943803 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.073344259 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073740242 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073542251 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065725281 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07141606 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071048687 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071133416 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076017829 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072360812 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073578822 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069768032 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.075101066 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.078053252 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068547439 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06542864 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.066761302 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073339359 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066245542 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076999247 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073351516 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066615382 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.068159494 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07055889 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.075429658 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068213159 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.073139821 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066084063 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070465186 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073085605 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070615733 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069706249 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067087669 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068176579 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069512662 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055939548 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06846073 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054140985 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071866093 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066667835 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066799327 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068700482 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.07314214 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080444702 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069542596 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.074352601 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069330187 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067497402 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071665534 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061082845 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071215827 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084377649 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.083799872 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068277528 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066157585 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082155304 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.073185093 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067165283 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056452481 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073665806 seconds)
  done (took 9.287891946 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.090746035 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070721131 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085813387 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.091772367 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087679342 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.076146547 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.078072587 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070627626 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.084340089 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074500087 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.077779915 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.06888588 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079213234 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078186249 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.071153975 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.078980078 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072612043 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085742664 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084367349 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068593655 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076889609 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081603839 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.091283268 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083487176 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082281742 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.082909054 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091531296 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.078981018 seconds)
  done (took 3.969820579 seconds)
done (took 38.475460402 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.771366997 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.9356679 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.753439892 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.119821137 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.030086541 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.770078535 seconds)
  (7/12) benchmarking "nbody"...
  done (took 3.001725464 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.748581672 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.954004378 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.78860248 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.949850259 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.879545692 seconds)
done (took 65.39283902 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.828608887 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.889055206 seconds)
    (2/2) benchmarking "String"...
    done (took 1.974966848 seconds)
  done (took 5.553262081 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.968705174 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.307625688 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.998838009 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.745840067 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.753037948 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.089077283 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.544155044 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.254145798 seconds)
  done (took 30.382107125 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.8355456 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.976650145 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.417943555 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.453595778 seconds)
  done (took 15.419889123 seconds)
done (took 62.925105259 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.737251714 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.813703788 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.77967137 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.729553756 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.802541388 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.752747604 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.253373324 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.895340401 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.743277329 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.737426844 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.744017753 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.172795545 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.752002512 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.21233892 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.756009017 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.754349053 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.796745154 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.241893656 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.902378244 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.752743086 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.754394251 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.786586017 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.746106234 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.754769011 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.755004831 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.744380798 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.17577812 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.750086595 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.357620968 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.742884578 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.76959294 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.356869055 seconds)
  done (took 203.712149862 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.741570558 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.605455622 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.697490912 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.79077072 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.081155308 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927810892 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.863973036 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.134561021 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.744918086 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.77345684 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.889990364 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.744512358 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.905774475 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.75921833 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.771418703 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.742192644 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.916522919 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.927751619 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.778053641 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.916366195 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.771789392 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.837461103 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.768103948 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.883450327 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.759368536 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.835707068 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.912119585 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.765064518 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.929569754 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.887391863 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.76354937 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.763641407 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.974209547 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.626543239 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.752838784 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.754749237 seconds)
  done (took 168.38376709 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.132802607 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.749796838 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.750702094 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.749505462 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.762432285 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.750606461 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.872322009 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.874282653 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.356471438 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.570973951 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.803807712 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.582189718 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.75249996 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.818244528 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.764240216 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.751836311 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.765692119 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.779284635 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.754559128 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.75080253 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.871614189 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.766845488 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.083920579 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.760986914 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.751562499 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756499291 seconds)
    (26/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.750283909 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.122359923 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.749716843 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.757146872 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.007904158 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.751782019 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.751444218 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.642489815 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.36700808 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.840928781 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.752803413 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756998165 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.751135598 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.970897795 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.751259637 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.752524813 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.755059285 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.91977542 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.752348478 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.875179135 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.751933656 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.260995793 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.751176301 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.751727161 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.561774463 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.428025306 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.754086898 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.751625864 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.754982235 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.751947755 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.752082457 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.759019921 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.752712333 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.752817072 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.55464275 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.829148346 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.755804432 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.755288892 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.759230425 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.752878308 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.914436851 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.755860481 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.103228748 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.813294583 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.992218279 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873652622 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.759543967 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.819456163 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.84677437 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.752826746 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.752285582 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.753499294 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.754650456 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.833506618 seconds)
    (80/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.752867835 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.752877321 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.949134702 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.764616425 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.75477258 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.80461147 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.823205247 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.753623925 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.651981994 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.757575006 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.753567138 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.064536726 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.821207944 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.75324738 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.754117312 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.753489892 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.944820385 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.877203696 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.542357647 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.756972001 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.549737243 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.756559037 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.94472641 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.756607508 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.918886372 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.755085602 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.834893925 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.759068787 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.756548764 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.7539585 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.786731288 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.753835117 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.811891026 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.757705238 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.128580254 seconds)
  done (took 400.914326035 seconds)
done (took 776.886405083 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.43478639 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.371336215 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.486367455 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.396324875 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.369888035 seconds)
  done (took 13.75476255 seconds)
done (took 15.449466903 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.841448645 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.846936717 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.781182443 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.844862291 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.7752004 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.844251101 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.830712323 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.780632245 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.815570387 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.781726532 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.813674217 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.780500843 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.767457675 seconds)
  done (took 25.200674067 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.987839923 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.994748764 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827732787 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.99086383 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807152358 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985699494 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.915702445 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907868577 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.904963042 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.771157875 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770409235 seconds)
  done (took 22.566162266 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.988778887 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.997006937 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.833504551 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.00125674 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.807444031 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.986707032 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.929047783 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.909485605 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.913680512 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.770677281 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.76867757 seconds)
  done (took 22.60372562 seconds)
done (took 72.066762718 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.763750477 seconds)
  done (took 3.461351719 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.787915823 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.943654983 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.770287311 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.768347869 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.764109239 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.767721648 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.769365987 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.764153955 seconds)
  done (took 16.03519524 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.763972159 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.763400999 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.761392153 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.760989903 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.763507942 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.763722436 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.761068747 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.76281008 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.764570445 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.761226473 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.764200782 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.763734788 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.76410293 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.764569559 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.762149265 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.762166884 seconds)
  done (took 29.906703739 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.763371257 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.762965322 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.762277591 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.76256804 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.761101057 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.763491206 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.76350984 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.76318455 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.762866107 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.763459074 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.764485417 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.761678765 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.764202434 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.764211428 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.762744045 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.763742824 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.762276871 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.763366913 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.770817341 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.762953994 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.76341701 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.762385734 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.763295018 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.763751572 seconds)
  done (took 44.023693125 seconds)
done (took 95.122978471 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.672565052 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.156105128 seconds)
  done (took 8.528400133 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.767623618 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.765875421 seconds)
  done (took 5.274104811 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.766995062 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.766252586 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.768137724 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.766810988 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.767232717 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.766247872 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.766252919 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.76634205 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.765802637 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.766810657 seconds)
  done (took 19.367610972 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.766224939 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.766213381 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766785429 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.766444642 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.766164922 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.763737796 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.76670068 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.766614012 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.769495071 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.764537127 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.767433585 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.765115087 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.768123273 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.765907214 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.767031059 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.764878589 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.764703752 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.76624084 seconds)
  done (took 33.493332557 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.768494097 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.768522085 seconds)
  done (took 5.239098229 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.765858683 seconds)
    (2/7) benchmarking "second"...
    done (took 1.765110623 seconds)
    (3/7) benchmarking "month"...
    done (took 1.765847087 seconds)
    (4/7) benchmarking "year"...
    done (took 1.766079956 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.765862786 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.764829716 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.765083677 seconds)
  done (took 14.06073554 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.770723822 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.923766353 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.991644394 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.424533414 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.769475908 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.771710472 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.688076688 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.771442407 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.772582972 seconds)
  done (took 19.586742887 seconds)
done (took 107.251671407 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.575647016 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.762750665 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.15470414 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.849368657 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.782971019 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.103772258 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.770094538 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.070893206 seconds)
done (took 42.771864037 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.830544489 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.356322012 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.396161128 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.520222376 seconds)
  done (took 12.97637601 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.758294344 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.291165567 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.803555389 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.346005213 seconds)
  done (took 19.925052894 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.132755594 seconds)
    (2/2) benchmarking "read"...
    done (took 2.116165296 seconds)
  done (took 5.957684924 seconds)
done (took 47.395881586 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77138239 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.770160673 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.766780046 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.766886923 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.766624776 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.7729534 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.768023418 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.767384259 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.770895744 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.770610581 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.770352084 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.773123982 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.771126859 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.770633105 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.7690397 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768508892 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.770580554 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.769456014 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768383787 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768260207 seconds)
    (21/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.770864168 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.771073139 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.769873655 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.768097403 seconds)
  done (took 44.175408998 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.770944191 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.769148898 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.771685725 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.773070584 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.768397179 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.771951814 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.771737083 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.769129519 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.771752037 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.773478262 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.769694138 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.76998086 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.772625175 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.768469781 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.772583716 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.769559582 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.772798935 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.769519166 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.772784641 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.770289011 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.77481392 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.768649926 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.77078703 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773038829 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.76908562 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.770775526 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.775870578 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.770730459 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.772393119 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.769384937 seconds)
  done (took 54.841530489 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.777378174 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.780252485 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.773401627 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.774657471 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.772429897 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.773479712 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.774120843 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.77334955 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.773569834 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.772217446 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.772552961 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.772966778 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.774785842 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.773676092 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.773871829 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.772885244 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.773911223 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.774921059 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.773600749 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.774054432 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.773617034 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.773677646 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.77401351 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.776802895 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.773079302 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.773312169 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.773743232 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.773583367 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.774716885 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.774511112 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.774402047 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.773863646 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.774017762 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.775039323 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.775094587 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.77442002 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.778291062 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.782022156 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.775456109 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.775273446 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.776038051 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.774716738 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.775088818 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.774633992 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.774925018 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.776173282 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.775002903 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.775160318 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.773966749 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.774926889 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.775320519 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.775751817 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.774415467 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.775371954 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.77514914 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.775288448 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.775986515 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.775287856 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.775411641 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.775505084 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.776176191 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.775742508 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.776834492 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.775175059 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.775850809 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.776166883 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.77647123 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.776448921 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.777153934 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.776217472 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.776703732 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.776198609 seconds)
  done (took 129.508864498 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.776370672 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.774747162 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.773785709 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.772907561 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.773358761 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.776064769 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.774489016 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777232448 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774290094 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.777531781 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.776143468 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.774257268 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77517632 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.776690207 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.776098681 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.773896515 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.77680045 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.775658071 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.777094437 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.777255534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.7772639 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.774932719 seconds)
  done (took 40.772748099 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.778391703 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.777784273 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.774939547 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.777733396 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.774122866 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.777286782 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.77888209 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.778505971 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.777821565 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.774604442 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.775930394 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779028361 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.775599765 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.775408606 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.77596147 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.775197035 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.778448859 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.77585802 seconds)
  done (took 33.693418415 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.775366311 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.775255809 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.778653474 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.775780235 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.776237091 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.779493772 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.775655092 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.778790294 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.778307323 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.776183189 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.77900715 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778529484 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.779799609 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.776425158 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.778019773 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.777357033 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.778876008 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776258397 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779197544 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.776600827 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.776944962 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.780612875 seconds)
  done (took 40.820623551 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779222957 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.779074114 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.775987475 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.778523216 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.776932911 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.77970688 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.779866723 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.776688531 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.779609222 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.780277178 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777952709 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.779898635 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.777172002 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.778902217 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.777038931 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.778216155 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.7808439 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.778706843 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.78090406 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.778043127 seconds)
  done (took 37.287096044 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781079837 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78121116 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781028442 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781482429 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.781438178 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.781902608 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782560521 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.781138067 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782018882 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.782313933 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.781353963 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781353667 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.781156297 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.78141656 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781601611 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782915011 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.781716969 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781662962 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.7822225 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.78211062 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.781867557 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.782441141 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.781491754 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.782578821 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.782933002 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.781778788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782521079 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.784649941 seconds)
  done (took 51.609440147 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.78164035 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.781576038 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.779725227 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.779974397 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.780644398 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.779410959 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.779247157 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.779074897 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.782019087 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.781334728 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.782905051 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.782937009 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.782765686 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.78292122 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.783273857 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.782023587 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781978749 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.779163755 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780149853 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.779455539 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.782763841 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785738529 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.78322734 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.780403997 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.779486961 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.782618052 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.780630227 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.781876986 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.783800148 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.780353515 seconds)
  done (took 55.159906508 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.801993212 seconds)
    (2/2) benchmarking "in"...
    done (took 1.802601079 seconds)
  done (took 5.322011731 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.780772365 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.784124877 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.783165758 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.781312432 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.781812741 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.784113111 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.783980796 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.781321226 seconds)
  done (took 15.977595946 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.784675916 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.783662557 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.783944717 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.783661647 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.785182743 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.784062336 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.790575421 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.784707896 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.785720005 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.785173497 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.790359172 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.79285938 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.78721059 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.786373054 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.78434997 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.785580169 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.784704961 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.786267246 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.785947529 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.7848029 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.785420779 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786753783 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.786178015 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.783515545 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.786210153 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.793964836 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.788151744 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.78512144 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786844543 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.788269859 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.784569608 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.782743695 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.786542641 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.786722037 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.787380498 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.786304398 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.794604284 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.78677131 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.792311013 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.787515648 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.786813253 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.78353557 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.786251401 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.786538861 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.787477418 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.787975535 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.786440012 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.783761393 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.786957964 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.78889156 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.791550367 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.786413206 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.784031171 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790615768 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.787702094 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793143441 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.788861629 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.789601578 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.794746525 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.795752318 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.798667431 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.79363565 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.78973784 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.787172587 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796630942 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.808114169 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.792882842 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.785388693 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.784023523 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.788431083 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.793804433 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799877302 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.796197278 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.789740155 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.788134833 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.786662076 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.78813305 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.788246686 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794134166 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.790105275 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.7887532 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.787848495 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.797072335 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808654447 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.787881999 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.789110907 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.788511036 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.788997804 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.790292136 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.798555891 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.790775987 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.789167344 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.787991437 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.790487859 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.790343779 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.790295 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.787982585 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.789700675 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.786181921 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.789287745 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789501987 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.793698289 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.798641855 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790678809 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790333917 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.795716311 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.790117047 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.789052379 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.795439703 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.788886875 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790794241 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.790581625 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.796453659 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.786888869 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.792097647 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.798168628 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.790246174 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.791099269 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.790720068 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.790252616 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799520409 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.814315042 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.789716501 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.791116981 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.794933225 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.801573747 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791686463 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.793455899 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.791134502 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.789051705 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.788433307 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.791875783 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.791484385 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.792199891 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790820879 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.792649386 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.788305546 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.79114021 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.79056794 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.791449505 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.792542251 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.790967866 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.792526957 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.793210522 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.792647329 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.793659665 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.797605166 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.792137959 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.79243182 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.793240454 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.789407175 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79324111 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.793751736 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.793166938 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.792521075 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793165488 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.791965899 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.793120897 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.792514227 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.793684612 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.792820741 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.794380779 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.796214918 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.792725008 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.796627305 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.791950069 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.789845488 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.792471374 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.793711901 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.793260103 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.79313437 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.791515817 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.795648086 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.800261144 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.79359371 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.794439673 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.796566877 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.792462805 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793421696 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.792946996 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.796410592 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.799445415 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.79301393 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.799423631 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.793824494 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794636488 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.793503273 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.793155988 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.79268553 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794442654 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.795934534 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.801685177 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.806371834 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801281737 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.794411017 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.797772076 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.794577191 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.798867003 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.798476763 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.795018256 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.793772778 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.79611658 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.793921359 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.796266213 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.795527798 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.79588327 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.794648536 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.794589072 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.795416901 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.794949971 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795114637 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.795796104 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.796562368 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.792171302 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794821284 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797285632 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.794307455 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.791816612 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.793770457 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.795270938 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.794721974 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.795974726 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.801759058 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.792508202 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796563135 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797068153 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.795539093 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.793982672 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.795982591 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.797816404 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.79581014 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.801268178 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.796389977 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.797051664 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802722605 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.79492561 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.794858997 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.798388384 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.795915336 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.794872826 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.798419756 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.802737462 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.796295391 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.797417076 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.797017304 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796373326 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.79696985 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.802867426 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.793259454 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.795873544 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.796209016 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.798295265 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.794550971 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.798411172 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.797741385 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.798402273 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.799832025 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.797508035 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.797225742 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.79851477 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.797510592 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.798408466 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.798353176 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.800815829 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.805937238 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.802600167 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.798470079 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.800547299 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.798595645 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.801796395 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.799385895 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.798476384 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.797358636 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.811713491 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.805481866 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.804183231 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.79923849 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.798480896 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803849009 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.79994053 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.80266897 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79828485 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799450577 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.799147076 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.797711945 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.795769858 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.799458897 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.799122902 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799571017 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.800278904 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.80208815 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.798761658 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799097931 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.799930022 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.799162328 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.799698189 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.798891434 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.799533818 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.80114 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.800921049 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.798623662 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.798725991 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80508645 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.800328244 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.800704133 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.799590735 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.799782406 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.799923208 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.800912459 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.800650527 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.802867345 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.807511625 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.802241005 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.808663709 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.80138974 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808850663 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.801449217 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.804253067 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.808242758 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.797917121 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.799545756 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.801405351 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.801611777 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.807028812 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.801150421 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.801366222 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.805094289 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.801998897 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.802486438 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.800994246 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.80190276 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.801040169 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.80196154 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.80797675 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.802409551 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.805511655 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.8032829 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.798759395 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.801817057 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.802046187 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.800811021 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.80553362 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.801671944 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.802311657 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.801823034 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.802556184 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.801414919 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.802519173 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.802371414 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.799367403 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.80212693 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.80825104 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.803533227 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80682165 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.80289017 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.810507744 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.802742779 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.808277883 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.803177337 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.80335079 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.803150238 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.803737044 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.8032783 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.802839795 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.804406239 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.803663546 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.804673803 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.807094865 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.803993631 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.805266957 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.80625685 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.803458026 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.803248192 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812908561 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.82542685 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.805246006 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807661145 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.800556138 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.804479108 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.807442422 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.804237589 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.803203723 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.806629352 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.813514388 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.812401626 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.804196931 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.804518979 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804296588 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.804355436 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.804009221 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.8045552 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.804815186 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.803541983 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.805043804 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.804615526 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.808623692 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.804381596 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.805601965 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.804798186 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.805819078 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.814928886 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.80557659 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.805077487 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806172046 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.804326814 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.805906098 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.804617431 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.805426804 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.805471056 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.805417355 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.807284796 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.81198859 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.811147945 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.807834256 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.804344861 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.805621912 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.806139008 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.805610541 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.805267651 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.805645884 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.806676577 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.806907813 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.80663788 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.807551557 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.805128126 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.807231372 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.806962655 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806570491 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.809851135 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.813565204 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806882763 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.804440427 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.807269721 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.806932976 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.806010372 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.807445406 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.814372909 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809752522 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.816574563 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.815066707 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.811609922 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.807376728 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.809571703 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.8146055 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.806333362 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.807367316 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.806815046 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.809227317 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.808223824 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.81053135 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808847188 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.81250834 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.807185144 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.808175159 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.815052832 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.809499855 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.807440963 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.809187767 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.811742349 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.807116862 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.805061036 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.807875413 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.807371987 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814461879 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.809889937 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809105456 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.809449989 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.806836648 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.809080055 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.812270884 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.808459234 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.809791362 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.804708342 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.809014779 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.808881955 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.809212399 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.804840119 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.808987004 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.809128677 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.812259534 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.815807845 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.805923302 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.811499953 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.810004991 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.809495958 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810181101 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809689231 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.806651891 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.807595142 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.809463783 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809056607 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.809583811 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.812141683 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.810016534 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.811212876 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.809776302 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811124872 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812489624 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.819197549 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.817520673 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.806663612 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.810199758 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.810515024 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.813115344 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811261781 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.811029275 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.80979572 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.811553265 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.810350309 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.810455314 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.809716498 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.814044935 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.825212788 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.810065537 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.810992712 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.811495409 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.81437206 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.810329528 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.807856329 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.811138182 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.813246824 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.813903805 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.818156908 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.812362189 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.817619662 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81241479 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.813093893 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.817187996 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.81485687 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.81847912 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.814514361 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.811559037 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.811896318 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.815710758 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.826971222 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.811977909 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821220843 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.839662593 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.812897585 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.812716522 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.813368986 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.812023418 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.812783753 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.814193696 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.813222033 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.812006513 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813445006 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.812547489 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.813939908 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.819073598 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.814253642 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.812543432 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.812825873 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.81252353 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.81381488 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.810379051 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.813325871 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.813212381 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.813330064 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.814090776 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.813594461 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.813821442 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.827069458 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.823184009 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.813147052 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.81452421 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.810913691 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.816409932 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.816492838 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.823212461 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.820291146 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.81458611 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.814133176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.815649753 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814663327 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.811105976 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.814627349 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.8142243 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.812808153 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.811330034 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.826785253 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822127491 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.818616501 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.814749715 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.814707671 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.81481071 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815952841 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815472402 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814949217 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.815347283 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.815872742 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.818897791 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.81469022 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.814434266 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.817200634 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.821856892 seconds)
  done (took 1075.313135734 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.812771114 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812226711 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.811774449 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.812604006 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812659807 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812873131 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813040224 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.812363323 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.812751075 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.812675167 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.812311443 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812545575 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.812425917 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.812593761 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.812895913 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.813005992 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.812844587 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.813346162 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812248668 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812794503 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.812521057 seconds)
  done (took 39.814270579 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.815424542 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.813006836 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.813472517 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.816166017 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.813184266 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.815920994 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.813065185 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816595801 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.816881617 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.8127094 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.817557898 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.81649961 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.813194694 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.813788833 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.812865518 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.816297777 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.816976869 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814050101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.816823267 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.813963941 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.816931928 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.815036369 seconds)
  done (took 41.679726757 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.818688976 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.818595963 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.817143005 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.814698454 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.817614214 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.814143399 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.817820468 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.817020241 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.817831321 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.817503254 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.818201441 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.818233086 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.824593816 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.821896309 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.819202151 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.817168046 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.962182451 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.818370131 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.818855477 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.818763586 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.815633804 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.824244762 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.815967946 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.815130185 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.817672006 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.819098128 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.818890265 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.818311066 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.819313781 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.819624303 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.822955728 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.81835473 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.818179294 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.820512448 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.819122596 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.819132586 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.823233405 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.81969756 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.816624158 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.819570733 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.828714887 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.838538952 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.820207603 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.825326814 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.819322025 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.819316543 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.8229606 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.827211308 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.815950282 seconds)
  done (took 91.059093666 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.819524553 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.819643626 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.816176024 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.819241256 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.81986976 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.820091983 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.820085633 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820503861 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.817976539 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.817545417 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.820977192 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.816616649 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.817588136 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.819774795 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.820557852 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.816878709 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.817317026 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817993544 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.817491924 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.816986703 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.81835863 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.820148696 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.819669747 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.818176728 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.821266651 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.817911431 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.817227476 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.82003356 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.81823677 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.81700576 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.821222409 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.819743637 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.820401717 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.81792982 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.817199771 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.820393067 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.820725616 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.817751248 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.820308265 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.81760045 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.820599403 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820957022 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.820767648 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.820527982 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.817941749 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.817495675 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.81737111 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.818213246 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.818250206 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.821425989 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.820990658 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.81843782 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.821789393 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.818010686 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.82120684 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.821482107 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.819701363 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.818705354 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.823048048 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.819320385 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.818704969 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.821877391 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.81923872 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.821883022 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.823079997 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.820203603 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.820186851 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.821812031 seconds)
  done (took 125.471825868 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.82309417 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.82395651 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823675298 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82364756 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.823753786 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.823405652 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.823580258 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.822882977 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.823251409 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.823187375 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.823312987 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.822909712 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.82346103 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.822830364 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.823743389 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824587814 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824261581 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.823982825 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824065905 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824272078 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.823768546 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.824795377 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.823926772 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824343396 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.825767727 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.824348189 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.824384882 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.824207123 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.824497968 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824781552 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.82523714 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.824406355 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.82549513 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.824609358 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.825328205 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.825565379 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824547719 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.824792836 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.825001802 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.826358215 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.824709233 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826863199 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.824074199 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.825127842 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.824919222 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.825221337 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.825129268 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.826607964 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825125648 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826065876 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.826078272 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.824937315 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826079691 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.82607702 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.82593062 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.825973994 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.827270272 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825770824 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826606827 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.825542651 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.826395993 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.825413669 seconds)
  done (took 114.892071437 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.825462837 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.825196887 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.823462403 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.823752042 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.826746628 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.823514789 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.82580791 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.825510294 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.825144462 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.825993895 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.825924887 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.823338657 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.824771003 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825066023 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.823284125 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825216669 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823072578 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.824431569 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.826200167 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.824083498 seconds)
  done (took 38.25586491 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.823651393 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827369917 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.824131739 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.824141381 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.825970742 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824101256 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.82744359 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.82570567 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823234245 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.825921525 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827137919 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828185276 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.824660423 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.824252216 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.827338921 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.824706791 seconds)
  done (took 30.967849064 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.82507546 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.827532468 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.828187548 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.828581212 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.825426663 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.826074098 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.82764869 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.82487562 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.82496832 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.829163465 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.828117876 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.829760503 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.8281427 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.829962563 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.825633008 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.829056503 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.825500775 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.825925957 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.828436445 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.829391608 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.826913951 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.825408956 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.828660944 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.82783884 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.825666421 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.826134749 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.826287296 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.826092144 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.825878032 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.829188313 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.826809544 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.826315043 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.825609987 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.826600609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.829534099 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.826420558 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.829472641 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.828373453 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.828956172 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.829460505 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.829714394 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.827661483 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.829833636 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.829949526 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.825918567 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.830048096 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.827135508 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.828275521 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.82635166 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.82726252 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.830585803 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.830464432 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.83014778 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.830685467 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.830731007 seconds)
  done (took 102.290413522 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.8300173 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.830583109 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.828001162 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.830347954 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.829763054 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.828082273 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.830632356 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.828464673 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.827973669 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.831373994 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829014046 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.83040827 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.828595085 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.831317338 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.828724262 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830585744 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.829076115 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.827992653 seconds)
  done (took 34.69581228 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.829612725 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.828909136 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.831130418 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.828214986 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.8289387 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.831498396 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.82885499 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.830923854 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831262813 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.828884208 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829061522 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.831659232 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831277617 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.832581628 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.828727159 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828846011 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.832414881 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832605048 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.830228302 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.8295342 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.832207649 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.831927681 seconds)
  done (took 42.034164446 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.831385307 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.831512561 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.847653275 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.851496692 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.854250239 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.863664542 seconds)
  done (took 12.845220222 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830151373 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832513563 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829659294 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832831162 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.833220515 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.829966128 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830762498 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829943666 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833266687 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830323136 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831789283 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834500982 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834718065 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831389082 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83280454 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834186098 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831433487 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831709654 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831853224 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834359365 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830137589 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834216364 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831927807 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832011447 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831874525 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831376703 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833922255 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832482662 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831197994 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834357998 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833741615 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831587155 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835405411 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831853874 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834428528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834361195 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83206557 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834370486 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835008119 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831781133 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.834885729 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834695943 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835092543 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831793808 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835060829 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831928135 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832551741 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.832748156 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832658342 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836112626 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835362652 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832252908 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835176348 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834356923 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835814 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836504084 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833888407 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833000488 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835741924 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833810834 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833541329 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835660982 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834249196 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834108444 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836350643 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83363589 seconds)
  done (took 122.757372017 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83428697 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834044461 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834220814 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834580278 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833739144 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834029257 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834151571 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834675003 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833960862 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833492522 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836246314 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834091714 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834189931 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834276987 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834290695 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835203891 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834259979 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833932469 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834393968 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.836902362 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83387691 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8345065 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834338827 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834135486 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835733456 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837775771 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834668605 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834701438 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83533084 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834256451 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835378568 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835536033 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835525746 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835319334 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836099905 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835962102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835663085 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836176799 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83596524 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.83853878 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835480259 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839004064 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835492041 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836528587 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836531733 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835742482 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836238387 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836492517 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835869217 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83568975 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836401351 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836647767 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836481343 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836948013 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837026837 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83698672 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83785978 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.837468587 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.837302486 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839509185 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.837421291 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836647452 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.840163334 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.838230421 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837394324 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.837158536 seconds)
  done (took 122.933017859 seconds)
done (took 2505.881901367 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.909433997 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.114350713 seconds)
  done (took 15.79580357 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.002007878 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.954701549 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.839299615 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.891353607 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.838741011 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.851661371 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.853408869 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.839726616 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.839470736 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.839169987 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.839921716 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.029337063 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.837792361 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.840138232 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.839356921 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.934433991 seconds)
  done (took 51.84768834 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.843733513 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.843626235 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.855642501 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.846945128 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.844208189 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.863049611 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.877717956 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.849337696 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.903575618 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.858453243 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.967177925 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.855424794 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.843450234 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.913943199 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.85986925 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.85858776 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.939038269 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.920589456 seconds)
  done (took 35.518673788 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.923513107 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.85038919 seconds)
  done (took 10.555809776 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.865049473 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.870808199 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.848865823 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.847646844 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.857301169 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.847522435 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.849836665 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.847149692 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.852920555 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.850547954 seconds)
  done (took 70.314416037 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.849647534 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.845242245 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.845589411 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.843181761 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.837119182 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.841447277 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.843689106 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.839283384 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.539249386 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.882975727 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.852419333 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.850881044 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.844246315 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.847332988 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.843267347 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.868087434 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.966947677 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.842085211 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.843150995 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.850025661 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.845500556 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.900484639 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.858705052 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.846691656 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.877788061 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.539427039 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.854700515 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.851009929 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.965818422 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.845484345 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.845825342 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.846406851 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.848162967 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.22041776 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.121904242 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.846197361 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.856174097 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.853985906 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.843163902 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.974638428 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.847707284 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.852073926 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.768558314 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.097453502 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.96154755 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.893210832 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.22966923 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.852283114 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.848555877 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.878260266 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.849570573 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.847923216 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.859790471 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.350776122 seconds)
  done (took 131.335958834 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.843139758 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.10675725 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.997791322 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.843222127 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.133581132 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.054000775 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.84461175 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.89298269 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.843792295 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.075157735 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.066992366 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.953100508 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843607676 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.845028116 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.841510499 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.841674707 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.004814851 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.91811 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.8462769 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.841026406 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.875416947 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089574575 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.973119853 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.847069769 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.866611209 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.057541024 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.971950843 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.953664542 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.35103291 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.841254533 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.910294137 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.845674112 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.845379942 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.84236041 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.000918441 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.942006776 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.93558433 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.845717539 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84344109 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.84329584 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.521240923 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.042225959 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.944408137 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.990176216 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.101307581 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052140381 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.633265015 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.843902327 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.583604201 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.006168518 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.080271486 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.077397383 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.971750024 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.846582908 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.120018284 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.84399962 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.84295467 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.081782378 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089912453 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.949427582 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.848185637 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.842844849 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.844127834 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.09452136 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.847400049 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.941520321 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.849977678 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.844894318 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.942272771 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.950614776 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.097122546 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.061550779 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880395543 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.143255386 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.317159986 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.095288179 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.917069212 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.081784898 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.847733937 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.843580337 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.932467609 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.695834197 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.04782269 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.09930039 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.104815944 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885799998 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.569154139 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.845190666 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.075562432 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.074770787 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.103531631 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.090177532 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.00078615 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.166478217 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.846659734 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.845590324 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.091941105 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.986455948 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.849233284 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.21011644 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.084591851 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.422534278 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.880356618 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.160488127 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984981664 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.849231828 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.491461063 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.847757827 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.074451153 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.892038752 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.848687108 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.847218183 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.068535497 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.830203264 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.84741664 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.547960922 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.912025073 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.849417968 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.083227586 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.850778652 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114576086 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.852605863 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.088929127 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.87402936 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883014818 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.023176474 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.091734576 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.850636764 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107749741 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.096385704 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.969031029 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.123420518 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.771082823 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.850382663 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.140479077 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.850403885 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.847850219 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.021559391 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.850593437 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.085659769 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.850838281 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.13786244 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.877373942 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.007728691 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853230759 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.110520457 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.888007061 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904844981 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.852425121 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.984678778 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.852678297 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.730120079 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.003772151 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.853227022 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.850318434 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.39771114 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.847897334 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.009231188 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.085435266 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.876877586 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.92566682 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.521902183 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.849808183 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938630625 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.877683887 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.20107791 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.850135366 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.067245944 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.852060655 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.388457119 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.849795096 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.09504367 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.087201037 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.852158009 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.850113408 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.756343312 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.850158685 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.850032921 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.014103463 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.664665457 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.849924405 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.056523414 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.854971917 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.984324814 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.855509012 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.930123868 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.205563618 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.849667239 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.849065813 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.850714862 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.850826456 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.85128948 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.062548387 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.88430935 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.376950893 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.992822234 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.125642346 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.174084155 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.104254191 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.899813106 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.856242214 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.101110392 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.854423089 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.919120833 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.854887816 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8762508 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.088920899 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857200269 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066803316 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.137382351 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.790559415 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.904837384 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.854566052 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851436237 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.769082549 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.008328448 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947523648 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.855737585 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.852324611 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.972252167 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.982450603 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.071078719 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.85545064 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.082902636 seconds)
  done (took 898.750764485 seconds)
done (took 1215.890275612 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.852195647 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.85208016 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.841328404 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.858100231 seconds)
  done (took 29.193855328 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.861888329 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.858150814 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.860565412 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.859151179 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.861411122 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.859866021 seconds)
  done (took 12.952835292 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.864380801 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.857767183 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.857225834 seconds)
  done (took 21.371453485 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.929568343 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.278586889 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.975029481 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.337082177 seconds)
  done (took 10.313204079 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.862747829 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.863181253 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.861934912 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.86309268 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.86364101 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.86302264 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.862594741 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.86263017 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.864943905 seconds)
  done (took 18.561406433 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.224328656 seconds)
done (took 98.40720086 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.845519884 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 3.27894881 seconds)
    (3/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.028172201 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.93743053 seconds)
    (5/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.253423853 seconds)
    (6/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.114292013 seconds)
    (7/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.831202604 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.775401979 seconds)
    (9/309) benchmarking ("sort", Float64, false)...
    done (took 5.633875869 seconds)
    (10/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.937560716 seconds)
    (11/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.898739478 seconds)
    (12/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.881255051 seconds)
    (13/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.947795081 seconds)
    (14/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.858353962 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.28454316 seconds)
    (16/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.351985416 seconds)
    (17/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.500195753 seconds)
    (18/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.141262271 seconds)
    (19/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.185573926 seconds)
    (20/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.881159957 seconds)
    (21/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.864823845 seconds)
    (22/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.057203843 seconds)
    (23/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.965029586 seconds)
    (24/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.906120745 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.857005856 seconds)
    (26/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.946856702 seconds)
    (27/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.208602485 seconds)
    (28/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.940674502 seconds)
    (29/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.455046292 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.969255004 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.881761408 seconds)
    (32/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.085624214 seconds)
    (33/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.144292581 seconds)
    (34/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.069027952 seconds)
    (35/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.056703634 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.907947209 seconds)
    (37/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.154077185 seconds)
    (38/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.933373088 seconds)
    (39/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.490232939 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.298008266 seconds)
    (41/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.844280148 seconds)
    (42/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.963595012 seconds)
    (43/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.972683792 seconds)
    (44/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.875024862 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.132110185 seconds)
    (46/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.110715751 seconds)
    (47/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.782074289 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.078395003 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.551268705 seconds)
    (50/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.190118652 seconds)
    (51/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.944911062 seconds)
    (52/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.915625012 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.999951711 seconds)
    (54/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.192558237 seconds)
    (55/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.861184093 seconds)
    (56/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.713386184 seconds)
    (57/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.075150061 seconds)
    (58/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.960518328 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.078414531 seconds)
    (60/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.861648654 seconds)
    (61/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.075444918 seconds)
    (62/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.379459635 seconds)
    (63/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.866779812 seconds)
    (64/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 3.446968331 seconds)
    (65/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.614314381 seconds)
    (66/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.211297387 seconds)
    (67/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.2965737 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.957053509 seconds)
    (69/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.41952951 seconds)
    (70/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.863614332 seconds)
    (71/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.925203438 seconds)
    (72/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.003458496 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.161588986 seconds)
    (74/309) benchmarking ("sort", Int64, false)...
    done (took 5.559712556 seconds)
    (75/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.954095863 seconds)
    (76/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.798007628 seconds)
    (77/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.846043117 seconds)
    (78/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.895081629 seconds)
    (79/309) benchmarking ("map", abs, BigInt, false)...
    done (took 8.366302075 seconds)
    (80/309) benchmarking ("map", identity, Bool, false)...
    done (took 3.509485646 seconds)
    (81/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.045947223 seconds)
    (82/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.893811668 seconds)
    (83/309) benchmarking ("sort", Int8, false)...
    done (took 4.853223858 seconds)
    (84/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.134787861 seconds)
    (85/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.889380387 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.860758199 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.276370865 seconds)
    (88/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.86484883 seconds)
    (89/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.266838959 seconds)
    (90/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.892656893 seconds)
    (91/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.043395209 seconds)
    (92/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.074435334 seconds)
    (93/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.964176223 seconds)
    (94/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.140290298 seconds)
    (95/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.342108375 seconds)
    (96/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.057772776 seconds)
    (97/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.931704568 seconds)
    (98/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.032163016 seconds)
    (99/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.193611535 seconds)
    (100/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.488455327 seconds)
    (101/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.886989124 seconds)
    (102/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.015150324 seconds)
    (103/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.848223147 seconds)
    (104/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.849560568 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.003150494 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.067512913 seconds)
    (107/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.861227309 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.077250032 seconds)
    (109/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.852168548 seconds)
    (110/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.013332444 seconds)
    (111/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.924799227 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.861579688 seconds)
    (113/309) benchmarking ("sort", Float32, false)...
    done (took 5.602316782 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.564752931 seconds)
    (115/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.966290844 seconds)
    (116/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.072841344 seconds)
    (117/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.047212003 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.867079169 seconds)
    (119/309) benchmarking ("sort", Bool, false)...
    done (took 2.380228784 seconds)
    (120/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.885647294 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.897305535 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.86818289 seconds)
    (123/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.1215416 seconds)
    (124/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.997204948 seconds)
    (125/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.929086445 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.035555125 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.027986554 seconds)
    (128/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.871550546 seconds)
    (129/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.889200564 seconds)
    (130/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.079459826 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.128378222 seconds)
    (132/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.848574411 seconds)
    (133/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.897446953 seconds)
    (134/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.97326479 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.885051223 seconds)
    (136/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.004640271 seconds)
    (137/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.04727224 seconds)
    (138/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.238950056 seconds)
    (139/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.988406279 seconds)
    (140/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.285542064 seconds)
    (141/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.866814815 seconds)
    (142/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.223770837 seconds)
    (143/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.87294563 seconds)
    (144/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.928892673 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.968410054 seconds)
    (146/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.107060031 seconds)
    (147/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.045813668 seconds)
    (148/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.000611091 seconds)
    (149/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.416838885 seconds)
    (150/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.888504829 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.086639323 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.892292117 seconds)
    (153/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.032643731 seconds)
    (154/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.348638776 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.560540991 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.944488564 seconds)
    (157/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.853256953 seconds)
    (158/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 3.726886758 seconds)
    (159/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.209260545 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.190605581 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.977983488 seconds)
    (162/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.448042215 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.902769391 seconds)
    (164/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.864112493 seconds)
    (165/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.978045691 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.192481632 seconds)
    (167/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.173727273 seconds)
    (168/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.271557631 seconds)
    (169/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.809744548 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.209338324 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.868283722 seconds)
    (172/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.074542762 seconds)
    (173/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.868466475 seconds)
    (174/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.00627883 seconds)
    (175/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.559143351 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.273127419 seconds)
    (177/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.005511853 seconds)
    (178/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.864348883 seconds)
    (179/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.887630539 seconds)
    (180/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.651086338 seconds)
    (181/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.949209524 seconds)
    (182/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.377989974 seconds)
    (183/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.856893196 seconds)
    (184/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.057548691 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.164195696 seconds)
    (186/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.999499755 seconds)
    (187/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.373050199 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.895266036 seconds)
    (189/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.9520305 seconds)
    (190/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.875758825 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.93854777 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.261643223 seconds)
    (193/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.967358181 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.902616356 seconds)
    (195/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.155624299 seconds)
    (196/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.065887113 seconds)
    (197/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.893151066 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.003267527 seconds)
    (199/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.333383728 seconds)
    (200/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.173687059 seconds)
    (201/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.855072649 seconds)
    (202/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 3.626332246 seconds)
    (203/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.963578909 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.929434723 seconds)
    (205/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.951959924 seconds)
    (206/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.107230694 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.817288989 seconds)
    (208/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.040515794 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.667243028 seconds)
    (210/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.070018016 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.967448128 seconds)
    (212/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.176230125 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.843749742 seconds)
    (214/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.899736886 seconds)
    (215/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.869991746 seconds)
    (216/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.039153608 seconds)
    (217/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.160575558 seconds)
    (218/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.215342417 seconds)
    (219/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.871864016 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.968860368 seconds)
    (221/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.13902537 seconds)
    (222/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.890422226 seconds)
    (223/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.893825722 seconds)
    (224/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.996645532 seconds)
    (225/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.864645136 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.178606057 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.72084006 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.923040931 seconds)
    (229/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.853874627 seconds)
    (230/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.463074747 seconds)
    (231/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.026017376 seconds)
    (232/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.976377247 seconds)
    (233/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.634484039 seconds)
    (234/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.832077131 seconds)
    (235/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.877210193 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.097512828 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.210536014 seconds)
    (238/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.485974167 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.902420416 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.973567008 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.167463269 seconds)
    (242/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.959265933 seconds)
    (243/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.946659212 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.156816867 seconds)
    (245/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.355074048 seconds)
    (246/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.084163812 seconds)
    (247/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.443951571 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.514580378 seconds)
    (249/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.963491842 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.685252279 seconds)
    (251/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.892380062 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.171302294 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.257685327 seconds)
    (254/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.096113094 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.962130218 seconds)
    (256/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.442420053 seconds)
    (257/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.260509583 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.89853234 seconds)
    (259/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.037205986 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.00311025 seconds)
    (261/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.93375002 seconds)
    (262/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.872062423 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.290886951 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.236087719 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.508651272 seconds)
    (266/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.014507048 seconds)
    (267/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.860431345 seconds)
    (268/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.998262117 seconds)
    (269/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.888910704 seconds)
    (270/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.244795071 seconds)
    (271/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.728055661 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.569378128 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.872419528 seconds)
    (274/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.87578037 seconds)
    (275/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 5.543197967 seconds)
    (276/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.061667213 seconds)
    (277/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.879524733 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.012604516 seconds)
    (279/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.960893601 seconds)
    (280/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.902864639 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.954604565 seconds)
    (282/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.274399502 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.022751756 seconds)
    (284/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.799124638 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.991877767 seconds)
    (286/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.232965273 seconds)
    (287/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.997535211 seconds)
    (288/309) benchmarking ("sort", BigInt, false)...
    done (took 6.963925005 seconds)
    (289/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.209211852 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.706361007 seconds)
    (291/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.857057781 seconds)
    (292/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 3.394952748 seconds)
    (293/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.145510237 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.175019131 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.856817309 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.905961799 seconds)
    (297/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.898392399 seconds)
    (298/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.874207278 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.182577332 seconds)
    (300/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.88024737 seconds)
    (301/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.876152632 seconds)
    (302/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.260062636 seconds)
    (303/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.419126461 seconds)
    (304/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.021193765 seconds)
    (305/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.376520045 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.273749906 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.895177518 seconds)
    (308/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.709878752 seconds)
    (309/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.463269996 seconds)
  done (took 1020.142721062 seconds)
done (took 1021.998537237 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.907888379 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.900281919 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.883058059 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.904069213 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.995591376 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.917037371 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.894035171 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.885738282 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.930623641 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.932645583 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.883687945 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.916605627 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.885567743 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.884621322 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.883506598 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.898112164 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.200848316 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.916493339 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.901218766 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.893274705 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.900664565 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.883671124 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.933346122 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.924631822 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.887649441 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.885753993 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.887908126 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.904251442 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.996715758 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.888758868 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.886194137 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.896463653 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.198818417 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.914512695 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.879272702 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.905316678 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.896110863 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.893395946 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.888558559 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.9175709 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.352346199 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.894242283 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.887111997 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.885340803 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.886316787 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.88936139 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.88812083 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.891168032 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.898875567 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.900536252 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.34332695 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.909307964 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.889108863 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.886623413 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.896362282 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.887475054 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.888899038 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902173018 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.90675271 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902352935 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.192051313 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.920966158 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.887528086 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.904154606 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.89385282 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.380575333 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.889771251 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.889872135 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.353295728 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.897850235 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.381514064 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.902485515 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.887964225 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.902864777 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.920068167 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.20085207 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.913050817 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.885693862 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.895663406 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.887240681 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.897747061 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.901791575 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.892730983 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.888999083 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.902071459 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.922307905 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.898037534 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.88975655 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.89649928 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.908516112 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.89566935 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.900627699 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.891255757 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.883527658 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.89753939 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.890875943 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.89177383 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.892308456 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.893375285 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.898186401 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.352676971 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.912832598 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.884526314 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.884580867 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.887304225 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.90268035 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.349972015 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.898260738 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.910718005 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.935700881 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.889703618 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.191815179 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.924866933 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.905769468 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.897425271 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.89224495 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.884172733 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.19272148 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.379693652 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.912524212 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.890391368 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.888587694 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906376693 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.89069359 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.886070625 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.206134493 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.921993221 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.904622711 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.011644896 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.899906718 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.922216232 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.890255637 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.89321744 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.926044845 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90649052 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.922397269 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.892539954 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.906953246 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.907563583 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.886572826 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.902144648 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.900319147 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.891530035 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.896614758 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.886356275 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.927043772 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.906180611 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.905287728 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.912783506 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.012997855 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.888457637 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.194953758 seconds)
done (took 296.988283501 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.96183279 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.887237342 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.989243729 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.888973438 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.971458514 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.977324937 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.884940005 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.886024557 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.885572633 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.262134838 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.885563896 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.886979054 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.883899729 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.885860563 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.973304109 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.889734444 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.886461801 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.22558013 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.889859603 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.961726868 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.886752576 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.886585983 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.889093509 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.26113478 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.891439832 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.888070731 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.962049413 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.889650672 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.22882336 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.887153736 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.892341006 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.226697947 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.9815058 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.90790952 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.899737326 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.896779763 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.974094634 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.894569547 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.97225956 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.972426236 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.990280242 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.930345627 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.884207112 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.88355636 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.893787698 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.892881796 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.887361848 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.918495806 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.891112614 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.887789682 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.227249955 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.900793584 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.888255142 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.887831042 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.888698413 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.922378567 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.889270972 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.892914723 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.983338909 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.892789652 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.955134317 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.266135094 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.263885121 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.891841225 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.892574807 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.888902367 seconds)
  done (took 185.664042372 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.958572921 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.964782707 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.958664615 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.89936848 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.941992634 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.959954261 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.897907048 seconds)
  done (took 15.402077453 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.897971517 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.892997509 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.941936066 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.94187833 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.893475995 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.041038497 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892421122 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.903866872 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.889755918 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.945794 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.89366406 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.892643608 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.898752702 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.894612998 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.940646966 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.903073669 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.008657637 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.894217791 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.893724668 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.045294616 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889748473 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.899503608 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.947261174 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.905083692 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.893683914 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.899972233 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.477201235 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.894016532 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.890569972 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.89435704 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.890861247 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.9360751 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.894706223 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.886911566 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.891247281 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.010016805 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.894561263 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.89106286 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.89437801 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.891548784 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.894093614 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.894436126 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.894481828 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.891042378 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.892905217 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.918019883 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.893963385 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.894124332 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.894748662 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.895408807 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.945065088 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.894701572 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.891288043 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.892411863 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.949721258 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.901341767 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.896243748 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.892402989 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.8950813 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892333349 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.046308231 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.942855377 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.895703623 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.943401108 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896359298 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.895166084 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.895631312 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.896077195 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.990770267 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.895421371 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.94419136 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.892196866 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.054393067 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.919705285 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.896991483 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.899410954 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.900051667 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.896646509 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.891894549 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.902787891 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.89373141 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.89734985 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.903826564 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893984795 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.893757867 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.010222818 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.005537672 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.893720542 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.910122842 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.903465882 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.894413759 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.949329719 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.896169294 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.893039385 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.951307963 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.013266769 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.952247756 seconds)
  done (took 208.269661009 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.901640023 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.904786728 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.898899858 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.914165076 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.896994955 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.897957324 seconds)
  done (took 13.240806055 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.900676665 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.898607182 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.897429045 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.897769391 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.897937464 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.898654766 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.898655862 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899899339 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.902206869 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.898235692 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.89935284 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.899234394 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.898279524 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.896905727 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.897706434 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.896669914 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.898287949 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.893783913 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.896427103 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.897117124 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.055777672 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.89682598 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.896711503 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.897788911 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.901799466 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.896584976 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.905069656 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.896425282 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.896507111 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.905124391 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.901100596 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.897560314 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.898487412 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.904665291 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.902392073 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.899374814 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901049483 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.90035581 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.894631552 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.898328656 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.899337881 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897846215 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.896785193 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.89969517 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.90019958 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.903595091 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.903697856 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.905339469 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.898488395 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.899911517 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.90055639 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.897547131 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.899802805 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.900465572 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.900648789 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.903967923 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.904730551 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.899668809 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.89881826 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.899822196 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.899694233 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.899709754 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.901312487 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.903195231 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.896016177 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.900913183 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.900033699 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.903466316 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.898849532 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.898746813 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.900615814 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.896215864 seconds)
  done (took 139.749754364 seconds)
done (took 564.161507371 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.975144699 seconds)
  done (took 8.803690317 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.03203608 seconds)
  done (took 8.946710996 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.518399466 seconds)
  done (took 10.346866089 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.911793253 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.951405235 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.894289585 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.89506029 seconds)
  done (took 29.494503349 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.02290484 seconds)
  done (took 8.851658125 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.906984207 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.892262219 seconds)
  done (took 15.661970674 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.951539823 seconds)
  done (took 8.781277583 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.05596684 seconds)
  done (took 8.887520056 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.915540493 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.930283139 seconds)
  done (took 15.689349319 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.878756307 seconds)
  done (took 8.707641865 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.62165781 seconds)
  done (took 11.457082103 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.899803928 seconds)
  done (took 8.743684632 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.936941133 seconds)
  done (took 8.766226801 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.984008198 seconds)
  done (took 8.813284482 seconds)
done (took 163.778880974 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.900501944 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.897440026 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.896473591 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.895744827 seconds)
  done (took 29.419618951 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.933438217 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.933639696 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.934973258 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.944977712 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.937469773 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.934182878 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.926375565 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.926221403 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.945093167 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.936962711 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.936087643 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.936913553 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.934514907 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.927712526 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.936943726 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.937703143 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.946215158 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.936543609 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.927208067 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.937755088 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.901629193 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.94551397 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.937312858 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.902339049 seconds)
  done (took 48.228584038 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.098410934 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.972622713 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.055744067 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.953701091 seconds)
  done (took 9.911536717 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.952133874 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.954621076 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.967051379 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.004598117 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.028926149 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.965222688 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.928566131 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.923599924 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.909940234 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.955477938 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.030353133 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.950224772 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.057798816 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.901596459 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.08994309 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.902463256 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.901533206 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.954302554 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.00483007 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.019500338 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.902762713 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.954588692 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.957798646 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.949703719 seconds)
  done (took 48.999067243 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.900625953 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.910484692 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.908870484 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.9022211 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.902716902 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.903256713 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.908497035 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.904476825 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.923682486 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.903760021 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.902531534 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.901927254 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.902843319 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.902825424 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.901754524 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.91468945 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.916191786 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.902635931 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.906539642 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.908432316 seconds)
  done (took 39.962113523 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.896806952 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.750977397 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.248995348 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.154343572 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.897868311 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.896658899 seconds)
  done (took 31.679113878 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.917780809 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.912503521 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.904159895 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.961821028 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.045937615 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.91349572 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.904507017 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.916104676 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.953482315 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.971459491 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.927448437 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.933346213 seconds)
  done (took 25.096835168 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.900699276 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.901444657 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.902165245 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.917918865 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.915732809 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.915877883 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.912052536 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.897854383 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.920699278 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.92531183 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.91521399 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.918977604 seconds)
  done (took 44.783250277 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990209989 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.790624852 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.962797227 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.620194902 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.377420141 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113155493 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.414734682 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.245453188 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.905813703 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17500473 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.021564293 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008802385 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.155627225 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.900963125 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.917420373 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.396233734 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.196981982 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133538343 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928959421 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.665643558 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95223384 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.494022244 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.750790994 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.96147603 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.113641704 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.034460609 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.162598615 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.860832462 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.038316571 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940348378 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912918086 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.903122313 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17673298 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.283166389 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001524111 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.91426737 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.556613583 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.626876222 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.890435663 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.668956565 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.707151842 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.023537183 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912721433 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.90446244 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.838274594 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.49460027 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.28970711 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.909255337 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.614434382 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.904138661 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.914973978 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99195018 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.906858375 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.719776331 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862219028 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.188101311 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.900988659 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.910942341 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.476005812 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.013432161 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.534836108 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.885433018 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.098961964 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.701205373 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.303912315 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.052602346 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.908263828 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.908916264 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839151373 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.673320945 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415753215 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061917618 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.925870924 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.553652896 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221370919 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.066616484 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.849955275 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.192989931 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.784022202 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.887676577 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.133991916 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.856863472 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.840388489 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.772137059 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.840524122 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.172728369 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.943247822 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.547331596 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945590687 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.241715453 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.916329997 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922955208 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913675038 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.129930499 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.471699141 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906793083 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.74161592 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05197713 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927909197 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.242400907 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.842053578 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.911024171 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.162275226 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.118165846 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.239958572 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.444509118 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.063183705 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.907901721 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.989285257 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.908910813 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.960174837 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.182954805 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965643204 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.010155251 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965801001 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.87010369 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207491758 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933916717 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.077776817 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.033657159 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037076203 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.25116208 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.200524001 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972971662 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907626276 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.908822794 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.719974767 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.462217737 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.175614104 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.909198917 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.488504938 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962350087 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.911025842 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843887078 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.540463944 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.025141844 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.883034961 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.132537583 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.910147779 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.222494334 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843724092 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.05534765 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.023458308 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.133156803 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.557571142 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.980544578 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.167972944 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4877762 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.264560233 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.96390418 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929537538 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998981043 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932544311 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.422349426 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.207352996 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.914022446 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.913761734 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.73647911 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.91417186 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.910882622 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.91577249 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.730654731 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.200953918 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.936936164 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91551345 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.800308735 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.924334759 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977344512 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.915493355 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921227543 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.456948269 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.661019079 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.924322547 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.539024694 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13665488 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921095046 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.662904056 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024450213 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.993149902 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.18990273 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971058748 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.846051607 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.622971328 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.604855257 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911948831 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.847044974 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.913006487 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.92099802 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923016482 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.292594089 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.193985308 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957877566 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.784821268 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.955669309 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.923626614 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.917462937 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.913749556 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.457892548 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027770797 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.559412734 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.964193167 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050165721 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.927408202 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.848259945 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.916797194 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.918192575 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.91305432 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.870348782 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966220443 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.682051077 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295215146 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.172260252 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.562059345 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935225203 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.814603278 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.972695019 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.93103717 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.770364373 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.929781071 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.947709375 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926449624 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.925578516 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.691836658 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.623278361 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.482931222 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234285221 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.236365687 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.364013667 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.48960879 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.222559803 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.2526728 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150179731 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.443946571 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.97710899 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259130961 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858984602 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.99827093 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.561401535 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261735799 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.929639235 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.14369411 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307235609 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.686551986 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.085801424 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.126420307 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950380873 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.906815238 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.88255033 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.120856067 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056572071 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.714689671 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1154137 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249535579 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.630114307 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.033563683 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.91567728 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.62035166 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000372022 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.629744198 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.277500682 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.515619976 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.949226634 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.386524976 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.920461617 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.361485572 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271399361 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.310914746 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.043562993 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852758552 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927671136 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.927271954 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.917357 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.913325478 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.800779173 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.170072542 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928568505 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152559239 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.270063324 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222120767 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.822487987 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.924569329 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.91713036 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215491822 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.798205687 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.090027076 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.46734024 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.453927552 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921415709 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.852367749 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852186342 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.611056943 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.925742281 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.893885236 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.143131439 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.102110703 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908346903 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.500080445 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.167137238 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.172896922 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.931429395 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.199100996 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.193580223 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.654057554 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949677063 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.019153894 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.62185003 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.023241501 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.187969783 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.154555048 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.740760029 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153450309 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.976919363 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.735091799 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.919084112 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136138875 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.187995729 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.902173791 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146780205 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.641565926 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.922475546 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.235101839 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.978970437 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.903908373 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.0665217 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.115875783 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930464586 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004885902 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.92976883 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.930507826 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.930962265 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967678453 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.90303182 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.03980149 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.933751467 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00933133 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.032974623 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.458280155 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.927454182 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.203084713 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278776529 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25077999 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979450356 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.920451312 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920736839 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854730629 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057453353 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.366468605 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.194874947 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.051777898 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.221600433 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946648595 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.920629923 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.378368703 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16929233 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19582815 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.81652137 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921496328 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.935285459 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.188469462 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932703032 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.133389023 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.157888468 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244260214 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392661457 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.251092863 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.294600492 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19584049 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.290804623 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.922404516 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.510293713 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.935177392 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.627323923 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.962574334 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.037399585 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.184407514 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933495484 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.302746195 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.945274299 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.122046287 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.43987944 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.70039151 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.212607796 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.906367504 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.980563256 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205435734 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314841943 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234931662 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994419026 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.935042515 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.63794026 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061882388 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.814433549 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.192358634 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.923987238 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.134206232 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.63968614 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.93302396 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.202151334 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23022288 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.921519186 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.818491599 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932495474 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.934011019 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.147774377 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.187219682 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175069004 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.934374257 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.932527515 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.738997305 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.199792571 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.979039859 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.858683922 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.928188734 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021913769 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.172132446 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946670123 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.441244172 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.635422378 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218377872 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.841577503 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.946327255 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.519961676 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.299275584 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.246303103 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.469276109 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.151642146 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.483506628 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.926572895 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226485116 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.930068199 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.527651837 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235585591 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.930189598 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.629119378 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969608535 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.200441415 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24266591 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.932724938 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.689410063 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.894933964 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.149601969 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.518088982 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871000081 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927021854 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.98551079 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927509835 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.05528722 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.938069146 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.814810072 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.928388988 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.676447366 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419684488 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.932128831 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.91504783 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.670146885 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.646645373 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966015854 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071492992 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.938275291 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.637455752 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.21967459 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.181575207 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.630995906 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.939177275 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.931551299 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927986503 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.856753916 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.123856364 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.308661763 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230626714 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.473811149 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.970250818 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.9323127 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.144383257 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140166092 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.870439177 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058634089 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.506975999 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.97253623 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.69032271 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.607701005 seconds)
  done (took 1711.78235161 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.939330678 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.962476554 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.990148268 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.967411381 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.967444335 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.00456736 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.026103792 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.023536009 seconds)
  done (took 57.745206072 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.927598005 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.129493698 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.939279434 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.930001394 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.939735365 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.929847553 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.101365253 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.941674257 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.938903744 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.940147256 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.929582445 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.930280886 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.25827789 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.956605679 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.930006077 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.934951819 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.943341442 seconds)
  done (took 75.49681239 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.930118824 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.156003443 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.965493731 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.948656581 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.898220015 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.945718731 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.935961455 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.959490661 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.938406257 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.166323422 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.263762047 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.966299332 seconds)
  done (took 90.940547428 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.942246611 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.938298232 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.938002999 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.937736875 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.938464055 seconds)
  done (took 11.565036357 seconds)
done (took 2227.503641853 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.178940824 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.151190222 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161060013 seconds)
  done (took 6.178333694 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.081743829 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.128333071 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.250356173 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.255189208 seconds)
  done (took 10.585847999 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.22756375 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.318257365 seconds)
  done (took 6.412439698 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.350997885 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.941438427 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.334201541 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.929878103 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.934570284 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.936132311 seconds)
  done (took 22.672238773 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.935308285 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.939171548 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.936185738 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.938859659 seconds)
  done (took 9.617010463 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.916670373 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.66221998 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.916026296 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.929378836 seconds)
  done (took 21.291904381 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.685243958 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.334411246 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.678406471 seconds)
  done (took 9.565539937 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.544339867 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.819560913 seconds)
  done (took 9.231043874 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.192715939 seconds)
  done (took 4.060251283 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.964407896 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.206573295 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.480641618 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.468135626 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.540593158 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.856999811 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.273392084 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.196272535 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.352714788 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.378695171 seconds)
  done (took 25.585387396 seconds)
done (took 140.87046915 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.32130317 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.171566198 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.131895076 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.28458795 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.158091377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.131168132 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.148167892 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.268576246 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.784750853 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.77996224 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.284218481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.153911643 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.093433685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.168274798 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.099476069 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.169047664 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.154972853 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.338180102 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.982806702 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.178577846 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.158267039 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.91166226 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.122904322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.925215524 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.156771935 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.084817844 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.503668788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.170986177 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.133033973 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.511470447 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.08718891 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.332074404 seconds)
  done (took 174.770598581 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.935139518 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.93590952 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.936680206 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.936876098 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.320417265 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.938562847 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.936708751 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.936607483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.035975306 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.020568456 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.936101526 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.313278086 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.935840949 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.936069032 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.937064462 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.937432118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.214747358 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.936754507 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.94053515 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.942573677 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.945556101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.157358395 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.945977708 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.184011051 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.210232364 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.948298996 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.937305868 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948630684 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.940558362 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.943516367 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.943639952 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.937542941 seconds)
  done (took 209.878226883 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.936513136 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.938262042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.937197097 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.938520613 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.938797781 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.937228827 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.94089899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.936704121 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.528753818 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.529187592 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.941330538 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.943310559 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944989581 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.938187837 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.948449759 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.938732941 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.947775677 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.947842402 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.944029531 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.945684156 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.949810983 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.703748859 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.953667728 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.704223416 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.949606083 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.949341301 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.938884484 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955408051 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.961220425 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.961876832 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.960778253 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.938706105 seconds)
  done (took 222.808775891 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.135234252 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.945193185 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.946885512 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.885173683 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.947017717 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.945468507 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.89913478 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.142308439 seconds)
  done (took 19.745865765 seconds)
done (took 629.084569363 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.427599977 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.286547177 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.13124424 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.970326895 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.206442974 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.012323139 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.965309668 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.031679129 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.705468858 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.041281067 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.622435286 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.986031747 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.712482113 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.991663612 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.088321484 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.023618272 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.514117309 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.612361433 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.149966418 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.032722971 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.14881779 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.93282187 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.046102251 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.722328682 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.737380221 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.978699493 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.149867931 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.5244521 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.976959523 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.127337087 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.738047771 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.366738243 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.980320246 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.965725113 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.02311599 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.002419788 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.325331124 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.978530638 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.089167668 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.736951038 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.036696407 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.588520088 seconds)
  done (took 106.563204583 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.937140232 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.935322143 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.933789805 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.936102269 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.936021586 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.934874668 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.935049901 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.933330405 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.935518461 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.9350679 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.935180043 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.936161902 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.934567281 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.936703913 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.935203384 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.934605135 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.936293632 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.937300772 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.934712253 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.935224068 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.935854893 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.935215182 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.950281098 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.935395156 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.937297767 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.936570872 seconds)
  done (took 52.228491241 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.949428064 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.102797587 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.208597732 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.969826598 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.949620914 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.953635694 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.968974121 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.954709769 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.95198824 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.952021839 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.056965536 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.953968261 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.968417642 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.207191466 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.96498115 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.948205785 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.948118408 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.947714522 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.106849786 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.965880923 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.970162801 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.953461924 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.968665584 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.962901668 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.950535332 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.948942811 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.951665024 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.422282032 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.958857102 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.055495708 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.993351484 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.970929004 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.37112245 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.219068274 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.004732034 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.956111272 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.949345755 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.060186229 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.9556765 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.949873943 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.968454116 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.955081522 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.207600805 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.447599659 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.966115148 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.949506381 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.434848952 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.069265572 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.992220957 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.963076416 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.211477321 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.968655435 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.95164332 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.951220388 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.987108183 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.960427154 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.950630348 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.271490451 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.963248331 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.970259152 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.956151458 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.951199628 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.111142065 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.960818227 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.100077381 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.962641287 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.957691279 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.951548893 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.209314872 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.968649097 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.448122707 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.965494197 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.951920681 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.056156329 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.105569886 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.466686154 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.965916002 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.113640648 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.389481449 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.978294415 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.959222798 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.415394639 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.981235593 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.959542989 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.95344163 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.953328994 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.952183281 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.996490306 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.968858866 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.370041815 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.454944574 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.286298618 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.980438817 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.969039282 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.952990981 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.26926303 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.96304344 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.953202216 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.205228614 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.460503485 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.967947652 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.96198218 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.4305322 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.969589133 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.972782902 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.962615186 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.216316892 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.971169026 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.997146833 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.953793791 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.960640329 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.956531192 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.973734876 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.960907641 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.954213856 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.422269781 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.081970544 seconds)
  done (took 241.915233235 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.949568132 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.963209104 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.946293824 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.949401819 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.946988274 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.953217943 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.946866218 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.947222215 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.953469642 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.948134084 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.949516142 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.947205777 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.949635508 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.956798394 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.429232924 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.957243195 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.561765951 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.95145847 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.949790415 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.950067596 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.627794322 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.957892424 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.950127677 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.956600918 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.951631729 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.951303512 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.953512124 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.987089021 seconds)
  done (took 170.32800347 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.957093303 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.13668413 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.97902949 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.995202309 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.965454472 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.954840496 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.980789213 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.97802579 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.963051257 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.955598081 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.955786677 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.018647071 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.968787542 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.099606074 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.988974357 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.987857805 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.06521885 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.964431466 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.955487003 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.955146636 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.986800348 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.952098583 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.018319836 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.086117144 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.976860092 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.076071041 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.96283703 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.958787157 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.957945906 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.075475166 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.972742106 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.018414873 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.991104914 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.976317262 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.07993684 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.077400704 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.065048749 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.987064252 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.962668891 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.95627578 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.956886879 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.946224133 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.076971795 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.979814673 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.960134271 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.06686984 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.977283392 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.960212864 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.968446374 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.956361831 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.972773303 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.977740907 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.025330785 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.096109381 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.992678956 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.984677483 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.983901204 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.23695728 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.969990554 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.059437265 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.952862901 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.078656134 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.980413473 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.946923801 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.958550243 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.96388094 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.987343185 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.990807033 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.064816896 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.96747822 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.060470217 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.994533933 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.965247044 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.958152152 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.960760331 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.079131356 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.082711804 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.997392737 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.998181387 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.991771176 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.955310826 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.959312383 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.948328696 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.977290849 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.964615782 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.077928248 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.078567608 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.96779762 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.962569916 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.961448176 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.962304377 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.985802039 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.086256096 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.000528769 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.058375336 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.029172387 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.037337057 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.975258075 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.973450424 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.965168463 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.025095726 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.976587216 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.97296891 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.28622057 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.033091431 seconds)
  done (took 212.202433759 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.434730361 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.017241435 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.02062211 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.293804926 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.397382169 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.873510588 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.014241539 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.009643064 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.035459506 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.196027653 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.082185359 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.029660379 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.999610332 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.984548366 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.008766816 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.031168988 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.026503434 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.336636677 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.138785911 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.118476751 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.995492715 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.303135782 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.333832868 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.443021268 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.04625617 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.337991072 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.701018015 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.153890357 seconds)
  done (took 64.260094805 seconds)
done (took 849.370350466 seconds)
SAVING RESULT...
DONE!
