cset: moving following pidspec: 31378
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.400704746 seconds)
loading group "string"... done (took 0.509566793 seconds)
loading group "linalg"... done (took 8.724888814 seconds)
loading group "parallel"... done (took 0.172348591 seconds)
loading group "find"... done (took 1.229141149 seconds)
loading group "tuple"... done (took 1.975832244 seconds)
loading group "dates"... done (took 1.460193354 seconds)
loading group "micro"... done (took 0.202389766 seconds)
loading group "io"... done (took 0.533723022 seconds)
loading group "scalar"... done (took 50.533477987 seconds)
loading group "sparse"... done (took 13.401347239 seconds)
loading group "broadcast"... done (took 1.262362944 seconds)
loading group "union"... done (took 9.724650367 seconds)
loading group "simd"... done (took 3.142427858 seconds)
loading group "random"... done (took 11.675576275 seconds)
loading group "problem"... done (took 2.171360131 seconds)
loading group "array"... done (took 24.384667041 seconds)
loading group "misc"... done (took 1.09237967 seconds)
loading group "sort"... done (took 3.674904905 seconds)
loading group "collection"... done (took 18.970971714 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.593223343 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127344836 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.204157556 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.346229135 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.229349969 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164462283 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142216737 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.241037104 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.517125223 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.196821034 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.136445884 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.498114716 seconds)
done (took 6.119003452 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.248307319 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.238931763 seconds)
    (2/2) benchmarking "String"...
    done (took 0.161050111 seconds)
  done (took 1.069213207 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075209407 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.154187155 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.10602388 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.092522499 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091557286 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.10736753 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.090259597 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10754801 seconds)
  done (took 1.42180629 seconds)
done (took 3.484258441 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.491122829 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.848137444 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.480133813 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.13975312 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.308613643 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.28906322 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267160763 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.19823994 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090356272 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.087434209 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172445835 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.375267986 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.380262265 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.919666883 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.09036483 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093050985 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.128778119 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.744325483 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077390829 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108297797 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.492507166 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.182915556 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.09859215 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.119870069 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184166613 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130701411 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.15870388 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.099100179 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.659235795 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.128880498 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176256706 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.096189191 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.1577405 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.182346141 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.190434688 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.108149169 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67047249 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.197980484 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.08798862 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09686043 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.657219334 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.114191904 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.181036871 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.101082166 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.086738179 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.179042496 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.091106767 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.076193169 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.107224996 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084531923 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.159990893 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.4440505 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.102444713 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.16830309 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.091540417 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.689926284 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.094634015 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.268941195 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.122069792 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.092202363 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.088352285 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086627665 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156426591 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092249865 seconds)
  done (took 19.551331488 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.143916008 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.160960764 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076840804 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.154587802 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119884489 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07835253 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.099770003 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077621441 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107527395 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.192307769 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136346855 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.150253491 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090744334 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.087742574 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125329998 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24714447 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.106100297 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118364728 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088629027 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08819669 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137375099 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095890499 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.089756014 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.106420908 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.168383258 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.200205965 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.107621259 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.121144692 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.088904314 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.093957386 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.139942309 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142391011 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.090701966 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.086726812 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169759159 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.120109906 seconds)
  done (took 5.096056711 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.194730258 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.119990707 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.202121685 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.156981863 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.144276726 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.165246166 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.123576714 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267284512 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.288227863 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.176121684 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112175219 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.119707661 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078397531 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07952677 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.0767815 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.460823699 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.147626737 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.159616106 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.125859621 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101365596 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.080764296 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.379946757 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083066192 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.092800496 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082442827 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062330003 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.132853009 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.188655867 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08241058 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.106715711 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.103910305 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082026942 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131409828 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.191630006 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123763051 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136005221 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08361007 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.074799565 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.22006892 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.103230181 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078258515 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.114573097 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131538856 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113744535 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.094628741 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.083656758 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.218624328 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.093475931 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099544169 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.082192218 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193574603 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.120924688 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.075932332 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.149630266 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098212776 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097177683 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286783186 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.079004934 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.081201469 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.805722426 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.111453681 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079134304 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094742636 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081056749 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077394631 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.426964493 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.099732122 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.312026462 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082802206 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.154766411 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.078070298 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09596526 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.08577689 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084207825 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116655525 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.081934126 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.077879474 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.077060018 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096092796 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.079317032 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079044449 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.129657966 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083224557 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.093942817 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144511593 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095376411 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113634382 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107273963 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096263321 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.076895833 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125442321 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080954961 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079466215 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.169238165 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082214784 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131116159 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080649837 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142124866 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079948774 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.237707063 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080133163 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.120918752 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099127384 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124406679 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098536796 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078616402 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098888915 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078186672 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078607127 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158640694 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.079278293 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078978923 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.078714176 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108324419 seconds)
  done (took 27.748397849 seconds)
done (took 53.065871932 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.427736297 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079963574 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079929834 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.097362727 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.079007075 seconds)
  done (took 1.507465528 seconds)
done (took 2.227641222 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314514133 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.184459844 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100886397 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.183125845 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084623367 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.190224912 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.176857832 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092599723 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200740237 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083164051 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.179384065 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.082325768 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.100740869 seconds)
  done (took 2.71925208 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100295094 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.108174569 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099389777 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117126206 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084553735 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099628419 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116003675 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109233154 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100162604 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109619768 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08329437 seconds)
  done (took 1.84807606 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097475041 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104428646 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097314817 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114181723 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083020838 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096937038 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113200429 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.106900446 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096517623 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108666767 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084034472 seconds)
  done (took 1.823928358 seconds)
done (took 7.109592878 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.06573236 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.318014541 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.162365734 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.205805122 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.341643788 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.229991777 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.555322468 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.149763115 seconds)
  done (took 13.896631528 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.119364944 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088374965 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.109286249 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.130435256 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.092653207 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.106904036 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.088805919 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.090596656 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.109933031 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08934626 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.092679386 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107899004 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.090396387 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.089585853 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.090997415 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.107809714 seconds)
  done (took 2.388523236 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.13965789 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.137403532 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096688872 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.096899394 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.109571413 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.097219203 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.099210673 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.112172732 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.092619421 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093636796 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.099828567 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112314861 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096720386 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091543663 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112347063 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116110166 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.091834193 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.112575627 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115147251 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.113070028 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097705697 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094180529 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111714844 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.09751864 seconds)
  done (took 3.342415027 seconds)
done (took 20.350943658 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145670627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.098820652 seconds)
  done (took 0.97044189 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.136451386 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.151686445 seconds)
  done (took 1.016763479 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.1088643 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088046248 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.132821645 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101279332 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.088841043 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.104111078 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114023611 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104156849 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.089119149 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.089796121 seconds)
  done (took 1.754047445 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093489297 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.09351332 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118555807 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.132315387 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.096521081 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.108681145 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093718265 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.091766249 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.11160105 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.088913225 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093534395 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121786838 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093668054 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.122146995 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.092704481 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094429547 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112203714 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.092309421 seconds)
  done (took 2.587273254 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089376296 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.090066112 seconds)
  done (took 0.914698628 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.091013037 seconds)
    (2/7) benchmarking "second"...
    done (took 0.088290252 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090250435 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106695099 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.088335656 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088394977 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104313207 seconds)
  done (took 1.392738612 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.479678038 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.258135091 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.352239422 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10579873 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.141917345 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.345238482 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.142900353 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102416083 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.219398889 seconds)
  done (took 2.916379239 seconds)
done (took 12.286498689 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.089592008 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.216500954 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.614522588 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.110900759 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.088847866 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.156732457 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.276864502 seconds)
done (took 2.296373791 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.334344149 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.140396663 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081444629 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090160074 seconds)
  done (took 1.382281656 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08007134 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09687357 seconds)
  done (took 0.919698675 seconds)
done (took 3.046955199 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086903857 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.088121482 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.086084398 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.103523365 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.086231978 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.086334191 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.085540273 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.102912824 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.086496946 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.117131331 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.104957065 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08653412 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085719265 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102978517 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087674991 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.086356784 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.084586794 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103161559 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086099553 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085937302 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.10134306 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.086571482 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.087099575 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086154997 seconds)
  done (took 2.980264407 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.103813105 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.088952522 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105793735 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.091745096 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.090917176 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.106922218 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.091659879 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.08909074 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.106589782 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.08959463 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091587321 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.091986587 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.105796706 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091338116 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088204965 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.108358141 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.092425089 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088856353 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10462917 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.091806618 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.091953058 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105405683 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.091753411 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092428466 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.106642931 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09194706 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089348853 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10556802 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091457181 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09352868 seconds)
  done (took 3.626563539 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097904867 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.08429414 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.087102813 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111847011 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085653383 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.088002224 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.10188552 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.085714333 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089075657 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08660407 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105653742 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.087345478 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086120332 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.104550929 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.089865767 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.090782838 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094729287 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.103486791 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084753844 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088852392 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.10719884 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086482209 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.08799511 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.086462141 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.103174595 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.085434801 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088327228 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.102866478 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.088682975 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087864782 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09040416 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107098618 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.087894541 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097817832 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105758939 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.087188257 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.093205111 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.100100065 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089743217 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.084578954 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083182937 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.102958115 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085165894 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093238929 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.102878419 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088564791 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.085502089 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.087710264 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.104016877 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.090503866 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083878852 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.101041784 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090213774 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.088765951 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.089275675 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.100596431 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.0887924 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084115379 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.104018337 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088007409 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084637539 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083726286 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.107979287 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089067291 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10104134 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110653607 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.085576094 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.089623911 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.103816022 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.092663446 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.09064895 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113033111 seconds)
  done (took 7.467297863 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.09953419 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097217232 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.087951311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105850167 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089567125 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.087922366 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110010012 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089877351 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089948147 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.110329656 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087573639 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.088938737 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087617017 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.105616461 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.088170102 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.088326883 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.11055383 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088594322 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.087974869 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107578013 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089005127 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093229965 seconds)
  done (took 2.843019128 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.233661049 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09390188 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137131956 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118165934 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.105721366 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118791601 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094453038 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093250403 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107809111 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098028236 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098522929 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109578734 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106431218 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096466138 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114805194 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097904452 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10804934 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099593918 seconds)
  done (took 2.787996635 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.102980252 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.093186012 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126247998 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09067305 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090098574 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.089056501 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.112501795 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107994279 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.089339478 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.107438898 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096469231 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091991916 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108698392 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091299471 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.089365215 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107426096 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.09068158 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089164005 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.113116901 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095754604 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095555699 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114382804 seconds)
  done (took 2.950377773 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101995469 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.089659503 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124298589 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.093215437 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089440997 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.088314948 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113219023 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.089949235 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09513587 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.10697519 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0898774 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089383639 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121263263 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091092693 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.094925925 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107489732 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.090049127 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091077249 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107160034 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.089166563 seconds)
  done (took 2.721071923 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.164937329 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121637882 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.105715491 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112864003 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123795002 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107258576 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114263705 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124264286 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105424064 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.131348466 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105370984 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105407556 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.130846188 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110687547 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.105853754 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131287437 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114461037 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.130158574 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106016204 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105866468 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.133376453 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106364853 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130409069 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.105174281 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.104191801 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.123349808 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106086649 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109617253 seconds)
  done (took 4.036611803 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088791755 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.08879601 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087340688 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105885803 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.089472074 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.088096456 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087585531 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10580541 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089225941 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08765372 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.10603861 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.088806715 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.088560009 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.087391727 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105495647 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.089778036 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088473189 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105108513 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.089447684 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089607979 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088347007 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105403583 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090004183 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.088694221 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087370837 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.105968647 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089100087 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088167096 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104966698 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089363774 seconds)
  done (took 3.558899441 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.101318573 seconds)
    (2/2) benchmarking "in"...
    done (took 0.100163783 seconds)
  done (took 0.965724409 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.097056888 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103393818 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.087983252 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107761942 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096269319 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088409511 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11488123 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096421261 seconds)
  done (took 1.557295486 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.138366748 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.156597969 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.094770694 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101158886 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.15817952 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.148837532 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131933951 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09355289 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10519455 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.082983394 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.132431705 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101276517 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.089493249 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086590119 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10878245 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097059366 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090231802 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.116582009 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.096072538 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.090867847 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113638204 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095399365 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091704668 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119179832 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086462022 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093183363 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111235596 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.101512047 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.085863173 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110427532 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089110488 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.090024383 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.109334399 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.094943222 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.090911947 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.15728408 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098005448 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086845412 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109058572 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094804418 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.121678989 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.108459591 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.091722139 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.087463352 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111404233 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.09491845 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.093355886 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.10744154 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084536186 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.085591087 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.107652739 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086163051 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090094175 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108394236 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092348645 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096882308 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.108550663 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088096407 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087141444 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.084593144 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107023277 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087230101 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091562615 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.111522458 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092804227 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.089815214 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107520924 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.090568246 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09108499 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.108823013 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090452658 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104926236 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.108704898 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.09438408 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094026464 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.108048548 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089486705 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095364867 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106017806 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.091881556 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.093608294 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.13518516 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.0931736 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086311053 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.103412576 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097767134 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092448859 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091928573 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100909941 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099873479 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.092472215 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.108198514 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084254664 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.08793592 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.1043394 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094915107 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083798589 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108606564 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090574589 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.096417485 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093748296 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107035002 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093064107 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094436812 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11407746 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090174053 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.150387148 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088431918 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086530151 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.110302217 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.095441833 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.08404262 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088381272 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.107319751 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089436613 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085894475 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.113115212 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091130669 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.091149543 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.111690586 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092807415 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091760131 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.109491234 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091081037 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086938928 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.111495379 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098825205 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092016278 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.092979441 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.109521865 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091280524 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089217729 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.112640111 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.087846121 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094901372 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10503812 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091298431 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091587548 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.112082595 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092421303 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.085962624 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.106054105 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.092182715 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090396921 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.091960584 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11015986 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08655464 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082387901 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.110681544 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087709325 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.091033314 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117071126 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.088086116 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.092380077 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105013502 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.099204418 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.087833904 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.113949552 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093240008 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.096658722 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113749671 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085393589 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088274775 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.092930727 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.11077528 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.088340927 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.091636219 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.108539463 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098138371 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083508497 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.111520938 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083900028 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.087983079 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.094788754 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.113053292 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.09357491 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085332489 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.146674184 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102339822 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093621812 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108122098 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.091597864 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.093510706 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.111400513 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.095078705 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.095255912 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.112961267 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.08877213 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089310842 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113593071 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.088286559 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.094116325 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089581795 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11060847 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.084956332 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.090411452 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101562049 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.096045734 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094086617 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.113704304 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.095991515 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.092325993 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.107985367 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100102818 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087596459 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.111577804 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.084172296 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.095366376 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.100566242 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11548253 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097229917 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092085143 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106794568 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094174439 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097919901 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.110708456 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.092791165 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.092091152 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102547735 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.086110169 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.096797148 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09349077 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10552075 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092481453 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092609018 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.111158796 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.090375222 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083843665 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.113662731 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095820843 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.086410556 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110016749 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088529116 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087718234 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116903692 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084747113 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088092525 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110721697 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096252505 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.090869371 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.090239042 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.113404432 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.096720206 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.093565761 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.110930324 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089910318 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098354139 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108189631 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.092326644 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088168037 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.093237233 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.104209592 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.093253924 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08944386 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105899912 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.088630308 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.093816359 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115843586 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.096612706 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089052373 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.11279895 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.09784994 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.095741048 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106977401 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.096384239 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08681543 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084816569 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.107008274 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.084286486 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09223749 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105609014 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.096280577 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.089946047 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107665303 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.095156176 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.093594049 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.107245771 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.096358781 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100687269 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104052132 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08471374 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0882443 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.109726272 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.097718677 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.088194389 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.109676679 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093588547 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.095763193 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111042105 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.088425846 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.091721924 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.096009841 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.106863326 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.097486658 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.096171067 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.114594931 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.088769728 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.094311749 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106278632 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096579936 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.085485452 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.108228626 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091474328 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091085125 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.106257657 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.091548744 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.088153589 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.084021242 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.107598509 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.097610139 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088532135 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.114768769 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10126081 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088397612 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106881766 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.088751285 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.097179701 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109209555 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.098593354 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.092777683 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084312338 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.103121399 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.097436121 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090601756 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.115648294 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087615244 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.095302603 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.116001851 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.095470031 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.091493293 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.117248304 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099743946 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.097470712 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114534535 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.086731568 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.088929095 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096333169 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.111757989 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.093986312 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.092944403 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10372602 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.094864327 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.096705729 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111432172 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.090700723 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085356131 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.110279524 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.09943548 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.094483001 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.094280029 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.112599583 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.094099236 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086804598 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.11358486 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.097428598 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.091920293 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.115524985 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092859527 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.094756611 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.106335112 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.097498136 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.09197622 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.086260957 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.104639359 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.090255718 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.096772422 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.105427208 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.095875138 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.095599069 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105922363 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.090872191 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.096370695 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.087602824 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11374142 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096063118 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089219844 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.119463332 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.094012491 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089008153 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.11395764 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.097432593 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.085369229 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108560622 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092619467 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.098706569 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.108656575 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.096857038 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092143642 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.09538556 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.112743525 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.096860787 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.096764756 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.114969142 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.086650324 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.098704665 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113001778 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.094862371 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.088920997 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.108406535 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.08796705 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092307356 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.096675841 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.107950145 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100159151 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.096742273 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10888514 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090093737 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.096095273 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109359833 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099184263 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08768704 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111736982 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.086040252 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.093541996 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.109141223 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.098549632 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.089036001 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.084796428 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115439239 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.096353991 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.094366121 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113133272 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.098527091 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.086363452 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10399308 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.094731812 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.088637923 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.118885279 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.095559757 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090908096 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090335919 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.112528318 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.093662989 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097081322 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.105826903 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.089504472 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.092769053 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.112089105 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091725876 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.086908532 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.11513342 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091846769 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093911538 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109219773 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088003143 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091380806 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.097441153 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109266897 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089301251 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.088304461 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118397664 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092212903 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.088505036 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105166507 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09947772 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.093349322 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116199098 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.090404973 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.091240455 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109036687 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096206453 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.098262111 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.108397487 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093411283 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.091092583 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.09621994 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.117244369 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.089416394 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.088710655 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.120562805 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098284704 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.093086928 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.115067116 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.092885288 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097932397 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118484034 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.094502426 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.086671342 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.105147786 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091905575 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08681149 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.093534138 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116548886 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.091262979 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.089168057 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115128935 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096085143 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.093339375 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.113306052 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087350813 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099316823 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.088190745 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.114725834 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.086880503 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085879263 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.113422164 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097865164 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090562814 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111319607 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.094209589 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.093669638 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.105654704 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.091215983 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.095410582 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095714304 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118179288 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092445193 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.090268887 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.113810583 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102639846 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.092250423 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110591543 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101162757 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.097750738 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112322754 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093133961 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.095185662 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.117865644 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096030177 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.098608571 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.108129799 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.09311997 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.099323822 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.098720529 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122828724 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091824951 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086116604 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.116015272 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.090363671 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086395246 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.114947829 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09981763 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.098452911 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110900733 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.090194771 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101066493 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.117575769 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094058303 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.089750663 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.11035282 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.099016971 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08998719 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.095686141 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.109538128 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.100453818 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099160524 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117281894 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.100788308 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085869587 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117596227 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096035675 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.099845123 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.113830299 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.087984156 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.086698648 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.093968799 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.11987856 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099272854 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.094762601 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.115591967 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.098025822 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.09304545 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111797902 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090974861 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.099310683 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.11665111 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094166346 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.095007084 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.090207974 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112731228 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.093786942 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.097426944 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.118558223 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.094246651 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.100935453 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.118830104 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.091872 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.089413459 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112830812 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.096068546 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.093765225 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115633124 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090483124 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086957882 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.097551315 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.119577734 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09336063 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099865659 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.119196871 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.093135057 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.094615048 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.120370149 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100017073 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.09477495 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.11216124 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097146945 seconds)
  done (took 59.850624548 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.141297303 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100125712 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114470899 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.095747386 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111531649 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.116420742 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096405504 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09670193 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115900168 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104277069 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094793987 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113420006 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111939646 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115574304 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131199315 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.10455513 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113416544 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.096965272 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.096146219 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09633583 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129244123 seconds)
  done (took 3.113011075 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.113046651 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.108269686 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126431693 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110148865 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101461236 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.127292414 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.105910504 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.126554681 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111175584 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10245667 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.12870804 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106217975 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.121683979 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.104834841 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102984452 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.123316499 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.109810351 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101783821 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128167702 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105818195 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.123262712 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.107661005 seconds)
  done (took 3.309898433 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.12531312 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.097909633 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.093526331 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.116426825 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.098778729 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.09533489 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.116958655 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09600557 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.102964382 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.089956394 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105421541 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.091382299 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.092111136 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.112522608 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091249319 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.09506586 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.120372095 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098617477 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.100245154 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.094813711 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106836341 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.097666773 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.095616024 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.104987755 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.100253955 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.099175318 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.095342282 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.117327455 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.087309362 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.098582 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.113607177 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.090710963 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.086160085 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.086398292 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.106071803 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.099672961 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.097614288 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.114862832 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.096522234 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.086783165 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.095933092 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.119777507 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088510503 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.096687491 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.11506327 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.090953268 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.09925555 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.09583337 seconds)
  done (took 5.638288492 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.123958775 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.159760194 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10119322 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.132960301 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131264493 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.105572821 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.097476353 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.133569498 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.0979953 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.120389502 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110909095 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.109049902 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12166819 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104602058 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.100051789 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123149382 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101820209 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09803136 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124947627 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.100839768 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.103370535 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.122079618 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.10997716 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.128867096 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.336612056 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099509885 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119622273 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.103694258 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.107577079 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125406954 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.103118571 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.1026899 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.129683869 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.100996546 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.118864368 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102101932 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111075009 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.119009909 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.100576883 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098174693 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.11954755 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.102886059 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.100169445 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129736666 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102169092 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.100102426 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.120316041 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.0974792 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.108687485 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121269306 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.106786817 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.108625688 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123334707 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100669562 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.101377036 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.130871993 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.100978895 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.097742895 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.12243836 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108375221 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.118297419 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105248025 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.108068292 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.119092129 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.10557574 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.109199561 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.121344895 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102749184 seconds)
  done (took 8.790284762 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129802834 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.102293476 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130784819 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112160312 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101848622 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123694562 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103162334 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.100975547 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.12333375 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108287409 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12385668 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.193637046 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.120569975 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.107592923 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.101178969 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124808173 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.1032837 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.102412336 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.124126475 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104012241 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.101154415 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130548619 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.103157682 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.129776042 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11399244 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099078145 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.123369971 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.104724229 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110521782 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.124402772 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.115226071 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.123888689 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10340873 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111185995 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.134561802 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.104281608 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.097051148 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123315795 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.103800999 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103529597 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.1210298 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112002534 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103085383 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.122303445 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102891131 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102421732 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.132262796 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.112209984 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127593524 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109264248 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.10234865 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132139348 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103160859 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.123398756 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112694766 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.117454839 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131485091 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111043602 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.12497721 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112256777 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111068685 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.139054425 seconds)
  done (took 7.996118218 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098069022 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096672483 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.096427334 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.116508855 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09769896 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096163857 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.096510867 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.116753657 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.097812792 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097304839 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116684597 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097622398 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097461426 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097067897 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117578645 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098675396 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09765529 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.116175106 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.0984787 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097682173 seconds)
  done (took 2.872004823 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.10722194 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.113754648 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.11958968 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.105383789 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.098877299 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.124374842 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.099792091 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100576312 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098323563 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122117308 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107534108 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127963303 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101573914 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10521606 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.12671282 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106875589 seconds)
  done (took 2.597270038 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.117563025 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114809074 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185002589 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.101218271 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.12035008 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.107225548 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.099239681 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100951195 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.120371849 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.105209451 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.102962517 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.123652612 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101396302 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.099906531 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.120950592 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104377508 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.09825958 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123565189 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.101032841 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.159838786 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.125444588 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.101382706 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.099015138 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.123517275 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102346342 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.102199085 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.128609383 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100034272 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.100717568 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.121298327 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.10232485 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.10541622 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.12100533 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.104332897 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100728883 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.121427679 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.100566575 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.100797028 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122599416 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.101228086 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.101842706 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.099967723 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.121232102 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.1026003 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098379155 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.1219214 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.099310709 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104920154 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.121299685 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.102648038 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101037594 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.126247792 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.105007194 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107132065 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.127924845 seconds)
  done (took 6.966873471 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110783996 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10107956 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.131522806 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.099563568 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.100585119 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.100245418 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.122189196 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.102697298 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101597363 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11899059 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103261212 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101000456 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.121005214 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102086933 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.101329085 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101119853 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.120028689 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.100887407 seconds)
  done (took 2.772458928 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.105933817 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.099774557 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.103940785 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.121896717 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101086605 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098365788 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120498031 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.10071388 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098985778 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.100050644 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121716065 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101241341 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098097257 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.121742489 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10047749 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099480818 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.120492213 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100660101 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100604782 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.098476257 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121780927 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100529141 seconds)
  done (took 3.175187954 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.110163956 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181014378 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.105938798 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.187335136 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.096947128 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.094291467 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.12703576 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.097515445 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.111104719 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117163928 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.095515197 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.094232564 seconds)
  done (took 2.256492191 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126665568 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134527858 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121740502 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.100936522 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107648897 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125920737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105769849 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104716321 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133525233 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115939705 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125002771 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112029531 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111124422 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132873855 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108420433 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129693592 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106060366 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104290607 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121031408 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12041173 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104110979 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132309532 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.104791491 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104091925 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125669978 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113798625 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132380181 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116034295 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104452625 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133176791 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10915254 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104412712 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132865159 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115677176 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122750949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111767208 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103740156 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140529001 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109263843 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133376192 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102104056 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109029433 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132654874 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109546233 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110979513 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126532674 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110117867 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125235504 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106155896 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12520902 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131007147 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112219716 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129935972 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113006808 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111701688 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146835959 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116005735 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134802469 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108448337 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13607679 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113688572 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109211964 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133734199 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115059203 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131274347 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11418726 seconds)
  done (took 8.662677891 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.139110683 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.101269343 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125695434 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116530668 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134878546 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106530665 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108931906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126881237 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106634942 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102574053 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167077359 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105444841 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113160096 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134360222 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10640274 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125705549 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105983942 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112899316 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124213839 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125872515 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126440306 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114443269 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11296052 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13399358 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117439394 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129431158 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107497687 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104933392 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12617885 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105695003 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110569676 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126759208 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114340928 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102168634 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134503602 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105632229 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105084528 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132259593 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105444989 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130342199 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113593579 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118258957 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128276005 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10592476 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137939031 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107070514 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105979001 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122954218 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107748269 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102715471 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137906188 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11753792 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13915515 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113138636 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106762552 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127757191 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106479322 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105887454 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126659488 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11058635 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112689764 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128546983 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126139316 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12706133 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107150292 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113804619 seconds)
  done (took 8.645231863 seconds)
done (took 162.885649362 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.145314884 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18048153 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.141405178 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175278962 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.092506724 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126193551 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.144836769 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.144975927 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.090767472 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114270299 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.092723752 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092902148 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.181515805 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.093983759 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.091269063 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.093248596 seconds)
  done (took 2.845414742 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.18887377 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.303182908 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.109131912 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.117288746 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099261691 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.09598586 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117103753 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099169254 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096807424 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.124289244 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.096823506 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.092373178 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.123840003 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.092836536 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.09751606 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.095683427 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.124932816 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096653104 seconds)
  done (took 3.027652722 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116854057 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139790281 seconds)
  done (took 1.115787518 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.126724687 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.209116326 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27679507 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.164700704 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.117077975 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.137473028 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.145144546 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13063054 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.184654977 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131643776 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.109791747 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09419079 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.14363917 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.10255571 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.133857355 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097646862 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125306018 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.132531448 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111414561 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.098939121 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140249997 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101117669 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.102255606 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.13279346 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.175550323 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.130850564 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.100878168 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.099444756 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.12065601 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.111682894 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.101760361 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.135940616 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109391311 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175461518 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101134442 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171397756 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.103514279 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.119548148 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.110275555 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096479795 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121322066 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100352677 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.130651157 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096904927 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100986541 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124140016 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101787502 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.100753883 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.125738629 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.104421057 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.103918209 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.12565954 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.169424006 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.10639327 seconds)
  done (took 7.680980813 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.848306616 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.142695481 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097441793 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.992799216 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.147085087 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113238857 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.821401423 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.142184015 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251534821 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.869678407 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112510012 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.108707582 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.253738848 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.254170521 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.278974009 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.351624863 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.690299014 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.13352716 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.125599334 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.159603127 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106353237 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.145019895 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.117216327 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.520312474 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.098969246 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097427391 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.12799825 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11054546 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.173664392 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.09901624 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123464409 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172164077 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289476255 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203892942 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119062039 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097933228 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.098414496 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181907386 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26602659 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214317852 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.190287869 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095412938 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097387539 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128942256 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117874547 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095215217 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.176310679 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.188896723 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.187402382 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.102292856 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.132688613 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.111012205 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.106034155 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.175637934 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095449623 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.37360263 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.360615728 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097659216 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125248404 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11426594 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263738798 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098678765 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228512427 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.147661266 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.208504533 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096846099 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.835126506 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.180653547 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097219533 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126866965 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105116578 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.103793982 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128345225 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.163347668 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500483351 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.110688894 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124309493 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097892198 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.22703825 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.098128542 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12046773 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.154694161 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121683452 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107339727 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132894125 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111798742 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186156661 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.265712615 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112079937 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.1071527 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126166594 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.111315771 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098351293 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.228471728 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221410528 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.171865231 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.228889517 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107328064 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17826291 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.181384733 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.10627582 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185910384 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.104462543 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.137773358 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107327467 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216247121 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.153385214 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099939825 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125157188 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108187808 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.155924674 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104040732 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.107258688 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.186665746 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554998101 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18049282 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096517742 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103715356 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128793919 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.15509176 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127921451 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257959281 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109315129 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.182797304 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.106146668 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.095508567 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.129770155 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178591413 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110499348 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.106081021 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129305936 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107052211 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.275960748 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217133079 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.112253366 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.268077172 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.17595838 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.105408239 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.189488816 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.128621666 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162943562 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132714441 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107390168 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098954331 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.851092086 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.114737544 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106509461 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.125579856 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.18410513 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120137347 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101391929 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098971919 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.095576765 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.807073885 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126340105 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096837924 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100687405 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128752804 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.107131316 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.128410755 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.105067411 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.175805018 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23980793 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111911544 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127737048 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100165983 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.173969811 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.100579079 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099223819 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.121195952 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100673592 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107161609 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125577834 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103100449 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187285828 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.170989072 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.224221107 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.633217752 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100608408 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.098654137 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.254314704 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100028644 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.319738663 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.105701501 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.229069755 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182805171 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.118720849 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.356251205 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.183769818 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184723536 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101201821 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.187596824 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.095476346 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130023773 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.173736682 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100713215 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106085332 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.173202663 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113953303 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.135320872 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.272137086 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098973339 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.247975917 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.095961401 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.186486921 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121586541 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107843203 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321518929 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098727919 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138747508 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.175292556 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104493495 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100026131 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.671212529 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.098896105 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133668051 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.107441985 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226872432 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.179907858 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128988342 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109227195 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112408321 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.175375355 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.228037822 seconds)
  done (took 47.046943305 seconds)
done (took 62.571323251 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.291002183 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.251672493 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.299856482 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.207280047 seconds)
  done (took 2.002389848 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.251521819 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16006716 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.225051592 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.096670936 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.234056223 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.094887609 seconds)
  done (took 1.948059263 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.480317189 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.361424531 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.299935434 seconds)
  done (took 2.030692193 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251986148 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.235341424 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.325857474 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.410401066 seconds)
  done (took 2.225482508 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.258645965 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.123598922 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.121221498 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.203699512 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.223637536 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.207515968 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125644757 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.174515109 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127326067 seconds)
  done (took 2.501671835 seconds)
done (took 11.590850733 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.287999231 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.254032327 seconds)
    (3/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.274385548 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.134641022 seconds)
    (5/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.27541764 seconds)
    (6/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.103281867 seconds)
    (7/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.237518632 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.110637468 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.098675535 seconds)
    (10/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.312259843 seconds)
    (11/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.276662256 seconds)
    (12/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.16851121 seconds)
    (13/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.245865184 seconds)
    (14/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.21913193 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.189969324 seconds)
    (16/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.074347082 seconds)
    (17/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.18979548 seconds)
    (18/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.169659277 seconds)
    (19/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.198612624 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125984252 seconds)
    (21/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.080676699 seconds)
    (22/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.141631308 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.216396862 seconds)
    (24/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.153279671 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.29285247 seconds)
    (26/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.156675028 seconds)
    (27/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.286990957 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.154994938 seconds)
    (29/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.074262382 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.211721027 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.100164041 seconds)
    (32/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.167887011 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.163597479 seconds)
    (34/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.137901546 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.231131744 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.149982647 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106941683 seconds)
    (38/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.184852169 seconds)
    (39/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.106199061 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.102965315 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.153745727 seconds)
    (42/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.199619108 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.120519599 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.075226992 seconds)
    (45/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.09629564 seconds)
    (46/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.076035142 seconds)
    (47/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.209724364 seconds)
    (48/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.077145936 seconds)
    (49/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.224608435 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.193726414 seconds)
    (51/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.174542584 seconds)
    (52/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.194085659 seconds)
    (53/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.07473483 seconds)
    (54/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076040934 seconds)
    (55/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.20826424 seconds)
    (56/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.082373128 seconds)
    (57/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098159922 seconds)
    (58/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.133256667 seconds)
    (59/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.072872404 seconds)
    (60/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.1332038 seconds)
    (61/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.147189648 seconds)
    (62/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.102936665 seconds)
    (63/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.100175379 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.100256407 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120229275 seconds)
    (66/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.075118446 seconds)
    (67/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.178355249 seconds)
    (68/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.106520839 seconds)
    (69/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.299605771 seconds)
    (70/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.105916844 seconds)
    (71/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.129463577 seconds)
    (72/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108106501 seconds)
    (73/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.081396359 seconds)
    (74/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.106418978 seconds)
    (75/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.193122829 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.13681322 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.127146305 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.076385186 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.1033948 seconds)
    (80/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119774371 seconds)
    (81/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.131661371 seconds)
    (82/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.082663054 seconds)
    (83/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.158148451 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.134953421 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.099081341 seconds)
    (86/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.107926246 seconds)
    (87/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.074489044 seconds)
    (88/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.099873789 seconds)
    (89/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.096980779 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.189396137 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.211328984 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169245798 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.146924986 seconds)
    (94/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.171031253 seconds)
    (95/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.167390198 seconds)
    (96/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.168611274 seconds)
    (97/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.126728143 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.126532822 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.098903012 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074842031 seconds)
    (101/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.08318426 seconds)
    (102/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.137026962 seconds)
    (103/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.191470415 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.130643291 seconds)
    (105/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.076053468 seconds)
    (106/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.130975649 seconds)
    (107/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.076421397 seconds)
    (108/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.097713681 seconds)
    (109/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.074773903 seconds)
    (110/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.149463426 seconds)
    (111/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.136472158 seconds)
    (112/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.07417105 seconds)
    (113/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.07353625 seconds)
    (114/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.208143673 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.181304356 seconds)
    (116/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.098985472 seconds)
    (117/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.074494418 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.100199662 seconds)
    (119/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.07437161 seconds)
    (120/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.134148145 seconds)
    (121/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.074754939 seconds)
    (122/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.13583225 seconds)
    (123/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112834963 seconds)
    (124/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.195026016 seconds)
    (125/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.085390919 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119909648 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.145736055 seconds)
    (128/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.080541389 seconds)
    (129/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103095941 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.123791946 seconds)
    (131/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110621584 seconds)
    (132/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.077702339 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.107668844 seconds)
    (134/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074342952 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.124456788 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110247521 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.101276184 seconds)
    (138/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.107384324 seconds)
    (139/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.078053877 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100821842 seconds)
    (141/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.096823939 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.124829003 seconds)
    (143/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.076460469 seconds)
    (144/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076760108 seconds)
    (145/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106850701 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.12571226 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.099823263 seconds)
    (148/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.074694211 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.074818091 seconds)
    (150/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.19833341 seconds)
    (151/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.078690751 seconds)
    (152/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.139881955 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.123791779 seconds)
    (154/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078081506 seconds)
    (155/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114215588 seconds)
    (156/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.106490844 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.101101738 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099193527 seconds)
    (159/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.078208282 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.099568033 seconds)
    (161/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.131540418 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075715349 seconds)
    (163/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.075276216 seconds)
    (164/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.075181151 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.129343679 seconds)
    (166/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.076529549 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.098283794 seconds)
    (168/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.076576263 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119639441 seconds)
    (170/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.101218776 seconds)
    (171/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.076148004 seconds)
    (172/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.075994023 seconds)
    (173/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.16599381 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.125923271 seconds)
    (175/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.075550843 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.101231909 seconds)
    (177/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.074115397 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.098927027 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.09929125 seconds)
    (180/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.099894138 seconds)
    (181/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.07632359 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.143689786 seconds)
    (183/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.084291761 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.100065719 seconds)
    (185/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.076885375 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.09851229 seconds)
    (187/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.110986505 seconds)
    (188/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.1091893 seconds)
    (189/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.129836275 seconds)
    (190/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.075707295 seconds)
    (191/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.075293115 seconds)
    (192/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.101763249 seconds)
  done (took 25.838276227 seconds)
done (took 26.738617861 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.206395666 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124514682 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108336107 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.106720641 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.196594022 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.114801125 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.1222646 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.13579759 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.11723624 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.106282533 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.12111564 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.119116802 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.106210513 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.198131265 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.108710074 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12406923 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.098523813 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117462631 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.146591245 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.124116828 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.195972452 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101841076 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117041299 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.122476868 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.173450507 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100268063 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132405488 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109101775 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.119618608 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.13355136 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108860096 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098898033 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.147199063 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123607429 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098288843 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.132037964 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100407099 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084417007 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.107915353 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.135186652 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.12095008 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.108427397 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.133193194 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.100379133 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108318046 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.132866763 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.10047212 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111133245 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.122613652 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110423407 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101818525 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.147497316 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.108340983 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.098592968 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.120862915 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102423558 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119439678 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099497138 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.145417456 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100864103 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.100699606 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125098019 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111945067 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100367096 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.132537435 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.10085931 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.109139626 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.135149536 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.108710873 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102855135 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.09849358 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.132698158 seconds)
done (took 9.634218226 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106065632 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144419868 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.197053341 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.206829553 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.127400244 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114214934 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.139616485 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.12353366 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.111376274 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142606208 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.136226764 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.154272425 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.177837989 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.139790859 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.114126933 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.111955958 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.134210674 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.108504047 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.202550964 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.123518635 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.12244823 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.141143887 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126428845 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.139052359 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.104103544 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.134537208 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.132051478 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113544974 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104072208 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.136652656 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124490342 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.10316348 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.131166383 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123397738 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121162798 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.138121759 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.115124779 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111751299 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.128921158 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105317041 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.111413996 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.144587389 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.10506038 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11412639 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.137573016 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.119379074 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.110020088 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.141273638 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.1055577 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.111457405 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129951956 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.131170516 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.115238185 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.146213939 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.115455959 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.116716571 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.142608175 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116270234 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.106743873 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.141802314 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105042702 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.103828243 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130978418 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125311277 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.106958072 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.143238361 seconds)
  done (took 9.378264982 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.123249441 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.132783464 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139829881 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.11443041 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.108352903 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.122811624 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098608138 seconds)
  done (took 1.781401957 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.100782776 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.180674742 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205411268 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.202829874 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.176221014 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.214282046 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.146542279 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.101320702 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.133247026 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.134474428 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.181619616 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.233684812 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.109287801 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140781181 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.184494596 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124204174 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.18403994 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.124144707 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11364041 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.208065608 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.1160703 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.130011345 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.138673188 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.100570965 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.201764303 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101965587 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.259346722 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117384388 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107929351 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.140590464 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113904997 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203439875 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.177601057 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.139585583 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.107882922 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.206621512 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.175817746 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138972826 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.190425555 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.130027853 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.17633723 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.139108872 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115552236 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113673758 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.14013684 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.166941168 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.143736254 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115665927 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.112459052 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.211433519 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.109575002 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.205631286 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.111344127 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.138769534 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111787803 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115969375 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.146099327 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116866719 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.210354164 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117058665 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.205580741 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.179619882 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.203870715 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.207286997 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124278756 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.206016974 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.174110718 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.138309207 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110722273 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.114330104 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.207913726 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112801022 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.139148372 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.170567416 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.142707106 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.183583794 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.207403451 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.111892173 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.137541113 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104304912 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.111682194 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.124576243 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.172815069 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112363763 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.137362639 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118032333 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137011516 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.115367302 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.105220967 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.146770792 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.116152578 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.111777435 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.14303602 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114860755 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115461224 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.210576613 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.110870796 seconds)
  done (took 15.348558836 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.103877486 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.101648405 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.105232275 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128322866 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102491522 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101817118 seconds)
  done (took 1.602434647 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.138337185 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.114708709 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.148964443 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.116251043 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158593682 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.210756548 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.216708965 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.108443624 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155678293 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125397686 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.211645967 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.18829548 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.21237643 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11827724 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.214607057 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.116919585 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.21743588 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112798722 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.148299332 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113308492 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113833896 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.143782571 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11344608 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.205749362 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116197199 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.11508925 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.134953276 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.123587418 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.122394304 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.136708693 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.11797637 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.115255574 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.133931165 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.109146543 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.217342004 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108701646 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136606296 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118746556 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.117687402 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.141136055 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.190615187 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.136795741 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122119691 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.117060117 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.135526339 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109092774 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.117204314 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.134969827 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.193100832 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.143954319 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118048542 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114620613 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.143328946 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.11805316 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.107570138 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136461252 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119312983 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.218247201 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118601883 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.133459806 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117820088 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116514487 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.135381712 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.120802787 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.115397701 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.144076 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110318274 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116221592 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.13782043 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.117663276 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.117824565 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.140420027 seconds)
  done (took 10.968583307 seconds)
done (took 40.011398442 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.447155208 seconds)
  done (took 2.402401385 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.901502194 seconds)
  done (took 1.858325542 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.82108841 seconds)
  done (took 18.813273472 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.511842843 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.58711423 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.015328615 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.14698397 seconds)
  done (took 3.219957469 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.067966809 seconds)
  done (took 2.045789275 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.292060424 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.263808999 seconds)
  done (took 1.523558863 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.708353532 seconds)
  done (took 1.688691258 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.491344481 seconds)
  done (took 2.459941704 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.347270433 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.176818912 seconds)
  done (took 1.505759152 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.605844788 seconds)
  done (took 1.586551868 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.44791788 seconds)
  done (took 20.429994257 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.247003869 seconds)
  done (took 1.23124985 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.281308016 seconds)
  done (took 1.266934963 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.567315682 seconds)
  done (took 4.551390075 seconds)
done (took 65.547893781 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.112992321 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115714535 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.113773813 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.137324527 seconds)
  done (took 1.454714654 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120435839 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.115017082 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.13807252 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.140789973 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.120849094 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.114737547 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.14025917 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.117204289 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114062032 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.142411884 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116052107 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.11449981 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143702318 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.114682692 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.111579805 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.142816258 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120371636 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.114403404 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.140293474 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117428701 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.115143147 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.14091737 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.11846135 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117648893 seconds)
  done (took 3.977216218 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.112573451 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.105970312 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.106630789 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.12993132 seconds)
  done (took 1.444759351 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.123810789 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.126312089 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.150785138 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.122462042 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127054488 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.15067487 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115215721 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.110750355 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.138802826 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.124115859 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.130595821 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.152801152 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.125581073 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.116906791 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.151488021 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.10965095 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.114049169 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.152136697 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.121480849 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.122381455 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141809995 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.121158773 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118701382 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.149884133 seconds)
  done (took 4.105318095 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.189017 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.125736204 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.171023133 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.158449499 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174896255 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.113734824 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.141972043 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.1449875 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.121943176 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116976669 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.143828325 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160409032 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.146217424 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.117414064 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11476723 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.146130551 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.126800328 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.120542525 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.187374151 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.118806543 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.14692149 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128508133 seconds)
  done (took 4.105438489 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.11783735 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106252911 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102147071 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.133857779 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.117526664 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108265714 seconds)
  done (took 1.680129501 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.10532128 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101210905 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.099646244 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.12596567 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105327684 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100660527 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099469464 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.127250458 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101217833 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100299099 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.125319751 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.099826841 seconds)
  done (took 2.285282624 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.32293113 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.105849895 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133132882 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.108674201 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112008182 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103839517 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.142767034 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105179445 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.264961665 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.100684525 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.141326954 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.191807014 seconds)
  done (took 2.828044204 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196702269 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142660908 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310010962 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.360548618 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156072407 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182748214 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.26286665 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18680564 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198401279 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134467522 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208635837 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155932957 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175398617 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181545353 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160809113 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.156394026 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191581049 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199622807 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164369374 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234307012 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153348995 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.197742966 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.185741195 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172505878 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135235139 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184296665 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.114795236 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123216228 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187629094 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185709349 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166061162 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171834577 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137547483 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211577505 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247627079 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167440201 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267803688 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.155385056 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.16886853 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211306914 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253618302 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136444845 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209072443 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173188575 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125790235 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210649308 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14825331 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206073017 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.130870142 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166882874 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176112566 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1999602 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19519021 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134279943 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297645729 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129978396 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164195367 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163877137 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208938743 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19478592 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200660721 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.118795719 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201992052 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214184516 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235012008 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.137572221 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.184261433 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122823006 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186069298 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201300872 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202111996 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154985732 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.225550742 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155584292 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166672694 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.193907375 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148193158 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224916566 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193219024 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116240466 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144678208 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156509073 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124248949 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.210508985 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119415452 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.238132558 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128620047 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.344461937 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206481776 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15073077 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183059647 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152887102 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18610204 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141257713 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.125797376 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139001892 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.183667711 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152388326 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123560243 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178720293 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135147814 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.14733381 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147666682 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.118331162 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191372531 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.130069591 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185382632 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164678658 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.155903963 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172211908 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170573099 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.157309112 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189109696 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215274682 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127509018 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128010293 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237542417 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191063086 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.132448658 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198560426 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.216437343 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147457237 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13045691 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186699172 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21447387 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13955848 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221959817 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134276033 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157342852 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.135352206 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191403729 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154469732 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.177474023 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125182086 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158753296 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216877885 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.148496548 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136931118 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201077233 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130919474 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120715315 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159524581 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13371831 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138123525 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.172366854 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.134797779 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178164511 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162524602 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188190879 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150219217 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157612037 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165185189 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156165838 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.162954947 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.17114904 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.115398327 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194773918 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192528148 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15358934 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176301235 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.186408035 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205734554 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168374427 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154039939 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180008419 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151230037 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.118881253 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155652884 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190767756 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181578861 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.183521722 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20569874 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186887912 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.158257294 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171250714 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16156419 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.207730815 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178419611 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140061401 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165482154 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191777286 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.117050965 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.147320528 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124450912 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131689617 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153549996 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133461319 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199217837 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157088293 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203937502 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190000056 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134200801 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.216325875 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.121860927 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18254346 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.170002011 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162479742 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.184355758 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21457494 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199358141 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138218264 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183497943 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.119091084 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121764629 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.155929216 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158267184 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160059965 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133715696 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137096825 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.215856116 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194664754 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143981673 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215532915 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187655312 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.197162138 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.144531882 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.157924482 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192269119 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164515558 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181724083 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153144649 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.154240729 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21746137 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136223923 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215126118 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190473845 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173929842 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216556728 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.159840957 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154850051 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.143304879 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18608855 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13312552 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188468628 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141784789 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154140436 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148395405 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132698409 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164174413 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205175217 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138573741 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198967632 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.155192511 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191577328 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122138139 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163190954 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17201547 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167031216 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.10288854 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164037209 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21833804 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171429784 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152527847 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195719374 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127419124 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.337746825 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182648429 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199364435 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130575447 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161557772 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166956414 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185972142 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156601361 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207501013 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135610376 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227220375 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190417117 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.13877698 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125989316 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17271314 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14658601 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.162564758 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145883854 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.186328796 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140308964 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205793358 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133303672 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192978204 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170710145 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.169171409 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146313471 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161970984 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219409359 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190932154 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196285688 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.161288215 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.19002091 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180231387 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146975809 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123970124 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.127528717 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209928869 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125840958 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19933494 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.191416352 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183117491 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19690479 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184304711 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138568025 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123199059 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190194588 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143567938 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211410675 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13047683 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.161773941 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212718269 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126436317 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126273816 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186166978 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268085107 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169672344 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167775295 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.131965798 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.264556728 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151913158 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129045581 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187106789 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16451037 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.156974145 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179426909 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170339274 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162973532 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158205611 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159127834 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203614754 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183535145 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18852493 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166236432 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.169397548 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155691159 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182535294 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197494677 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142426972 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142642846 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181245622 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21762062 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.177752907 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.154579376 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166526643 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191582552 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166924026 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195513454 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13555475 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207306383 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124649521 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184853838 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138344777 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120057134 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182871739 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.193075622 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127394477 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198586062 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166397386 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127007323 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152612364 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142184624 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189968034 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135061739 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.153505886 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176609037 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.153144125 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176356448 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229714935 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126070111 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191352255 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143038869 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153452031 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135773093 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138773169 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155963785 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.170681414 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20406223 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130234363 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200519826 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160717181 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186946492 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152186809 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168519127 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.33202114 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124490093 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215942318 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145167718 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21866451 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1744175 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169740884 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194058503 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145422313 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186697217 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14184595 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.244101924 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158927135 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.19101017 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126789206 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168466544 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135533163 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.129254296 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176910742 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162816706 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165841852 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.132250128 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.19200388 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141425062 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.169602183 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138422772 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224470655 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147604683 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207545424 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181867948 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.162876051 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169716631 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198508475 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124652209 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.188255349 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165178886 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170218105 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146333049 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.159075047 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134641601 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234950266 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123173949 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182006327 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169606645 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.192457359 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167513258 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.158604088 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172907732 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163972026 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171082506 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150891338 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.150292826 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192038073 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131522229 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.122058099 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19548627 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152220506 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.189702996 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138607326 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.174363486 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21650548 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.121011308 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15762525 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290388273 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157212272 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218152523 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13455138 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132383175 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169792896 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15279213 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.189292209 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164555063 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.155924412 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127045376 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.168839928 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154757636 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.166634842 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166025156 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193528873 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155887661 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209756763 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.133109942 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278455963 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139274004 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.165353868 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.142414543 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12490475 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134860456 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158518627 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137504334 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208294832 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236018065 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.159351635 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.172638294 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13103658 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122251673 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155108169 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162335983 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175291132 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162632098 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17056473 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101529575 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134704914 seconds)
  done (took 84.033599437 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.158599529 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149475211 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164313951 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.219301779 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189938515 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285166922 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.224310703 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240063233 seconds)
  done (took 2.712528642 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.116571426 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154407555 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.13777561 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.13989815 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107180956 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.43463019 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.128260123 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144558929 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.157279519 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.147528552 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132259598 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.501612002 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.141254104 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.117643385 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.143240542 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.105572376 seconds)
  done (took 3.881926039 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.004815492 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.532505814 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.254723291 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.291536627 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.247326098 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.198616719 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.736288897 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.185196543 seconds)
  done (took 12.533152429 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152266567 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.140703339 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.41136005 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.245154675 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.200914424 seconds)
  done (took 2.237265297 seconds)
done (took 128.25727289 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121014689 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12028018 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118514586 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.148613648 seconds)
  done (took 1.585052806 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.173158682 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089336647 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090546653 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.115348388 seconds)
  done (took 1.554693 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.420158853 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088196211 seconds)
  done (took 1.622212898 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.14460998 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.136401937 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.161926786 seconds)
  done (took 1.539524791 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.135913105 seconds)
  done (took 1.223324482 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.117634582 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.113780308 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.229969121 seconds)
  done (took 1.554769657 seconds)
done (took 10.173438849 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.11664236 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.920709991 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429141055 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129211188 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.706295803 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.423230826 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.415444416 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.170391008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171116875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.133372633 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.127932193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.684788171 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.427391763 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.871312803 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.384497538 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.898689369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.690247897 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.107777295 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.141938171 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.10958001 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.39888205 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133610765 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108254563 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.107574295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.714402774 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.416930437 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.105955496 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.917033637 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106630782 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.110468985 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.422525414 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107774947 seconds)
  done (took 20.790249276 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114404313 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.161028043 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.14235943 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1098146 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109878411 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135337374 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120024622 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118268356 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199962387 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107291153 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.156904029 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.108322173 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112397357 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.135224764 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.132880791 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106149451 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.1356402 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109807625 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.114751982 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.13577083 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.129456217 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106239428 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.133974044 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110708179 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107518724 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.154884706 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108891469 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119125836 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.132258056 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111933541 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112081612 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106514697 seconds)
  done (took 5.099095742 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154760015 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171779561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.144536327 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.14351724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183121494 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.109989464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.219291094 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146178218 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199414398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107995342 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129301497 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13324969 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147555542 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.10743947 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.15956417 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107946892 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.109560174 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.137401567 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11651183 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108143793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158260225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.10770292 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.10806962 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.137923953 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108104952 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.129406042 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136010024 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120853714 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.106143557 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.13966279 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113727533 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106784523 seconds)
  done (took 5.409626466 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.122952664 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.121913404 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129480475 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.158852424 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.117386881 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121055323 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.149418546 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.117371023 seconds)
  done (took 2.140759671 seconds)
done (took 34.534159493 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132595507 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126119866 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.128085267 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150931716 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.185558344 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.143792601 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.125111219 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114216895 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148485155 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128398692 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108326178 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114251241 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155528256 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118323186 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.214409035 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122807646 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.218317558 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.185429077 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.14367861 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125606015 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.115915324 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.218298758 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.118887185 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114465784 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.215825445 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.109640909 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.208824433 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.11756451 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.117316647 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.140471538 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.188822696 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150584292 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115606751 seconds)
  done (took 5.912064596 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.201838753 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118003235 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.146805792 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.116362584 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.117523007 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.142838124 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.204886133 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144229473 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.116903184 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116223376 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.113650235 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.216940455 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.12153028 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.140677274 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119271125 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107002903 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.23388376 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117813645 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.107726441 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.118710133 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.113127781 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.115918171 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.245490139 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112733906 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.11615204 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.144457143 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119327427 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120442616 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.11726994 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.147340355 seconds)
  done (took 5.285880376 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123009979 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.12901224 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133578527 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.212281491 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.144866198 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156548735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135839706 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.12923925 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.166059145 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11077962 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.124880651 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.175117606 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126542506 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120355131 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142863116 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.129384473 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.130460821 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.138527935 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.118134479 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12690416 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.158081187 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.126756842 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.132156944 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.145661121 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.109668141 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.117735382 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.146558877 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.124581507 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.117269005 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.123592691 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.140019095 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114903479 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.110999814 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.173085649 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113839991 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.121969397 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.16280302 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.121649312 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.121360863 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.171124338 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114191516 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.110489327 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.164164004 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162747452 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.110749088 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.151304368 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.121771179 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.122833232 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.137533565 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129039632 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.150372772 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.138200531 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.130977868 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.108139077 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.138367199 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.118518441 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.110593539 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.141784157 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125872031 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.112734771 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.163569343 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118710746 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.120174216 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.110660307 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.150581909 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110040968 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.108941099 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.142665507 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137816415 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117013917 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.175688449 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11185431 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122617977 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.150847887 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123465534 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.121410859 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.109874625 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.151010599 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122045303 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.115619882 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.151981946 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.115280483 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.112398648 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.155974417 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.131424247 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123292535 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.151720097 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124773921 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.113369814 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.140711507 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128984676 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.110974571 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.143004449 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124436821 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111089173 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.112662233 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.152511502 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.121626182 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.107549382 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.164562174 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.11531445 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11029722 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.165813402 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115403138 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.116138953 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.147373961 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.153129428 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.109981797 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.150110667 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.125624529 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.110716985 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.11656915 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.143939623 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110212893 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.128889299 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.155771297 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.11869132 seconds)
  done (took 16.517239016 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.310932414 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.267844741 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.208093321 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.302158073 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.123628352 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.234144205 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.296613697 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.298933953 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110088095 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.17618481 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.161405678 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.268180406 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142223898 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.139701051 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.29998058 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.352634207 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.170235157 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.148092165 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.177777031 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.124669408 seconds)
  done (took 5.440665732 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.130730907 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.145251121 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.162999805 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.138205309 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.121955864 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.156670669 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.111491658 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131892907 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151057869 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121098027 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.112996225 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.155292597 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123905076 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.12701906 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.155111224 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.142905077 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117778518 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.145371179 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134008813 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115508717 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129221317 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.1373731 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.120279878 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.161547567 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.130035187 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.120984258 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.13834828 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117185253 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.118278318 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.147571715 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.11680724 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.128689283 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.145516394 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.103868128 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.123206501 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.125209517 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.147068155 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114043661 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.115331026 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.143240721 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.127331946 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123702243 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.118224255 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.124165088 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131351798 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.108341528 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.125011742 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.152832045 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.104868893 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.129728093 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.152802417 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126056387 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.118311947 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.162943786 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119439763 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128187692 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.151225815 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126672398 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.115792662 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.137780639 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110765693 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.114739162 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.119866406 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.155118092 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.122959097 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.158459828 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129410316 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111101548 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.114975651 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.145237831 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115875203 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.124494017 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.160827943 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121188954 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.117126775 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.153645825 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.119945312 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093130021 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.120287174 seconds)
  done (took 11.413364441 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137129942 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.122596419 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.128956706 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176204437 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.125884769 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.116803221 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.150688105 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132358837 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12511865 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159190559 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.127074367 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.124408249 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.162716706 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.121543682 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12091702 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.157045188 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126377801 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.147373792 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.15884618 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141943657 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125887695 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.146531301 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124800068 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.121367846 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.169506297 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12347218 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.138161234 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.154384177 seconds)
  done (took 5.005947825 seconds)
done (took 50.6800758 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.264481781 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.44758332 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.230549505 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.229557119 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.268124571 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.251129851 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.229484482 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.230493002 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.603963256 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.200917581 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.230614774 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.229633171 seconds)
done (took 28.550036034 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.220750247 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.774764557 seconds)
    (2/2) benchmarking "String"...
    done (took 1.514865416 seconds)
  done (took 4.411657879 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.220243642 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.221743064 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.467468876 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.220100217 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.22175085 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.220721547 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.219200368 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.226616819 seconds)
  done (took 15.92011615 seconds)
done (took 25.897709381 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.265285944 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.39833585 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.455686198 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.229817181 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.229345365 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.233200858 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.225337162 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.240849333 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.223870971 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.238599991 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.625122056 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.478244387 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.238437781 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.58738868 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.232189095 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.252506251 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.223393996 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.449972469 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.220849842 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.250149095 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.199842168 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.202976467 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.245431271 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.221836006 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.227048913 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.234814675 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.271536722 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.222262203 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.404942695 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.244134048 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.250921769 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.224569171 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.271307164 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.228226182 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.225686279 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.225158875 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.414871378 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.228416611 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.206489943 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.253954508 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.409872777 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.24466184 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.233061336 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.236097283 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.234469762 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.267894074 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.208654124 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.356417957 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.249061722 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.23134016 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.240127799 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.594173724 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.225152941 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.239527916 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.234558379 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.453168027 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.234377824 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.280877855 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.246938965 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.2247175 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.233334415 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.224366362 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.251158517 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.243248286 seconds)
  done (took 145.024030083 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.224889691 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.229266582 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.227691589 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.246215721 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.228778447 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.226063571 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.224531927 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.22425238 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.227542377 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.251634707 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.226293122 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.223141764 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.22844965 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.23481099 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.236375052 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.245989658 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.228867658 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.245018015 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.234390779 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.225307743 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.246919447 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.225695121 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.245943391 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.228706513 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.264224409 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.300594934 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.23464953 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.2547591 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.23909238 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.225762391 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.268955606 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.233129846 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.850265881 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.094738249 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.2319701 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.243887994 seconds)
  done (took 81.156347537 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.226087736 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.226427823 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.22722344 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.259138768 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.226851902 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.796197325 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798769633 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.200067647 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.621818615 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.551881033 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433281111 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.22831543 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.319354461 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.239261351 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.229429874 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.242780644 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255227363 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.22738935 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.228937094 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.797074129 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.245488791 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.446396099 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.408711982 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.244526951 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259129267 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.620476352 seconds)
    (27/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.228565964 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227310696 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.261270343 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.559384746 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.277342817 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.228657152 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.550433121 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.270214845 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.33797239 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.230796359 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.26134243 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.228573572 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.510092268 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.229205472 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.230332751 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.231337443 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.845844298 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.229428272 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.799083469 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.232252243 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.166814904 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.229289072 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.230154564 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.252923293 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.850717632 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.230453391 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.230080274 seconds)
    (54/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.228896504 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.229639883 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.230746912 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.234175115 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.261963641 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.229942562 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.254183504 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.324894452 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.230361887 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.233400393 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.262480113 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.230942064 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.441618822 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.230804125 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.650457655 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.293634434 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.444783669 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799442762 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.23375706 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.325496725 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348335622 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.231271415 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.231054712 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.230327097 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.232795805 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.231698419 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.341536105 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.231203969 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.902379163 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.405871276 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.249582431 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.558295963 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.326624372 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.233070701 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.559428028 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.231700308 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.230325493 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.933604776 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327265727 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.230849009 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.230813721 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.23280029 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.903745749 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803757645 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.469552883 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.236846949 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.947795831 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.234769174 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.085423198 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.789210888 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.877181522 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.236929681 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.34561359 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.409511536 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.2503259 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.232854486 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.575742028 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.238043032 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.29086222 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.234889269 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.63588626 seconds)
  done (took 377.755063492 seconds)
done (took 605.060671555 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.112538149 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.059865449 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.214148923 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.070285887 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.051444237 seconds)
  done (took 11.642328284 seconds)
done (took 12.77725404 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.423654675 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.426453968 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.296682729 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.427766759 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.265988951 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.443017461 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.408003972 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.25176543 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.343764454 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.315728655 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.343391369 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.285579597 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265455136 seconds)
  done (took 18.632282472 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.51434777 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.247768177 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.301705628 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.49411254 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.278863357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.524961293 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.538745995 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.247087521 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.377972637 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255845125 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.256864479 seconds)
  done (took 18.174640346 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.520385018 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.247187863 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.303103349 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504911159 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280988773 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.563820112 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.559247401 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.24769256 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.383518658 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25843716 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.258239343 seconds)
  done (took 18.26286932 seconds)
done (took 56.206873988 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.274611747 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.336217712 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.273591509 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.258442424 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.251462917 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.252905346 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.258162392 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.25505498 seconds)
  done (took 11.296474983 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.252405788 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.251623696 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.252643816 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.251892153 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.252588186 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.250422086 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.251181069 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.251481466 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.250879146 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.252857593 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.254040251 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.251949083 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.252378186 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.253615828 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.25158327 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.251992343 seconds)
  done (took 21.169522202 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.254763494 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.2536114 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.25020687 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.252676767 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.251784237 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.254494249 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.254830182 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.252785492 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.25181849 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.253161312 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.254573479 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.25501889 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.253788495 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.252707559 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.253356984 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.254412263 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.254076342 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.254430434 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.257211666 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.253729503 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.253584792 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.254048663 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.2532502 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.253295906 seconds)
  done (took 31.225983579 seconds)
done (took 64.828170947 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.238868894 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.247813599 seconds)
  done (took 5.626141566 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.314665972 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.31047052 seconds)
  done (took 3.764395858 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.255312872 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.255382036 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.255251179 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.255118141 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.254719549 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.254723597 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.256158786 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.255552249 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.255533832 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.254446894 seconds)
  done (took 13.690589125 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.254882319 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.25445613 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.254743222 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.255461948 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.25742647 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.256322057 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.256461424 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.257027536 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.255385731 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.25602203 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.255912091 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.255480932 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.255514326 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.256813375 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.256445488 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.255359111 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.256940304 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.255760288 seconds)
  done (took 23.746003886 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.267517221 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.276878175 seconds)
  done (took 3.685390011 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.384920884 seconds)
    (2/7) benchmarking "second"...
    done (took 1.298333521 seconds)
    (3/7) benchmarking "month"...
    done (took 1.361399245 seconds)
    (4/7) benchmarking "year"...
    done (took 1.35360964 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.298723775 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.277962132 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.297534163 seconds)
  done (took 10.413347174 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.257335277 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.470484578 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.601473988 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.832726957 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.260436547 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.262388925 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.157342952 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.26259604 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.264499797 seconds)
  done (took 14.511156111 seconds)
done (took 76.575542861 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.243458033 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.318058922 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.274171441 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.260127443 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.593713962 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.256004625 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.24695636 seconds)
done (took 16.335438204 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.233984138 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.226472493 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.229543303 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.261746467 seconds)
  done (took 10.094700024 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.244732656 seconds)
    (2/2) benchmarking "read"...
    done (took 1.571272035 seconds)
  done (took 4.956678187 seconds)
done (took 16.19344749 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.259551654 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.25963534 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.258902531 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.257115678 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.258438552 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.25857336 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.259175441 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.258648909 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.258567059 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.258675248 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.259857182 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.258589346 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.258976259 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.258870245 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.257864543 seconds)
    (16/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.259817344 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.259782611 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.259282857 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.258371639 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.259215758 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.25905275 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.260368573 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.259312055 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.258487065 seconds)
  done (took 31.357761503 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.258199491 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.259931445 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.259854287 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.259347959 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.261052335 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.259781535 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.262371273 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.261695386 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.259656881 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.258638157 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260471349 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.259052803 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.260616051 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.260879765 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.260158997 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.261983126 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.260502463 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.261137093 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.260899397 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.262062503 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.26119135 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.260031906 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.262860543 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.260524122 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.261755215 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.260027005 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.261820677 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.259756466 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263944179 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.260631979 seconds)
  done (took 38.965957976 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.264722632 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.262162752 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.262441432 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.261234536 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.261417785 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.261463414 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.262171779 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.2632812 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.262132534 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.262957345 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.262053434 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.261345976 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.261786103 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.261929564 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.262443688 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.261569912 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.262134929 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.263051243 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.262880366 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.263383013 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.262844757 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.262873783 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.262179882 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.264220615 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.263352547 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.262605325 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.261568449 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.262482904 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.263406856 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.262586432 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.264381818 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.263607151 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.263470417 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.263631074 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.26421836 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.264320404 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.265425941 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.263713604 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.264446144 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.262348595 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.264477438 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.264510704 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.26349841 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.264011774 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.264913718 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.263917753 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.263839969 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.263442638 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.262867521 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.2643645 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.263924552 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.263325158 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.264557823 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.26348005 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.265421224 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.262735025 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.265141948 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.264747292 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.26381711 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.265212453 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.264571473 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.262388632 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.265593987 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.264805784 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.265772979 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.265786426 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.266016042 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.26516052 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.26575067 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.265300588 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.268085647 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.266605222 seconds)
  done (took 92.129283169 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.266476713 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.26458914 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.265881855 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.265817515 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266521052 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.266569798 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.26589638 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266201922 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265374266 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.265506382 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266663088 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266234648 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267611634 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.266931081 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.266703775 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.266121859 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.267565269 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267642636 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.268254426 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.268068471 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.266709989 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267562182 seconds)
  done (took 29.015250346 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267277157 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.269195019 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.268140768 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.268592284 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.270047494 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.268743425 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.26832064 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.269287652 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266176659 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.266731583 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267509186 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267719524 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.269241298 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.268594303 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.268461508 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.269256807 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.267769056 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.268804064 seconds)
  done (took 23.980712774 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.268676333 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.268657471 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.269210336 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.268979742 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.268160163 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.269383823 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.268650474 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.269127077 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.26877539 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.267754559 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.268312442 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26945555 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.270349377 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269486605 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270276475 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.270884565 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.268291012 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269816518 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.271928882 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.269750645 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.270347812 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269162407 seconds)
  done (took 29.077162487 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.271613286 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.268445128 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269490995 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270941658 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.270058155 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.271288079 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.270900928 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.270435718 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.271188091 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.271342412 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.270636024 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.269889102 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.272296074 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.270610487 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.271334507 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.270397915 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.26956538 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.272204291 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.270532044 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.271276873 seconds)
  done (took 26.566429816 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.27237332 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.27147047 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.270352408 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272354266 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.271785516 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.271369271 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.270954356 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.272961018 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272063233 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.272851001 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26963885 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.272722607 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.271031493 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.270442503 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.270848145 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.273767968 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.272735544 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273184629 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.274518842 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272246415 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.273042161 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.273162574 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272134221 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.274318261 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.272926874 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273170714 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273798097 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.27171385 seconds)
  done (took 36.777450902 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.272087957 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273365145 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.271234163 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.272364377 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.272826445 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.271749391 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.272224079 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.272262017 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.278171825 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273624244 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.273847828 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.273156251 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.273477942 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.27276186 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.273510904 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.274392059 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.274098814 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.273777069 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.274420714 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.27504766 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.274646706 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.274272051 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.273434736 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.27526493 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274400856 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.276263563 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.274522998 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.274547537 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.272589963 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275624617 seconds)
  done (took 39.369212678 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.292285751 seconds)
    (2/2) benchmarking "in"...
    done (took 1.2927856 seconds)
  done (took 3.742499995 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.275693057 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275401927 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.273111705 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.275978938 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.274801618 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.274279112 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.275933772 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.276518658 seconds)
  done (took 11.356851714 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.268093547 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.276779801 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.276987164 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.27662899 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.277085059 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.2678289 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.275757839 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.280195035 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.269856739 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.269650948 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.27146196 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.270705615 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.273262759 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271230847 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.271232344 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271959227 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.281076153 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.278638174 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.277471409 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.276941567 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277970572 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.272624389 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276495608 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.280142913 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.269890532 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.278527958 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.277012631 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.2814397 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.270728868 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.274957745 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.272808666 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.279299779 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.277949825 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.278132598 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.277507557 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.279873968 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.278468828 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.274808924 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.277477667 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.281110992 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.279210245 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.278758068 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.272573791 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.277013223 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.275560016 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.284801286 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.278252855 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.278520108 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.269539486 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.273292283 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.280745286 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.270906312 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.280952437 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.276368701 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.277399195 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.281758767 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.286776772 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.27123695 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.273108315 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.280349653 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.287760496 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.281185626 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.279420474 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.283258284 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.276652859 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.27786556 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284270791 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.286231053 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.27967617 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.280555394 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.280411561 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.28813763 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.285600347 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.28600817 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.281475359 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.281758828 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.274619644 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.284580058 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.281232681 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.284374298 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.287953309 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.281212972 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279636343 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.278961752 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.277013875 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.285129275 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.283103696 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.282372918 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.271614293 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284079438 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.290604487 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.280429575 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.272601524 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.27804504 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.278932452 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.283445403 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.273698849 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278863773 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.285957557 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.283458099 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.282968794 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274283505 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.279683763 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.288597985 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282576363 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.282265779 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.289800583 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.276303347 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.286492517 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.291698392 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.283005923 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.275509913 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.279348092 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.286873774 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.274957468 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.279728956 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.288625745 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.280264849 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.288993759 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.284394642 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.280188545 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.287078712 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.289093498 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.28264925 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.278868802 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.286022862 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.28264794 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.28043385 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.290712672 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.285519666 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.283639429 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.279867863 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.290012913 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.277453181 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.28864148 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.278973694 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.286908114 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.282462388 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.287508747 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.279101486 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.282838567 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.280323046 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.284758342 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.287324997 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.290857126 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.281466237 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.291645219 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.28544566 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.283352623 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.285788069 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.290794392 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.284694994 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.278994271 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.288677813 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.278383729 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.288138323 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.280405791 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.288469063 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285423487 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.286252705 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.286439059 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.278671208 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.280449984 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.288924266 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.284631335 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.284575448 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.290900959 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.285454708 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.288208966 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.277596222 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.288650643 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.278642758 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.280746632 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.288950565 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.286328712 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.287346871 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.283338992 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.293502086 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.287430482 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.286832472 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.279404042 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.285301929 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.292280114 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.288613441 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.294011321 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28890348 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.286538348 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.280916282 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.283126571 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.290770999 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.280547301 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.291258865 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.293395358 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.295229681 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.282801832 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.288653378 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.27970128 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.292404899 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.28610005 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.295602032 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.288167408 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.287943418 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.28197546 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.293746041 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.284042008 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.292358016 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.280795949 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.291934837 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.289953447 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.289077972 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.288774099 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.281452502 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.287889911 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.292709203 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288432699 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290938255 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.281537218 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.293100293 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.2811219 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.28531738 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.292725604 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.289529667 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.291238315 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.297962846 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.286566927 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.295099322 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.292456093 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.284826888 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.29199612 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.288503925 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.289768607 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.295886572 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.292005331 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.286287739 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.293939101 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.292557102 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.286596317 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.290183216 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.297662891 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.290898304 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.283715786 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.292948924 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.291865054 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.289911313 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.291422695 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.282946026 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295203546 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.293717396 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.302665715 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.284691887 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.29521072 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.287302104 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.294140645 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.286680659 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.292360779 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.291715852 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.295456031 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.30015028 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.292243803 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.286686059 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.296047532 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.290480968 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.291094295 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.284715002 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.295445729 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.294970884 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.292979043 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.289667559 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.288971469 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.294297969 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.284739323 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.294886682 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.28592632 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301066597 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.308362095 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.296535263 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.298623055 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.29659941 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29470496 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.295392569 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.288222365 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.287043136 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.290620726 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.28960106 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.288346379 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.297088358 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288274877 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.296843164 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.291647402 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.293779781 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.295528046 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.295695741 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.28838558 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.297652315 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.294217498 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.294525601 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.286951317 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.296054154 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.289415531 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.29548486 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.296029405 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.290853409 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.299536159 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.298987208 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.291742445 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.290639086 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.291440267 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.288536097 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.292704341 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.298950576 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.291055676 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.298554345 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.287513511 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.293982403 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.291386702 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.300988933 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.305605785 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.290625904 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.300415905 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.295019539 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.285230011 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.290960263 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.297667998 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.299786417 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.308118888 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.290434463 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.298441907 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.297448369 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.296252236 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.297479069 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.296361572 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.296175337 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.295673718 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.301023511 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.300493169 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.294098702 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.299322481 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.306113415 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.297566447 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.296154938 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.289847421 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.299853945 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.305414464 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.293191163 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.294728687 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.293529277 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.299160076 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.297831039 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.299109677 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.298260064 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.297275317 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.301227749 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.302700897 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.299973 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.29698213 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.303335184 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.307899391 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.301218121 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.309736303 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.293599621 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.303849842 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.302194967 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.292910469 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.293981881 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.292934906 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.303357869 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.290458938 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.303178381 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.299050442 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.295574092 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.299649203 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.305204363 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.291668229 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.297388638 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.308022553 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.292365274 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.3008437 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.299376223 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.29012517 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.301589133 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.300293821 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.293053815 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.29469758 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.295011567 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.3020895 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.293768436 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.303520408 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.292941974 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.302792003 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.299759964 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.300966672 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.301918799 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.300351397 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.292723719 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.302471214 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.301442421 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.312949128 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.295722938 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.300629532 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.296102609 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.306337288 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.311941816 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.297842773 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.306027467 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.303282692 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.295916403 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.300342726 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.306927493 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.295092091 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.305932027 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.292063543 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.296729543 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.297515189 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.302205351 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.305574124 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.305342797 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.296382675 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.296602127 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.304333752 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.302861614 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.301670305 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.29826022 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.308720685 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.296615547 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.295786652 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.3041296 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.29651795 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.306784456 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.294188972 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.299223338 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.300638707 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.30458694 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.302616831 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.302960459 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.293728715 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.298559705 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.308827681 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.307484459 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.299846399 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.297036638 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.305740379 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.296344773 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.299746289 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.300695774 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.29931917 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.299218454 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.306620281 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.299922037 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.298782359 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.299370974 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.306772489 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.307233942 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.308200919 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.297228726 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.311521699 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.312531282 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.310382333 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.296907639 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.301679695 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.301053761 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.306509413 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.304912824 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.299133849 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.312959551 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.311246128 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.309380306 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.304199866 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.307243941 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.298413786 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.308366207 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.304828881 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.302738016 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.312091278 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.303092963 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.313718346 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.307764978 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.305477343 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.298767638 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.299526201 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.301073956 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.30167043 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.308222086 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305771302 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.309166046 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.305232614 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.310545322 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.308255295 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.306461217 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.307222307 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.298435993 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.308892447 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.298916936 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.308040211 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.309291501 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.300442559 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.310316939 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.306991963 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.29916469 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.303526024 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.31037264 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.306481628 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.301217043 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.30681966 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.311691781 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.318145913 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.308021278 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.300510321 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.305943785 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.31015015 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307464193 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.307596552 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.301607396 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.315650776 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.321913668 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302829006 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.305588509 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.310823248 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.319179225 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.308202101 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.309369358 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.305655289 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.306787517 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.311700827 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.309062713 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.311214204 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.315393276 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.303933522 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.312051968 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.303018729 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.305078625 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.310275501 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.317223105 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.309466239 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.305965992 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.31691464 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320644314 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30894098 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32148239 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.316322254 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.311269555 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.315562378 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.302073331 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.311657908 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.307617831 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.315658695 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.308579603 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.311515441 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.310407391 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.303180381 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.313110422 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.317078639 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.318865695 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.311802271 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.30291308 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.307279663 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.312255495 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.310899508 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.312978171 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.311990766 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.310986003 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.312190661 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.304512001 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.323334824 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.324966986 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.316580625 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.31178319 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.310482586 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.313258742 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.314180834 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309007983 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.31482772 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.311584139 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.311406979 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.308914831 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.321022613 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.312330932 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.304695698 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.306970595 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307103004 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.314723391 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.319696845 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330071109 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.313830159 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.316916131 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.315654165 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.312276338 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.308009204 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.315336557 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.313560778 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.308402087 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.309140741 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.315859567 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.313071892 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.313581094 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.306126237 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.317537914 seconds)
  done (took 772.647356665 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.314749203 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313746465 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.312984926 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.313585417 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.313469668 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.312991504 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.313739195 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.314338197 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.31461681 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.315152804 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.313263384 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313511623 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.315193374 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.316330266 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315009351 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.314343254 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.315139707 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.315231086 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.315281542 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316221865 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.316317101 seconds)
  done (took 28.795237917 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.316516602 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.315121759 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.316145273 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315147221 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.314914996 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.316391252 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.315664414 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316349242 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.315561271 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.315764835 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.315937454 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315273783 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.31601808 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.316889512 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.316057599 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.315009649 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.31605893 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.317145437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.315604251 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.315708561 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.316093233 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.315733816 seconds)
  done (took 30.139686698 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.316905679 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.315937587 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.309535854 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.318962063 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.317115263 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.316939169 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.317346558 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.317194668 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.318588739 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.309388646 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.311527689 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.310556384 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.312413904 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.321467263 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.312829722 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.321980992 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.317801006 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.317530992 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.317461028 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.317043516 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.320006205 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.331505591 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.317832042 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.309719086 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.320864743 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.318636992 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.318268426 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.318756523 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.311135932 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.321280036 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.318672363 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.313229938 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.321198426 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.320914843 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.312701202 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.321801561 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.31875902 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.317939569 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.31987586 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.317165162 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.328167568 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.319917567 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.324115899 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.332120211 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.319486593 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.312701637 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.323226819 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.318933002 seconds)
  done (took 64.460216094 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.31968249 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.320225735 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.320275773 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.321088194 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.320184319 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.321989331 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.320812967 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.319857773 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.321644542 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.32033768 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.32014901 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.321164005 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.320034403 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.321450976 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.321150877 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.319262006 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.321295569 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.32165933 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.320983632 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.321260189 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.321310002 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.321593243 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.321523187 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.321679411 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.320903516 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.321211961 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.320428833 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.321263788 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.322124682 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.319945147 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.32135034 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.321595721 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.322511072 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.321805263 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.321074355 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.320876476 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.322004583 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.32288795 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.32052902 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.321021914 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.322375596 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.322772276 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.322939528 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.321143056 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.323157912 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.323479981 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.322259567 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.321166281 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.323384981 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.323194533 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.323090853 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.322837652 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.32288214 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.322528 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.323229048 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.323674624 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.32299138 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.321967401 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.322805805 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.322268891 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.32299766 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.323647078 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.324060493 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.323315188 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.323879089 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.325151645 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.324759016 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.323382926 seconds)
  done (took 91.083740857 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.323883387 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.323463162 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.324970586 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.325346955 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.325131109 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.325617356 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.324807231 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.325375447 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.324789492 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.324204125 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.325085657 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.32479036 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.325045681 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.325830273 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.324635688 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.325748567 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.32634543 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326333661 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.325498624 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.327193345 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.326437985 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.324175513 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.327492259 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.325632902 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.325356823 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.326057417 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.326687811 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.325378313 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.324971242 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.326411363 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.326424471 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.326109089 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.326323151 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.327556347 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.325138489 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.327063347 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.325383181 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326467436 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.328801592 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.326370924 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.327100415 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326413873 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.3260575 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.328102256 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.325318188 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.326484964 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.327171488 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.327305684 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.326289236 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.326657728 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.326149602 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.327271558 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.327295956 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.328045497 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.327466864 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.327621313 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326158145 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.327370985 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.326556278 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.329105817 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.328019444 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.327650691 seconds)
  done (took 83.424080713 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328398765 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.326112409 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.326713152 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.326598354 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.326611315 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.327969694 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.328218542 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.328484776 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.327975284 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.328447752 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32906925 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.328566582 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328423681 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329506579 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.328790335 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.32883007 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.328460411 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.327900282 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.327747061 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.329919875 seconds)
  done (took 27.763672171 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.32920572 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.328856326 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.327937374 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.328487649 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.328313086 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.32958306 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.328375465 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.329611318 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329000112 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.328133063 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.331193885 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.327946868 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330362661 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.330507157 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.330132202 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.328992599 seconds)
  done (took 22.466447151 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.329918904 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.330158825 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.330267238 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.330708779 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.329540495 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.329562314 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.329927156 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.329413581 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.329795613 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.330926077 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.329906222 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.330751201 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.330001965 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.329993754 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.331123472 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.330242356 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.328575874 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.330355771 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.33085006 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.331032124 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.33109974 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.331776218 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.331174771 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.330060617 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.330279257 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.33291651 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.332578734 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.330848902 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.331572916 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.331170025 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.332213351 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.331344626 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.332496596 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.332307707 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.332206173 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.331862416 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.330586884 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.330824436 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.33282573 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.33234671 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.332267496 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.331417 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.331475744 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.332744408 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.332382022 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.332009571 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.333251046 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.332747155 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.331674267 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.333058542 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.333077761 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.332649837 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.333091954 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.334533606 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.332772509 seconds)
  done (took 74.428105831 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.333374148 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.333559436 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.333311167 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.334299271 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.333595019 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.334046873 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.334572393 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.336005275 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.333746287 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.333669151 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.333146434 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.336140557 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334007303 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.333520002 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.334898232 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.334302483 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.334538657 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.33354102 seconds)
  done (took 25.220475044 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.334335663 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.336211649 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.33511315 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.333719408 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.333785317 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.336439985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.333788539 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.332891973 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334081209 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.33577839 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334652422 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.334792991 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335543939 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.334061395 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.335962746 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.335548201 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.335165567 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.334941363 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.336114035 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.336124463 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.335215998 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.336571639 seconds)
  done (took 30.577930703 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.325012559 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.325980978 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.327301429 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.340356982 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.335061135 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.326469194 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.32595258 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.326481566 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.343755174 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.350738105 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.345741209 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.335025342 seconds)
  done (took 17.21490308 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336673506 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338836561 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.335856298 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.336515074 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337385038 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.336612321 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336703205 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337378743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336797315 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338155293 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.336561044 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.337761026 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335029325 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33951557 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337617534 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.337798951 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337141126 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.337927437 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337274215 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337630032 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33653062 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338445386 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338121517 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338903481 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33792674 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.33794447 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337252212 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338046438 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33897414 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33771299 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338853018 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.33803498 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338620278 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337681712 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338733959 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.33945629 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339758251 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.338747379 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339360011 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339503127 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.33936581 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33991005 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.33899216 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339643218 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340256603 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339796595 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340563126 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338925699 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339593879 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339832502 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340377182 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339084025 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341526387 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340190124 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340848706 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341909048 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340371819 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340559661 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340260076 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34014524 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339744094 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339714588 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339584051 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340210737 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340058995 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341296659 seconds)
  done (took 89.566236756 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341422102 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340662044 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.341491483 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340160038 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341427847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341756592 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340908563 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339317825 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341316392 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341505378 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341409202 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.339962031 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341593158 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342426904 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341524876 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341182161 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.341088849 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34082237 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342453035 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341959826 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341199952 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.340648503 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342706661 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34167668 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342489645 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343007874 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342260159 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343152156 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342929376 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.341910142 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343941878 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342555312 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342495022 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.342547551 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343966038 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344694781 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342950103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341880794 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342305062 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344752348 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344009378 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343629121 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343418507 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342908175 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.34353696 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343572088 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344948317 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343681289 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344884189 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344742625 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34414823 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343912014 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345673376 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343742537 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344405273 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344386248 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344331917 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345120865 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344729171 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344941145 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344497394 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344423295 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345354079 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344839111 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343426158 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345394616 seconds)
  done (took 89.845776951 seconds)
done (took 1811.117323877 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.509035847 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.458482529 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.334413096 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.341810368 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.336239694 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.336602897 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.348526347 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.336653296 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.335781881 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.335359143 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.335317188 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.528054218 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.372093384 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.336388118 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.336279739 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.43295327 seconds)
  done (took 27.230082902 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.365330645 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.343263612 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.461135889 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.34479554 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.364464241 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.531619589 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.403503541 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.342209509 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.521126154 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.364911681 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.340791615 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.367519902 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.341787643 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.339828873 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.36702353 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.534094274 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.621026366 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.353397071 seconds)
  done (took 29.524769949 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.811738066 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.350172699 seconds)
  done (took 5.37824881 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.363835085 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.343720085 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.344526211 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.342446989 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.333596254 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.338573048 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.341951869 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.339758956 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.339885556 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.473557013 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.347736683 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.354821962 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.341407995 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.342532704 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.349629404 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.389546075 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.510804484 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.351587774 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.349164389 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.346580638 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.340935045 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.445467554 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.385507845 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.354797251 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.474701915 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.349626868 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.34922188 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.347727377 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.459600075 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.350393823 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.341093818 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.340583921 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.343470677 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.30335127 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.898351288 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.335610468 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.368447661 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.349241035 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.349977074 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.505957923 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.341536738 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.349664007 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.334173346 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.891512868 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.451865618 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.463143901 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.336532741 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.346890937 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.343503274 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.407417437 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.341845805 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.343166958 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.402310678 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.163438771 seconds)
  done (took 85.981395247 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.387608738 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.339225775 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.518924049 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.355080616 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.334578502 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.350032463 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.356890011 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.63207776 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.357841693 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.333823158 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.657733288 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.982791392 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.338572192 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.403100185 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.372106539 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.395866547 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.336974554 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.365496184 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.333252391 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.339895924 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.920664281 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.341027045 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.33467652 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.425028418 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.37657165 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.885797684 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.334860515 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.3352491 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.349857307 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.33535502 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.938492526 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.349803351 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.383625337 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.33777431 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.629049875 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.740391683 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.700261768 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.343974666 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.374801583 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.337058628 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.36440455 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.878487719 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.720560745 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.351392234 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.337198355 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.875944563 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.335995855 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.343253256 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.340879847 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.609586194 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.336836737 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.337285654 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.338032877 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.339111453 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.336922679 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.402857357 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.400254583 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.890734386 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.33780453 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.337468539 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.347304403 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.335987299 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.350040553 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.340328411 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.337598819 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.725021443 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.594579822 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.341766057 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.721851866 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.928417413 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.338414818 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021100858 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.335426709 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.377690254 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.382627876 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.338366325 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.337041427 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.88583816 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.34166901 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.335555149 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.699812368 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.338600281 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.648209886 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.355243071 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.339148655 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.943656596 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.348700243 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.377559088 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.339458551 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.353562046 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.338207454 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.343987024 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.637997645 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.390186964 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.340108868 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.338668026 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.34657568 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.340811256 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.340444242 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.339942158 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.006812121 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.345256676 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.340993326 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.362528598 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.339599743 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.339019863 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.342715788 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.339561056 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.630566855 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.340068536 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.345052228 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.341170316 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.354816861 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.345959911 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.434227747 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.341841027 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.664706589 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.344417859 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.340593023 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.340007181 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.338309821 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.370421906 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.342698714 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.347879426 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.345702307 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.640319313 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.358886437 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.358486425 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.342266881 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.340612075 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341538141 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.346321829 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.397716375 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.342075949 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.217820738 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.346928 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.354704244 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.339505647 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.351733987 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341866012 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.349795547 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.344862789 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.647966793 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.639594402 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.601353164 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.344195776 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.341550512 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.196237747 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.353973571 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.527234062 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.364123807 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.343502383 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.623128627 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.56706205 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.344043417 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.342630465 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.344389434 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.62514586 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.343061622 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.678888222 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.972678572 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.342749517 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.351400686 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.209214377 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.162869344 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.344805592 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.343515873 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.647683214 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.359881444 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.343749511 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.342539273 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.344253684 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.342447003 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.344018257 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.354805738 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.343085615 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.344367568 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.634774566 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.540552098 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.361775481 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.351741617 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.893685553 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.366735703 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.34623656 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.351363649 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.346201591 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.343905058 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.400993622 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.348642021 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.353593472 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.345396801 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.351394925 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.920699376 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.345800188 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.363551487 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.541759945 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131900478 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.346333772 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.346249151 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.345016861 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.405446387 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.926334709 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.386487753 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.669447131 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.351975605 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.386382834 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.347582217 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.353604551 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.928277929 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.347302259 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.365904091 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.102618671 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.346460047 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.825775814 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.346601389 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.347089676 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.02996464 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.347756164 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.348918926 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.346090031 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.348613846 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.668461409 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.347648633 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.362825279 seconds)
  done (took 501.663058062 seconds)
done (took 650.994081792 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347243362 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.348866877 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.331460335 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.350913507 seconds)
  done (took 10.607125052 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.366035131 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.355696775 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.364525822 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.35602879 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.364486301 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.353965728 seconds)
  done (took 9.389733532 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347579232 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.350555093 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.354970242 seconds)
  done (took 8.282859688 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.586047651 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.379982938 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.72780496 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.357987127 seconds)
  done (took 9.282179753 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.365229922 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.365467319 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.363984055 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.364110093 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.366547332 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.365210092 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.366450234 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.366968491 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.366034967 seconds)
  done (took 13.518674897 seconds)
done (took 52.311359072 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.448206894 seconds)
    (2/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.452718276 seconds)
    (3/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.392395517 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.420732956 seconds)
    (5/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.329907884 seconds)
    (6/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.438574232 seconds)
    (7/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.097621633 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.389521043 seconds)
    (9/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.46088759 seconds)
    (10/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.32866646 seconds)
    (11/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.573510483 seconds)
    (12/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.62447632 seconds)
    (13/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.330615083 seconds)
    (14/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.045000783 seconds)
    (15/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.440415326 seconds)
    (16/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.329278832 seconds)
    (17/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.085037441 seconds)
    (18/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.032936873 seconds)
    (19/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.324069199 seconds)
    (20/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.433188972 seconds)
    (21/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.465646402 seconds)
    (22/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.48445116 seconds)
    (23/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.352208726 seconds)
    (24/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.506330021 seconds)
    (25/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.337390487 seconds)
    (26/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.390347698 seconds)
    (27/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.345422794 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.385845989 seconds)
    (29/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.102798025 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.331395989 seconds)
    (31/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.361897695 seconds)
    (32/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.033491835 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.439334274 seconds)
    (34/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.571215899 seconds)
    (35/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.330195617 seconds)
    (36/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.534508488 seconds)
    (37/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.42474006 seconds)
    (38/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.430551692 seconds)
    (39/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.383796742 seconds)
    (40/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.464869647 seconds)
    (41/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.479044211 seconds)
    (42/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.527774432 seconds)
    (43/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.437533696 seconds)
    (44/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.337418072 seconds)
    (45/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.437011195 seconds)
    (46/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.331680963 seconds)
    (47/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.513914793 seconds)
    (48/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.333596354 seconds)
    (49/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.329954416 seconds)
    (50/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.352763579 seconds)
    (51/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.197966586 seconds)
    (52/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.337366983 seconds)
    (53/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.505254082 seconds)
    (54/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.486693051 seconds)
    (55/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.216259686 seconds)
    (56/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.469358772 seconds)
    (57/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.4172269 seconds)
    (58/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.435161929 seconds)
    (59/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.449924553 seconds)
    (60/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.387995842 seconds)
    (61/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.611670709 seconds)
    (62/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.543611094 seconds)
    (63/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.434593159 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.481085413 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.445098746 seconds)
    (66/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.332633682 seconds)
    (67/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.333666195 seconds)
    (68/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.388009439 seconds)
    (69/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.63023359 seconds)
    (70/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.393166055 seconds)
    (71/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.392216035 seconds)
    (72/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.385666252 seconds)
    (73/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.576942404 seconds)
    (74/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.386685747 seconds)
    (75/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.333093383 seconds)
    (76/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.443805812 seconds)
    (77/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.475742348 seconds)
    (78/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.33371325 seconds)
    (79/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.473364455 seconds)
    (80/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.441180716 seconds)
    (81/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.390867717 seconds)
    (82/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.579495212 seconds)
    (83/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.339347902 seconds)
    (84/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.46176841 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.479485162 seconds)
    (86/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.387471353 seconds)
    (87/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.219756945 seconds)
    (88/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.334821487 seconds)
    (89/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.447955179 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.152101232 seconds)
    (91/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.535634294 seconds)
    (92/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.249495697 seconds)
    (93/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.427249556 seconds)
    (94/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.253356691 seconds)
    (95/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.501226088 seconds)
    (96/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.729192579 seconds)
    (97/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.440094785 seconds)
    (98/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.511648472 seconds)
    (99/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.334681077 seconds)
    (100/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.504131256 seconds)
    (101/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.614944052 seconds)
    (102/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.487591087 seconds)
    (103/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.506215064 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.610274433 seconds)
    (105/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.339442562 seconds)
    (106/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.396965298 seconds)
    (107/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.33499361 seconds)
    (108/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.471189878 seconds)
    (109/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.547343941 seconds)
    (110/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.436335286 seconds)
    (111/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.3354618 seconds)
    (112/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.386043475 seconds)
    (113/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.632639422 seconds)
    (114/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.555930012 seconds)
    (115/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.433787193 seconds)
    (116/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.550302139 seconds)
    (117/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.201604691 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.371604746 seconds)
    (119/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.336333863 seconds)
    (120/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.435637907 seconds)
    (121/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.48972318 seconds)
    (122/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.35886432 seconds)
    (123/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.368577198 seconds)
    (124/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.501235509 seconds)
    (125/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.336288824 seconds)
    (126/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.499041041 seconds)
    (127/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.449517037 seconds)
    (128/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.337139338 seconds)
    (129/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.480029612 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.461134042 seconds)
    (131/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.430126786 seconds)
    (132/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.336035762 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.423149118 seconds)
    (134/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.473734674 seconds)
    (135/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.516334103 seconds)
    (136/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.518095895 seconds)
    (137/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.610082284 seconds)
    (138/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.371034089 seconds)
    (139/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.38755526 seconds)
    (140/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.479508692 seconds)
    (141/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.473211498 seconds)
    (142/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.513000132 seconds)
    (143/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.19481248 seconds)
    (144/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.33908422 seconds)
    (145/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.403670012 seconds)
    (146/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.510707243 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.519440913 seconds)
    (148/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.215015288 seconds)
    (149/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.475547612 seconds)
    (150/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.343839974 seconds)
    (151/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.463458635 seconds)
    (152/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.542613453 seconds)
    (153/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.472287829 seconds)
    (154/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.551800683 seconds)
    (155/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.394917622 seconds)
    (156/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.390869546 seconds)
    (157/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.339120652 seconds)
    (158/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.423692881 seconds)
    (159/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.38930822 seconds)
    (160/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.38443803 seconds)
    (161/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.391083851 seconds)
    (162/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.339688466 seconds)
    (163/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.221467026 seconds)
    (164/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.173970078 seconds)
    (165/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.402893781 seconds)
    (166/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.171584174 seconds)
    (167/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.481979154 seconds)
    (168/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.340329777 seconds)
    (169/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.4731529 seconds)
    (170/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.339352664 seconds)
    (171/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.34159788 seconds)
    (172/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.351822453 seconds)
    (173/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.121198381 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.456894113 seconds)
    (175/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.19485653 seconds)
    (176/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.361081893 seconds)
    (177/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.550830755 seconds)
    (178/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.58670876 seconds)
    (179/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.556116962 seconds)
    (180/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.381748135 seconds)
    (181/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.357723625 seconds)
    (182/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.563837415 seconds)
    (183/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.347309179 seconds)
    (184/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.62307507 seconds)
    (185/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.436901375 seconds)
    (186/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.059277218 seconds)
    (187/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.517027169 seconds)
    (188/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.431379369 seconds)
    (189/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.400383751 seconds)
    (190/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.163762541 seconds)
    (191/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.464880153 seconds)
    (192/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.392291009 seconds)
  done (took 345.164089441 seconds)
done (took 346.396159571 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3925186 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.457662266 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.370694355 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.370967762 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371508088 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.361690516 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.393332536 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.371538483 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.385145344 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.385245017 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.363681063 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.381293506 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.385986135 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.382325888 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.40456157 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.371597701 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.372230603 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.381432981 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.387205765 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.389234997 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371190096 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.373239841 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.39809095 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.371717694 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.381546806 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38161579 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.379030558 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.380057425 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.38035501 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.387480787 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.3639747 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.378998271 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.389370284 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.38354995 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374202402 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.383744314 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374621175 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.458909406 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.393869874 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.384554771 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.383144044 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.388825013 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.379448024 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.379124641 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.385207813 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.401048413 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.382855359 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.389050044 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.364536418 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.373945889 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.397822307 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.386430478 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.382667277 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.369923923 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.384306978 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.389517756 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.382394857 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395853799 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.382952736 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374580667 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.405809975 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.39264294 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.385967439 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384363324 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.381603697 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.389430988 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.384136914 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.391734155 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.381292554 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.37685725 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.376123847 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.384144968 seconds)
done (took 108.923688584 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.498723648 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.37253793 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.53266803 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.381722333 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.544376965 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.500453429 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.384758102 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.383309614 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.383323125 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.176390916 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.383716044 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.382822142 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.374734463 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.383490089 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.500999767 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.382782032 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.384493174 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.076644085 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.385911217 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.516819088 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.376344396 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.384177085 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.38655723 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.181690826 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.372895135 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.368933292 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.51702267 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.385504567 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.082645029 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.370463505 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.373617714 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.083897134 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.518753574 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.405308169 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.396006427 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.39544895 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.547085891 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.389400536 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.502924639 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.502998146 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.533927246 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.423454274 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.369314548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.375074919 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.38660953 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.386339083 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.387779609 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.41400385 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.375569359 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.386755364 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.08080016 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.396478796 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.395762455 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.385904545 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.38642499 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.4059939 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.387480302 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.388634904 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.520304578 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.389387623 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.50183248 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.189835134 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.181351613 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.387877377 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.37429264 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.388060859 seconds)
  done (took 111.519442832 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.447762758 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.4575924 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.494102005 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.378630028 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.428463223 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.494855657 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.380964766 seconds)
  done (took 11.333250986 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.384685696 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.388511642 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.428797453 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.429174434 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.388898289 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.555970273 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.389582704 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.39139921 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.387790034 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.444871895 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.390075941 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.387331329 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.39792607 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.376851035 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.429281736 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.391499119 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.499448426 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.381659178 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.387257906 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.533355103 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389492103 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.398655831 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.430267606 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.390887502 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.392830772 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.386269632 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.183760419 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.390156503 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390068738 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.389690621 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.391579475 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.44602648 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.391357582 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.381822616 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.390525819 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.49576794 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.390002415 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.392315047 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.392039613 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.38371699 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.390916751 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.391538526 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.391230941 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.391223962 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.391213266 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.406198754 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.391719136 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.3919601 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.391314386 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.390551329 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.446554058 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.392156641 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.392736555 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.391735891 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.452478108 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400006881 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.391079929 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.390829889 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.392006251 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.392665639 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.53613339 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.432283226 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.392354899 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.435303218 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.392229635 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.393761965 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.392130512 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.390358108 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.473452636 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.393778231 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.435279182 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.392266371 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.583887535 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.409968755 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.394338624 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.385389635 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.38572384 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394162352 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.380395756 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.390720478 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.392167957 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.385615915 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.391674972 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.392852776 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.39329015 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.541640692 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.491695163 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.39330369 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.399630414 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.392132872 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.393086539 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.448845516 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.394061882 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.392848996 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.441918581 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.502178039 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.436167791 seconds)
  done (took 142.952290244 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.398491687 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.397616547 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.389621419 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.414147284 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.385146422 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.386430929 seconds)
  done (took 9.628243419 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.388190018 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.399198205 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.395904667 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.395222643 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.393998615 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.398760757 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.396152037 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387265242 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.398866875 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.395792143 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.397561051 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.399284512 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.397118893 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.396608776 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.397744483 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.395180429 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.396711122 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397304773 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.397110572 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399694523 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.386137906 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.397907239 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399014374 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.389580448 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.403076047 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.396118893 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.413528611 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.399782415 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.398019207 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.392962621 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.402227272 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.398807915 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.391529548 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.395322296 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.401924646 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.390340036 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399719963 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.401309208 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396055197 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.401357435 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.401109213 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.399009431 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.398484535 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.398330194 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.391447388 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.39279098 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.403462664 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.413985845 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.398080394 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.400918555 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.401997965 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.398077701 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.401534342 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.401746995 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.392932482 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394436917 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.403689888 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.400012952 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.400476706 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.391524773 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.401908087 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.401086017 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.393270475 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.404072273 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.39942396 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.403139605 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.392839092 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.403670112 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.399766446 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.400206531 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.401707133 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.399562507 seconds)
  done (took 102.922136907 seconds)
done (took 379.601952353 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.8337685 seconds)
  done (took 4.094719463 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.604726354 seconds)
  done (took 3.867468501 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.319401086 seconds)
  done (took 24.587699059 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.431391406 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.403521367 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.401439996 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.386068941 seconds)
  done (took 10.883480425 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.844675709 seconds)
  done (took 4.105947488 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.409254146 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.394829052 seconds)
  done (took 6.066674036 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.695680531 seconds)
  done (took 3.957580864 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.726624941 seconds)
  done (took 3.98916288 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.412930319 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.413132803 seconds)
  done (took 6.096181059 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.362203276 seconds)
  done (took 3.622148958 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 21.183011021 seconds)
  done (took 22.445286187 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.406916815 seconds)
  done (took 3.669814676 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.425051757 seconds)
  done (took 3.68579411 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.177157566 seconds)
  done (took 6.437180793 seconds)
done (took 108.772149092 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.383716679 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.38934705 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.391439156 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.384049954 seconds)
  done (took 10.808728258 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.463319891 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.46199003 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.472089749 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.457607095 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.457190353 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.465856892 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.424563263 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.425511557 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.454167126 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.449894201 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.465359721 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.457481638 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.466982308 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.426538022 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.450653348 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.46755522 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.456237328 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.475481355 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.443013007 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.458746326 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.399893725 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.460472703 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.451378276 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.402044744 seconds)
  done (took 36.074582229 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.888641137 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.46032842 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.544143327 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.442023276 seconds)
  done (took 7.595249696 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.504580146 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.50366915 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.521652955 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.558941602 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.604415117 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.517505071 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.426899068 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.421913124 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.407568959 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.505866417 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.586136698 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.504286817 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.717833065 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.399673349 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.718348919 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.399126841 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.399071658 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.504204812 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.551147354 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.583400021 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.401239572 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.50343232 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.506957831 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.504649158 seconds)
  done (took 37.513948319 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.409238784 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.417785077 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.402632726 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.415416403 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.402171051 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.402145472 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.405121282 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.407949507 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.400509996 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.401825492 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.402483839 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.415731939 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.400776828 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.400152681 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.409343026 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.402956735 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.405607837 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.409379415 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.410995546 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.402957703 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.402949697 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.408633644 seconds)
  done (took 32.198341146 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.388551947 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.387233408 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.738081291 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.643824433 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.38794893 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.38689879 seconds)
  done (took 14.194531321 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.46736169 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.612110504 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.395237956 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.763864544 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.856222821 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.400510947 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.394743653 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.650455836 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.970685467 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.972917026 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.454673349 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.470483104 seconds)
  done (took 20.67339496 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.396687737 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.394853525 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.395301416 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.409523969 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.451181577 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.401227368 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.400484457 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.388955336 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.456611487 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.454824885 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.397914641 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.454350491 seconds)
  done (took 22.267581395 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479922854 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398580847 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.397981905 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413944409 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400769992 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.39993814 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.456274207 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.108277418 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.405843587 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.674138013 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398919714 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500518044 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.64455356 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398862275 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.422865913 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.368310007 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624544316 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.89897969 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401012459 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401232461 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449749192 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401258387 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408359277 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.617702386 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.401915303 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401502632 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.664562605 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.401357176 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695808614 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675125811 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673697357 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41046532 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.679282821 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071044315 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507927593 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613799731 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.39713313 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.403253703 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.386616801 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.406221156 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405078834 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404353703 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.667087988 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411305412 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401996059 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409775904 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.126675634 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.409740327 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.400635579 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.403009069 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.670861458 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49303807 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.408626717 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402438494 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.460576685 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403361724 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.407766194 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.52550106 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045284594 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403469028 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413589412 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.409907498 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.397486082 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41603633 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065913674 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.411410326 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.407933834 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.408226969 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40468131 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410444635 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423910022 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403671201 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.424982128 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402998791 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196782283 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.407445993 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40735119 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978700013 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4220356 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.41212501 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.630653389 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.404739964 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407158371 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.40559578 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40578871 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15815614 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413430032 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.37469411 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.452665907 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.118662077 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.619037509 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425360751 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434322396 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.62450643 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.37487113 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4056382 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.421468038 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408012998 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425293878 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.125637139 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404791758 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.410823312 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652964671 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.61724995 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410100852 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.382348449 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.889256463 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419223751 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.436214547 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.413337614 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.62726073 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.046234795 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681315265 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424273896 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443572699 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407788287 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.222794233 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40655074 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.438227845 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40783055 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696088933 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.247473418 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415835452 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480840805 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418836828 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.406819278 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.407156813 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.409433514 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408482442 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.600983954 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414490308 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.679639317 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.417381193 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409188357 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.423427654 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41134532 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.410743093 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.628725014 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420040751 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690923637 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409379442 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409637191 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.410882008 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.626525502 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.421484932 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.417792246 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748611885 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.407499993 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414235133 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.683842874 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447212235 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521772939 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441464866 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.411043763 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.66107094 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.415609879 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.413770661 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410428226 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41112723 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412424065 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.418267309 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401381155 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.068745564 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389044407 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416070279 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.411072632 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.426368781 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485630385 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.419122575 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625957046 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.411384254 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420102099 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.421614688 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.425717134 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.632156635 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679819918 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.420715864 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.590487173 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.894488074 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053019899 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429056438 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.412057127 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.410861931 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.41168229 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414651805 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412022513 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412809343 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.627062674 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.688334455 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413570739 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.060013762 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417999398 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.414731962 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.425378337 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682309533 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.428737254 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414037387 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.412124569 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430937577 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437097304 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.686729807 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.64008332 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.429134643 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.412482406 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.932821934 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.421598102 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413939577 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.414975976 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441066495 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.415971382 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266886562 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.752301574 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41094318 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683166542 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422228962 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.432291957 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.414715713 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414289124 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453168344 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.424901176 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424385467 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.63155152 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.426002483 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416871682 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055382682 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.21778998 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004444333 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427788956 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.426722113 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42071448 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139338911 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415577086 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416045142 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.672120552 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.135404522 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416109048 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.899952118 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.425765251 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215365658 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685474009 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.648774146 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426194625 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.429722185 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.695873708 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.63608936 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442198993 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431013897 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420910833 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.384721492 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973587677 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416588475 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.600172979 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138419703 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430657474 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.424950838 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.413003187 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.422483886 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.835946704 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421711213 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41718535 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.430562448 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424138183 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305286179 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424351091 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418593833 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.088000563 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.429063469 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.910978694 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41793907 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.635959191 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.692021787 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.672639357 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.435456017 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.420784933 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.668171268 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.68999404 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426052841 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.418900218 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010088796 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.276252577 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.427301965 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419809678 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.245340355 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432272148 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.720393328 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.441852684 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.42418112 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427619807 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.420407063 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419595735 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.420265178 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.42694981 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395250575 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.923120573 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.4191973 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424067852 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422401015 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443531981 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.665667578 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.435776081 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.06355312 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645845191 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415833376 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452414401 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.42760836 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418123606 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.397609324 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.422204184 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421238023 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41979123 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.641036177 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.428913934 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.39463813 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442080847 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.632438501 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.421727675 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.421864245 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673329168 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.422132261 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.434326047 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231075122 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455007744 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420565357 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429655377 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.424141744 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459721851 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.496000717 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.641098859 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.697085333 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.702771605 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843320827 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422808858 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.431312506 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.43911827 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.501692347 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421991026 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.434738767 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.426640372 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.065874464 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230414962 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.075710798 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.698936359 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433083586 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43303696 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423080719 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.663512543 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425326441 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699329132 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423807525 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.421031881 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444946168 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423489359 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431810835 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639713266 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696567036 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423511951 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42442996 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431690985 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.425432338 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701628888 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.643390091 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933467601 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.986655631 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42756017 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.426635834 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.157934144 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.699583523 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424408126 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423835118 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42559265 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.444815038 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.429613227 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.438246483 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423713696 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.654247971 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.69681204 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.103954618 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.696194448 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.614969861 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.426083615 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425338939 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.678732324 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.269243435 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.643871853 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.084356199 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.179960499 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.677378647 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499739954 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.645029312 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.431164954 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.664544596 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.437740531 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429041098 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.428211012 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426117132 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.426500351 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.699272917 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.084793596 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679371275 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.431974314 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.437247242 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457946918 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.644965558 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.653007015 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.204390801 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.653781921 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703466928 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441593105 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.427860579 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.083895513 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.704061373 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436270088 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.438450031 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.658794727 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.428835684 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464524786 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.30742313 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.429438869 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999924194 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.641723154 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.451147576 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429806831 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.190265971 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.082647328 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.438750331 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941087499 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437601362 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440420168 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.709348544 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.437154326 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.429529763 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716657176 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.435543048 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442734988 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657863872 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.079827121 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.238436494 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.453475269 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433142641 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.438671086 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431764742 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.463470084 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430833383 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439105796 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.84719674 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.436006942 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434096045 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444224959 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.444181949 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.442199631 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.43802232 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431923677 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.440854118 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.414059333 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.407229797 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.453218112 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.558320732 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.997451459 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43326028 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.046938503 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.76670869 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.678016091 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.442887354 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.408636011 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.437662203 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431457237 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431409374 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433057325 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.434426921 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995008724 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.443476016 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.712992319 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.446068233 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.643056722 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642167466 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.432968525 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.657599538 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.451463663 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.45875278 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.402453148 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43273329 seconds)
  done (took 1004.138278431 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.430819636 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.440785415 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.461744078 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.511311049 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.433420276 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.490825962 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.445247516 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.458749481 seconds)
  done (took 20.967469228 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.438339925 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.433464066 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.437392717 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.43413338 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.429025583 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.927985692 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.433586578 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.434746485 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.447347131 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.431152721 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.436633989 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.088419016 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.434675281 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.429071724 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.427674852 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.435816038 seconds)
  done (took 33.397297778 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.298569935 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.527950931 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.309240527 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.469157876 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.441988811 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.438359032 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.645907486 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.448624796 seconds)
  done (took 26.875985474 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.438729523 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.440257422 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.440414409 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.440426982 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.439282417 seconds)
  done (took 8.494223326 seconds)
done (took 1276.460815047 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.441237368 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.441141216 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.440495203 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.44230674 seconds)
  done (took 7.062334387 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.406593971 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.410799713 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.410931606 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.424256964 seconds)
  done (took 9.949131397 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.16818214 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.987952805 seconds)
  done (took 5.451848637 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.002067169 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.000323752 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.989924221 seconds)
  done (took 7.288808801 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.71923192 seconds)
  done (took 3.017286149 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.428730508 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.433105222 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.188776742 seconds)
  done (took 8.347076738 seconds)
done (took 42.415121843 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.427854452 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.191513464 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.584929341 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.427267228 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.589908061 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.584248434 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.678095202 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.432506644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.429238177 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.43329647 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.447820031 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.590065552 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.665937385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.191926488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.666477646 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.192060883 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.589352224 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.437834173 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.430606865 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.449900332 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.680248477 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.435021761 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.428253568 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.436239867 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.590282757 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.572282936 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.435979478 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.192199252 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.441085621 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.435709503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.573718773 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.428901141 seconds)
  done (took 84.389957011 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.427808623 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.430010625 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.447456697 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.428768499 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.429143644 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.444941095 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.429615245 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.442210081 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.431506061 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.428960482 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.446335954 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.42843001 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.432773547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.430523927 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.42984589 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.430263721 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.437360635 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430960249 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.430263843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.430991682 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.434992909 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.434541119 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.428609471 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.437845876 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.430290297 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.431000106 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.45893605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.441747111 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.429127088 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.4434756 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.431232668 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.447906179 seconds)
  done (took 79.216694508 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.431183804 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.448984564 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.432359002 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.447848036 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.431637637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.432216299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.450642957 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.430938764 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.431120298 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.449998436 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.448195181 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.431008682 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.434134754 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.43225074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.431959667 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.434211176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.432229773 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.430737169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.447876561 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.434326684 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.435048959 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.440430244 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.445286329 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.440385011 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.431417172 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.441945176 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.432400769 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.43667712 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.45126962 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.448828329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.446026989 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.432050307 seconds)
  done (took 79.327222248 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.674724197 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.448241411 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.452008991 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.443542473 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.451974538 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.449084847 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.445293344 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.678807634 seconds)
  done (took 15.345341102 seconds)
done (took 259.578078891 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.450089987 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.956793534 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.476877827 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.451451767 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.460264867 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.47285103 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.673736908 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.47751217 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.676789868 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.483500864 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.459895914 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.445861309 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.290981818 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.602040977 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.281893544 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.40574712 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.370893633 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.437246686 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.02895895 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.740349086 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.476714232 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.436640844 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.277380364 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.381470576 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.416836228 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.526613939 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.547421151 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.680847698 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.616455298 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.532078447 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.967669481 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.44714919 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.465391463 seconds)
  done (took 66.719609648 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.444731009 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.45302592 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.45256581 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.451871768 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.452711967 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.453474359 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.443535772 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.452812176 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.452513293 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.453511522 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.453467226 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.455118039 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.454458913 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.453048561 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.453866149 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.427872421 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.443135249 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.453219048 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.443922378 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.426470371 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.453682362 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.452677868 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.455402832 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.454291389 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.454023812 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.454297012 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.453664727 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.454755043 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.455628013 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.454636491 seconds)
  done (took 44.825651814 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.453699904 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.023052218 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.213898307 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.452481617 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.445415811 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.451127748 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.753857242 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.456296205 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.448748098 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.449053554 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.939089877 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.458306359 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.479824912 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.22313685 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.449196 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.45691129 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.455530003 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.447838013 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.040202678 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.455697195 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.750761606 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.455914437 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.752658018 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.461922366 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.451452955 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.447886581 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.45409792 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.285460383 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.468479341 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.944940202 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.285335185 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.754492305 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.235618031 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.285651721 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.290037174 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.462665927 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.457865977 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.952087976 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.45427377 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.44895177 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.752475346 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.451384862 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.230593227 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.154142606 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.470717679 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.456260465 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.32111085 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.944756568 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.708571172 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.460750505 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.270554512 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.458911254 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.461288763 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.451306227 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.708383195 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.45272649 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.449849127 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.326272066 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.455858631 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.755690153 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.466208272 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.450136695 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.037582671 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.452488883 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.038288446 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.45336413 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.458251951 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.451570149 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.238037311 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.459609965 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.157220677 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.471804688 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.461414819 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.944715559 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.035293043 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.372778912 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453574894 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.047259989 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.255633733 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.773388934 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.461939539 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.267954515 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.777380189 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.460773817 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.464835002 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.462940075 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.459932345 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.532072569 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.755112164 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.08478813 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.158794942 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.339781497 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.760718213 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.466219907 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.455440585 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.345112343 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.466927665 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.462348141 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.238798521 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.175645836 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.474018903 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.460366626 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.169735061 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.474709297 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.761674774 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.4639744 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.278311811 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.461322498 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.534212936 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.462054689 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.460829763 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.460500733 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.761052403 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.463304043 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.463219384 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.15836193 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.974215009 seconds)
  done (took 203.064478638 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.451330243 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.450408395 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.449942321 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.448801591 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.448319143 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.456985256 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.448865269 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.448720811 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.453987635 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.449572506 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.44957717 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.458488421 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.457324647 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.450559542 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.449591653 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.450234223 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.448420207 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.456310587 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.449606192 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.451011466 seconds)
  done (took 46.343861846 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.46540356 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.04642085 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.021626028 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.469666654 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.46472434 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.45796048 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.51637597 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.46964197 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.466234802 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.772326162 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.641053959 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.473224091 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.466858981 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.467247215 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.021390891 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.439751472 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.772284887 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.04710591 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.467025555 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.044650621 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.439302676 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.46543491 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.455804856 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.046410454 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.783962049 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.76231078 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.522009014 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.048388114 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.467812213 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.466753295 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.047124932 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.468489417 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.459295798 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.036455364 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.467833857 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.481207254 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.466767382 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.52113486 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.522570789 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.776790314 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.052062041 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.77212062 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.483203636 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.617852535 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.469713884 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.439446289 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.062159196 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.468242821 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.439155016 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.469905891 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.472262111 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.036213366 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.466450724 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.036467748 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.474914099 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.46792734 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.049480853 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.036490144 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.031202055 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.647890407 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.464089545 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.766305883 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.47600416 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.072470849 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.476388283 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.469210885 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.471158006 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.645924696 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.058486375 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.766794911 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.780039765 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.778270321 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.470733072 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.532080599 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.473044102 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.778215843 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.530580607 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.841206771 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.778271288 seconds)
  done (took 132.637883317 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.751173531 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.579230352 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.859528515 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.055181046 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.978688232 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.60434528 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.579943744 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.715208995 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.485980674 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.576744822 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.142293568 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.55452078 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.227740839 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.529615566 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.571244875 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.591192746 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.87458784 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.451783338 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.116704104 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.121099605 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.482820776 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.570910504 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.986097577 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.667440818 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.472674945 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.052028905 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.433811136 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.996134973 seconds)
  done (took 55.350076972 seconds)
done (took 550.24565434 seconds)
SAVING RESULT...
DONE!
