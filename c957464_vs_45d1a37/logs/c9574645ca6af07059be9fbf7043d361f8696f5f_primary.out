cset: moving following pidspec: 1734
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.246067115 seconds)
loading group "string"... done (took 0.462253268 seconds)
loading group "linalg"... done (took 7.607209142 seconds)
loading group "parallel"... done (took 0.173009377 seconds)
loading group "find"... done (took 1.176402012 seconds)
loading group "tuple"... done (took 2.089097656 seconds)
loading group "dates"... done (took 1.326132739 seconds)
loading group "micro"... done (took 0.24503627 seconds)
loading group "io"... done (took 0.700712864 seconds)
loading group "scalar"... done (took 41.381736399 seconds)
loading group "sparse"... done (took 12.474795785 seconds)
loading group "broadcast"... done (took 1.110297766 seconds)
loading group "union"... done (took 13.707866286 seconds)
loading group "simd"... done (took 4.90848232 seconds)
loading group "random"... done (took 10.129479866 seconds)
loading group "problem"... done (took 2.009191012 seconds)
loading group "array"... done (took 22.484589787 seconds)
loading group "misc"... done (took 1.425476161 seconds)
loading group "sort"... done (took 3.574323096 seconds)
loading group "collection"... done (took 19.443419379 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.535825252 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.141549276 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132476429 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147734711 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.204034372 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144245289 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157548374 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.11381859 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.938550656 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.180770957 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154495452 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.513525493 seconds)
done (took 5.092329314 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.267211236 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095442389 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103729263 seconds)
  done (took 0.870310188 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076607704 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14478837 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094207526 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078391174 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094529361 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077793177 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093604333 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077566769 seconds)
  done (took 1.329449257 seconds)
done (took 3.219918801 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.735654912 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276845716 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204168803 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.462426156 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.195507261 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215315211 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675066323 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.354013954 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254855135 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100307502 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143242783 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386379797 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136188462 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681545078 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089443323 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123125857 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178268369 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.449167391 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08237337 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110573733 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116413927 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142403355 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129153974 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091389359 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184333862 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08142055 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194608827 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107565326 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080774017 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.289235119 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.201359076 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.6897414 seconds)
  done (took 10.869040177 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11067966 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134260319 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.09714778 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138395147 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133894378 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100216539 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086337275 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096914595 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121706907 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174735957 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.115143389 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.137136672 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095153402 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081871228 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115741337 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245039094 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119626041 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104131579 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100693932 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103571568 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121474566 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113350493 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.10904224 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093035463 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166555278 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221709255 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110598647 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125902931 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097490212 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113526107 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144754718 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143114404 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094353506 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080256283 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172348136 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124629919 seconds)
  done (took 5.131448266 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.186699575 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120787971 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167891724 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.162905355 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139323351 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.159133116 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112542406 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254868714 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.194480575 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163284739 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140646661 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116669105 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080379942 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098412303 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095134072 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.620220448 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.12281064 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154921148 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115617658 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103004074 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083038456 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366291585 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103012371 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080558587 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099119895 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06565405 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.156458603 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160173997 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101072075 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.14448152 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120283075 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081291703 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139048889 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.210124381 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110145651 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.136063958 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095617159 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.079365242 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.174659663 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.105113486 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07934809 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.122025678 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.07710351 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135803955 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133816533 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098333823 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096733317 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.20481593 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.08016562 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095426985 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113179562 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.947727453 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.181828968 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.089836215 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096443765 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323547337 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098219102 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098340599 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077374349 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.284436584 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183798686 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098263939 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080583798 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097326201 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080567776 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.403691377 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081230866 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.76975923 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.0891288 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108684795 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082854943 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096648372 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.104087158 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087384425 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114417334 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079203118 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09966341 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079883696 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097018481 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081219735 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10896416 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101910582 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080235942 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165029854 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079264344 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113542437 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126487027 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083312977 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095826786 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129766801 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082468828 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097341945 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.132971631 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081595436 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109310603 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098312578 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142328489 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081522684 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.215477378 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.079173982 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125655608 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.101251699 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114008905 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112094874 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099524011 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084973005 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095300711 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077878909 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096186806 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148694091 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094425427 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080692403 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099563273 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109272408 seconds)
  done (took 22.72913674 seconds)
done (took 39.399646215 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326654848 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103753593 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103576332 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102582689 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100535689 seconds)
  done (took 1.481551566 seconds)
done (took 2.200147648 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.28825124 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.213053686 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.07735471 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168464017 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094036397 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.17171611 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159733127 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111072751 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.220099024 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076561264 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.180210519 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077080604 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093140932 seconds)
  done (took 2.676280968 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095085049 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113866813 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082800543 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110400685 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076756426 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110467858 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092375409 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116302999 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109067493 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08484201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092641077 seconds)
  done (took 1.799091938 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093920128 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111848044 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082014776 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109243421 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076573734 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110023742 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092186171 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116358185 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109356492 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085875036 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092859236 seconds)
  done (took 1.797640287 seconds)
done (took 6.982407634 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091393013 seconds)
  done (took 0.804483583 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.924222345 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.012230649 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113301368 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151286665 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.301860078 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193686712 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.484842208 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12980404 seconds)
  done (took 11.230265242 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.115888375 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.112413485 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100662304 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.08328708 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103234854 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.08670154 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102295492 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09866161 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08310867 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098536432 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086699052 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100706545 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099492309 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.086207973 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102465699 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.08264023 seconds)
  done (took 2.321384491 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119896922 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118320745 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105867359 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108737943 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087355681 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104593671 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105666777 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089128283 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100532378 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103320921 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090214488 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105313047 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103072843 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081023596 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.10546741 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107584201 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086231413 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106064227 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106916485 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089748033 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.10604482 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094252635 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086638751 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106613191 seconds)
  done (took 3.240689586 seconds)
done (took 18.315584315 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.159003652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.10871517 seconds)
  done (took 0.987238218 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09498698 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112147972 seconds)
  done (took 0.92900682 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097290615 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095025292 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.122398702 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109089493 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079709492 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.09660204 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118288119 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080268604 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096440075 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080680703 seconds)
  done (took 1.701464488 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082986527 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.109189796 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101489989 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095464293 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104796329 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094615974 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086907599 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099091163 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.1095867 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076792735 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102553345 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114477152 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086638726 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.116436343 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104136574 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083157548 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.10191458 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098245621 seconds)
  done (took 2.495440744 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079535512 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.096858805 seconds)
  done (took 0.90269838 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.080720844 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093855201 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081107494 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098035599 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093496679 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076539233 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094215906 seconds)
  done (took 1.342890602 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.512482669 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136102138 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253274082 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084882546 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.120053782 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302246443 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097466993 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.086011527 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.1022637 seconds)
  done (took 2.476624148 seconds)
done (took 11.559576394 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093017654 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118378527 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113000674 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466868651 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107069137 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097328725 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160931036 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252036046 seconds)
done (took 2.143417672 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.149097096 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326249485 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114464854 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067429395 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095751322 seconds)
  done (took 1.33971032 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079688848 seconds)
    (2/2) benchmarking "read"...
    done (took 0.09985705 seconds)
  done (took 0.913332747 seconds)
done (took 3.141809079 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080843154 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097025117 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.112310103 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.097065847 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080609421 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.0962692 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078091543 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098726887 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081013233 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096784946 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096990503 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.080146625 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096785684 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078044326 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09442409 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080412316 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094267983 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077270002 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094508021 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.080121509 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093972266 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080147355 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.093666408 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077124974 seconds)
  done (took 2.905889436 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099891792 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097530718 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103213032 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.085803453 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102048043 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086527535 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102323312 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097053768 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085443876 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099403902 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100389316 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084032543 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098824583 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085167462 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099038447 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100897082 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085675275 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097447262 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.083341075 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100933133 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102826233 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080843771 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.10101073 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101493596 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084388903 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100437888 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08266448 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097556846 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102194035 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084325732 seconds)
  done (took 3.57189768 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085072283 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09417575 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078728232 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101878726 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077450809 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096817318 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076953469 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09539337 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079401137 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095033027 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080027122 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094681377 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078004285 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095816091 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079495851 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098848012 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107652202 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078003232 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094741913 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078481999 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097800802 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077787296 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094893178 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077271764 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09480239 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078119912 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095349706 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077456988 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095495102 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077799684 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098453361 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08119184 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094758122 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084272887 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098462557 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.078031119 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098689732 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077432198 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095386747 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094813219 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077566808 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094825463 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077543185 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101090496 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078222454 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096777235 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078246253 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096706652 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078453296 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097785842 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078298812 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095097177 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080446846 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.095967367 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08203105 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.093936188 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095011824 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.078149306 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095773503 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077365699 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094209758 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077882651 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097984578 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079229428 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110650322 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085450005 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.094764406 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08042941 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.09603596 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08099192 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096226386 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.109025848 seconds)
  done (took 7.129692933 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.083493937 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105902293 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080865092 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097444659 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077206742 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.095844081 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09849235 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078499659 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096602401 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085914278 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096265693 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079722447 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097047288 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107634653 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079188834 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097270913 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085210476 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09350313 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.0787383 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.09974611 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079535007 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098184506 seconds)
  done (took 2.737397422 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209317113 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104602797 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14228947 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107906865 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083732485 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106845321 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102161306 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087354099 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102125666 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083583365 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09986784 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102314178 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084281694 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099983062 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100306613 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085368325 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102167817 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085345261 seconds)
  done (took 2.63953398 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093280278 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.097891373 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103255507 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098153814 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098929732 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083890582 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104263861 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106978471 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083705604 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098619825 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090944934 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101268758 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100592254 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081843946 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10143331 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082602349 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10117562 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082627859 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108088508 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103715805 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104532684 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091331807 seconds)
  done (took 2.871254901 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096984196 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100191012 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117611389 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084465273 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.094640553 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080420009 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105135761 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08107364 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107058783 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099983279 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081379977 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096835554 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087295959 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098455749 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103433885 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081821009 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10055863 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082287473 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100845517 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077268732 seconds)
  done (took 2.63114675 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10271469 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.099786245 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099505172 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092335724 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099596551 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081973159 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108528946 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099529925 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082763247 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124667378 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099514763 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082509272 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108744001 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105391536 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099425111 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.09251783 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108622148 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109402866 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082778808 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100105103 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125390959 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082932186 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108039342 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.208835797 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083116867 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099289945 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099986309 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088045092 seconds)
  done (took 3.631279075 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081113654 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098345497 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078887848 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096690188 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078828987 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096320717 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.078609082 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096135126 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080967209 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095839015 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081048829 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098272375 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08101382 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100678215 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081449118 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098362106 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081559638 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095842119 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078315215 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095159173 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080984515 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097928659 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081258953 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096386118 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078377577 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098598751 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078216486 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095884503 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080480046 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095312132 seconds)
  done (took 3.414158683 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091112749 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106107658 seconds)
  done (took 0.953180809 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078794652 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114623692 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079130616 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102477039 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086058449 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098762438 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108077528 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086299322 seconds)
  done (took 1.510792164 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096996263 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.10960528 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083557344 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112852921 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109934482 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.09461076 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16558594 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100979633 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086980526 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.098223693 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112889525 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080570166 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.1053898 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081910794 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104203514 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088405646 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096709961 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088661366 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102362383 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097801268 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083733631 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110769869 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084958705 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095896629 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083289473 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.109935783 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108243526 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083561375 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102372355 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108655442 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087760801 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093464419 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082187072 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100582894 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079915538 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108662327 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11177812 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085023701 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108755125 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084246052 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112383178 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094880539 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088227967 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105714792 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092199754 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101172978 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082872953 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095126895 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097062394 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084544637 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094891614 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081388426 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093942444 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089351297 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104297502 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113099189 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080225745 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101058848 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084583873 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102584482 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088667428 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.10161206 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084120325 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099615273 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107176661 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085830055 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107154842 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077534666 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093385103 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080611806 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108449195 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.1229659 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090230449 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101414878 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082969185 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097417182 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102837444 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08373446 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106951594 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090672129 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099645628 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106663229 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089822109 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099599248 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084705595 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.10841838 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097724516 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085361447 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096957824 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09644077 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098883796 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080508943 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096886985 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108631676 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085301368 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098699809 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.08034931 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107131094 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.076098187 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101413572 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083921629 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10021388 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108434914 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091745618 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106451227 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.1075156 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.08986648 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099974078 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084564397 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097254428 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083633821 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103493246 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089268542 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094085465 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102166265 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084136569 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100501363 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088766863 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09840521 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082775572 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107976099 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106455484 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081018624 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096250712 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08514027 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.100147637 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086496272 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106688805 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.0992057 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078301772 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095288788 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086083354 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099619133 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086177714 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105497359 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102957113 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076990515 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098182149 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086921928 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107920035 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082767101 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.100076156 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104784541 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083539263 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099654234 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088441732 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101431426 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081128629 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105311871 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.083774398 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.095588318 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103646668 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085231195 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098673404 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086268922 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105128675 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.085163494 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.10123882 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099713424 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088674381 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102309546 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.082016915 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100246977 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081298075 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110295281 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102456184 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077946816 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097179589 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090343408 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097545879 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.082464846 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099804189 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084815994 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.10181236 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098359707 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081468606 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100708987 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095174432 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105607595 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101898135 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088672603 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110281028 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08268748 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102055726 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082356422 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101594734 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101428943 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089642738 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105873587 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088819101 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102604356 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.079198015 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106164433 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108034342 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081002479 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09861194 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081029163 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10405818 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106577377 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086305963 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101493126 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080503475 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101637622 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086651072 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102269493 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099602316 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081410548 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105637573 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081802023 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108152426 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102001599 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091605078 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104380984 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078155738 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104652538 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08097671 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106536916 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.07741404 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.097625818 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099489421 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083726006 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099731449 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084694365 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.0947875 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090179149 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108434747 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082270831 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.100313596 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100962415 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091723639 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101918657 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086341087 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104251468 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087137478 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113459665 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100292219 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086049507 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109876469 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.08323941 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095102485 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105885091 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081003694 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100049433 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081338686 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098104441 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085577702 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111278713 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105337965 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076284606 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102977897 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081241947 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099484753 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.0784138 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.10730944 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086938585 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102049635 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109234872 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084245281 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102191087 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086457399 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100808816 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.084232415 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.102638622 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103548545 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084458889 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103521581 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081432623 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102983474 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.082140063 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.099624543 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086833671 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101612333 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100799541 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089004205 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100446651 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.081790926 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103792035 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08340044 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101872928 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.083689169 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100999442 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104470167 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08344551 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100719205 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085521849 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.097012388 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09091578 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.101720747 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089744626 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.101117763 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.09735826 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08825929 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103315309 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.088260751 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103435881 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101472921 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084235874 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100848468 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085735295 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109672061 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080059422 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109863088 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107354605 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083507137 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.1037538 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.08334479 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102867874 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.082427 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103035894 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.084074809 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101342214 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100495671 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.087024354 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104892908 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082822985 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103400587 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.084309802 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.100816665 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084388773 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095529439 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081854337 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.100278103 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10157979 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090823326 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102274513 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085454714 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100366858 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084979682 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100418537 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097513252 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091720866 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.1115835 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.084307311 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109904454 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10098733 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08521187 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111204362 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076889079 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.100237799 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081702193 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099690094 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109138022 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.08396165 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110541176 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083532959 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.1008638 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.080620306 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.102748594 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.081586848 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.096172948 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08122958 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105282394 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103560604 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082944306 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102190401 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085508231 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103201351 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090109664 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.101405334 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103431922 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.084223855 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098616454 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081811409 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100140606 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085824791 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.102650771 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.080958841 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.09889055 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.082963631 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103602799 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084172959 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101853477 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102557019 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.099263836 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102018641 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.085893515 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10571778 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077441714 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104556792 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101190422 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082925828 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100194842 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.086189903 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105557656 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084969382 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109204687 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.102273779 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084205894 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.101915683 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.08151174 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101847444 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.083151163 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.102687789 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08219135 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103497957 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109902528 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08149613 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104171891 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082692044 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.101868779 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.088214348 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103209086 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085619011 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110118403 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105412291 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.085200632 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108165957 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087036083 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105272064 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102703509 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.084811153 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107958637 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.082533023 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.110950042 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.0840259 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103251677 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.102385147 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081000382 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101881935 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.083116353 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100653243 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.088063594 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.103245086 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082001526 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101586144 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081150443 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.10345017 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105917779 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091512042 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104714977 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086447738 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097405851 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080310793 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102806434 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099243093 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085343736 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104652996 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089464579 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.10461404 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084089508 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.101765593 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108825916 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089215408 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107264103 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081595381 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106687187 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084019204 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104664305 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103115392 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083584183 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10324202 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088623635 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.104013992 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083274637 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110945238 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.10567937 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085752164 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10331714 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084380031 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102636316 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078689984 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.103332816 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085331274 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108234723 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.105287132 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.084219107 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11167514 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.08290164 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103047252 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087589188 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102342772 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108702605 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078885446 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102906719 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085160686 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103770366 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078849774 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101453967 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08131469 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104472549 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.08325009 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097998856 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.110948427 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.090299966 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105023744 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082880717 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101803579 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078678476 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098134499 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082205501 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104241588 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104212223 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093325679 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.101283124 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082437921 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098190086 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083995773 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105657121 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104897518 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081336764 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097797612 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.081732298 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.104228931 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090764837 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102234067 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.0848909 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10705402 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104276245 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082794979 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106018381 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080694288 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106668186 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094378969 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103644564 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103031057 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089582294 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111594255 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084875781 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098286686 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085283271 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.104348009 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102750857 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084985004 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103539371 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097442728 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106346647 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081902649 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102039821 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104236528 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083239647 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109429415 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084746482 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104099163 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088655171 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.103977698 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11267277 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.086484037 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108345441 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086621465 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105409863 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101343246 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08418273 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100865452 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082341868 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104032935 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.085261117 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108474704 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112039444 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082574806 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112219622 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091755887 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.107768404 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080894286 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.102299099 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082298644 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098300905 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103746341 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.082470288 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101037275 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082421951 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101590561 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084696298 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10862212 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085873034 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103534429 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102141349 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.078572007 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.103843171 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08924952 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103413662 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.080637895 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103199098 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084707024 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.10903109 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107100376 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.084060725 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104328285 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.085866367 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103736999 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079836928 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109322255 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083375277 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105778137 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082714443 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103400431 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.10399488 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087411619 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109311981 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086082529 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.106015235 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115069701 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086725934 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.10024253 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081624618 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109282666 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082563568 seconds)
  done (took 57.639591511 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145888884 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080120041 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099028076 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079747746 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113210831 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099563268 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079840698 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099107964 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08081933 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102086202 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078712743 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098999621 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108725734 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124322193 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.0940905 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104117779 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078470894 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100689276 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098038916 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080588568 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109320627 seconds)
  done (took 2.86417579 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105266977 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117961981 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114954442 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119112805 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089429824 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115141199 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113053241 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11570275 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09983718 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110791224 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118462838 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115514976 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091862651 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111520162 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111096392 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093730705 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119105857 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10967976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116336441 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095771138 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114234221 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114935532 seconds)
  done (took 3.219446418 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084500828 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102153064 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085649751 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098550223 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083709877 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098574832 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088811564 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100689201 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087718536 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102773847 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082598593 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102110284 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104912198 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079178024 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10218889 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082283996 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151181375 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107806514 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.084158352 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105328805 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078600612 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105804725 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09810155 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079771782 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101591722 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088680887 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104494659 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082443765 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103147687 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082936911 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.1037486 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.082168224 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104553578 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102393942 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082722656 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101998536 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083918117 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.101945128 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07915771 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101064362 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084174569 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098806318 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084463791 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104920447 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081296536 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101569058 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084423929 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103402545 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097930767 seconds)
  done (took 5.453592092 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105058494 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16071889 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085508243 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142123787 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120891763 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113206248 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08795927 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141984345 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101473902 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082362363 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122679581 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120725407 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103416868 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089751723 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109849342 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102844996 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086146585 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10251569 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108474036 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083735506 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108468687 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090317275 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.12030624 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117713336 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107550148 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083403929 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103728029 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108520107 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097880722 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109624709 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108361289 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090689567 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119833005 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105897368 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083256016 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107471775 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122860257 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103730771 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086776734 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101870734 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08703143 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108893304 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109736815 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103346011 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104617874 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109490701 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.08420692 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10047347 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.116936435 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086742245 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113435732 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119703575 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.089656129 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105004077 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108960074 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120871164 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084709113 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102404705 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087709117 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.11829729 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101091129 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08818008 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119266939 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105719093 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112020502 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100361796 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109026931 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107551149 seconds)
  done (took 8.104067547 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093691355 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111559069 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120944106 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121472906 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.092333086 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111235695 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110680024 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.092796637 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111845565 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116467766 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112219923 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134163857 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08685935 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115115468 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111676482 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.09200682 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111545841 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11155351 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091017178 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11069778 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110829514 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120467876 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091759875 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120851128 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142958995 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105437916 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.09005419 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110284063 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120941381 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110076341 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123365069 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091869068 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111751645 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120412431 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123661873 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091627291 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103061256 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110492508 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091374035 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111567938 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105570391 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101147654 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111215778 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106029845 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091286974 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111349271 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120640599 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123152387 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114840507 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097780712 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111773605 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120674147 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111009141 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091456062 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121265092 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145783755 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121119605 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120678185 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110911228 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100849424 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120511959 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128379228 seconds)
  done (took 7.667488819 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107856652 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115677721 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117293285 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099274637 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082532704 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109166552 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082368498 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102569794 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.11306839 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.093679245 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117851468 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108886665 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091682501 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117336587 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109460541 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111468993 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089039709 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108450958 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113821187 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108319976 seconds)
  done (took 2.920542393 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093234046 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124412857 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084923802 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112321703 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10749166 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091989886 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106638322 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107601051 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085798346 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108181037 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096680479 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116733748 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104900883 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091738675 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116403911 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111102036 seconds)
  done (took 2.481052037 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.094832094 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117749835 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120295594 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08495811 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103206395 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080487847 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105039809 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100329616 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.08077052 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120407261 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084792265 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109550661 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106554396 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082995882 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101650845 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.088056792 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100741155 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081895727 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105403983 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118961939 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095993009 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103964644 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.104948715 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087298299 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105700641 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090519352 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106046339 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102515743 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082956189 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104717093 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084563718 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113802351 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101246333 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.082955529 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102668871 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082867467 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105067546 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.0856513 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108564289 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104129988 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083412404 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105224719 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085301138 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106251787 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081052142 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10639387 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100875116 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091388711 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103067612 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085969875 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105434464 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.087712369 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106874828 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116893469 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089567083 seconds)
  done (took 6.225225329 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099366113 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109030094 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080230436 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103010431 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087977769 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107756968 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108876025 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088287886 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107395387 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083691388 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108237556 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089495178 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107969211 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108619299 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087456933 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108966528 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080887776 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106932843 seconds)
  done (took 2.604982586 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091036293 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104633317 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092509131 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106027844 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08473124 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108507576 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080852515 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104783186 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102112195 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085457505 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104817015 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087847881 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103272863 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.08704061 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106011677 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085098183 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107191308 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103387443 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085878361 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100911536 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087659639 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103430112 seconds)
  done (took 2.952484555 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118284281 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125059301 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.0927469 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229642674 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10401697 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131876163 seconds)
  done (took 1.631681358 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109723058 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120939651 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106543708 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10639217 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116467242 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0882839 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108618031 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107901192 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117770775 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102642054 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108373927 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11854803 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117638066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097915816 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115624026 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115035498 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10764897 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087615006 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106582717 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128973399 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088212378 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118308581 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107946564 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088102719 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109320056 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11784327 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118800981 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121623198 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087644004 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118123522 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11436917 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087449294 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119477175 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122877249 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108966069 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097892289 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107806853 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129433336 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114643375 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097475667 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109700838 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114924508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098651304 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114003301 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118344169 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107943077 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094201812 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108670108 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108456698 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135208882 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094785115 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117372432 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115708533 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118911467 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098137591 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155541568 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101912827 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118503193 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115505386 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123555084 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117930087 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09391973 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118275567 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123383561 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115551747 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118041613 seconds)
  done (took 8.156686882 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102708036 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125711568 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108607808 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122941459 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098047791 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108010944 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107586733 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087902462 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107583794 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106788111 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152125753 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088490881 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11790872 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118209373 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087870033 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109009936 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108646339 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117929821 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087673435 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135914841 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10888494 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11813727 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118149819 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097491412 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123632079 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115159002 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108306203 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08871088 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109371331 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107290098 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093904078 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108053215 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117430025 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085892333 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118182467 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10796851 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087908001 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11458668 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108351775 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115841811 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097680321 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128661123 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10857492 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108305467 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10297925 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109200053 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108853407 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087655945 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109243841 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107523249 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102883453 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122325529 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123454776 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118118051 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10758535 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088021042 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109169763 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109375443 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088068715 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115857378 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118139001 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088504172 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157155786 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089048555 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10902002 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117801404 seconds)
  done (took 8.023454526 seconds)
done (took 154.674272719 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.098882758 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136142418 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096130417 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168369175 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.10622913 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119118742 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137679314 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097915743 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106264288 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085420302 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10631481 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.088037014 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171672692 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085642368 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106503872 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107977818 seconds)
  done (took 2.654741741 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.200689299 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255673758 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102079282 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105772342 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08878735 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11061474 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104622939 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091844908 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110177412 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085704051 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108689906 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086338097 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105477721 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085493806 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110301676 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088254187 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105813307 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088106453 seconds)
  done (took 2.873248578 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113518591 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154807615 seconds)
  done (took 1.111898678 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119133361 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181685225 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318331951 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155108477 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107099054 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127578423 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156867751 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130744266 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.19752038 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123913776 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122880566 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097737987 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140578144 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116144514 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094012444 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118927686 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142307967 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09260906 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115285825 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115843152 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.117011458 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106428485 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115623366 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.092865068 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182340021 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119689852 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084819438 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.10703735 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116292222 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094824901 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114327152 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124287332 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.099109987 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175488642 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101849847 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177417958 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.101033818 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113049356 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113851496 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091511127 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11951548 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.11926955 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104375873 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118280788 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084404785 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.11858071 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106001532 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085003177 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114938209 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097183884 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115294315 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113124242 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156685545 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118639162 seconds)
  done (took 7.532916134 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795113159 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157181817 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090446728 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885191876 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138938267 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10357533 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.78125668 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.1353221 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.235061411 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.762607099 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134325384 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122036537 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230655772 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.239934202 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.963265073 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.315386334 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.675728121 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.102779996 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15289843 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.15501332 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120182588 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13858759 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130336229 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454238447 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09600672 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.11128921 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095149841 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122715269 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160762075 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12759245 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114282689 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.179058644 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250339266 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207842076 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116897066 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090747003 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112154755 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.172519584 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26724684 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21512014 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181252341 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087403877 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110834783 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.100633643 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.134081971 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109216757 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166499085 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174930569 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195175005 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092544313 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12161938 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120357494 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100197377 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.18906964 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.099896193 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.319129025 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.316452554 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111712397 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121948335 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106784569 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26693407 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123717438 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226725209 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118775089 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214698821 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110980346 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.7833658 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.191807102 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.09111266 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118567329 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119023949 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095592684 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122133157 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171810227 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393245462 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124689792 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094185915 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111303666 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.207039428 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.126329171 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111147154 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164115473 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.095255998 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121935335 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125154876 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123562134 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.17154761 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.22911234 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124732015 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120061757 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.095922983 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12640349 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116828099 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213061213 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.222386385 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.164172432 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.210344805 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123729338 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.165661263 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190765759 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09896695 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194379873 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099184714 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.127146171 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123367549 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21920147 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146729307 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.102494292 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116109625 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.1189439 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149228626 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105723228 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119911402 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170291305 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.504720146 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.170013767 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108949728 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106604089 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121826267 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.163670192 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118420889 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263462285 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10106757 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192306657 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.099084665 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.11027365 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120742701 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165099836 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122822625 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100034969 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124102373 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120080286 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237272866 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.220085697 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123965371 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.224439297 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185733068 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119411606 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.174575097 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121218193 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170483754 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11967601 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100280703 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1179222 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.776591481 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12482511 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.100286415 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11646674 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.199075271 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090684986 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124339811 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125052715 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087449408 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820491692 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127841459 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121778061 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103359218 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120427785 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121371706 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096636922 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116425219 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164007549 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231985043 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122030462 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.098071557 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126566474 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161195202 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.118167778 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126243764 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124462596 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103831966 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123438025 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115048988 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103335626 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192458257 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164278253 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223642792 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.569998527 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112492793 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125640271 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229815148 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090537371 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289160208 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120405795 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.2054433 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.189287436 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099297462 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.311944231 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188676031 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.197279869 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106363804 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.196380954 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088157734 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118585422 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16706612 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112352548 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096714631 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.186159518 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.104545361 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12494718 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.960070301 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111901222 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227982638 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087650906 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.194524146 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.095735181 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121801908 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.299195425 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090698128 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129977623 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.165053968 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117069329 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126107718 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.751588064 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.126917179 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.1224538 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096672551 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225281521 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.186192676 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098391484 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120348629 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122146363 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164770895 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.209647591 seconds)
  done (took 44.376386837 seconds)
done (took 59.389468235 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275910785 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213037497 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.260521049 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.168108664 seconds)
  done (took 1.863088915 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.17019766 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148082429 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121154391 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107140167 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149510248 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085266548 seconds)
  done (took 1.649476166 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.353276549 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271575551 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.239440439 seconds)
  done (took 1.737948184 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.288478497 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248752706 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.356575706 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.40115418 seconds)
  done (took 2.285152206 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210065119 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131893116 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111720255 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103785109 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.201760697 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.250906435 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.141633241 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202648613 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122056913 seconds)
  done (took 2.393410301 seconds)
done (took 10.805040685 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.134600636 seconds)
    (2/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113025145 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.229328739 seconds)
    (4/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.271045068 seconds)
    (5/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.222440245 seconds)
    (6/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.25965424 seconds)
    (7/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.222704573 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.115444496 seconds)
    (9/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.101909259 seconds)
    (10/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.233720915 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.180720717 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.09888145 seconds)
    (13/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.120348308 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.116828695 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.112511691 seconds)
    (16/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.226147368 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.10785252 seconds)
    (18/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.164988318 seconds)
    (19/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.111619232 seconds)
    (20/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.170879293 seconds)
    (21/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183706253 seconds)
    (22/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.15910656 seconds)
    (23/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.194658117 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.146778879 seconds)
    (25/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093758127 seconds)
    (26/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140220415 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.146328476 seconds)
    (28/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.127056651 seconds)
    (29/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.207425188 seconds)
    (30/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.112418606 seconds)
    (31/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.183146105 seconds)
    (32/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.206679899 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.171387191 seconds)
    (34/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.097856964 seconds)
    (35/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116554096 seconds)
    (36/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.216799072 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 0.222292155 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10329878 seconds)
    (39/286) benchmarking ("sort", Float64, false)...
    done (took 0.171208594 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.117912508 seconds)
    (41/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.17432171 seconds)
    (42/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117380609 seconds)
    (43/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116900078 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.086005735 seconds)
    (45/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148976116 seconds)
    (46/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.078241083 seconds)
    (47/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066578076 seconds)
    (48/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.132220564 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.116288838 seconds)
    (50/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.117322241 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117222862 seconds)
    (52/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.152786274 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.14863881 seconds)
    (54/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115257088 seconds)
    (55/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.10142551 seconds)
    (56/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.119544308 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13474133 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088769735 seconds)
    (59/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.110299303 seconds)
    (60/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102841429 seconds)
    (61/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.135868201 seconds)
    (62/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.103547866 seconds)
    (63/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.116953824 seconds)
    (64/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.099033379 seconds)
    (65/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.182620588 seconds)
    (66/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.184392813 seconds)
    (67/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.090333058 seconds)
    (68/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122351999 seconds)
    (69/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189552951 seconds)
    (70/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.159560577 seconds)
    (71/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.12060246 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.135957454 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.101217101 seconds)
    (74/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.195553885 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109066256 seconds)
    (76/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094643619 seconds)
    (77/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.138691846 seconds)
    (78/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.184898997 seconds)
    (79/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.195027953 seconds)
    (80/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.129340344 seconds)
    (81/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.173274918 seconds)
    (82/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.094570937 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110561106 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.137221336 seconds)
    (85/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.14792322 seconds)
    (86/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.099228256 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 0.086591078 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108995418 seconds)
    (89/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.162550005 seconds)
    (90/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.149175133 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.109407109 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.169576523 seconds)
    (93/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.089463162 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.173924755 seconds)
    (95/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.095636335 seconds)
    (96/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.161197094 seconds)
    (97/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.172863142 seconds)
    (98/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.075187925 seconds)
    (99/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133684223 seconds)
    (100/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.129431709 seconds)
    (101/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.110515126 seconds)
    (102/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.09724051 seconds)
    (103/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.113425379 seconds)
    (104/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.08494607 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.116763515 seconds)
    (106/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093558261 seconds)
    (107/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.145281001 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.102380462 seconds)
    (109/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.22929276 seconds)
    (110/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.105911782 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093803474 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.118068245 seconds)
    (113/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.135815581 seconds)
    (114/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.162161903 seconds)
    (115/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109476738 seconds)
    (116/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097116465 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16852431 seconds)
    (118/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.088732249 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092445305 seconds)
    (120/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110453312 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066351558 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066711953 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.126258573 seconds)
    (124/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.112119107 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 0.181832311 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095341386 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115004849 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094797771 seconds)
    (129/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.089956404 seconds)
    (130/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.162901105 seconds)
    (131/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.118815373 seconds)
    (132/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091970562 seconds)
    (133/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144539196 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117351874 seconds)
    (135/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066614546 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138043905 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.094991767 seconds)
    (138/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090634288 seconds)
    (139/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.097209788 seconds)
    (140/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.190678298 seconds)
    (141/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13492173 seconds)
    (142/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093064795 seconds)
    (143/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.111939447 seconds)
    (144/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.151569125 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118027937 seconds)
    (146/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.084175558 seconds)
    (147/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.090633136 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086773498 seconds)
    (149/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.066794458 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116763856 seconds)
    (151/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172279622 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086463451 seconds)
    (153/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.142981968 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.094508418 seconds)
    (155/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135910557 seconds)
    (156/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.067322885 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137225946 seconds)
    (158/286) benchmarking ("sort", Int8, false)...
    done (took 0.188869702 seconds)
    (159/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.13737024 seconds)
    (160/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068140301 seconds)
    (161/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.191856653 seconds)
    (162/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.076853816 seconds)
    (163/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.143682235 seconds)
    (164/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.07725905 seconds)
    (165/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.129702704 seconds)
    (166/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095853295 seconds)
    (167/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.135245901 seconds)
    (168/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.174427882 seconds)
    (169/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098225129 seconds)
    (170/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090689913 seconds)
    (171/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092813659 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.109872361 seconds)
    (173/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.082451452 seconds)
    (174/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.108203349 seconds)
    (175/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066729971 seconds)
    (176/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.169001179 seconds)
    (177/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086188581 seconds)
    (178/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119977588 seconds)
    (179/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066920319 seconds)
    (180/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066650101 seconds)
    (181/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.107006909 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067079624 seconds)
    (183/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065964019 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.108561118 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067415469 seconds)
    (186/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.150278805 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.09338813 seconds)
    (188/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135974471 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109488241 seconds)
    (190/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067563828 seconds)
    (191/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.075742605 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.090073676 seconds)
    (193/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096112134 seconds)
    (194/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.100377108 seconds)
    (195/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.08818591 seconds)
    (196/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12034247 seconds)
    (197/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.163920969 seconds)
    (198/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068412474 seconds)
    (199/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.093276374 seconds)
    (200/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.11612542 seconds)
    (201/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067490453 seconds)
    (202/286) benchmarking ("sort", Bool, true)...
    done (took 0.219949366 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.10932301 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.087575984 seconds)
    (205/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.090200316 seconds)
    (206/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.088137702 seconds)
    (207/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066487998 seconds)
    (208/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101553376 seconds)
    (209/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066584384 seconds)
    (210/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109390267 seconds)
    (211/286) benchmarking ("sort", Float64, true)...
    done (took 0.230729009 seconds)
    (212/286) benchmarking ("sort", Int8, true)...
    done (took 0.220609332 seconds)
    (213/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067567593 seconds)
    (214/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119734938 seconds)
    (215/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094752161 seconds)
    (216/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118561893 seconds)
    (217/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.349923226 seconds)
    (218/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219414683 seconds)
    (219/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.091058216 seconds)
    (220/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067025188 seconds)
    (221/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067597285 seconds)
    (222/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.090717729 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08701434 seconds)
    (224/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115203866 seconds)
    (225/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067441995 seconds)
    (226/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.138263977 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.087260462 seconds)
    (228/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.120060632 seconds)
    (229/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085590746 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.164097579 seconds)
    (231/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118281624 seconds)
    (232/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.06758842 seconds)
    (233/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119978418 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086535468 seconds)
    (235/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091349432 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066740903 seconds)
    (237/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085342619 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.091091788 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181655885 seconds)
    (240/286) benchmarking ("sort", BigInt, true)...
    done (took 0.229554418 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.123758701 seconds)
    (242/286) benchmarking ("sort", Float32, false)...
    done (took 0.174514574 seconds)
    (243/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067148341 seconds)
    (244/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110115704 seconds)
    (245/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.067018842 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109185013 seconds)
    (247/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088148713 seconds)
    (248/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.109986788 seconds)
    (249/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.088048709 seconds)
    (250/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.112646348 seconds)
    (251/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.086084354 seconds)
    (252/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.117115638 seconds)
    (253/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093500324 seconds)
    (254/286) benchmarking ("sort", Float32, true)...
    done (took 0.2266341 seconds)
    (255/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.100427744 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095225197 seconds)
    (257/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.090625715 seconds)
    (258/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088989465 seconds)
    (259/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090872818 seconds)
    (260/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066746974 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099262775 seconds)
    (262/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101429395 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.087450612 seconds)
    (264/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.111137649 seconds)
    (265/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067105803 seconds)
    (266/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.11147252 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086184833 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117647025 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085631724 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107735078 seconds)
    (271/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.078123271 seconds)
    (272/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.089942976 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.094379582 seconds)
    (274/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114052463 seconds)
    (275/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.08690737 seconds)
    (276/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.089349087 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092307386 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109062484 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066435831 seconds)
    (280/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.087546767 seconds)
    (281/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113815011 seconds)
    (282/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.1421064 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092279431 seconds)
    (284/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116457622 seconds)
    (285/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089455519 seconds)
    (286/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116068848 seconds)
  done (took 35.937108045 seconds)
done (took 36.813308638 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100650363 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148471194 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096774236 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135751317 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123897367 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092004581 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118003944 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09781078 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123968742 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125303581 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098154641 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093242455 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096580016 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120087621 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0966787 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139181789 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123367254 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093071423 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118951094 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086113894 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120189467 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086432376 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.110834204 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069439144 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121480763 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093686495 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115564863 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119638712 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087008329 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110169882 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090667676 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.116977419 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086421354 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123570751 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092830285 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118240022 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097253111 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120108611 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111599104 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.08706216 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118258742 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08604775 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.11658991 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095801585 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115536078 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092143573 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118871815 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.0994424 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139098118 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115524742 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.09510196 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121417749 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096657718 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119135916 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091453244 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119429222 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091892311 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.138899954 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.118602519 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091971112 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11862328 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095396479 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115122472 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095724786 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117972687 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.120282185 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098447426 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115030517 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096251506 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116068887 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086418883 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119210322 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089667704 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109547662 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095911174 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120535692 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085518534 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115781628 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.11783207 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091281674 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10931723 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088643504 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111675474 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092805809 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11250634 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069633245 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090966619 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116170591 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109892995 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095549195 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116064007 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09414582 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.1121415 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098131176 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.1105105 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092371625 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110340204 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087214873 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112777326 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091638078 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110555581 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090150075 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120077287 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.089662688 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116794539 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.12375495 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087154197 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117681777 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086232241 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.109827148 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10228394 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121297276 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08709023 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115991883 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.08580345 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118574085 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086465291 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111276029 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087608937 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11052332 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.09318185 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110090871 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089046828 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118581416 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124878867 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086878413 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114153749 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089083966 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110836615 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092383962 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.109983122 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087493283 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112880639 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077714243 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113300012 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08717393 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.11793205 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090078896 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119002744 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.0885665 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120734803 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.092462276 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.116917157 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092456034 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110260385 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074668816 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116237385 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089263688 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112850287 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087182555 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112441937 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086423014 seconds)
done (took 16.883805923 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088198483 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184225443 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.15193827 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142712609 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107109386 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111966785 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122535184 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11919676 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113677594 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142629841 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109605599 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131164342 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148051346 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086520025 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112273097 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090899257 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113726307 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102501971 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146293971 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.132780945 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16475566 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086723158 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146830928 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134794416 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121000338 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.105236508 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112691884 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091741359 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115277714 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112717775 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131912167 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090877828 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112218335 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134975549 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105057501 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.119546286 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087990258 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118839792 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087686437 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111297955 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141796115 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133024477 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093288483 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117802413 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091392048 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114267094 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089226331 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.12055174 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097970062 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115804756 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126359712 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156643993 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091251064 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12246234 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086580144 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122629669 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121813089 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090202128 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112874169 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.0912913 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111173261 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091597498 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126653306 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142234666 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09235111 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12179764 seconds)
  done (took 8.599056752 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104822154 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140127562 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.105148337 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.13089955 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111235049 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088750103 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112572712 seconds)
  done (took 1.730052329 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08799698 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13441805 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11137854 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135122852 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132761003 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.111932308 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123150029 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088122241 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132123261 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089719108 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13384484 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150922278 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090732717 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120627054 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138177724 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088992026 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136928447 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088118558 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117011787 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112236069 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116127452 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134368307 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090905005 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113437611 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103662641 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113672514 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162056163 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094697528 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114274581 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092122079 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112219454 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152563597 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103698509 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125113986 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088343208 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129676949 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.10292649 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.111601242 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126266281 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093405631 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127974514 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089867708 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114839845 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.088047844 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118384589 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099232038 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117757839 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.090204833 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.11597233 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133667625 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089236872 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126875049 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.106555246 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117213852 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090031942 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120021 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098003715 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114951375 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132756584 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090531952 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.13111897 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105786598 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127845635 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.104426896 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11542143 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127802338 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.10337645 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.116656916 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091304333 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11769841 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.105719222 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112204367 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090596491 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124523148 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116096912 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112160923 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138321511 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0917405 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124916422 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089055364 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114177455 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.089530922 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137298709 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11784213 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088967397 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117961868 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091465253 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112864034 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088379638 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117069151 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087931315 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117443976 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09204406 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114585162 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092091308 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130705455 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.1144112 seconds)
  done (took 11.799572218 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090260892 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114690892 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091982748 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114024948 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090300485 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115379812 seconds)
  done (took 1.564372017 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115631735 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117087311 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1046664 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120035716 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155806327 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103854712 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129826599 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123990677 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108304516 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127780206 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129561951 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105003071 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136405083 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121948016 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103701519 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120737796 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104175246 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125612023 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127634914 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097297584 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136912105 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121324373 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096910184 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132401187 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.11769209 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095585045 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125530592 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102610127 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126883436 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.12421786 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096125198 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119228304 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.097786487 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12349633 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130349457 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096534521 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120268175 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119697536 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099694237 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117691085 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105216066 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121404863 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126555618 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094862664 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123368133 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120481958 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094224703 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125633149 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104276476 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118633078 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122986343 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094828799 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120074004 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094470682 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123145902 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124747077 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.096019136 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130777042 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122117511 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096156881 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118479711 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.094493077 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124391264 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118810641 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104867891 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119359259 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096376551 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121758977 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121249247 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096309857 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119988827 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093868329 seconds)
  done (took 9.2217747 seconds)
done (took 33.850655833 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.690446935 seconds)
  done (took 1.63788293 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.832516352 seconds)
  done (took 1.783204618 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.560787029 seconds)
  done (took 17.540118728 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.490475498 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.579472516 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991740223 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178445069 seconds)
  done (took 3.191570693 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.953509079 seconds)
  done (took 1.926106453 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283238027 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234692877 seconds)
  done (took 1.476179226 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.768258015 seconds)
  done (took 1.737987528 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.363065205 seconds)
  done (took 2.322542895 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.325274234 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184058702 seconds)
  done (took 1.469887176 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.546761134 seconds)
  done (took 1.510618714 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.192011814 seconds)
  done (took 11.160538575 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.265491081 seconds)
  done (took 1.240329317 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300672675 seconds)
  done (took 1.265922379 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.441672091 seconds)
  done (took 4.407116647 seconds)
done (took 53.631020173 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098191836 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12706409 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102733188 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124347953 seconds)
  done (took 1.413403043 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.100920468 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120837538 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100767484 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120307305 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126740443 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096003959 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123209171 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101170944 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120832213 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096435466 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121057717 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119425212 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098815474 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122853043 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093954407 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123780845 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099417909 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120522686 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124331352 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.09668823 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118804211 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097920353 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124744381 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094817003 seconds)
  done (took 3.634285453 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100192728 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119323112 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096622297 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117798668 seconds)
  done (took 1.411315166 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10046844 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131169015 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105307177 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125749678 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.130669374 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105831036 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116857606 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.091988439 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.119350654 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099324096 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.115516554 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.114151514 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131730661 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124447337 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102047869 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114786304 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091331976 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.130984574 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125211653 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.100523852 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.117672172 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.10006562 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115434749 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.109448987 seconds)
  done (took 3.692459013 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171381513 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127198978 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138314875 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09477907 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160734152 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140557788 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088492089 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14135653 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087566621 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131065769 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117546083 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133494343 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128998312 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08792141 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113762228 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087617387 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128689773 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128865336 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.09153469 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128128824 seconds)
  done (took 3.407281073 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097607291 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117575497 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088370161 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116508979 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.09960154 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121220528 seconds)
  done (took 1.619481149 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090534854 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114817783 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.08977884 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114211737 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094741125 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114482282 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.08908783 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.11479848 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090218062 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114664569 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089022956 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112628724 seconds)
  done (took 2.206437709 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.502898998 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119124126 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120166632 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091104495 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121068846 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089755076 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129360546 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091731091 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.1411772 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088308347 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115514626 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090390661 seconds)
  done (took 2.67822968 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234841918 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124886171 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.281048558 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369603283 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15397846 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167067348 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280487693 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159338964 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.223576053 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149831059 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20270421 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195676004 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152150223 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215479186 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111009783 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145137499 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188012104 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247776299 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152669069 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235223894 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18220689 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167035949 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180493459 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150532464 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138314752 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172053197 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120502109 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104143834 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23396573 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176747888 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217155921 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162936575 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146843618 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207610622 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253323192 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221020806 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284440862 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134897305 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14081377 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16673405 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.26245511 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138014163 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204593005 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155995506 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132625295 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217843613 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165140973 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17785777 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146105059 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112219995 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222277486 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238753152 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192747762 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13813132 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302038328 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150441368 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157753267 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194397943 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251671785 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226490019 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188155254 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119664893 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188417116 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190168867 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211077391 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.151546171 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18193472 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148633713 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182703972 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188697935 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189025956 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178763364 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.185643176 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139221331 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170467563 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171732672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172187813 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258892571 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211701242 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096406071 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168679206 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150685609 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134011993 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.19408508 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099598126 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239471541 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144006994 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135677861 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241119205 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158433968 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162216853 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194053452 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211846711 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121678613 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.111261177 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154995052 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15453848 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176603703 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140236505 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130268503 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156559488 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130753315 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168587672 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.125443775 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185486008 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117528896 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172379592 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184378107 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127025533 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161448642 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151985897 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.123010551 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201803072 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201055614 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143398564 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106452759 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236567472 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180092382 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.142871255 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177238972 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.200836773 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145459738 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149477887 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226966374 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21787016 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140425939 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201449312 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156513524 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135385425 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131940829 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182057787 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155898746 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162356602 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13490325 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185051338 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205523307 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.126315699 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138638949 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195481259 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134251187 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132232108 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15545233 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121568947 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137523988 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142905642 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145106896 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176970742 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178805001 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154748665 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166565085 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15262221 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253954395 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14317907 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150886048 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.122000383 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121691341 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193257087 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227144405 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10382588 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233442716 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.170881859 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229048547 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170057302 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107203517 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17806347 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131171723 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120018828 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195148969 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168549176 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161507102 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222984618 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201236069 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179355146 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.212177426 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166841083 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17456818 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165528937 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156871393 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.137311279 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133841034 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158376305 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123873848 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.139920311 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135035008 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121859122 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142308168 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133785744 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198007121 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197606554 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189933614 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15912257 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150081811 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182568151 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128600859 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174582888 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.179298645 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149314191 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200379637 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220254727 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187032119 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144097403 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202015209 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.121317356 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098139594 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142756181 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168732364 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134516883 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136007147 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164284652 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182419271 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179114149 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17206419 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238909498 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171801933 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190434593 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122648811 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169051007 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185846297 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177976958 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.179123709 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141495658 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.122357851 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202253567 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157653399 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228115986 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170512767 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201885516 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206733898 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151349378 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131472949 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150401061 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179464968 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156211803 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176513413 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146434316 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141016469 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160569657 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103607059 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160587307 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213319189 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163048622 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189301883 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149194426 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185432757 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128302378 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163657618 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160421652 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166401904 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080804594 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199941561 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202957567 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149568141 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166554851 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188207552 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131558895 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306384446 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234965334 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194877077 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138725889 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157459854 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160726781 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162711762 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171305861 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179582874 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160108392 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188038304 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160317793 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.135769926 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140732733 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121239025 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150610988 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132586237 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149487338 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177855115 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137683262 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187839768 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15658674 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160040117 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172974883 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151143511 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144154566 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123068928 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244088223 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184125421 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240822304 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151101096 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179147976 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234618828 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099188635 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132634662 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.10504752 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178270961 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137312137 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220556645 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188362354 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227807613 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183917709 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181512599 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140240686 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093350824 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158256653 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168661833 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234390602 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15206027 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147141502 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202533147 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.137660802 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105125677 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166637614 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.317521164 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119879578 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225156483 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079570486 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280945365 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.123891197 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132208368 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161714815 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209419612 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136648887 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.177263579 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172630576 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163149046 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163721079 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149661441 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190901592 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216807793 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230545514 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180652966 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133429858 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15684053 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176934319 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190954518 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157946641 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.13946512 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204280251 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224106072 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195317188 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143960595 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170029174 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169152328 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159134692 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213801632 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108884241 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235009091 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107955889 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223787258 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155459244 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13872152 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176978609 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.188883605 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141801438 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188290174 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212280858 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108315384 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134955486 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170675583 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179728701 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158040212 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127976578 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181481395 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.125788972 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199128781 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261984194 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135410715 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155769996 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119443923 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136827702 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155862658 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158675885 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141795162 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140638122 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227397606 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135352082 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191952849 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231536585 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172832728 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174382231 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144883075 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69439325 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131543371 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197111606 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147443525 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2092378 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151096271 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174567142 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160469474 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168698462 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222467306 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161525421 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231533361 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195783853 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178892737 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132423499 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158892388 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157235009 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145292494 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152094891 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170927068 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160289164 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145742713 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.179490453 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166681936 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.13423152 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112705974 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227710694 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1197122 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211660348 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180795229 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111044075 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202159426 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189394271 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134137535 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180429176 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238561187 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113829896 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152484452 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134701608 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.149524094 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265862434 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097125451 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217504033 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187392279 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158760134 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170633054 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147610217 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194052581 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158631386 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213726429 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141660237 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15923661 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129115885 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138222914 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131171807 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155503902 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16963886 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.14891707 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160940594 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.138280343 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220158167 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096991841 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145384833 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290188079 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176020138 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245354382 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13366922 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107845274 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163254969 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150897468 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176599047 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206088226 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.109799499 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137820902 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136745855 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129563991 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.13771879 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15449471 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197631495 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16599879 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209956968 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137561404 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27866961 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13925577 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128688959 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116147381 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132679251 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123035271 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146716626 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159285992 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218494783 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234258252 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150309631 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.133618839 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150408395 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.09808125 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137229693 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163895682 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165896673 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178884891 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146705286 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080812454 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157096701 seconds)
  done (took 82.710147927 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165596641 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131989898 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14574245 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202357435 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175338064 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270362158 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209674303 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.253512207 seconds)
  done (took 2.626676441 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093947026 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145825648 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157113856 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132133072 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091058239 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119266153 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343579294 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132574841 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.115283644 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121028487 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173439961 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093673658 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.549898409 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.090908643 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.11899302 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.106805891 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09178824 seconds)
  done (took 3.742907238 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.17617237 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497395935 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.932696679 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.193175275 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.158787336 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117171706 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.705172499 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095097189 seconds)
  done (took 11.943481184 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.114957449 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136697074 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123954117 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.152327755 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.140534802 seconds)
  done (took 1.748115856 seconds)
done (took 123.800028845 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098086835 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127526768 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097536488 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.1300983 seconds)
  done (took 1.522375849 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.093943739 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.07057356 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100073291 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074366481 seconds)
  done (took 1.407613621 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.188696174 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167915516 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.407614205 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070809142 seconds)
  done (took 1.586603907 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113771804 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132078455 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103727698 seconds)
  done (took 1.432702101 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106702722 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128967446 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102539641 seconds)
  done (took 1.417641492 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105512144 seconds)
  done (took 1.185117967 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107521753 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.136627702 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108497797 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136041662 seconds)
  done (took 1.567803817 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098706712 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126380733 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108636899 seconds)
  done (took 1.412569565 seconds)
done (took 12.965541204 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102914311 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416936248 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412133347 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117230313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.722194011 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380951096 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.031008048 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.145870642 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165597774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092817898 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138749803 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672642374 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.02261226 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371823313 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.980378333 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.368525835 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676925407 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.11997195 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11931736 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093312537 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.014023294 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091494801 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12166311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092583509 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703772122 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42554872 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094985163 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.36843648 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092076471 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125556634 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382348798 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122071977 seconds)
  done (took 16.860967087 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095097874 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173118211 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098535648 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136514981 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122634572 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096543624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124024869 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093008928 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179729669 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122301035 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110919464 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120254436 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124932031 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095005547 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141641025 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092482916 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124238388 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092598819 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12173363 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.120571051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111422946 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120068004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094543695 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120878252 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093597172 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134339098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093642195 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120323048 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120020671 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098927087 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.126787281 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095303582 seconds)
  done (took 4.791507628 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140710186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182302438 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127702689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126523318 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168269621 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12362565 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.198625371 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117759 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.182847893 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122123163 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138321295 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093011233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.155431289 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094569039 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142191956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.119916359 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096395519 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121627377 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091985452 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122447786 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138193192 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092591402 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.12144611 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093750122 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.121829742 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108524163 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122662101 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119495268 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093320356 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126093439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.09939026 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123204557 seconds)
  done (took 5.114687661 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096422664 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125797474 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109191764 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.137385149 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095229893 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124332948 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097184903 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123783879 seconds)
  done (took 1.993852955 seconds)
done (took 29.845329325 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11026695 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.125946724 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106879642 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134853299 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102233318 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131288899 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091715753 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133321253 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133605901 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10265912 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137472689 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09265697 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12233497 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091335694 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134195902 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097378059 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.131786325 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102055525 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133295363 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131215037 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.09464203 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131675353 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102822923 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13245512 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104181785 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133132575 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137032461 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100413766 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121771679 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.093810388 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.123783418 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10339693 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122881066 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10525671 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.125998857 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096812014 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123077493 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094018386 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132915799 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132131315 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100100181 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.132202304 seconds)
  done (took 5.96513741 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107124517 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138213518 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104263403 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080855676 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11550464 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.079786951 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136164888 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078908322 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109184901 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107438173 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.0740904 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.105436206 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077842006 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.100547008 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.076949011 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074400188 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.107591403 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075414662 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076074702 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.104901483 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079781611 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072042249 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.106971485 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.077825436 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074159936 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.109680122 seconds)
  done (took 3.538710676 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100452153 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133243175 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113281811 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18349191 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160873364 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099905091 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131230313 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.110495585 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137074786 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119904888 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097028334 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148213159 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110188132 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128747254 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09174158 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136813378 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134674777 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093863099 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126831836 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.11208487 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.137768164 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102725653 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.14041816 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131888674 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09225608 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122718076 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096796712 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134569272 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097466018 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130767749 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097236318 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12503179 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.121712233 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104410227 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125693055 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094002018 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141949288 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102918701 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.130282219 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092780195 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129134124 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120331005 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113736309 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.160332621 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091713331 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128548761 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095073234 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131890502 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120097309 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110844434 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130628804 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091495548 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124266519 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091065466 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120123464 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106533896 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123440956 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095034312 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130972007 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125845827 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106480433 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.124309122 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108965218 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121153366 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100455306 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120481283 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093197707 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.120546656 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114602223 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123090554 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.16123965 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093065259 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122945019 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101622471 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129502084 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127367198 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093246985 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136348453 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102285361 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124319123 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101350565 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125099197 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094969787 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140398125 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095141345 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.1241768 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093537688 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128822727 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123640892 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094844351 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13515631 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092210298 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12424691 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110852362 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122168091 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094427533 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129400737 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126075713 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092427456 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134725979 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09950116 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122499804 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103717641 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121471097 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095257599 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.131926821 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126049584 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.091728701 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.125651135 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099794126 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12275933 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09466689 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125155647 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093336441 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.132035583 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099642309 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.126200319 seconds)
  done (took 14.753752136 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228395502 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216034077 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.233318397 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.265014312 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134913147 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.116534224 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212197038 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156041455 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.12298092 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160005081 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.174129205 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181888397 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169382409 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.181896302 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170952717 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093604511 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142775868 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.134253588 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245360594 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259245954 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143948091 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101502219 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.161187972 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.160317934 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137420421 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13286973 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110527719 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.133699576 seconds)
  done (took 5.790817821 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108303741 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155002841 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098127905 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144910369 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149102679 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093333586 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127731371 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094344929 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134796207 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135736869 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093035194 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129856731 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100268885 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131494533 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.122272238 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.102975698 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131752934 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095081408 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125667309 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097424767 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133846318 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100784245 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126200286 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.092155525 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.131595631 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120906286 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087227505 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142518948 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.093748497 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.144963469 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.120132027 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101918183 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136621344 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093688455 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123095462 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09564159 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125072442 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095778274 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125040147 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092524332 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122599497 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077761735 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.121970188 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.108263183 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.129095521 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080328577 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.128932853 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.126572747 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095663742 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119835876 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097098062 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.124855081 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096835467 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130329964 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096091424 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.123242071 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097279359 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.114723907 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099243211 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124846902 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084860679 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.120642174 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099445878 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.11673297 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101911837 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128082558 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09268872 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125259173 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097658296 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129046476 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094738927 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.129118291 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091233312 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.125364289 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095210288 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12802973 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096297507 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121749398 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092841874 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123135772 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074452873 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.12394994 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073879632 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125258822 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092064279 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.12165229 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095118961 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129601552 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13807641 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09477741 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.130987572 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094674649 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122628345 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097064576 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.112304706 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.09654105 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139285057 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141303225 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094210011 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.120916096 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.1079886 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.12597565 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092462304 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.105958093 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102645137 seconds)
  done (took 12.92885951 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128151022 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.153854554 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095519747 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141269889 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156643158 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.156609119 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100595198 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130728295 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096020224 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141491914 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094289382 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.131666845 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093892393 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137214993 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.156630373 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102862275 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12464271 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107812744 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128151481 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.168876324 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111897451 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142308336 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110350906 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123677298 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098622979 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.140629995 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.160597252 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107809012 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.136974821 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14117692 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.107562912 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.160695232 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.114111775 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128992991 seconds)
  done (took 5.454300842 seconds)
done (took 49.51508257 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.21219468 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.405420727 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.184790622 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.104298062 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.219728503 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.227118178 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.195621129 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.193301118 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.593596228 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.18431081 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.421961246 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.693611569 seconds)
done (took 59.751091016 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.196691094 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.319762679 seconds)
    (2/2) benchmarking "String"...
    done (took 1.446982493 seconds)
  done (took 3.881666801 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.537779981 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.166343902 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.443611104 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.184453448 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.200866409 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.480409858 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.855044023 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.528166347 seconds)
  done (took 27.972679995 seconds)
done (took 41.702470075 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.201017571 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.265869399 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.230576023 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.168251452 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.29596833 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.218460089 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.534246131 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.199446873 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.201368915 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.168789124 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.205535425 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.202186309 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.194415119 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.530971107 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.189917398 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.195122502 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.215219338 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.673955322 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.587385875 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.186305664 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.189038891 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.198137308 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.198505947 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.1887545 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.249101006 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.185697484 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197197638 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.199080968 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.728087234 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.190204928 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.198729279 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.733374582 seconds)
  done (took 190.236868897 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.18590887 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.328582366 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.395351017 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.205452947 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.624809555 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.386954234 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.333776477 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.713292769 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.207338968 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.220822354 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.438815559 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.191064208 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.507527795 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.16008591 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.216257787 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.287587583 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.380560501 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.536165381 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.222988099 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.345817493 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.211553883 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.456377401 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.368693971 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.439122923 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.213124012 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.292243675 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.215473568 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.208212302 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.382554902 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.321936155 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.243069661 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.22196134 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.813934399 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.039699098 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.201631701 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.218643588 seconds)
  done (took 149.855645299 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.188381439 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.18781678 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.187589081 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.220423614 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.188208589 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.767798561 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.753911969 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.684437784 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.653698179 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.579082902 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455532629 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.188190016 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.283322118 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.200421341 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.189692501 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.203509216 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.231487422 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.194615306 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190184364 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.751963523 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.201539132 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.33390934 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.365317757 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.205564734 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.221461098 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.579680133 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.189330881 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190066706 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.221232765 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.522121339 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.239280904 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.189895449 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.553851857 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.537618312 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.304004756 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.191531872 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.222015784 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.18984491 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.469667903 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.190634895 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.190807323 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.19303297 seconds)
    (43/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.1898267 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.864671888 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.192880708 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.771579576 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193527262 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.139797638 seconds)
    (49/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.190686495 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.190260186 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.190803726 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.828036023 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.768711808 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.207175342 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192011752 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.19362229 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.190902983 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.190461853 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.223901425 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.786532255 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.286741986 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.208610775 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.195881486 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224348313 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.192515703 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.287057829 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.191054688 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.46509496 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.267247536 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.412806977 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.757425628 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.191746115 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.289637454 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312642872 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.192719208 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.192619156 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.192655954 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.192539892 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.303469905 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.191220314 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.615706497 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.368752389 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.210937556 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.587005247 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.293849469 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.192314595 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.583806358 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.196627704 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.192990719 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.947090727 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291081086 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.192942454 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.193519505 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.193748297 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.618013859 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.757575155 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.466320963 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.197195887 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.802710225 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.197172206 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.633794754 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.751394074 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.888284362 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.1980799 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.306568665 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.370774576 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.21045659 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.195401876 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.193810158 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.591191832 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.199483307 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.252021931 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.194612814 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.592275957 seconds)
  done (took 365.659618578 seconds)
done (took 706.864763665 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.79197957 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.787865345 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.894116943 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.778147386 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.747466381 seconds)
  done (took 10.123793516 seconds)
done (took 11.245343212 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.381236324 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379139059 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255968076 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.381795594 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.227488406 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398414189 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.360096094 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.213856741 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.294931855 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.275914276 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.295912586 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.247964961 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228534152 seconds)
  done (took 18.066133649 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.502897692 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.504663467 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.261156869 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.507594362 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.235890952 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501659288 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.401748421 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.406505368 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.414747673 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.228773242 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209220659 seconds)
  done (took 16.301078247 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.511777123 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.515118676 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.263298985 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.528387365 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.236462807 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512740984 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.398308614 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.412243584 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.412328053 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.23179815 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.209277514 seconds)
  done (took 16.358718888 seconds)
done (took 51.846543858 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.207379132 seconds)
  done (took 2.333443828 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.240404495 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.402984507 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.222228018 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.211609927 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.206627516 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.208216087 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.21349676 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.20740956 seconds)
  done (took 11.040191677 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.20423897 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.205097793 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.203418936 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.203631468 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.206317459 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.207696929 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.20723227 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.203818983 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.204037946 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.202653565 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.205836083 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.206506698 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.204093314 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.206320472 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.20715141 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.203196736 seconds)
  done (took 20.408852042 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.206486482 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.204041921 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.203762538 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.205035507 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.203758056 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.20616667 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.204972349 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.205308748 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.203576343 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.204560352 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.205537192 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.204725419 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.204708038 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.205751039 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.204901703 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.206272165 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.204711674 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.205244635 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.209416457 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.204316813 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.204877605 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.206103402 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.205799556 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.204960704 seconds)
  done (took 30.055203251 seconds)
done (took 64.961350607 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.821586916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.839043619 seconds)
  done (took 6.790041206 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.207361407 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.207373163 seconds)
  done (took 3.545537741 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.208001611 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.208450319 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.207435028 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.207684202 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.208908852 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.207796527 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.208208589 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.20730787 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.207659821 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.208430592 seconds)
  done (took 13.209725976 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.208360445 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.209470483 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.205823952 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.208738908 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.207388137 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.206933085 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.208909215 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.209309044 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.208103671 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.207470385 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.208808204 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.207609832 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.208588983 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.207567046 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.20903508 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.206853478 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.20695261 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.206961537 seconds)
  done (took 22.87374517 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.209872444 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.209044793 seconds)
  done (took 3.551134842 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.207735439 seconds)
    (2/7) benchmarking "second"...
    done (took 1.207292418 seconds)
    (3/7) benchmarking "month"...
    done (took 1.2067291 seconds)
    (4/7) benchmarking "year"...
    done (took 1.206764461 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.207928701 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.206896926 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.206554222 seconds)
  done (took 9.580956234 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.210687462 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.379679099 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.458325857 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.827145349 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.212247293 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.214012318 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.038958694 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.214828008 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.216624835 seconds)
  done (took 13.904541467 seconds)
done (took 74.581932164 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.236237299 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.224956854 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.485284446 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.218850917 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.222864497 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.505518461 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.205072244 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.329646861 seconds)
done (took 37.558209429 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.218511358 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.186519104 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.972452183 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.186600011 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.232356974 seconds)
  done (took 18.710902871 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.247356518 seconds)
    (2/2) benchmarking "read"...
    done (took 1.554954998 seconds)
  done (took 4.935167911 seconds)
done (took 30.993883464 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213087667 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.211873344 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.209523602 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.209508912 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.212112047 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.208634709 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.209348123 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.212089027 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.21278187 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.211895669 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.212999602 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.212545251 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212106173 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.210651227 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.210007334 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.211956506 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.21007653 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.210705184 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.209717131 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.213646969 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211419485 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.212933191 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211542288 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.210853432 seconds)
  done (took 30.205749455 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.214138011 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.211568609 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214789319 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.212376374 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211591385 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.213008253 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.213919349 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.210543127 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.213267299 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.213379414 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.211654581 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211410792 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.213685774 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.210556911 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.213987322 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.211360947 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.213482719 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211873014 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214650998 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211577005 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.214183721 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211520742 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.212571596 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214417075 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.212128483 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212929329 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214548831 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.213167717 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.215517804 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.21206714 seconds)
  done (took 37.520695749 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.220124363 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.222580152 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.215219674 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214991037 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215039639 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.215133158 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.215926639 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.215558036 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.215858093 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.214545191 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214888939 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215681427 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.215027425 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.215756824 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214993367 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.216647866 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.215665226 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.216567967 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.216693396 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.214931477 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.215579036 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.215915853 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.216561399 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.215700809 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.215504007 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.21602006 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.2158828 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.217392817 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.216844914 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.21738086 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.216604278 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.216682019 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.216073161 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.216905979 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.217174577 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.217017307 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.222148456 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.22495943 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.217471031 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.218068051 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.217239592 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.217489762 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.218474267 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.21803682 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.217240285 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.217948313 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.217564627 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.217297201 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.21682284 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216899016 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.217423457 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.218143175 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.21797579 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.217085719 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.217221476 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.21727461 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.217978737 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.218389464 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.218548008 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217720495 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.217863188 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.217981684 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.218813916 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.218034543 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.218560138 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.218732297 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.218622745 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.218893733 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.218275468 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.21961826 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.21848801 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.219509758 seconds)
  done (took 88.782439269 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218841279 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216471886 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.217272199 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.217260877 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.217542059 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220645015 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.217784296 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.219720558 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.217986767 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.219909441 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.219512296 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.217703789 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.217279072 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220384261 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.220007843 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.217312149 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.220664889 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.217905839 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.220535909 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.221044658 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.220484208 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.217924858 seconds)
  done (took 27.954818983 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221340315 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.222490389 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.217660158 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220060755 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.217200029 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.221373382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220787335 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.221985453 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.220345963 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218676759 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.218809083 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221132025 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.21800504 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219283013 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.218854264 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.221017303 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221534289 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221704291 seconds)
  done (took 23.104501592 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.219404814 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.220300757 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.221615592 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.219855862 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.219114853 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223702646 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220438781 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.222754904 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.222861884 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.219081707 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.222800801 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22236907 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.222851131 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220156326 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223395797 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220940121 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.222900581 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219525396 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222731631 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221189104 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.221683068 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.223970873 seconds)
  done (took 28.016603882 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222773132 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.225393511 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.221233663 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.221268324 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.221335678 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.223442813 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.224597192 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.220879361 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.224534996 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.223794502 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221300926 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.223291273 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.223696338 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.221695911 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.221745492 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220985794 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.222966007 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.22206902 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223656722 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.221098605 seconds)
  done (took 25.596654308 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.22569043 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.225320938 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.225619723 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2258232 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.225433742 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.224992016 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225690451 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.225525092 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.225771169 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226347976 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.225459235 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.226580374 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226155067 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.225691622 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.226449097 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.226107378 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.225547638 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.225882868 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.226282857 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.225787722 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.225885588 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.226607868 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.226590905 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227144631 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.226990141 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.227445143 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.22790451 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22691012 seconds)
  done (took 35.476377374 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.226888705 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.225728272 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.223786335 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.224101613 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.223620483 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.223302527 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22368711 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.22448619 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.226447567 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.223799861 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.22745175 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.226340107 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.22742246 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.226814066 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.22660198 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.227151915 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226237161 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.224454113 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.22544305 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224722124 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.228210687 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.227188507 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.228650658 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.225288199 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225073535 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.228570614 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226021519 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227385899 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228648454 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.226425103 seconds)
  done (took 37.928016209 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.247184984 seconds)
    (2/2) benchmarking "in"...
    done (took 1.247422213 seconds)
  done (took 3.6434538 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.224764099 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228876861 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.227272924 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.225940272 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226091763 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.229137353 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.228513601 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225884109 seconds)
  done (took 10.96589575 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.228165449 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.228541489 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.22873224 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.229025356 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.229456362 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.22862326 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237223098 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.250856128 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.229941899 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229982531 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.236639024 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.236415895 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232611328 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228868766 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.228425407 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.230872802 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.22957031 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.230352595 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.230860185 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.230252 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.230266729 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232261703 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.231452001 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.227695943 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.231328652 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.24220433 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.256019277 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.230724462 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.23199424 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.236111985 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.229995667 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.228752028 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.231497175 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.231717147 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.231713897 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.230566418 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.24130809 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251581813 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.238693336 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.251951042 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232263354 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.230324422 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.232228505 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.233596581 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232931134 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232709689 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.233658515 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.229982443 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.231637421 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.234939914 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.238082467 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231947855 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.229913353 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234863232 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.232904106 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.239338914 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.251922974 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.235976317 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.241397037 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.244655106 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.267448588 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.25828388 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.234660888 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.234112616 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2424219 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256883964 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24162551 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.250757685 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.232201495 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.234043286 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.242352634 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267003738 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.258827711 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.234547072 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234560068 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.233457035 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232728777 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.233726996 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241651897 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.256093541 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.2345798 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.235900974 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.244455496 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257749894 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.233262635 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.233986573 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234989922 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.235562217 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.235406396 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.244818886 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.254435429 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.235790548 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.234622064 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.234874413 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.237693342 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.236264973 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.233954964 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234557161 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.233206133 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.235794113 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.236439657 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.239570404 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.24439832 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235845997 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.23594899 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.243148874 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.256305679 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235234927 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.241798995 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.236235464 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.236386903 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.236933174 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.243280194 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.23386979 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239636212 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.243905347 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.236699616 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.237517392 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.237057732 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.236498571 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245141901 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.261783189 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.237872686 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.236492862 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.241279668 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.24869801 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.238089261 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.239563419 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.237355038 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.235120483 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.24085562 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.239166678 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.237308498 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.238490946 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239151642 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238692167 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.235056857 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.238965179 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.239165572 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238143496 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.240553783 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.238761135 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.238911877 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.240279396 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.237956694 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240121298 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.244668435 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.258959573 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.239411552 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238764743 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.236752651 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239010857 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238939657 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.239533509 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.238748464 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239991306 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.239438888 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.240600173 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.238840957 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.239881489 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240035899 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.239955514 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.244398179 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.23890382 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.243708616 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.239294027 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.237347475 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.239690818 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.241074102 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.2405793 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.241096138 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.239077046 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.243311063 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.247754975 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.241349747 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.24120755 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243254342 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.240784792 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.241354399 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240396381 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.244360623 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.248733016 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.240882445 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.249058196 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.261971465 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24126919 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.241295182 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240652038 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.24022021 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241428293 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.244905249 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.249478335 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253316618 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266862415 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.242321654 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.245502346 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.242193279 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.245421672 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.245828791 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.242320974 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.242295831 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.24257023 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241930036 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.241741979 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.243924047 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.243228818 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240969179 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.243584631 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.242490595 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.242603944 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.242365818 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.243283574 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24419518 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.240442857 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.243525338 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242395195 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24244358 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.241533659 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.241250825 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.24330256 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.243452892 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.24459473 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.251336705 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.241509906 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245057728 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.24482811 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.244138772 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.24226577 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.24422787 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245969095 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.243099713 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251680182 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.263932148 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.244651682 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250354827 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.264409596 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.242158273 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245855933 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244298666 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.242282253 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.246515345 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252179429 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.24481888 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.245148181 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.244822298 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.2450878 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245158142 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.251954471 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.263051978 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.244553961 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245780296 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.247280243 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242173475 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.246181965 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.245482508 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.246946632 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.24668566 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245306266 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.246229237 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246373188 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24613672 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.246290231 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.246920786 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.249094894 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.254012005 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251103179 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.245653789 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247782137 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.246618307 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.25072985 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.246520191 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.247423389 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.245045053 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260853753 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.273045978 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254166345 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.267575395 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.248066019 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25426633 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.269403114 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.249924229 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.246997312 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.247522213 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.24635532 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247396071 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.245194697 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248182557 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248125674 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.24938718 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.249029662 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252662201 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.2487753 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.248078026 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248684298 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.249255716 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.249472978 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.24912808 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.249445313 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252037507 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249668876 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.247870538 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.249212136 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.256409978 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.269781086 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249020136 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.24806547 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.249249567 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.249072038 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.250303831 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.250078835 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.252998243 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.25687263 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.252972834 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.258053326 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.250729239 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260064775 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.25076347 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252647249 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257784248 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247778826 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.249403061 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.250287455 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.250485225 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.25701708 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.270992411 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.252086297 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.254026435 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.249554218 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.251381128 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.250872832 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250579657 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250347621 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.251069929 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259315048 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.270465804 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.254261757 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252030363 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248363096 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.251414724 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251152057 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.250211305 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254865412 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.251879888 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.25135487 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.251392598 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.250385781 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.253002432 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.251775246 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.252179859 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.250437121 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.253377131 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259586992 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.273670884 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257011187 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.252296647 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.259583466 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27342798 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260716425 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.273939173 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.252060188 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.253569333 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.253036897 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.253605713 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.251539681 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253192133 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.253569697 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.25280721 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.257513018 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.253472626 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.255630807 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.252862919 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.254447953 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.252071963 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262480847 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27714493 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254472811 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257901862 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.251553915 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.254450166 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.258599655 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.25417379 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.253037739 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.257580163 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26429966 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262431073 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.253527828 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.255065212 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254714252 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25465628 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.255001969 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.254092378 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.256870005 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.255707708 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.256216754 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.256092281 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.256647765 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.255293494 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.256048952 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.25683288 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.255998936 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264901789 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.276043339 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.254892049 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255585492 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.256717148 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.25591244 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.254827581 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.254682696 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255702256 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.255553546 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.257244894 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262335959 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261233791 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258622061 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.256299231 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.255771856 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.255775985 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.25687187 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.256333093 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.257650723 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257334379 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.256556819 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.25743711 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.25726597 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.256207591 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.256974351 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.256635957 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258239787 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.25911707 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.263538309 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257612185 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.254587646 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257567011 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.256914157 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.256725835 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.25742676 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.264654394 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28213257 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.268989133 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.26575608 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.262762188 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.258755423 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261327528 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.264862729 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.256926354 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.259225665 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.258534477 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.258368967 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.258872549 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.260903727 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.259816336 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.265903505 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.279657047 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.257697001 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.268450842 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.278878992 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.25903498 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.260896073 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.262814074 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.258063269 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.257480779 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259662205 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.259679647 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26834389 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.280085726 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.260359761 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261091959 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.258690162 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.261190593 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.26379455 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260656728 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.260477004 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.257627045 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.260213403 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.259715352 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261623031 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257938199 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.259379883 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.260437854 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.262517092 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.267097998 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.258482407 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261575744 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.259461105 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.260468668 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.260742856 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261489365 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.259471501 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.257301291 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.258963117 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26156846 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.259805627 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.263066506 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.260403879 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.261118633 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.261677792 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.26106451 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264118723 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.27140704 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.26938345 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.258668232 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260319115 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.261296133 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.263504031 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262495501 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26151872 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.261428932 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.261746836 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.262163952 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.262621667 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.262175754 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.265451225 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27863971 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.281583394 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.2620287 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.263313574 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26505802 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.262516278 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.259462322 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.262746409 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.26490429 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.266654723 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.270611401 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.263283983 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.268915108 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.283303577 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.263546106 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.267059231 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.265296247 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.269955893 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.265595044 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263082124 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.264048371 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.268318072 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.279511537 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.263968729 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273945296 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293554047 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.285945031 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.266498453 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.264291596 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26318654 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.265326914 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.267023207 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265953848 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264235656 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.264909556 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.264708075 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.264830052 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271474008 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.266118846 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.266280695 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265028876 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.263954589 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.266153109 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263201716 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.265852826 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265094128 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.265894403 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.265153472 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.266513173 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.264909195 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279757342 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.293830595 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.267088073 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.267126538 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.263458174 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.270515337 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.269147635 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276400107 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.272997864 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.26553148 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26629836 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.266984464 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.266122298 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.265880493 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.266093164 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.265560735 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.265964692 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.264397195 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.278067171 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.293477257 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.271196305 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.265505675 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268165577 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.26735581 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.267662592 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267248942 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267112943 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.267827871 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.268884011 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271743362 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.267834375 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.268442996 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.270315573 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275601564 seconds)
  done (took 747.100839505 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.265402103 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265851397 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.265296662 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.264823637 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264721985 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265352321 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.265585493 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.26571133 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265162986 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266508296 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.267137453 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266212284 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.265620982 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.267833638 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.267153966 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.267271613 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265877317 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266134544 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267486552 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265634658 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.265117916 seconds)
  done (took 27.771782793 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269403808 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.266311452 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266919654 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270342168 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.266669477 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.270000876 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267721424 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270041784 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.269173833 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266581941 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.269975704 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.270208513 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267968877 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.267091772 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267395783 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270877236 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.271535021 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.26801684 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.269577173 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.266573612 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270061536 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268194077 seconds)
  done (took 29.097583814 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.270320779 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.269977579 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.269305492 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.268034238 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.271573603 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.268206589 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.270824165 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.271738457 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.271105393 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.271930232 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.2713039 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.272269677 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.276841751 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.277664324 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.273981206 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.270540842 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.416480221 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272203777 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.272133597 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.272192599 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.269697191 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.277591422 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.291014596 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.269677391 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.269832411 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.272053067 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.273190586 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.272401085 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273646279 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.273596273 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.276674894 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.272170761 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.27268637 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274327806 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.270954369 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.27383607 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.27708675 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.273142295 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.270051669 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.273548861 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.282874002 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.293353169 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.273233326 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.279530791 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.295099357 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.273857567 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.277006145 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.281839279 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.271987592 seconds)
  done (took 63.773568334 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.275107849 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.274254781 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.272182169 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274244631 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.275526123 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.27481231 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.274804183 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.274238598 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.271704862 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.270986953 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.276109704 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.27228812 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271612596 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.275644701 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.275153789 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271826644 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.272804785 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271957757 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.272589495 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.272847805 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.272811422 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.275854512 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.275670816 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.273841324 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276202442 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.273430165 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.27237254 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.276244749 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.273464026 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.272558888 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.275854147 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.276987512 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.276045133 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.273915849 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273997582 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.276197699 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.276445774 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.273503648 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.275900373 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.273326825 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.276567726 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276038142 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.276985123 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.276103829 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.273890564 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.274468986 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.274408935 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.274298513 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.27392743 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.276853602 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.276104905 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.274954952 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274868519 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.273056298 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.276802581 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.277522227 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.274687709 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.274527072 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278238961 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.275560613 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.27506039 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.277791602 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.275430916 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.277321178 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.277564315 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.27587092 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.275365144 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.277546372 seconds)
  done (took 87.881381444 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27786687 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277961333 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277812298 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278351502 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.277890264 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.278132554 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277864055 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.276843756 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.278390246 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278927549 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.279530061 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27987289 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.277816998 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.27930509 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278062219 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.279509369 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279652617 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278835419 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279049851 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279232387 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.279389946 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280027303 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278873811 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279899612 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.280602956 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280013829 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.279154906 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.279834998 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.27985668 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.280777721 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280639515 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.279687938 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280683953 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279862431 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.27982578 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.279092467 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.28023201 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279715042 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.280832818 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28003788 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280672196 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.28078226 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.279769212 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.279606429 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280166889 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280943461 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.27958591 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.280868076 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279928697 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280612977 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.280937667 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280838065 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281170916 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281349117 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.281593716 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.280858267 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281720956 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.280909467 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281441065 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.280736071 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281134986 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.281578901 seconds)
  done (took 80.54324302 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282181497 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.28226175 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.277997068 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.279190567 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.281216614 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279970578 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282332974 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.282315017 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282670567 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.282750074 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281736552 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280184156 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279882575 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282881326 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279738829 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279820385 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.280112486 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.279827954 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282284106 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280563215 seconds)
  done (took 26.818866436 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.279643328 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283163213 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.280859102 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281280273 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.284547161 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281432495 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283471791 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283833804 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281356979 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28371242 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284117358 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283757992 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281174456 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.280414415 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.283790381 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.280930605 seconds)
  done (took 21.716600431 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.28135619 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.284344454 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.283895957 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.284005964 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281781324 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.281684187 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283866383 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.281178766 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281925851 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.28523918 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284787142 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.284536739 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.284928283 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284441842 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.282504153 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.284474143 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.281733348 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.281209247 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.284742679 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.283718504 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282560846 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.281562864 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285028848 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285146293 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.282876694 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283390579 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.282515201 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.282829096 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283921962 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.284915065 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.282104387 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.283755815 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.282794014 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.283298568 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286309896 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.283779647 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286223302 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.286295672 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.287025498 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286729725 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.287165323 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.283741549 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286811878 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.286343643 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.283817678 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.287774553 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.284236738 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.284835047 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.283241873 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.285189441 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.28587025 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.287036947 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.28718107 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.287977885 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.287455868 seconds)
  done (took 71.840586201 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287779226 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.28779838 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.284174724 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.287541679 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288191209 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.284536943 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.28832819 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286697005 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284629569 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.286596302 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285798733 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288656327 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285968255 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.288422838 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.286962924 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28882124 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.287421008 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.286470179 seconds)
  done (took 24.368188299 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.285975638 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287404431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.290495265 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.286360131 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.286519925 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289332541 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.286065931 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.289970414 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289328427 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.287240467 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286595729 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.289687596 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289814766 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.29004387 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287191608 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.287192393 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.289751362 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290237713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.286772173 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.288330262 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.29139765 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289770979 seconds)
  done (took 29.549726994 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.288308649 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.289179395 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.287890769 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.305872499 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.3077927 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.311311113 seconds)
  done (took 8.995696759 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297816538 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288363241 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288068922 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290806269 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289857091 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286729909 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287467418 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287979613 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290677923 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.287163145 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28850864 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.289990645 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291769331 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28831915 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291111061 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291116005 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287801638 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288208128 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289372677 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291736828 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288737539 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289183211 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289174167 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288546651 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289096849 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289210556 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291367836 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288725685 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288454327 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291467521 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290525605 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289663106 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291681359 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290201988 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291905756 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292960419 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290120322 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292948426 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292634426 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28997963 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.292596287 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292474249 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292247685 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291014454 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293344852 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290572897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291045888 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290205281 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29172005 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292659135 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293836936 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290942647 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294223169 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292891482 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294383779 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295287488 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291652887 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289894673 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294088393 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291908683 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291248594 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293324873 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291571808 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291592099 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294048316 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2906863 seconds)
  done (took 86.429533984 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291152777 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.291711497 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292909205 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292719908 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292117743 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291868584 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291618355 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291471933 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292568129 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292228953 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295056701 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292188112 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292267369 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292436129 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2916187 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292925052 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293592912 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293169923 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292777332 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29561517 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294005134 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293677383 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293196035 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292853442 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293670706 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296945156 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293701709 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293584901 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293579223 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294204473 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294646293 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293358587 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293003738 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293020223 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293772101 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294549268 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294320997 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294546186 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294080518 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296524901 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294389633 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297527115 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294265657 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294478926 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295353217 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294647233 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294902646 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295796815 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294569206 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.2944019 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295438025 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295124913 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29526521 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295502203 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296097461 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296032376 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296070441 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296029483 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295648035 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29860816 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295625815 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295463656 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299626855 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296195926 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296393224 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295300736 seconds)
  done (took 86.633246981 seconds)
done (took 1742.846677026 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.462060295 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.413129914 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.29619786 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.324973741 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.296446006 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.316418284 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.306473822 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.297442797 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.296822404 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.296811129 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.297119481 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493253293 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.293648268 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.297401382 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.297152775 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.391690982 seconds)
  done (took 42.592997518 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.326823276 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.304345089 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.421227772 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.323669095 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326596633 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.50008568 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.361830976 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.302944323 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.488193833 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.353133637 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.961861941 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327213154 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302616256 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.480749202 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.321728743 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.497522534 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.572666099 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.039895387 seconds)
  done (took 30.42720435 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.791879258 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.314330925 seconds)
  done (took 9.322263338 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.323044131 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.303283686 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.302992659 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.302863841 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.293863263 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.312056333 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.301152983 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.298614255 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.249397528 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.444221314 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.311115136 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.312403555 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.323833315 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.303354534 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.300819652 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.339173156 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.476995946 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.302046973 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.299871669 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.309595134 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.302186166 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.403552377 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.347739993 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.306532251 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.437934782 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.269021697 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.306861439 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311284425 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.457837137 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.302201125 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.303517427 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.303246782 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.305493823 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.92028297 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.813615705 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.321036759 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.330192356 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.313057981 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.301426992 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.464873642 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.306523081 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.31198301 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.301461588 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.789708872 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.438381382 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.435789706 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.585188604 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.325322353 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.306885032 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.371897617 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.307722754 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.306542144 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.336752137 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.08373349 seconds)
  done (took 110.669701384 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.355045459 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.687919031 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467884196 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.317815719 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.095064495 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982847019 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.316739426 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.608550168 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.338945214 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.297873969 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.647411612 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.831645776 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.322369726 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.355806384 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.868887639 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.320846162 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30077437 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.17261182 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.3183889 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.300995788 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.806669771 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300343443 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.298881631 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.56949065 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.340242451 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.778021678 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.81994792 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.794532419 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.321846886 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.299629273 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.792565398 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.324578094 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.341977704 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302289252 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.57148461 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.680942039 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671416623 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.3224563 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.321032934 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.300665543 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.320572454 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.771507293 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683038646 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.320531505 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.318876234 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796715923 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.318266385 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.31009343 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.303382947 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.512852072 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.159808058 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.301454317 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.797307883 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.302739397 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.594831843 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.383603806 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.303615573 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.80541273 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318385909 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.430786731 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.336180337 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.301136307 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306500965 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30223869 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305310768 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.669690841 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.610144604 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.308434997 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.667952153 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.8052486 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.320266413 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.852413956 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.179331687 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.315238306 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.371659436 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302026018 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.01352834 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817238361 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.346143676 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.302226265 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.657225471 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.324215229 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.635426576 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.321669006 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304711566 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.825806541 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.303721509 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.358886682 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.31096587 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.304069651 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.066151511 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.307489736 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.601749051 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.357039938 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.303955435 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.302838471 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.316785746 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304538184 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.305116712 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.303224421 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.855608667 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.324335072 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.278940021 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.323288093 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304532732 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304628735 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.307170648 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.304470114 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532942365 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.700652117 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.328246875 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307516732 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.304701725 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.311186739 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.576518096 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.310235101 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.633258224 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.325410984 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310767306 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.309566253 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.004069569 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.337983073 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306074684 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.309403786 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.235040354 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.513386223 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.326249586 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.307510263 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.305734833 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32782361 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.614706357 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.328107051 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.384829457 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.306795275 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.037458475 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.345801846 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.336769955 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.830781735 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.307417001 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.280243942 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.331896733 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307175007 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.598752408 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.584809929 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.56070591 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.309201147 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.327732375 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.01524482 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.374211834 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456871566 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328519135 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.30485556 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.507871297 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.510992214 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.308201699 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.934106401 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.308544232 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.531555668 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.309088116 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.612809835 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.824724421 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.327842238 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.317269725 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.038153568 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.019722098 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.998182091 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.311738852 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.64165859 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.309487464 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.777488033 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.308186935 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.308269963 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.880315648 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.310725123 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310721513 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.309042938 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.309033629 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.368210568 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.484573363 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.651100513 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.317751589 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.783001341 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36281796 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.310143591 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.331314804 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.31195078 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.660561542 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.308524579 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.312789425 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.331315437 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.312362587 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.310052855 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.804929056 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.221348461 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.312389176 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.46536189 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.971574978 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.328606014 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.310441803 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.849609599 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.52541183 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.87795829 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.361628564 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.642097595 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.33096087 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.351483519 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.042544847 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.406716181 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.805315356 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.333584509 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.310111769 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.932186182 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.328450385 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.399372714 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.310946172 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.312915984 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.871566412 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.330840692 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.314300545 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.621792655 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.33222715 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569423489 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.313108812 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.3447416 seconds)
  done (took 1107.013298358 seconds)
done (took 1301.235506772 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.312702083 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318732329 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.299752294 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.320481244 seconds)
  done (took 26.485403907 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.323061743 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.319016667 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.320626022 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.318118546 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.320865147 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.319891915 seconds)
  done (took 9.161508878 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.500658896 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.318828372 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.320631104 seconds)
  done (took 19.373725485 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.536131299 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.702173828 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.695012239 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.800359657 seconds)
  done (took 10.973855015 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.321708613 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.323619479 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.322835119 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.32305638 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.328751731 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.326826878 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.322421532 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.323603062 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.326984207 seconds)
  done (took 13.155265301 seconds)
done (took 80.380760522 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.460740884 seconds)
    (2/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.380703228 seconds)
    (3/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.331914649 seconds)
    (4/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.2955581 seconds)
    (5/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.217217624 seconds)
    (6/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.133043691 seconds)
    (7/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.315490236 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.603795525 seconds)
    (9/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.333544084 seconds)
    (10/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.590212462 seconds)
    (11/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.759523859 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.376199351 seconds)
    (13/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.421946404 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.343956014 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.736090545 seconds)
    (16/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.319938311 seconds)
    (17/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.746341623 seconds)
    (18/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.194270495 seconds)
    (19/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.380917892 seconds)
    (20/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.159789943 seconds)
    (21/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.406905048 seconds)
    (22/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.98852754 seconds)
    (23/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.502360369 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.313721178 seconds)
    (25/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.343670185 seconds)
    (26/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.631067183 seconds)
    (27/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.238227844 seconds)
    (28/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.824946746 seconds)
    (29/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.296555777 seconds)
    (30/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.333583813 seconds)
    (31/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.298287755 seconds)
    (32/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.312932038 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.296015912 seconds)
    (34/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.342927408 seconds)
    (35/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.344423107 seconds)
    (36/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.853694267 seconds)
    (37/286) benchmarking ("sort", Int64, true)...
    done (took 6.333145495 seconds)
    (38/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.761854338 seconds)
    (39/286) benchmarking ("sort", Float64, false)...
    done (took 5.652781016 seconds)
    (40/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.421781168 seconds)
    (41/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.300574582 seconds)
    (42/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.362666733 seconds)
    (43/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.317400808 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.702274295 seconds)
    (45/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.314957034 seconds)
    (46/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.685967838 seconds)
    (47/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.310200504 seconds)
    (48/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.32795866 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.428862215 seconds)
    (50/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.503811707 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.599674552 seconds)
    (52/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.712483931 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.336398312 seconds)
    (54/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.384807019 seconds)
    (55/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.325743189 seconds)
    (56/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.41199508 seconds)
    (57/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.839401268 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.376640464 seconds)
    (59/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.848603384 seconds)
    (60/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.071958171 seconds)
    (61/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.980458931 seconds)
    (62/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.210091445 seconds)
    (63/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.299282605 seconds)
    (64/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.423360467 seconds)
    (65/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.152296666 seconds)
    (66/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.898078883 seconds)
    (67/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.019761121 seconds)
    (68/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.445519086 seconds)
    (69/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.416031068 seconds)
    (70/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.756656408 seconds)
    (71/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.416340481 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.985781643 seconds)
    (73/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.722402552 seconds)
    (74/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.298601076 seconds)
    (75/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.299565945 seconds)
    (76/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.330119069 seconds)
    (77/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.31942663 seconds)
    (78/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.312223021 seconds)
    (79/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.308755202 seconds)
    (80/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.13254558 seconds)
    (81/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.55974646 seconds)
    (82/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.366237636 seconds)
    (83/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.319732858 seconds)
    (84/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.029719897 seconds)
    (85/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.300291473 seconds)
    (86/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.752159127 seconds)
    (87/286) benchmarking ("sort", Int64, false)...
    done (took 5.557264559 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.738413539 seconds)
    (89/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.339792522 seconds)
    (90/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.301170776 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.934231179 seconds)
    (92/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.097039529 seconds)
    (93/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.300308996 seconds)
    (94/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.357357831 seconds)
    (95/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.352729235 seconds)
    (96/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.425490145 seconds)
    (97/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.78620907 seconds)
    (98/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.693726302 seconds)
    (99/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.339940159 seconds)
    (100/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.707970045 seconds)
    (101/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.448667127 seconds)
    (102/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.348114344 seconds)
    (103/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.407282087 seconds)
    (104/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.3118505 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.323677259 seconds)
    (106/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.362163041 seconds)
    (107/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.000239656 seconds)
    (108/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.743567091 seconds)
    (109/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.323666757 seconds)
    (110/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.301970002 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.212209812 seconds)
    (112/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.520231786 seconds)
    (113/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.193787259 seconds)
    (114/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.321744718 seconds)
    (115/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.333036585 seconds)
    (116/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.429060091 seconds)
    (117/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.348312081 seconds)
    (118/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.591342511 seconds)
    (119/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.148325485 seconds)
    (120/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.335866696 seconds)
    (121/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.818698663 seconds)
    (122/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.302981013 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.92328155 seconds)
    (124/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.342995172 seconds)
    (125/286) benchmarking ("sort", Bool, false)...
    done (took 1.838543194 seconds)
    (126/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.365270235 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.584808399 seconds)
    (128/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.610046036 seconds)
    (129/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.307155011 seconds)
    (130/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.330677926 seconds)
    (131/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.482889109 seconds)
    (132/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.807073031 seconds)
    (133/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.361601922 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.163882382 seconds)
    (135/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.593287204 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.335243293 seconds)
    (137/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.581625586 seconds)
    (138/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.317201423 seconds)
    (139/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.43459347 seconds)
    (140/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.397927279 seconds)
    (141/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.408596213 seconds)
    (142/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.3513601 seconds)
    (143/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.448262987 seconds)
    (144/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.304399447 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.455994163 seconds)
    (146/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.324404775 seconds)
    (147/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.878414631 seconds)
    (148/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.548559315 seconds)
    (149/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.607413617 seconds)
    (150/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.37154459 seconds)
    (151/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.613173801 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.149306304 seconds)
    (153/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.013781935 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.357705021 seconds)
    (155/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.3254907 seconds)
    (156/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.375881443 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.925668349 seconds)
    (158/286) benchmarking ("sort", Int8, false)...
    done (took 4.348484105 seconds)
    (159/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.195309894 seconds)
    (160/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.34143652 seconds)
    (161/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.986731567 seconds)
    (162/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.171141362 seconds)
    (163/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.513865047 seconds)
    (164/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.750817485 seconds)
    (165/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.923941966 seconds)
    (166/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.349559152 seconds)
    (167/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.352983915 seconds)
    (168/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.310127523 seconds)
    (169/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.417577799 seconds)
    (170/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.405696784 seconds)
    (171/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.450200696 seconds)
    (172/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.324719825 seconds)
    (173/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.844094707 seconds)
    (174/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.145711436 seconds)
    (175/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.318382603 seconds)
    (176/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.112651796 seconds)
    (177/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.146172514 seconds)
    (178/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.336255735 seconds)
    (179/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.488951998 seconds)
    (180/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.245189559 seconds)
    (181/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.026588551 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.724009811 seconds)
    (183/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.566557523 seconds)
    (184/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.853907979 seconds)
    (185/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.306270469 seconds)
    (186/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.883413296 seconds)
    (187/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.373853597 seconds)
    (188/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.998165861 seconds)
    (189/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.112443314 seconds)
    (190/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.998873697 seconds)
    (191/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.703453491 seconds)
    (192/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.945909836 seconds)
    (193/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.388538965 seconds)
    (194/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.336460969 seconds)
    (195/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.408917727 seconds)
    (196/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.328106282 seconds)
    (197/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.325821155 seconds)
    (198/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.308179292 seconds)
    (199/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.4637474 seconds)
    (200/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.343963809 seconds)
    (201/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.858638101 seconds)
    (202/286) benchmarking ("sort", Bool, true)...
    done (took 5.44217109 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.403332695 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.104744727 seconds)
    (205/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.309472195 seconds)
    (206/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.379072986 seconds)
    (207/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.652455463 seconds)
    (208/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.30687132 seconds)
    (209/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.14626277 seconds)
    (210/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.183368147 seconds)
    (211/286) benchmarking ("sort", Float64, true)...
    done (took 6.328080167 seconds)
    (212/286) benchmarking ("sort", Int8, true)...
    done (took 6.346666053 seconds)
    (213/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.34250477 seconds)
    (214/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.979141692 seconds)
    (215/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.42748757 seconds)
    (216/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.547388239 seconds)
    (217/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.731878075 seconds)
    (218/286) benchmarking ("sort", BigInt, false)...
    done (took 6.329260932 seconds)
    (219/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.543404539 seconds)
    (220/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.309821611 seconds)
    (221/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.999891961 seconds)
    (222/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.223440517 seconds)
    (223/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.307086571 seconds)
    (224/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.353114771 seconds)
    (225/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.990519178 seconds)
    (226/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.878680209 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.253848517 seconds)
    (228/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.333661085 seconds)
    (229/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.372088714 seconds)
    (230/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.379376402 seconds)
    (231/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.358419038 seconds)
    (232/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.309219796 seconds)
    (233/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.471804859 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.321346956 seconds)
    (235/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.311494403 seconds)
    (236/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.858885488 seconds)
    (237/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.412860954 seconds)
    (238/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.309686689 seconds)
    (239/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.450196668 seconds)
    (240/286) benchmarking ("sort", BigInt, true)...
    done (took 6.330564291 seconds)
    (241/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.625010919 seconds)
    (242/286) benchmarking ("sort", Float32, false)...
    done (took 5.36655077 seconds)
    (243/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.311324437 seconds)
    (244/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.358248969 seconds)
    (245/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.374597556 seconds)
    (246/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.572988083 seconds)
    (247/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.382259054 seconds)
    (248/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.860905619 seconds)
    (249/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.337704901 seconds)
    (250/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.415758156 seconds)
    (251/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.414817797 seconds)
    (252/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.340836171 seconds)
    (253/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.35723174 seconds)
    (254/286) benchmarking ("sort", Float32, true)...
    done (took 6.332149172 seconds)
    (255/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.738149678 seconds)
    (256/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.71408064 seconds)
    (257/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.312243101 seconds)
    (258/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.435517332 seconds)
    (259/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.329982083 seconds)
    (260/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.313979135 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.068712254 seconds)
    (262/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.268178502 seconds)
    (263/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.341212476 seconds)
    (264/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.363999559 seconds)
    (265/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.316304197 seconds)
    (266/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.418315455 seconds)
    (267/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.698825451 seconds)
    (268/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.432787609 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.415080022 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.443009057 seconds)
    (271/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.313311348 seconds)
    (272/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.312793341 seconds)
    (273/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.203116472 seconds)
    (274/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.398660832 seconds)
    (275/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.332139198 seconds)
    (276/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.313858728 seconds)
    (277/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.375021229 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.014091052 seconds)
    (279/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.410519661 seconds)
    (280/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.372160964 seconds)
    (281/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.426749302 seconds)
    (282/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.852597642 seconds)
    (283/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.35674867 seconds)
    (284/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.361411388 seconds)
    (285/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.398796901 seconds)
    (286/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.440550967 seconds)
  done (took 944.690027018 seconds)
done (took 945.924477424 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.370557582 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363838993 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.34677976 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.369011374 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.457678197 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.369407476 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.357880451 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.349819579 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.394998652 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.396072218 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.343675541 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.367287619 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.34840074 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.346813117 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.347224139 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.361510672 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.467014455 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.346836916 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.362924261 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.359232288 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.361898708 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.345773998 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.397305564 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.369791343 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.352521755 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.350670517 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.350187322 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.366183444 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.457655767 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.34985496 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.351667404 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.358230647 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.466380172 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.346573551 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.343683782 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.367026402 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.358282624 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.358489396 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.353644087 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.380064443 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.906112753 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.364942366 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.349988857 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.349765594 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.351509297 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.355846434 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.349502503 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.356456939 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362440941 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.364081412 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.893688012 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.383051958 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.351724062 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.350715111 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.362011298 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.349063849 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.354735854 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.366934755 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.368825082 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.367015266 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.453942556 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.358066908 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.353296893 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.366516952 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.358103567 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.930857926 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.365279324 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.357024877 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.906235834 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.376738078 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.932152242 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.376889769 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.353270038 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.363738444 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.382903817 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.466057986 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.34755505 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.350719898 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.357506133 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.349273916 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.362595142 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.363234702 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.356827617 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.35364652 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.364195716 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.374245848 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.363425973 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.352358082 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.362518245 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.370558733 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.358079177 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.362745371 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.356595081 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.348698697 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.363181899 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.358269634 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.353467139 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.354683338 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.359081657 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.364525876 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.905735087 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.390276416 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.351051377 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.350321103 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.352757912 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.364602822 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.907969692 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.371624165 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.375758756 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.402679653 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.355730627 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.456923042 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.355720838 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.371630091 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.363534019 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.358107389 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351698525 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.459257309 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.900798708 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.388416009 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.358306337 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.352493127 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.372790115 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.357164801 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.353221721 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.474399845 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.357154721 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368701099 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.475344209 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.365653724 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.386467215 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.351852679 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.360271335 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.377219675 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.371477236 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.385671056 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.359849383 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.370955798 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.371707665 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.353632231 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.36459799 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.36765302 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.3584759 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.363344651 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.350302291 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.377854483 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.36836989 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368266315 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.377263346 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.475030874 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.353886523 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.463582177 seconds)
done (took 229.884368862 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.412292665 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.342854564 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.440523651 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.351045338 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.452381951 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452933291 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.349390647 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.348775428 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.348377411 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.729082437 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.348291137 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.349193499 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.351757696 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.349232384 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.432383068 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.352392224 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.348343595 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.692890516 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352254057 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.422588771 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.346251028 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.349967124 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.352492304 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.732488615 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.34874264 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.34951133 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.423273197 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.351233438 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.697689477 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.351363467 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.34854508 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.696667564 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.441309179 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.370266448 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.3625945 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.358406684 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.454601406 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.373497459 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.434204901 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.434050377 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.444540651 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.39267982 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.350784229 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.347554722 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.355211694 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.354246749 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.350860773 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.380670339 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.353816505 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.351394268 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.694110157 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.363167868 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.361945064 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.352519386 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.353946606 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.375127979 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.35113034 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.355439763 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.44320785 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.355255471 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.41726425 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.736795269 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.73082067 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.354170455 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.348553157 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.354821695 seconds)
  done (took 149.698919445 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.421257164 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.428713735 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.472398533 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.375150933 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.405801001 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.47571018 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.376057662 seconds)
  done (took 11.221246962 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.361564182 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357203658 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.404108967 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.40445948 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.35728493 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.533697241 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.35718687 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.366365119 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.352954187 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.408648673 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.358017993 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.357217766 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.364143251 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.350246957 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.405369876 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.36754295 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.470649158 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.356863468 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.357199381 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.5131539 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.354835454 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.363769721 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.407494842 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.367808127 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.357747457 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.36188961 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.174035267 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.357757404 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.355001981 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.35745061 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.35584951 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.432451022 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357928364 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.349145544 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.354518654 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.472007391 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.357581916 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35538526 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.359190707 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.350009447 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.359000594 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.359142672 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.359347365 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.356401746 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.357636467 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.380863173 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.358831612 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.358879241 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.359507626 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.359858439 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.409074367 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.358717418 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.357162581 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.357098032 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.414398918 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.365590238 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.359646295 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.357426116 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.360298693 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355686736 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.515678802 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.406882738 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.359724011 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.407275294 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.360176612 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.360826046 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.358270835 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.360260225 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.41317157 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.35984455 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408009231 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.357270021 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.54452896 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.382845867 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.361737793 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.362258638 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.361699177 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.361000477 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.360947176 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.365625382 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.358171445 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.361336473 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.366412636 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.359642609 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.357883795 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.526143343 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.468826376 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.359265851 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.372285661 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.367581745 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.35932804 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.412602768 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.360391605 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.358462437 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.411180736 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.476816889 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.413524987 seconds)
  done (took 156.038547405 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.366321941 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.369355418 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.361875816 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.376186076 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.361770286 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.361723445 seconds)
  done (took 9.470403082 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.364639886 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.363316262 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.362561315 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.363472175 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.361206202 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.36397088 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.361878154 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.36450338 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.366817455 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.363766327 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.363611408 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.364427056 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.364546298 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.364430963 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.363110766 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.36449635 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.364027456 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.361824753 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.363624916 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.36304956 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.468471832 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.364734274 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363909068 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.365139019 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.369133817 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.36426099 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.370691401 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.364638451 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.364119777 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.371118051 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.386102609 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.364907522 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.364714115 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.371650179 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.368299825 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.365014408 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.368810352 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.365387037 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.362169229 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.365705611 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.366300079 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.364687027 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.365223693 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.366362325 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.365933501 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.371720683 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.369942741 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.371602893 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.366698686 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.368612532 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.366746249 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.367685381 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.366904227 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.367212974 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.367960396 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388625571 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.371632436 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.36814869 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.367261591 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.366458517 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.368269647 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.36669813 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.368306138 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.370300176 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.365594538 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.368580906 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.367712296 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.370978399 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.367464642 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.367339931 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.36895415 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.364906616 seconds)
  done (took 100.78842766 seconds)
done (took 428.475610432 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.491742841 seconds)
  done (took 7.7707391 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.543882109 seconds)
  done (took 7.830118546 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.428281265 seconds)
  done (took 23.712071231 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.421972006 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.457426418 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.381367002 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.363211616 seconds)
  done (took 26.904499159 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.965804966 seconds)
  done (took 8.24540099 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.359656022 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.375118257 seconds)
  done (took 14.014539138 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.475290339 seconds)
  done (took 7.754435775 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.36776197 seconds)
  done (took 7.651093539 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.364749889 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.398877932 seconds)
  done (took 14.056312246 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.33960414 seconds)
  done (took 7.620635601 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.207956056 seconds)
  done (took 12.488522201 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.358683703 seconds)
  done (took 7.640788592 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.368786396 seconds)
  done (took 7.647202126 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.025865056 seconds)
  done (took 10.304873728 seconds)
done (took 164.91691867 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.361222245 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.36173697 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.361875103 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.360861518 seconds)
  done (took 26.724723136 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.403215866 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.403508056 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403073906 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.414504937 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.406169601 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.402655652 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.394021867 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.394830443 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.413396014 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.407221848 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.411807637 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.407160079 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.421623655 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.396130219 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.405212117 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.405500927 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.416633607 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.405721518 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.399066831 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.406709228 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.371643049 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.414741409 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.407726504 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.372173218 seconds)
  done (took 34.964694726 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.899010968 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.448860564 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.525112793 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.422322575 seconds)
  done (took 7.576245676 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.423400843 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.424778992 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.43598312 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.474999678 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.503570648 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.434545898 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.398737616 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.393709983 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.380245772 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.427269315 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.501037103 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.441276161 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.511431361 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.372643784 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.554804191 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.372022359 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.373806058 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.426025533 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.476643562 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.491082445 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.371273744 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.423996146 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.429058339 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.44296021 seconds)
  done (took 35.769098517 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.373340887 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.390138006 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.372835963 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.369892583 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.379682245 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.372237596 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.372642902 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.371807337 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.372384143 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.378904288 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.371394656 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.38423164 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.370741909 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.370873037 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.379565068 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.374008072 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.379279452 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.370329441 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.373217243 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.379709924 seconds)
  done (took 28.792564223 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.364715375 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.218996183 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.718017048 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.62296407 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.369224035 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.365952027 seconds)
  done (took 27.942627152 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.452038276 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.611200324 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.372962048 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.772945898 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.865455215 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.393592832 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.374812795 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.636043265 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.996158562 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.995479675 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.435989813 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.448701618 seconds)
  done (took 20.645216668 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.381306957 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.374509093 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.385544409 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.390743047 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.434495842 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.396769963 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.381946173 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.367565761 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.440240637 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.456679691 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.396386841 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.435466757 seconds)
  done (took 38.12849004 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455876645 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.502503772 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.421213571 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414839575 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.047435347 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582429473 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378988562 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.810645625 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.374630048 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64368458 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379638266 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457561324 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.626519698 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.369377803 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.370455209 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.438106385 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.617083508 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.889173139 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370457577 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.779743248 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403502779 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.369857532 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.788752839 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.407980412 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.582178135 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.516198364 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.630118064 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.147627863 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.694477347 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.382689428 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381076117 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.369409482 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.645200862 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066353721 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487542453 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382355334 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370467713 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.920634446 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.371512159 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.76167188 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390943874 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373159345 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382865794 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.371483074 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.305158675 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375940928 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826520809 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.379443179 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.081910467 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.372263235 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382821542 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.46731467 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.376281551 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.945020054 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39011302 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.335365982 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.375485086 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469497364 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961210524 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.111703647 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.387025624 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.307363419 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372480159 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.697992356 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062312608 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.398313556 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.37608268 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.376964556 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.307975037 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.788425424 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.398451506 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511551342 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.396278029 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035279591 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137199378 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.399077579 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.306529142 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963300678 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376673072 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.31001306 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.604162084 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.161928389 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314646464 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.330327999 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.308927051 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117976634 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.383408514 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.813551342 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395289274 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.837369762 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.386344739 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39574425 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398491118 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.599029195 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.253016122 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373932847 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.378015897 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.491827065 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.396810363 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.832058251 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.31013472 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.380997798 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634338932 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.587415032 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375647801 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.446556697 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.607626379 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.381102626 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.395607589 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.385852021 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.395520637 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.00954899 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408884195 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.117104845 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393506402 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.154284112 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.149196514 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.391669252 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.380900682 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389067971 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.640014825 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.180109365 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.261288591 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.445363075 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381884547 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.37644497 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.797663258 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.981345313 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.26317547 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.373543752 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.3860511 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.387410264 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.377666289 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.336617292 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.385963307 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380171822 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.15510097 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603013831 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389831544 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.653300279 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.310808127 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516081581 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.394210597 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.603347418 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.666737324 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.402155236 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.639618967 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386984915 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.378245037 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.410076529 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397677044 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479508889 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.400911645 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.382855318 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.637101259 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.383413433 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.383054737 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.812109135 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.166833819 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.379336173 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.386053443 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396379204 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019138667 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37391599 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.382088885 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.27326466 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.392894292 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.447475133 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.384880016 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.392115358 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.405695782 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416482006 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.386509473 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.376818592 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6049927 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.391583754 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.72127936 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466402671 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.587484859 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.021087761 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.412991836 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.314803116 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.092387133 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.072657595 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382015727 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.573301128 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.381380546 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.393209165 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.392038639 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391011046 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.022189212 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401748112 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.67877778 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.388381624 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393052485 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.387817079 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.382857055 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.382049935 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.160457464 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.390559022 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.393004553 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526509065 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.396061455 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315669032 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.898827745 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387301721 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.383135628 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.161145098 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416722586 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.714465579 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.884216934 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.644601534 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381190477 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394663866 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.851904029 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.418508311 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.387243829 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397008047 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.384286525 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.431945456 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392045726 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.39453912 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.841827959 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.764314742 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955323863 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.178138933 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00193365 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40053136 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.386418784 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.285589354 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.831008959 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320090695 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.043049112 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.593147074 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.849238903 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342251571 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.593568562 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.68012778 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245350876 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396140872 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61344032 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.37970397 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.38703781 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39798656 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596179377 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418735421 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.388499396 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.321252018 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.66998861 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635767232 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392908994 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464055023 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.83301555 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395746156 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.162463811 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.400461163 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.80579996 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58814016 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.932697142 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.780020854 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.39120421 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393626411 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.887184552 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.390626057 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914706302 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055647987 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407203711 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.603954626 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327248144 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.398219569 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.398213613 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.381956333 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.885815686 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.391850563 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.643474317 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397634785 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322918832 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397905875 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.980765956 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.262603812 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.394180526 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38820014 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.173751949 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397201161 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.71145057 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.388222811 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.37770363 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409127494 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.322375033 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322281743 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.081928681 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.397496359 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.358525095 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921047736 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.400655185 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412288398 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400332168 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.363758135 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.645760249 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.403139994 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.03164334 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.634498517 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.407944361 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411970681 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.391864614 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391406821 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.370391277 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.285110296 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.625979602 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462836052 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636216286 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.466872971 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.760780355 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.426955311 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602187048 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.286185813 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397949231 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.673144644 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.127457134 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.393544853 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182893513 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433688718 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39463621 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.408570769 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.401991891 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.411562366 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483082432 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.402071957 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.402015482 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.400877523 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573662921 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39896287 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392796554 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.406155883 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484674247 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.166749774 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.38101653 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.164872487 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03713164 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208588602 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.05567577 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423935386 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.391777147 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392482068 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325742367 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543385447 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.925196302 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.665004836 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512948015 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.403600992 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.415772141 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403380791 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393407944 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.630137343 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668647546 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.368571161 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404660474 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.189108702 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.275097476 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405275651 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.604925813 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935789299 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003135068 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518425791 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.402812381 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.85892164 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66829431 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.48495474 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391262881 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.988629284 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.40728738 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.827381017 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.420020662 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392439592 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541971934 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40549966 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100060423 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.425259461 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.552299412 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.168310006 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.788510362 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.652718462 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.931283664 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.407678415 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.039978442 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.185624074 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.660145404 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465473396 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.404931569 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.506383828 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.54627263 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.391157884 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.298677116 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.394897149 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.365329252 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.108495212 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.404152005 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.044734438 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.680570714 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.399446215 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.394468544 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417689444 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.406208547 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.620708556 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148777819 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621442513 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.406105791 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403796474 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.968781389 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043937823 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429119415 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331292302 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.400686766 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.67759549 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.661687172 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418605305 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.848060568 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.108225315 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983658409 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.373270515 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417763006 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40468906 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176774069 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045392071 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.413630609 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942718459 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.05907763 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397117434 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69123478 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.403966665 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.39816746 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701380599 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.401091936 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.399883303 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416306534 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.045262925 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266849475 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.411548016 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.903734513 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.342693161 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.626139246 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.425393454 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356733866 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.398068176 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.585488479 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.399230707 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.517197639 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410869575 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.399928861 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399107783 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.159801326 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.690453003 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.4055797 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.384774722 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.389984352 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416352557 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500920952 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.650705461 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405601038 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.072875557 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.7527264 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.658055083 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.400470408 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.387483692 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.403524171 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400118524 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.12261049 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417233987 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407022291 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007101626 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.402212775 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.418857624 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404785477 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.618028015 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611854704 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407849441 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.412889501 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41031326 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.424310167 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.307466259 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.174487224 seconds)
  done (took 1661.739930168 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.453028056 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.421964368 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.420178946 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.479799933 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.420143788 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.468728182 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.49633703 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.453911208 seconds)
  done (took 52.92999981 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.407834426 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.559865318 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.434077309 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.410460014 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.410197439 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.414751522 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.894494132 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.419772779 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.410420076 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.410661943 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.414502927 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.404532049 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.110383785 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.412189035 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.411008012 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.387635245 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.408777067 seconds)
  done (took 66.645577021 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.991333578 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.49745969 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.798908196 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.421298406 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.420694645 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.42846896 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.926614494 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.435962906 seconds)
  done (took 55.238406523 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.41890908 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.419460798 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.419562705 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.419547898 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.420862054 seconds)
  done (took 8.415217915 seconds)
done (took 2066.790948192 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.407745308 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.409879868 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.40798607 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.408952935 seconds)
  done (took 6.951512269 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.383711769 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.111680541 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.384027818 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.405016191 seconds)
  done (took 18.60204603 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.415990467 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.441124493 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.192589163 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.102733047 seconds)
  done (took 5.614155974 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.157004633 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.170957066 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.154071581 seconds)
  done (took 7.802525752 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.405167174 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.412516108 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.41291408 seconds)
  done (took 20.54978017 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.708146815 seconds)
  done (took 3.031200612 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.552884364 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.60268242 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.741394253 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.733230357 seconds)
  done (took 7.95037742 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.793184993 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.776580265 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.592578345 seconds)
  done (took 6.48214284 seconds)
done (took 91.155876239 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.608842564 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.429095747 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.613313862 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.583997577 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.639196525 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.615543111 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.683111151 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.551741728 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.088667003 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.082109875 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.589390205 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.635998018 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.632372934 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.429061318 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.630603051 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.439741335 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.657970612 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.654101335 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.27430988 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.406155331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.685055621 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.219417432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.41047762 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.240569474 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.646938088 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.563943735 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.814611016 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.429381776 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.413587279 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.832026376 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.564947905 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.424488824 seconds)
  done (took 197.813715601 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.406773269 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.407411627 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.427086666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.418726116 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.416738281 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.406966077 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.426005522 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.40698753 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.406481683 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426744772 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.407447886 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.407338729 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.407998351 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.432117128 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410325919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.42292543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.416830672 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.41934962 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.407788314 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.429977249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.40867485 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.42590385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.441276849 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.406612111 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.415080031 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.407785948 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.408421555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.428518673 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.408011353 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.407391667 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.408309947 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.425356826 seconds)
  done (took 206.624393296 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.409756437 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.426651645 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.408564433 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.427294553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.409092614 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.428010636 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.42808105 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.427094692 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.428563525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426244644 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.42637384 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.42049858 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.40963184 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.444412239 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.410352521 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.409481094 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.410355562 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.417915468 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.408543662 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.412182448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.411369723 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.412246712 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.413035615 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.421890769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.413381612 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.411665465 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.428682958 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.40909703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.428762028 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.428404069 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.412115114 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429639889 seconds)
  done (took 206.733624164 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.614410252 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.41832339 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.419031727 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.371388335 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.419475779 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.417458787 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.41849622 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.610791646 seconds)
  done (took 15.015694739 seconds)
done (took 627.503782809 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.830968185 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.540227972 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.629920855 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.440279337 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.292589252 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.459024121 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.441888939 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.624869173 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.381708887 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.633604282 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.741418932 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.45486053 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.891353606 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.437339315 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.708786385 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.54672022 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.383178699 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.518896551 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.774034556 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.051498062 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.713279846 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.96641839 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.647238252 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.383501239 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.902746844 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.969921196 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.237550668 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.37472392 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.4570544 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.784734934 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.212904193 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.510536811 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.509814954 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.508685501 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.564444679 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.544964877 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.471420452 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.506253217 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.647742096 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.725449419 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.057838401 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.1944114 seconds)
  done (took 97.003098096 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.402669372 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.404546065 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.403175035 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.403857383 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.403364714 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.404144428 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.402775188 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.402226717 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.403041671 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.40387471 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.404252617 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.40710573 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.402977696 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.405135719 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.402142764 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.403741989 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.403496315 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.406782052 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.404146826 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.402121674 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.404593143 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.403070127 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.404397204 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.403685501 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.403758397 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.403176302 seconds)
  done (took 37.827407837 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.423521008 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.682432551 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.858243085 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.429131318 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.423561266 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.42628464 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.51104316 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.425833623 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.426140678 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.428510771 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.601659968 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.427146517 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.460729386 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.890818822 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.426446929 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.423604011 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.424522528 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.423533039 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.692245024 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.434404562 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.532010052 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.4258826 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.51213794 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.435427333 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.448542917 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.424869826 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.430373595 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.993497547 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.447631723 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.603532591 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.33322124 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.51569349 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.935730738 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.895726692 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.334033831 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.436308798 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.426040663 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.607400975 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.426861533 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.425710994 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.513210894 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.426785597 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.868842549 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.111464943 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.446590203 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.427829942 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.015480644 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.629504605 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.702953203 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.435738798 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.895424994 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.429237933 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.4295101 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.429091804 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.703466532 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.434640646 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.427638345 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.013665528 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.453612466 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.516650619 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.428507916 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.427050154 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.70076135 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.426864234 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.690707602 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.429719498 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.437126542 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.450041772 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.873214788 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.431221993 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.136121538 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.447414613 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.429822871 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.605899932 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.691179744 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.051725078 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.453213462 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.705184849 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.953180707 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.532809067 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.434171623 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.984416305 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.53750244 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.434483955 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.432995167 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.432078199 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.430368625 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.481735742 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.512806862 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.067573181 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.14970605 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.043329828 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.538739378 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.442472467 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.432013426 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.016415681 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.453039882 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.432519143 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.870634824 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.136467245 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.45153194 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.439636672 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.14332104 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.453432806 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.518778562 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.436791137 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.881693803 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.43339681 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.485092881 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.431097197 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.43873399 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.455494098 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.518535337 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.435337837 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.432629523 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.109726701 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.63543295 seconds)
  done (took 188.74236589 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.42417243 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.444409852 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.440846683 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.425378475 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.423501327 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.432872362 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.425545794 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.426633285 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.431378377 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.425690565 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.425824317 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.424964811 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.427388663 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.432570888 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.436774578 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.433573431 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.038842084 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.425729138 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.429307096 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.425948185 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.247965496 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.42825421 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.425529609 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.426053262 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.427597986 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.429913929 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.43381798 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.429258876 seconds)
  done (took 154.788638179 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.435647787 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.060918812 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.454891273 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.579865075 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.459608385 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.433815061 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.578127053 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.49861641 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.453484959 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.433482638 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.432956165 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.770827756 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.436158369 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.008965506 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.650846325 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.600613908 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.007427131 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.456964761 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.433292821 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.433055892 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.584458819 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.440490515 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.772407383 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.063650119 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.456048644 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.063962408 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.420058811 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.436658574 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.433650968 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.065184165 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.452587903 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.772910684 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.521469139 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.50169941 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.085436649 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.029161126 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.029173995 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.602899419 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.434574047 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.433831855 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.435093532 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.419121356 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.067559896 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.456956317 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.435214593 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.058341866 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.457815585 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.437999463 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.443834867 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.435161737 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.500946174 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.522534844 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.795520367 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.073735988 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.540378657 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.448666566 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.581192398 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.820680812 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.441375987 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.011662805 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.420371921 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.074615582 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.458232428 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.421063645 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.43808849 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.44121488 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.60592841 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.584712299 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.014425621 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.457608793 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.014629953 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.624628107 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.436836325 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.437220272 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.439429759 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.07402302 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.034987059 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.625084263 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.589356101 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.658691683 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.421657655 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.437953534 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.421884696 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.524596816 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.437615367 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.076375519 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.034867421 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.458620319 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.440049999 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.440584772 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.439490804 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.636759801 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.096797433 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.546001571 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.003462003 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.799148611 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.781045425 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.439912455 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.505662478 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.458513391 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.782428602 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.442439366 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.503339395 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.886551902 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.782897308 seconds)
  done (took 172.598089972 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.709418024 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.767235047 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.534476139 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.599843089 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.07236803 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.034382194 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.813756714 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.591251993 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.559226419 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.726025597 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.682757307 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.532003109 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.672480578 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.52487861 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.227045123 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.535067518 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.55922892 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.596857949 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.605148478 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.510157433 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.146367293 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.744540272 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.645910422 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.436707519 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.540650814 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.301855702 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.029791836 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.96765467 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.632314473 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.885105473 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.986567511 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.621339279 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.477595565 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.192437053 seconds)
  done (took 69.810109415 seconds)
done (took 722.091370928 seconds)
SAVING RESULT...
DONE!
