cset: moving following pidspec: 21922
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.236133533 seconds)
loading group "string"... done (took 0.466182125 seconds)
loading group "linalg"... done (took 7.598719451 seconds)
loading group "parallel"... done (took 0.171828177 seconds)
loading group "find"... done (took 1.162706095 seconds)
loading group "tuple"... done (took 2.099882468 seconds)
loading group "dates"... done (took 1.317258959 seconds)
loading group "micro"... done (took 0.243415214 seconds)
loading group "io"... done (took 0.725699736 seconds)
loading group "scalar"... done (took 40.667900495 seconds)
loading group "sparse"... done (took 12.505846687 seconds)
loading group "broadcast"... done (took 1.115847465 seconds)
loading group "union"... done (took 13.689100946 seconds)
loading group "simd"... done (took 4.768748957 seconds)
loading group "random"... done (took 9.608028804 seconds)
loading group "problem"... done (took 1.986182205 seconds)
loading group "array"... done (took 22.423005144 seconds)
loading group "misc"... done (took 1.427882823 seconds)
loading group "sort"... done (took 3.564422136 seconds)
loading group "collection"... done (took 19.370947803 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.534016832 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140334334 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131546017 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146981799 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.203762707 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.141630711 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156021637 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.113897127 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.953568306 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.178981731 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153189136 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.512285444 seconds)
done (took 5.102962204 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.250504879 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097581578 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10360379 seconds)
  done (took 0.87973114 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076627631 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.146902263 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.093383323 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.0772281 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094662145 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077499731 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094466637 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077215646 seconds)
  done (took 1.345763831 seconds)
done (took 3.245189818 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.733008609 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.278201219 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203335494 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460734369 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.194161629 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214177281 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681281804 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.356394082 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.256780607 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099921005 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142735391 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.38699003 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136199304 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.683447371 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089380106 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123199143 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.180764241 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.448536702 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082283598 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110342962 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116660932 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141646104 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130463346 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089777069 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.183551294 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081330366 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19393364 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107837307 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080035652 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288508148 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20055895 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.691151808 seconds)
  done (took 10.892148324 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111821557 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133073728 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097393843 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137691329 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134057371 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098987779 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086139335 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095753117 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121274379 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.174399329 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113770922 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136029458 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094791051 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081522978 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114571593 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243460927 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121046875 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103370512 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100819618 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103373976 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.12124268 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111910183 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107774277 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092928991 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166276004 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221122971 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113290448 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125957138 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.095587844 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.111305444 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143543343 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.141914265 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094880145 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079997405 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171994605 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122987291 seconds)
  done (took 5.12350624 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189056831 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120173995 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.167696564 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16247912 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.139046477 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.158595748 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112518714 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253834147 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.099864398 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.163833752 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140458752 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115781384 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080404617 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098208628 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094867631 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.675037351 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.121942121 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.155911619 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115001589 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102325037 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083431423 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363090959 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103079261 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.079577399 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098356712 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065121351 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158224174 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099101639 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.137770278 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119747336 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082532858 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134038598 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207406161 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111930672 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.135054745 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09523699 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078757399 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176974272 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10444405 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.12688475 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.078929498 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120782783 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134525157 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.118613448 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100395157 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096158288 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203543206 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095039314 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.099276083 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.956213353 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182259756 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.091037614 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096090474 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.320054573 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097379418 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097249259 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076643626 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277158654 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186145741 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.097732579 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.102793494 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097371696 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095184839 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08173492 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.380557147 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.096896714 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.905596703 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.08488772 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109782516 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082132079 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09664174 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103689862 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086811184 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114052415 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079502539 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098518317 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078524664 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096251787 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080563758 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108532804 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.10144474 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080281517 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164313329 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.079164455 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113917793 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126426007 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.082260043 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094866453 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130382699 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077711057 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097993949 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080125844 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13310397 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.0986517 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108375167 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082520438 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142995091 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095630924 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.181042165 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.080781479 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126251673 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100530581 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113620277 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111475146 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.093466919 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081140116 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101691573 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077045922 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095167805 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14784662 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.094487128 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079480328 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099041619 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10797943 seconds)
  done (took 22.740855506 seconds)
done (took 39.441103832 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.327445092 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102185068 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102278551 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.102257922 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098846929 seconds)
  done (took 1.492131245 seconds)
done (took 2.222744635 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.287548806 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17175178 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094930442 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165075766 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093056938 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174303414 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.158648927 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111405595 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.217492801 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.076784251 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.162688165 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.093619835 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07692543 seconds)
  done (took 2.644118002 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.0965845 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11424138 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081878333 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110200624 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075168014 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111037163 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092002071 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116249029 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108741212 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084257781 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092576918 seconds)
  done (took 1.812610623 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095259452 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113075852 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081738872 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109138714 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075496983 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109734273 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091797234 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115176063 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108901481 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084778284 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092708806 seconds)
  done (took 1.805702799 seconds)
done (took 6.983906416 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091653366 seconds)
  done (took 0.815941974 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.918388486 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.859971488 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113226929 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149017736 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.298774819 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191193943 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.473334639 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124431937 seconds)
  done (took 11.061286747 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.116272617 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101466603 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.114142364 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.082096046 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104042597 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082448106 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100332714 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098247588 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.082994929 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.098223026 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.08505126 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098331981 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.100897578 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084139805 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.101808862 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.085097743 seconds)
  done (took 2.327780095 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120680311 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117329293 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.105688564 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10835013 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086572796 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104908967 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106690058 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089157661 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101093257 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103288505 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089449453 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104532081 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103264891 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079516932 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.105152727 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107283485 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085559148 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104833517 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10651705 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090343028 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105337805 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095555353 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086599698 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105051259 seconds)
  done (took 3.249584135 seconds)
done (took 18.183791471 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161653489 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109291533 seconds)
  done (took 1.003643679 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096706786 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114878594 seconds)
  done (took 0.947239378 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099598233 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.09618309 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120278755 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.108888359 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079219047 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095702311 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.118953903 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079691918 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096973494 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079644994 seconds)
  done (took 1.714900076 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083941439 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10929931 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100635632 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093501369 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.105063777 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.09428581 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.085778564 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.097760433 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108457162 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.075873438 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102206564 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.113874771 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084921667 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115348077 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.1037472 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082636403 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.101962403 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098028183 seconds)
  done (took 2.497589019 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080462124 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098082094 seconds)
  done (took 0.916361107 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081851355 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09428031 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080901851 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096649633 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093253307 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076469309 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094015127 seconds)
  done (took 1.355421052 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.476583723 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135298028 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.252117787 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084093031 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.118523251 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.298988695 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.097808494 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083840138 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102521031 seconds)
  done (took 2.444213684 seconds)
done (took 11.61460723 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093997555 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118712685 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112006106 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.462357125 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106372713 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096765466 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.159380937 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251045073 seconds)
done (took 2.143603544 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.153131942 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33139856 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116488661 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068153756 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096961911 seconds)
  done (took 1.35913405 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081432295 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101549423 seconds)
  done (took 0.928260857 seconds)
done (took 3.188959435 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.11624815 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098560019 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079423812 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09568585 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079739331 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094864346 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077096934 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.094010695 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079411732 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095690631 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09603479 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079085329 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096345486 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079860647 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093675451 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077274192 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095821378 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.076376722 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093535201 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077737482 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096252971 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076573666 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094002765 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077149255 seconds)
  done (took 2.903118478 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100909037 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.098250898 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102444049 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.083919018 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101256704 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08526776 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10048964 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096613351 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085125298 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.098363985 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.099600995 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.083072972 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099496519 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083953937 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098527529 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100438453 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085236093 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097561995 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082602795 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.100269078 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103037693 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081049394 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100409218 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103315006 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.084358923 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100066941 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082551121 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097547164 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101473814 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.083382695 seconds)
  done (took 3.570100234 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086338497 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095693334 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078100308 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101943822 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077241084 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097108789 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076860278 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095098647 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078462049 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.09457261 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079489249 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094619221 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077485369 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095343239 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078525807 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097831608 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.106372345 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.07756375 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09502598 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077737508 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09778523 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077488844 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095400091 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076945346 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094513345 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077095108 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094902006 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077270916 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09522489 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077273014 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097917531 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.08048645 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094864507 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.08416093 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09867388 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077809282 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098161623 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077652932 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.095865844 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09511944 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077721905 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094969335 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077125466 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101853617 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077542415 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096999324 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078071475 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096404773 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078266753 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097702251 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077639986 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094675745 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.080090418 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094997945 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.098225361 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077795344 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.09600346 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077153389 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095666274 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077341035 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094207067 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077874929 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.096730312 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079410041 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110915139 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.084233998 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09476565 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079827605 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095024611 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.08053673 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.096177447 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108518993 seconds)
  done (took 7.123584779 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084610501 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106604314 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080021523 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096842682 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076335377 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096261401 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098172145 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078258405 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096854733 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08438586 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095113779 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079424181 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095944543 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107405636 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078081309 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096589889 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084495882 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.0927569 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078345992 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098843917 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0782013 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.098044302 seconds)
  done (took 2.737091876 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.211346163 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104573668 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.140511171 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106146922 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083057927 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105749305 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101354156 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085720643 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101762961 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083672117 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099417386 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10147344 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083340923 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100235 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099685108 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084228429 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101738828 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084422334 seconds)
  done (took 2.636999088 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094410743 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099511455 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102019912 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09766477 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098562032 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083602443 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103361609 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.106739208 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.083469249 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.097683949 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090024552 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100864647 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100792506 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080495037 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100318964 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080533868 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100006191 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081030718 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107165919 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103722595 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10387565 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090166027 seconds)
  done (took 2.867247812 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098337724 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101820128 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117412344 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083405517 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095601424 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078702453 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.10593744 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080897507 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105829062 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099787016 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08065502 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096887288 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.08703067 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097935868 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10345392 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080585035 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100068771 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081077512 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100866683 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076718884 seconds)
  done (took 2.63484541 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104310962 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09908301 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098746911 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091415451 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099802252 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0821209 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108635727 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.099662029 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081660403 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124374727 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099199605 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081885988 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108106917 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10447591 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09901529 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090499727 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107903004 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108958615 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082031401 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100219277 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123417785 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192671419 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108062016 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099549981 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083811845 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10000352 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098749948 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087643383 seconds)
  done (took 3.629781137 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082234701 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10059971 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077546798 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096396374 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07792173 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096288508 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077909462 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095888291 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080450842 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095676068 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08057276 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.09808402 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080606686 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101069922 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080437868 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098514323 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081404901 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095579841 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.077951987 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096593865 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080816181 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098149031 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080626071 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095958291 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078013318 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098613949 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078185468 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095246785 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080224623 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.095301367 seconds)
  done (took 3.418539148 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092909396 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106659173 seconds)
  done (took 0.966435146 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080433786 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115641475 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078429111 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102815522 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085698521 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099182763 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107706047 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086307765 seconds)
  done (took 1.521264608 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.09828642 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111416514 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.08249588 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.111318312 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109776326 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.094750734 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.164300833 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100458999 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086817109 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09682893 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112181013 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.079791355 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104535355 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.080849138 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105083248 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087403039 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096321891 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.086801583 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.102398935 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097402549 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082701166 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109614778 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083691348 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.096505456 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082656727 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110523395 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108029576 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082730909 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10211813 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107720039 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.086868627 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093168653 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081577231 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.09997836 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079465077 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10798118 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.110824813 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084327869 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108048708 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082893405 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110900951 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094417589 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086256847 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105373271 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091018292 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099607903 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.082782029 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094228478 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096669635 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083740956 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094689168 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081321015 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094002374 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088471018 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103355403 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112418666 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080471513 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100848303 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.083722273 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102645213 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087320833 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.101868329 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083427602 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.098800836 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106801272 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085619827 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106576136 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.077269864 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.092698433 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080019259 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107764963 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122078488 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.089062304 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.100174335 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083173414 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097433772 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103303765 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082749072 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106966193 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089465313 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.099242515 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106043055 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089769169 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.099523067 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084429786 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.106850423 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.09756326 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084527721 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.097210396 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095658228 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097611301 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079790562 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.096218239 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107979861 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.084451211 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.098879015 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079540149 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107372559 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079495588 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.100826864 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083035742 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.100181997 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.108981929 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087667308 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106855384 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107373022 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088791836 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100323725 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085209686 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096498964 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083000154 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.102879565 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106746287 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075945547 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102150189 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083267018 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101086498 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088854337 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.097914962 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.081796453 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107521513 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.106236859 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080095065 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095965804 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085046214 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.099923456 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085569958 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.106418018 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098393002 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077919422 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094890255 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085490863 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.099999243 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086798072 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104816777 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10295327 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076467869 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097984797 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086989997 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.106953055 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.099568171 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082944555 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104822174 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.082576255 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.09985704 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.086932619 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101634978 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081341991 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.10398949 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102438607 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077629315 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103772731 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085190898 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098916968 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086152344 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103678787 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10229562 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082464167 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09895648 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.087531128 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101753605 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081493622 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099637547 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080562951 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109820376 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102860599 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077380013 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.098013297 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089876473 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098231051 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.08087019 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.099060588 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.102462377 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.082963795 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098326995 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.081294976 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102224655 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111734592 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087067478 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101674407 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088078539 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110094246 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.081718598 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102288635 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100188508 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083471043 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100873008 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.088933256 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.10527309 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106524469 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.084869949 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096783836 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.087925919 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107891323 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081674345 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098273075 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081043478 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103553245 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106502256 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08552763 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101589248 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080406992 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10087193 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104186086 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085138783 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.09984832 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.08059102 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105011609 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081012164 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107310912 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100712616 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091371954 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103613922 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078020559 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104260387 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097876156 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088391541 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095533174 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08039749 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098619082 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083768247 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099555938 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.085666029 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095056445 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089489993 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10840538 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.101389339 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082507671 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101279275 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092082921 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102429252 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086455888 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104285003 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.10577838 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095910795 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100654518 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085580797 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110375216 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101032746 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076765983 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.106697642 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081207104 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100391398 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081079547 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099483305 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085485623 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109319916 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105618652 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.076642971 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103398858 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.0811799 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099275478 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.077868798 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.1072886 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104524863 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083664938 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109662887 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08384649 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102535734 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086356248 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100582701 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101000933 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083200946 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103706663 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.084265299 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103173109 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082064901 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102683309 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099739692 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.079634143 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105512228 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082097465 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100403121 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087630004 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100505199 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082658173 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.104574791 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101258065 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082577585 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101298227 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08203635 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10391389 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08331528 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101555948 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084904281 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096350374 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107958082 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082479887 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108802296 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083575306 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098186275 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087855658 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104099297 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.106518836 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083615407 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102167823 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084383289 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.10043754 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085130297 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108872359 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098718935 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.091445662 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107119442 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084029805 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104079171 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083008946 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.101862202 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099609456 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084545485 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101642353 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082614248 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100051412 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088141828 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.103198785 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082273448 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103157256 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.102588485 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.082870695 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102267306 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076843183 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100368564 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082467889 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10121675 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090327059 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102071394 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103765051 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082344511 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102257579 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081836666 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098231247 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.090850804 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110613236 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102477002 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091714425 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100442819 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084185564 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11091138 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095111606 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081353719 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099496192 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080304653 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109711432 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085262271 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109884764 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.082965942 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.100633681 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097948388 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084849193 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100008458 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.07820653 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.098661114 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086316288 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103614098 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081683498 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102184152 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.085712154 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102604158 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.107535294 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.081730962 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.102978584 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083599235 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098236187 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081618869 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100904454 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.085280518 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.101842761 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.098988987 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080030397 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100464232 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.084652351 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.101962223 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083079811 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103319431 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098586756 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101063693 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104957598 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086768539 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.095832865 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086240994 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101548802 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082542199 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10011678 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.085926291 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105169016 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102174346 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.089905097 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101190114 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084195974 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102630636 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.080535385 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.101253185 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101464775 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083378128 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100151519 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.084681113 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11043705 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.08140006 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103480382 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081805286 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102160682 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106442527 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.084121165 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.103695558 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.090875045 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105658165 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102598876 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089605375 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105293377 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.086411223 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.103421446 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.08467379 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108165851 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.100251594 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091842917 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.102160834 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.084271787 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103548969 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081394267 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101253797 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08302861 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10070549 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.105909131 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084459485 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100462921 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082712559 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.100455825 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.084995863 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105866982 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109892254 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.08551673 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.1048693 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.078615684 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098550942 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084284386 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099449345 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085153991 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105192089 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.10815942 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.086819444 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102651781 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.081959194 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109440234 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089509767 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.106638323 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.09948783 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.08750408 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103135596 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.085491764 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.102653804 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083366805 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103527131 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107751182 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085681523 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101983714 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091805864 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.105930179 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085240501 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104016782 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.102476762 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083175953 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097911209 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084432518 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.104469556 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090105481 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.104911408 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08353751 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112035978 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101598477 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082823421 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106721322 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083277622 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108672383 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078262345 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103368498 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103525838 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084714973 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097527952 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082329004 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100266689 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085538684 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101184156 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078469018 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111832637 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10843416 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085753956 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100399137 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08257252 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097320455 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078381403 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10175934 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085165355 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103588214 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110429083 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082264137 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.101044627 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079109792 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102024657 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086974662 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105541912 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080555785 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097245006 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08167257 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.10482666 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109071097 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083118901 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102293863 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087503408 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104970593 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.082449883 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106531368 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098720327 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.088152858 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112690797 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08417016 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102737308 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.088094717 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110864934 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103069547 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078776098 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103364771 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085772531 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.102190317 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084632004 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.103953307 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116096787 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086022169 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101588223 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082196554 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105639144 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082446897 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109019243 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104192014 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084433434 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107384312 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084640988 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111725586 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104593938 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089414521 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105026634 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.085352745 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101270038 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082934679 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10104356 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.081582168 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.103924489 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.10273829 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089934878 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110305314 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.082163486 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111661489 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110208104 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088162494 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099286916 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082901745 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101879384 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.078948001 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.103928207 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.081455399 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101218363 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101176788 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082482916 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.102965807 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089154691 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103928383 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085102927 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102593727 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.077421714 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104393968 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.107493625 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085011406 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099082123 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083710957 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104565329 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090123255 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107759433 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.083752288 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105116047 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104774061 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084576088 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097823716 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090649632 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102104466 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.08700259 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103232544 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08387495 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104841513 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106146854 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089815534 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104358555 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.08674441 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.115159387 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10597984 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081604565 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100828791 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089439055 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101263546 seconds)
  done (took 57.491731843 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.14964286 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080652752 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098228934 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079353792 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112338289 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098870436 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079920611 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098981095 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080453205 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102381139 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078785869 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098312167 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109209952 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123933239 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092995217 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103686691 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098033409 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081335251 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098671334 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081083744 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108955851 seconds)
  done (took 2.870476691 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.109396174 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119300642 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114751179 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118668262 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089737354 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.114746937 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114763601 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115071971 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099310674 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11137267 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119069077 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115698283 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091538548 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110832393 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110136045 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093497931 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118631895 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108940455 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115963687 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095774775 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112727854 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114308052 seconds)
  done (took 3.22929673 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.087179724 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102752541 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085332764 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097460548 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083532855 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09793146 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088435007 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100664458 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.088359538 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.101268793 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082131373 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101845713 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104790155 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079016901 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102210288 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081533489 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151765817 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.1069446 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08388177 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105357009 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098248436 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086105202 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.097856079 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079847925 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101896558 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088387066 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104108207 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081643052 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102840054 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082534477 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103898316 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080915643 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105016289 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103134111 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082404707 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101739505 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083341006 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102957124 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07966976 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100461267 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084723354 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099812905 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083673956 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104426293 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081877672 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101044079 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084923821 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103120832 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.09807662 seconds)
  done (took 5.458062489 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108877211 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161357596 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085254406 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143184813 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.120609733 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112903665 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087229517 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142917831 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102320254 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083408561 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122833412 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119102144 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103643743 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089832574 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106823216 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103701739 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08569488 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102518307 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088052995 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103305218 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107631728 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090191284 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120421914 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117084405 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107603065 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084114677 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103422575 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108514828 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.096841375 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109863042 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108843843 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090075553 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.12061868 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108661671 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083755842 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.106380268 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121953423 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104153069 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087594559 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101147565 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087802311 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109099636 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110131891 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10284339 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104956822 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.108820109 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084662329 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100415096 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.11721896 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088953446 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112477815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.118872897 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.108127856 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084944914 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109194901 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120384537 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084785974 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.101641758 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088294543 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116358949 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100951651 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.087994268 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119227095 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106324845 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112820156 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09907208 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108918362 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108614547 seconds)
  done (took 8.116354185 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097083504 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111697436 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119972466 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119677398 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091292799 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111047739 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11084984 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091566651 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110573193 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117095899 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110296198 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.13368608 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086508881 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114752599 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11048991 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091821353 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111193385 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111002614 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091698038 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111128713 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110837643 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120691406 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091562532 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119742683 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141113128 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105332697 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090366291 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11076751 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121196265 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111029384 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123010914 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091762432 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111318134 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120894612 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123618998 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090885602 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103242635 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110731748 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091333056 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111585968 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105646733 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10093704 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112672845 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105422844 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090716875 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.111032961 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.119856469 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.124095421 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113903813 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096578407 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.112155961 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121052929 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111288032 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091518981 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119743258 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146537526 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.12153465 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.120970072 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111813773 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.099957468 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120783994 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128936262 seconds)
  done (took 7.669208435 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111332783 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115964379 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.11831969 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099897906 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08220646 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108957725 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082792716 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102937063 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113814587 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094687597 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117281341 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108037342 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111394927 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097423052 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109274088 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112207011 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089332284 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108845223 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114483107 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109363641 seconds)
  done (took 2.939280181 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097415983 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127108484 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084604067 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112250472 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108250183 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091178693 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107464765 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107432263 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085894676 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108460732 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.097001131 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116684087 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105763465 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091027659 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115684585 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11157216 seconds)
  done (took 2.498723005 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.09983236 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117703702 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120204366 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084575259 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103797003 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080668639 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105786168 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100542789 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081894207 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.119872887 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085253594 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108144842 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107022474 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083327094 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.10148233 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087829929 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100914905 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.083201568 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104795625 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118730809 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095591957 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104105148 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105309715 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087055014 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104728224 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.08950988 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.10599395 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102493272 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083167777 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105594367 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085492441 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112984048 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101016591 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.083937631 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103656403 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083590808 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.104829068 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085434325 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108675102 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104934093 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083593646 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104588106 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085656614 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106276488 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081102249 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106346674 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100762897 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091162442 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103625021 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085637533 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105461744 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.106987681 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.085897024 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115444642 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087883803 seconds)
  done (took 6.238210521 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103182978 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108857888 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081233871 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.104052384 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087795815 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107947533 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108760514 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088073997 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106114155 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083418335 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10738855 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088972529 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107024066 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108968925 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087780889 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109204783 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080873399 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106214969 seconds)
  done (took 2.617276065 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095101914 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105588869 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093411211 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106153287 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084495713 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108210545 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080316927 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104139107 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103171429 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085132269 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104562468 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088399542 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104058033 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087258453 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105903627 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084829971 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107810268 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103143066 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085413888 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10131577 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087890802 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103802583 seconds)
  done (took 2.967429353 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.122859396 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125090913 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092818976 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.229469291 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10335645 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131808769 seconds)
  done (took 1.645889652 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113030742 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120753578 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106255735 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107282366 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115298675 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106979023 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087456678 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107528743 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117145956 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100692245 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10812492 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11744926 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11794763 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096993127 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114950863 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115066099 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107173115 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087971972 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106370186 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128234467 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087675964 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117806161 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108142614 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087528597 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107653503 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116981281 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118196949 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121713266 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086988231 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117718103 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113291827 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087591675 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118051014 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122229112 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108949358 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097970597 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108063131 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129487425 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11390382 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097400272 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108736111 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11498719 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097464397 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113661679 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117968186 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107150548 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09303481 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107628334 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108570505 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134864618 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09338255 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116967902 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115089884 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118256022 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118377497 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134341103 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102036316 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116422131 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114760118 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122118079 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116313627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09388948 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117435197 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122073291 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115037488 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116876454 seconds)
  done (took 8.130883464 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105806421 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125369121 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108360851 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12200158 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09720716 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107570247 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108361971 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088046091 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108270955 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10745037 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152260287 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089033861 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118555564 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11827762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108270801 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088299733 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107816284 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118055568 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086768483 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134410574 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108560613 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117662784 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117662584 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097109244 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121844874 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114944109 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107830626 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087719362 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107867272 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10800288 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094077396 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109261761 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117946297 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086614424 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118088342 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10866589 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087573468 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114290391 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108097044 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11540221 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096980531 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128146953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1087016 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10727313 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121654163 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087966101 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108422469 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087090975 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109416349 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107177709 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101641223 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121876277 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122740687 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117877297 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108388326 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08790324 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108824408 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108069586 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088073425 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115584421 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118300335 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108504582 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136051661 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088253254 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109418528 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116974873 seconds)
  done (took 8.01728637 seconds)
done (took 154.644158435 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102942564 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137104315 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.09671363 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168252803 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107171934 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.118859556 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138192146 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097211231 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106040922 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085450774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107448983 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086676032 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170805076 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085137158 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107285709 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107558115 seconds)
  done (took 2.669676658 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.203741467 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254906346 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102066619 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106913152 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089003399 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109992043 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105512025 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.090715346 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110197788 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085363234 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109366297 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086381077 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106188895 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086101321 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110448196 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088356485 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10658379 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087873862 seconds)
  done (took 2.89176381 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118911746 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.152433712 seconds)
  done (took 1.129169877 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123820909 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.179455271 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318285986 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155460393 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106881435 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127278246 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.155807013 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.130975175 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196609595 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122514525 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122811299 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.098272995 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140796158 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115558459 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094086264 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.11921575 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141063567 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092614369 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.115534119 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115465095 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.11720251 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.106691145 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115154023 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.0929658 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.18067858 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119963467 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.086174618 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106562778 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115323753 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09408359 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113292418 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125107707 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098208597 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176882657 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102174902 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176815266 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.100619329 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112291703 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114600663 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091438112 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119529979 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118562503 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104960242 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.11874524 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084523659 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119379364 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.105936006 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085098632 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114474043 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09694827 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115013948 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113303244 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.155931541 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118259148 seconds)
  done (took 7.541768106 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.795278967 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156616351 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090746557 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.884280163 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13890382 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104063331 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.779676529 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.135559162 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234671408 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75917756 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134040987 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12185527 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227554981 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23805812 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.926829205 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.306079007 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.671538095 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101797695 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152181448 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153412075 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120458617 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137400646 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130464677 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.430066112 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094754997 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112678109 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118245655 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.100556057 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159677087 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126301836 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114664317 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17851202 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247362099 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205322261 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.116855689 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.0898199 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112345184 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169842393 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26375815 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21408118 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180722841 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087127486 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110654163 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122356726 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.111220032 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109200888 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.164322416 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174104322 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.195146925 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092098934 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121222266 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120782593 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121039871 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165951186 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121555411 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.287233837 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322079894 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112033342 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120915153 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.10489853 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260807344 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124158305 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.223179416 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117290928 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212138716 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110597179 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755765998 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190495778 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090561413 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118474492 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118592952 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09568881 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121177444 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167944236 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.406974054 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124815877 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093262725 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112565686 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205477385 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125968032 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111344525 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162516043 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116104063 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099927589 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12538881 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123244736 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171177343 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229688028 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124310372 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11939344 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.093935409 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125889999 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116147858 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212712997 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219496695 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162490418 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207646447 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123598361 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163498217 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189023592 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097891058 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.194819709 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097851611 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126298069 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12321478 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216216054 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146326413 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101246305 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11683679 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118880419 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148327729 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126316235 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.09784733 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.191067879 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.460227488 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167639128 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109623771 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127246872 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098410979 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160341538 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118620871 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263831844 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121901997 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170259228 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119779224 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087870815 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12022259 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.1654374 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123597388 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121082995 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101126578 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119088187 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236312648 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217248385 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12402782 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.221475163 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184712896 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119889356 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171957747 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122855991 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167795991 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.12007644 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121067756 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094722967 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772818282 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123831356 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098055307 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117643677 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188525043 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110819966 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102708284 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.126554097 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109249876 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769943687 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128114623 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121269886 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101444841 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11949131 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121351644 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096299276 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.117177676 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161619581 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.230848712 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122402708 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120048142 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102489306 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181477935 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095862504 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125703793 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.12492447 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126016323 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100539404 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114987292 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124675349 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171123649 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162156186 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.221334335 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596230221 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090602413 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125373858 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229607873 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090438807 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.290376948 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121200376 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223286744 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.165577212 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120463475 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3201806 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166655745 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188009738 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.127984766 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174818872 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.0881915 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119899136 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.163912794 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112646184 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117186941 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.163080531 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126131114 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101631158 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.964540897 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112658541 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226303397 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108631953 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17201673 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.094794763 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121668074 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287669893 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112701758 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107133325 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186720863 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093136345 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125485895 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.87198387 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10358078 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122372491 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11904345 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222046688 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163413149 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097370165 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121014026 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122676101 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.163558713 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207230833 seconds)
  done (took 44.165411411 seconds)
done (took 59.248074517 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275677175 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213699852 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258471948 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170004049 seconds)
  done (took 1.877441317 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.176217303 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.148180847 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120162947 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.107067318 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149624751 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084861468 seconds)
  done (took 1.667344678 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.359133187 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.270775668 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.238848738 seconds)
  done (took 1.75605589 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291388724 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.247316465 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.354623222 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.39537712 seconds)
  done (took 2.296831702 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.213827615 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131420259 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110764231 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104225905 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196899162 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248617495 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.140588708 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202397481 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.122447326 seconds)
  done (took 2.406817077 seconds)
done (took 10.893287817 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.28489249 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.220758052 seconds)
    (3/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.244278875 seconds)
    (4/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.245785926 seconds)
    (5/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.20650226 seconds)
    (6/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.156392839 seconds)
    (7/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.159165782 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09196293 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124659927 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093435688 seconds)
    (11/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.187556099 seconds)
    (12/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.141046475 seconds)
    (13/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.209714852 seconds)
    (14/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.151185253 seconds)
    (15/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.184872829 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.114828293 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101996835 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.242043687 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.134105544 seconds)
    (20/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.205171792 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.171424299 seconds)
    (22/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.065872146 seconds)
    (23/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.219902015 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.136242216 seconds)
    (25/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230179771 seconds)
    (26/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.123180861 seconds)
    (27/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.095328011 seconds)
    (28/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.132388251 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.084648613 seconds)
    (30/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116562849 seconds)
    (31/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.10990677 seconds)
    (32/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.094914461 seconds)
    (33/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.191410911 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137750797 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 0.222018483 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.071321266 seconds)
    (37/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125346432 seconds)
    (38/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092812783 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.116302018 seconds)
    (40/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.147509292 seconds)
    (41/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118823029 seconds)
    (42/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.122251198 seconds)
    (43/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194900592 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.114521272 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.180511375 seconds)
    (46/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.119985191 seconds)
    (47/286) benchmarking ("sort", BigInt, true)...
    done (took 0.233801184 seconds)
    (48/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.097334641 seconds)
    (49/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.184291466 seconds)
    (50/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.192737053 seconds)
    (51/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104319767 seconds)
    (52/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.172863088 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140507782 seconds)
    (54/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.118043401 seconds)
    (55/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.098855355 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094283862 seconds)
    (57/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.088976058 seconds)
    (58/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.120814162 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.214437472 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132003968 seconds)
    (61/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.200986495 seconds)
    (62/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078024025 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087608075 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.199544542 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.147894685 seconds)
    (66/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.158893255 seconds)
    (67/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099638441 seconds)
    (68/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.169020137 seconds)
    (69/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.153529589 seconds)
    (70/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.201591871 seconds)
    (71/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.117330674 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086613522 seconds)
    (73/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.110382079 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.085729316 seconds)
    (75/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.199780344 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.210970204 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.10946007 seconds)
    (78/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093818164 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.124937144 seconds)
    (80/286) benchmarking ("sort", Int8, true)...
    done (took 0.219677616 seconds)
    (81/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078632301 seconds)
    (82/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066427364 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 0.110905745 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.162534057 seconds)
    (85/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.095442716 seconds)
    (86/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.110737617 seconds)
    (87/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090193457 seconds)
    (88/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.089780704 seconds)
    (89/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.086067355 seconds)
    (90/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220018508 seconds)
    (91/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109852851 seconds)
    (92/286) benchmarking ("sort", Float32, false)...
    done (took 0.172969753 seconds)
    (93/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.178080567 seconds)
    (94/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120399107 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171126178 seconds)
    (96/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.149949948 seconds)
    (97/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.145724271 seconds)
    (98/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110690984 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.092336072 seconds)
    (100/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.11802604 seconds)
    (101/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.126487784 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11821322 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085441661 seconds)
    (104/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091753893 seconds)
    (105/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094213753 seconds)
    (106/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.090218914 seconds)
    (107/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.076778947 seconds)
    (108/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.070365902 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119586929 seconds)
    (110/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.15256671 seconds)
    (111/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.102004937 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066045562 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 0.203474137 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095272801 seconds)
    (115/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.185977346 seconds)
    (116/286) benchmarking ("sort", Float64, false)...
    done (took 0.171221031 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.109436027 seconds)
    (118/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.090746262 seconds)
    (119/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.09082664 seconds)
    (120/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.118735695 seconds)
    (121/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094360079 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117608123 seconds)
    (123/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163504306 seconds)
    (124/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.133045766 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118721833 seconds)
    (126/286) benchmarking ("sort", Float32, true)...
    done (took 0.22941377 seconds)
    (127/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.093380557 seconds)
    (128/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121078256 seconds)
    (129/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191640745 seconds)
    (130/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.098907075 seconds)
    (131/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.09080997 seconds)
    (132/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087002802 seconds)
    (133/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067863338 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118614321 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124008266 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088305758 seconds)
    (137/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.13911332 seconds)
    (138/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091259948 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.123693817 seconds)
    (140/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109142167 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08656293 seconds)
    (142/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.067003096 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.116629161 seconds)
    (144/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094258901 seconds)
    (145/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.153118901 seconds)
    (146/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.171786134 seconds)
    (147/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.09839212 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118354809 seconds)
    (149/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067946646 seconds)
    (150/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.090649377 seconds)
    (151/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067551923 seconds)
    (152/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090497064 seconds)
    (153/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114560916 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.137056807 seconds)
    (155/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.094002334 seconds)
    (156/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.098347557 seconds)
    (157/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.096859254 seconds)
    (158/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.143780529 seconds)
    (159/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.068012869 seconds)
    (160/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.19227473 seconds)
    (161/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.114915071 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110037889 seconds)
    (163/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.185047582 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087032866 seconds)
    (165/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.172466842 seconds)
    (166/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.118097805 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136102422 seconds)
    (168/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.173988328 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.138396043 seconds)
    (170/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.097750135 seconds)
    (171/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.113106986 seconds)
    (172/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.08617412 seconds)
    (173/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12150959 seconds)
    (174/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175269909 seconds)
    (175/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.084194627 seconds)
    (176/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11647061 seconds)
    (177/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067682716 seconds)
    (178/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167326965 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.096615391 seconds)
    (180/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116294639 seconds)
    (181/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11274996 seconds)
    (182/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.116213162 seconds)
    (183/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.174763654 seconds)
    (184/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066852506 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 0.22027541 seconds)
    (186/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113043574 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085623402 seconds)
    (188/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117921131 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.088086872 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16286313 seconds)
    (191/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067570548 seconds)
    (192/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18131528 seconds)
    (193/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067010071 seconds)
    (194/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111851455 seconds)
    (195/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076017365 seconds)
    (196/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.117259728 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097038704 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118944499 seconds)
    (199/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.131459269 seconds)
    (200/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.088613949 seconds)
    (201/286) benchmarking ("sort", Float64, true)...
    done (took 0.23124101 seconds)
    (202/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118055981 seconds)
    (203/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.088091292 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.110155382 seconds)
    (205/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095046624 seconds)
    (206/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124008443 seconds)
    (207/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.087916309 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.110814223 seconds)
    (209/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086459413 seconds)
    (210/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.11825506 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092733328 seconds)
    (212/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.31692251 seconds)
    (213/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113027127 seconds)
    (214/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.180318243 seconds)
    (215/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135432192 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08544589 seconds)
    (217/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.091410879 seconds)
    (218/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.111391417 seconds)
    (219/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.092065833 seconds)
    (220/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067737913 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136240027 seconds)
    (222/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.068318796 seconds)
    (223/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114166893 seconds)
    (224/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067146784 seconds)
    (225/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066731454 seconds)
    (226/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.157947115 seconds)
    (227/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076599953 seconds)
    (228/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091026191 seconds)
    (229/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.156558509 seconds)
    (230/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.092159061 seconds)
    (231/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066751642 seconds)
    (232/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.092126806 seconds)
    (233/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.067357027 seconds)
    (234/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.06756353 seconds)
    (235/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.163226815 seconds)
    (236/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067633702 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110462807 seconds)
    (238/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.077374759 seconds)
    (239/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112978703 seconds)
    (240/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067008399 seconds)
    (241/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066670414 seconds)
    (242/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.11787946 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.085381046 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.1158623 seconds)
    (245/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112442033 seconds)
    (246/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.068374041 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.095049565 seconds)
    (248/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.110060578 seconds)
    (249/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067666383 seconds)
    (250/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.090186334 seconds)
    (251/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093778773 seconds)
    (252/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.15051379 seconds)
    (253/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.077314332 seconds)
    (254/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068411941 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111588418 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.085901513 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.09074091 seconds)
    (258/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.138233146 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094959236 seconds)
    (260/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.067514918 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100869222 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084984313 seconds)
    (263/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.115197536 seconds)
    (264/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087931834 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108726337 seconds)
    (266/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.094593686 seconds)
    (267/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.089556906 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095710142 seconds)
    (269/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112181345 seconds)
    (270/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.088540111 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109333408 seconds)
    (272/286) benchmarking ("sort", Int8, false)...
    done (took 0.188403627 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092631407 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11103486 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087829905 seconds)
    (276/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.090623876 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087019869 seconds)
    (278/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.09093255 seconds)
    (279/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.067160936 seconds)
    (280/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066278403 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.115371588 seconds)
    (282/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.089264876 seconds)
    (283/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115263848 seconds)
    (284/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067179997 seconds)
    (285/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.08957934 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067929475 seconds)
  done (took 36.022843646 seconds)
done (took 36.91400254 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.105279412 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14821892 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096442218 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.134894377 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.122983611 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.09132659 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118197427 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097556123 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122743575 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125867925 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098908766 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092937107 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096609626 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.119767765 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095763794 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139144446 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123365725 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.09425079 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118369312 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085497364 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.121728473 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085903632 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111669792 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069804084 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121416083 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094203558 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115551624 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119659371 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086544709 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110102678 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090039502 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117081708 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086753048 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123173884 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093032471 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119683027 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097191988 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120492531 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111953414 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.085740251 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118393669 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086427203 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116559768 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09439425 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.115496628 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091743802 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118202816 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099317378 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138307774 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115647845 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094572799 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122484698 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096055773 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117873645 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090721907 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119475788 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091893454 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139089298 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119191622 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092045386 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118133451 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094224254 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115659173 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095188295 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119094484 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121017688 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097727343 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115267954 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09731078 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116011573 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085830941 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119369425 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090038627 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110715119 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095622217 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12173884 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085449599 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115674061 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117127792 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.091496946 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110331179 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08953321 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112407793 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093491509 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112795331 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070023885 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114757848 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093385226 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110079055 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095505518 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116065544 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093769542 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111932363 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.09789418 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110503755 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092635458 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111458483 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086626632 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.11348531 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090748503 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111077936 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089540973 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120050204 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088480829 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117233929 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123135463 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086903333 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117366032 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086327148 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110157962 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102239424 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121894928 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087245751 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116237909 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086522304 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118224629 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086579705 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110755426 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086385315 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.110685025 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092545778 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110725816 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113941489 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094531846 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124762741 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086222498 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114105926 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089765525 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11051711 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092797693 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111465983 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087582959 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113391309 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078029588 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114342861 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087570707 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118469802 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090258379 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119470576 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089177125 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120605439 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091373152 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117738588 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092765869 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110076185 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074638675 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116682235 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089854164 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113034012 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087025737 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113046427 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086745184 seconds)
done (took 16.914420203 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.092521834 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184083579 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150085636 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.14193178 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107341507 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11250019 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122126505 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118608562 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113441994 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143442581 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110556985 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132005726 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148425295 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086804962 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112447849 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091330013 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113525151 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103551457 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146676701 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133413381 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163791134 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.08654265 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146865146 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135077442 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120765001 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.113845898 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112465279 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.092015082 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115890789 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103838175 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132182391 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115297292 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087739046 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134109484 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104624002 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120432576 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.0876746 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.118839638 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087622689 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112511923 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140665089 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133370081 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.093531192 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117584071 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091292654 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114572769 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.08932228 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121500654 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098962274 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116278395 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127062734 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155044718 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091402748 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122258984 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086774951 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123328416 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121425547 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.089884627 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112383323 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090124399 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111081296 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091410434 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127142034 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141015712 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.09196832 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12142635 seconds)
  done (took 8.615740824 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.109955894 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140354083 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.104879939 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131199764 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111749928 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088385935 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112823519 seconds)
  done (took 1.748985166 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.09330297 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135408613 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111776508 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135700569 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132573875 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11277809 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12387665 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089243735 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132027972 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.0894828 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134815564 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150945743 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090041448 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121241584 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138035106 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.08927808 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137451825 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089372737 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11728559 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112308445 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117054944 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.135524213 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091373041 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11395925 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103266792 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114292939 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162322954 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093870987 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115169924 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091714885 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111911897 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151524584 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102720463 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125149241 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088919615 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129668596 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128472412 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08718435 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.12625157 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093826198 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127904465 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089731696 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115644419 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087087515 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119304443 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.098899518 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.117915386 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.089236574 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116421642 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133779569 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089333932 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.12826442 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.106264853 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11766435 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.09073249 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11972246 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098136807 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114921018 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133578218 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090611133 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131275049 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105976042 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128919505 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130487425 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092421022 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128097429 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103522411 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117009024 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090548373 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117507284 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106229944 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112051316 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090518468 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.125023251 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116012126 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112312838 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137626669 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090967551 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125259877 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089226264 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115125845 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114487223 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112184504 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118833229 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089367236 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118341931 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092161147 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112528603 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088918852 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117836519 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088141981 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.118350887 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092880346 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114773752 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.09169687 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.131337243 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115205937 seconds)
  done (took 11.843660427 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.095514401 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115242664 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091693545 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.11491727 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091004395 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115247464 seconds)
  done (took 1.584976375 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.120996146 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117806579 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10446574 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120458102 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156013208 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103828509 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130398761 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123885668 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.108059275 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127214613 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130373983 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105106357 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135922809 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122333333 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103739597 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121555267 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104724453 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125367437 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127597144 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09616269 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137138023 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12109967 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096836036 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131561625 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118775218 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096205994 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126554625 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103800019 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128387857 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123821663 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097050111 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118866894 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096047743 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125338046 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129886239 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095802838 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121053962 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119360606 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099978223 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118369515 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10418335 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121746464 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.1269189 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094073964 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123895307 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121064505 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.093777357 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125814974 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103948759 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118803868 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119230409 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095972199 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118163343 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.095832729 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12277238 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124945628 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093739158 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131645214 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.12201272 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097029498 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119045682 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092687421 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123932588 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118211349 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104620077 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119527899 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121624022 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097130457 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121823901 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095598695 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119032248 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092945712 seconds)
  done (took 9.239854424 seconds)
done (took 33.98395577 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.691760502 seconds)
  done (took 1.651773016 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.834821073 seconds)
  done (took 1.798271304 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.0953698 seconds)
  done (took 18.092142504 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.497706349 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.577179286 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.991389869 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.1788389 seconds)
  done (took 3.209327675 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.956498593 seconds)
  done (took 1.939941658 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.289518451 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234760738 seconds)
  done (took 1.491893066 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.790545142 seconds)
  done (took 1.76945901 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.366918168 seconds)
  done (took 2.33680883 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333215461 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183963737 seconds)
  done (took 1.496018429 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553562839 seconds)
  done (took 1.531382694 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.144853082 seconds)
  done (took 12.128065351 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.273899613 seconds)
  done (took 1.265470599 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.309482905 seconds)
  done (took 1.290679736 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.486111547 seconds)
  done (took 4.469316228 seconds)
done (took 55.446634461 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104409444 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127110656 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102331134 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125290942 seconds)
  done (took 1.434221585 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.106241877 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121337053 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101047273 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12157813 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126137563 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096014207 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12415093 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.10186963 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121198165 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096692361 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12080503 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120511252 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098911907 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12320976 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093267551 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124345611 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099761217 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121663303 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125037081 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096345009 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119063341 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.09834674 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124966345 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094500467 seconds)
  done (took 3.661873363 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.105888663 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119556491 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096147297 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119164305 seconds)
  done (took 1.433388101 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105754953 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.13254759 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.105401951 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126645406 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131668256 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105290219 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117709233 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092647791 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120148276 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.100138103 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116868573 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.139007674 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.106716025 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125567987 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102728808 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114549229 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091457913 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131331446 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125305842 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101858024 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118187668 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100136463 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115787705 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.108690774 seconds)
  done (took 3.724387776 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.176540688 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127558491 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.138318876 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096248258 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161173447 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141018976 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087908318 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141800781 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088565882 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131540153 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118394153 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.1340872 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129884158 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08817919 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114528909 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087528474 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128893829 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129345377 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091262333 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127707601 seconds)
  done (took 3.436915446 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.103580623 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.1185896 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088842731 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117271146 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099438888 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121462168 seconds)
  done (took 1.643210297 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097255731 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115514614 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.08989874 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114963944 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094420926 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115259922 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088342663 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115785021 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090042284 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115050667 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089781898 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113810436 seconds)
  done (took 2.233120688 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.523259292 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121051409 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120283556 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091968527 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122181285 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089644531 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.130603895 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092426347 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141951855 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088454038 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116103026 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090741369 seconds)
  done (took 2.720850555 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24389781 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126050221 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28463153 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366747158 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156466027 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165099881 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.280938915 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16252126 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198875845 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.1500759 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232049635 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196101255 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15293173 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192216385 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138807921 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.146173689 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189341182 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251917116 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153992718 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211886584 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207881416 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167870388 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180392928 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15313411 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112992418 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195211922 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095297721 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130942609 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234739934 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180114594 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190529332 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162271251 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14810059 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238714561 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249608266 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195601306 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279564628 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13441594 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.166561776 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.144000295 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265322045 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140073451 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235253076 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157824823 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105986689 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221571019 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167280753 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178119912 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147058321 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140933459 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198915436 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242261526 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194560682 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139032555 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300930839 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1494014 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.157794552 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189919644 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253020552 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227404596 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18957445 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121692701 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187961309 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19225313 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21133125 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.153457226 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18284185 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148079299 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182639834 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.18926389 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166607728 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205025343 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.181238625 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139161458 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17058411 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174140304 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173555125 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259463173 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185216292 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123154944 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17011303 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15033202 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104537852 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195463268 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125909271 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216294409 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144053268 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163848819 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208605289 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159344436 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162314481 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220219112 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185009692 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149166831 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083898057 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153786603 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155881347 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17672047 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140608661 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158669967 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157589992 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130459594 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168249298 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097829296 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211483105 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092175589 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173970301 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18428097 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.127847898 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162947448 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153197513 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150358774 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179495478 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200566762 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141106307 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134138847 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209977834 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177622128 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141290256 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177936885 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230490008 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117218275 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149341629 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226728659 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218273203 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140998126 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228742551 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154622094 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10844862 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133623986 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182243886 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156112959 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162814452 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13303215 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184320157 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232745998 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099682034 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138810269 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196161954 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134476855 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132016507 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155230146 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120440859 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139268163 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.14350957 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145141741 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175765018 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180215704 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155615643 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167073932 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149832557 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248703486 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139363067 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151030335 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121731641 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.121794889 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194163143 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226159231 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10427929 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233382458 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172731385 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19997237 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1965044 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108668732 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178071431 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131875053 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093280253 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22070924 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168438487 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162809766 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.197152527 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222846918 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.179504468 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.184241568 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16496462 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202304926 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165033999 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157256205 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110990416 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161754596 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158739316 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123721156 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.112067254 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135362253 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149803034 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142762346 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133911038 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197963072 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16995702 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.215820822 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158938947 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120811292 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.206503088 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.102993074 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177476295 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205449631 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14592019 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.200294321 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192476934 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212752741 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11709518 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229019207 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094050465 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126046097 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.141427229 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170600096 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133653302 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107915184 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162094606 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181093054 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208483727 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17086187 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207414517 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20209194 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191886058 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094905224 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169687089 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185524222 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203157238 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154006053 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139776646 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151472438 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177272624 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156003276 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254600641 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17130696 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176446644 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23281895 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124221444 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132677347 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151085266 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179312129 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153880855 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176213948 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14696093 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139927032 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161656646 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102315686 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159980492 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214118255 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163657167 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188058841 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150846474 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186498238 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129242851 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162540633 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161121626 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165500547 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080918151 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201667912 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201974074 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146958904 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167258545 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21690663 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105601125 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306827506 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236403596 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196147749 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139943461 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155559966 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161566653 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163228186 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172274408 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178979086 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158609898 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187843444 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160403064 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136896697 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111667121 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150919385 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152920598 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13399838 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149849298 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177436345 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.137945062 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189811244 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155767375 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160092803 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173134301 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.150628345 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.117521193 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151013168 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244170816 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184636889 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240890695 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.15054802 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178770249 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207347158 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126459427 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104013185 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13478751 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179578146 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136984633 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191808691 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.21624264 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199998008 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1815895 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20598479 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112146323 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121793035 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159106097 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16898483 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204054436 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149179255 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147075373 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231365582 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109930653 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134436479 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166937927 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290232607 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146982355 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1946032 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108269485 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281050314 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100019051 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132446013 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164639635 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236487898 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108446836 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.178150679 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170359989 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16163267 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165196745 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150204201 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191055228 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237878592 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199111759 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211979241 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.10600647 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157948201 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176935141 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222544366 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155594215 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.110272904 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232138335 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195305568 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195132056 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143267446 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168212778 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168962827 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158649904 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214314194 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107334485 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235363523 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134358288 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192245204 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15351776 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13843537 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177180902 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189267062 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141063177 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187607457 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21030123 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107579392 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134167832 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166457339 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177426387 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154036542 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1288245 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181670952 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12688361 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196151116 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260665858 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134771648 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155534949 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.119463753 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136537968 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154928118 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158448774 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140317223 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.140446166 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227114957 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135199882 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191825782 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228747994 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173432446 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174671447 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145776994 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695042568 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103620399 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224055215 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14725532 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206268363 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15223712 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173951447 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160322347 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168943403 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192763266 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160634077 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231077296 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22102889 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.181558973 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132741967 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158277166 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155436359 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144433783 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125180039 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168441207 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15935993 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145450497 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.20688182 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164653514 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108008213 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141115984 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198342484 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148969838 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185512097 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181157889 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140247521 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173337169 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216751622 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106597885 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208394546 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20868399 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144225187 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149867113 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133524193 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.14930925 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234489938 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.126384784 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188446199 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213233494 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13196589 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19653447 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.119008063 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221661263 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157654279 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185639552 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142259437 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159916484 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157760838 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138315023 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102496014 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15666544 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167320101 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151213433 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160332482 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165930055 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194716057 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123523249 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117295801 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.311380544 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177882018 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215170004 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136933328 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135665636 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163490797 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120968554 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.205029634 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178681194 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.136146255 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106603531 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138264148 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130066335 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.136548659 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157863172 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193388382 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166335693 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235779415 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108833857 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282306624 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141723373 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156744135 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089362919 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133419403 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15031469 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146648413 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156460429 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193578345 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262924917 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.150328442 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.106922882 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149717999 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126121517 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108935072 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165257157 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165943532 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178298345 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145239405 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.109734455 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155535779 seconds)
  done (took 82.62827257 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176500848 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.147271243 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.164317647 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.217460349 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194683769 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.285948366 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231554153 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.275125796 seconds)
  done (took 2.775631186 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09753052 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145773615 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.157903552 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13358721 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092122248 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120564964 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343914684 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133433612 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116294555 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121785215 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174375859 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094984549 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550763961 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.09156953 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120610366 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108319447 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093054912 seconds)
  done (took 3.773698353 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.222477291 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.496063373 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.075587107 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.196286304 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160291999 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.117881048 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.712687119 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.09534679 seconds)
  done (took 12.163519825 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118188899 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13768839 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123816019 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153348512 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141899768 seconds)
  done (took 1.770599906 seconds)
done (took 124.376920644 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099754592 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128440696 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097600974 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130653254 seconds)
  done (took 1.530477584 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.100906092 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070671126 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101245484 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075464271 seconds)
  done (took 1.433425424 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.192465356 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.169399396 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.409212452 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071656518 seconds)
  done (took 1.599306048 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.121326679 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132809089 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104218931 seconds)
  done (took 1.454232248 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.113351741 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130100898 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103480861 seconds)
  done (took 1.441481672 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.112166819 seconds)
  done (took 1.204519403 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.114375993 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13836523 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109571941 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136500485 seconds)
  done (took 1.592028813 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.10572709 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127929845 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109912572 seconds)
  done (took 1.43521364 seconds)
done (took 13.138400771 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.109543805 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.422996658 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413102539 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117477897 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.723857519 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380793664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.042773301 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146863905 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165332436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09351455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139624557 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67431138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.068867698 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378709083 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.027790661 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377214379 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676983385 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121960666 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119723443 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094440333 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.026775507 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093160354 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122226005 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093240645 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705380436 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425794472 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095092517 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.37635635 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092466205 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127045369 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383200624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123630922 seconds)
  done (took 17.038795144 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.101798036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.17388423 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098504769 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13768543 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12363737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.096649536 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125457924 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093972457 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180009148 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122841631 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110947381 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122189245 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126051916 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095424423 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142015408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092568728 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125391159 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093267011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121606159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121739337 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.112326076 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121037409 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094862647 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121751286 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094683341 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136581258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122598494 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093184555 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120854244 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099816258 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.1273314 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094772026 seconds)
  done (took 4.840192856 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146459958 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.18386406 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12879031 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127410367 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.168498978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124710613 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199766988 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118242658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183697042 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123569817 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140504228 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093412744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157163645 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122707086 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114883305 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12132306 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096929503 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122799194 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092270634 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124414828 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140009087 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093233894 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122043207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093854039 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123902205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108072058 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124514344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121313547 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093795696 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126584944 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100584925 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12495653 seconds)
  done (took 5.167000357 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103232511 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126847019 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109984248 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138943014 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095291615 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125957959 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097326358 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124703087 seconds)
  done (took 2.020898194 seconds)
done (took 30.160804435 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116937587 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127899614 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107542381 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134651558 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103146059 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132648998 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091680175 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13489706 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134287226 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103355572 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137565116 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092853764 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123245431 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092376655 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135443593 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097838487 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133576766 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103028063 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135107756 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132643307 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094641805 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133064315 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.102938263 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133389814 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104240521 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133992867 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.136718228 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099926057 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122823791 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094859451 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124717155 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.10409048 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124191914 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105193096 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127110498 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098112117 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.123872752 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094297366 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133494559 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132457049 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099638832 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133923942 seconds)
  done (took 6.018226101 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.113984494 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.14031989 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105463092 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081272175 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.11740035 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081174982 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138849986 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079632907 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110551447 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107755124 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074658726 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106561821 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079226809 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101435885 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077709997 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075298111 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.10890507 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.07602248 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076415142 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106835835 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080523812 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073227439 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.10833863 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079011739 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075356998 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110624786 seconds)
  done (took 3.589883552 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.107140214 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135575114 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114661893 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185837363 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161148889 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100002901 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132846612 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14011722 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109949052 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120642017 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097948605 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150418471 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110348558 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130098974 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.092212287 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137705993 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136476952 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095582166 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128686592 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113183851 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139142707 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10265331 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141908264 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133528553 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093381508 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123835027 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097496091 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136441789 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097750011 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132781327 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096802608 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125060048 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123163532 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105127517 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127297488 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.095096933 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14281342 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103770171 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132096831 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092796501 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130624902 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122048872 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114675023 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162595969 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09181886 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129909219 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09541879 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.132805342 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121710485 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111319828 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131708116 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092952367 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125881878 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.092362389 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122302243 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10707227 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124800209 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095147007 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131321311 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126917523 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105869849 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125536672 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109067521 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121846313 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100895024 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121876662 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093304879 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121008362 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143964168 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094769563 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162616201 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09354328 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124368142 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101764725 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131294414 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129772484 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094754529 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136988266 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.104060321 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127025649 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10346004 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126616475 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.09609172 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140929699 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124134674 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095738341 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.12284345 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.101642841 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123962289 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094742735 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136331861 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092202979 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125854189 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11057559 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122896832 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123042469 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100552728 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127135591 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092894137 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135694708 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098871554 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124335864 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.103120303 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123025347 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125327947 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103728133 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126501335 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092283826 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128084062 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100087142 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.124638328 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093774033 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127733444 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095715583 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134045564 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129586796 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.099535016 seconds)
  done (took 14.893728207 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.234598353 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215914757 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207002705 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.294405319 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.135972 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.117887342 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211656555 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156250545 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124462815 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1602969 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.17122051 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181924544 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139004009 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.213115399 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171445783 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093529485 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143649155 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135034151 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.245334051 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260471396 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144755074 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.10096271 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162740144 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161796333 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138311894 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102766982 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.15035719 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134559504 seconds)
  done (took 5.833592554 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.115871543 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156725415 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098538068 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145347049 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150531859 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093340408 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129446724 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094955267 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.13670135 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136314961 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.0938734 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130064865 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100879812 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132724033 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124079366 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10382767 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132736915 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095757376 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126794863 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.098428677 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.1359898 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102026231 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12850586 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122343048 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.103775367 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122780603 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086750399 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144600482 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122386359 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116817212 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121707009 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103282633 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137804279 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09502491 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124146404 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095901626 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126748401 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095868374 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126555094 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092171208 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123526427 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078622462 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122809758 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137706859 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100196365 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080890845 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130766324 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128948473 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095847334 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121690777 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097955997 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126827301 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097688847 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.131459628 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096842643 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125419594 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.09721554 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116859879 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100910089 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125613139 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085380164 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122609611 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099180447 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118678193 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102162626 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128650319 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092686978 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126918206 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098224937 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129904118 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095482436 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130541999 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091433802 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126630255 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.096868653 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129653 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126054183 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093797468 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.123310828 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095434087 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075201662 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125945023 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074659654 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127214731 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092019942 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123523379 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095558242 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130849463 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138007311 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095615509 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133137997 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096131071 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123995531 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096790925 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.11380547 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096816495 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141185518 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142363644 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094676254 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122210222 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108915899 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127029643 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093628489 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107223973 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.103114618 seconds)
  done (took 13.058812594 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137710108 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15553535 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.125206056 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113513942 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15789242 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157882224 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100894488 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130950197 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.09598955 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142499722 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.09418608 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132983865 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094021389 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139443927 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157471947 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105344111 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125994232 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108945255 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128946137 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170099093 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112380917 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143827474 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110768935 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126316142 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.129065814 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111505203 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161738534 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108409993 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13765566 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.143290479 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108611257 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161411469 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144011538 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098930601 seconds)
  done (took 5.512440593 seconds)
done (took 50.00645185 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.226080201 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.428293728 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198634202 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.165446722 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.229515713 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.198911535 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.211809382 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.210398057 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.202677987 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.201101513 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.457584663 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.84747954 seconds)
done (took 58.704874045 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.284150519 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.335310098 seconds)
    (2/2) benchmarking "String"...
    done (took 1.464551996 seconds)
  done (took 3.936805526 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.563328805 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.201486451 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.46156075 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.200817693 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.199422386 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.489432567 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.89870043 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.566322986 seconds)
  done (took 28.14524279 seconds)
done (took 42.055601765 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.18073932 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.221970273 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.21634919 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.178483329 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.312817834 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.232560834 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.381690607 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.316576009 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.216761764 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.184234101 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.218621357 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.199659298 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.233544492 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.427705204 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.208164215 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.202326763 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.282542899 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.875489185 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.611254318 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.211950992 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.207457437 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.262116861 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.235678842 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.206187018 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.246792636 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.20187944 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.201210533 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.219194454 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.824891428 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.208337714 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.219515525 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.569900643 seconds)
  done (took 190.642682056 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.203488633 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.303019912 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.377578941 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.234540825 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.665742155 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.418289523 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.356542405 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.740657596 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.222908119 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.232594912 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.470695479 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.204721577 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.542526285 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.242038007 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.235817337 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.309538737 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.545219708 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.52932587 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.243362928 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.3631435 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.230582475 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.602680295 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.570738644 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.410799579 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.209494424 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.271434196 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.215738003 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.214827247 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.410577306 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.44707741 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.217969059 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.256182534 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.835178668 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.064675467 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.228280177 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.247625806 seconds)
  done (took 151.005714317 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.206048069 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.206914241 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.206037231 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.238959043 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.205443357 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78047456 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.792906242 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.752838008 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.656222722 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.634110644 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.501895148 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202684725 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.303281437 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215854392 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.204962481 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.222105308 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.249254948 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207645269 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.207963148 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.79759446 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.220421894 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.774745494 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381809924 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.220917756 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241235088 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.599687429 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203639547 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241928268 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.542613168 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.254136224 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20509476 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.632828937 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.593446863 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.323239797 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.206749663 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240702099 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.208102468 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.494864604 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208053049 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207165531 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.209488146 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.212732953 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.910446426 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.208423574 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.8009463 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208392718 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.188117451 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.205704272 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.209451152 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.851205708 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.986442822 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226715913 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.209481351 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.212611019 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.210280958 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209155948 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.243914413 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.83032631 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.305235942 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.226619936 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.210148631 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.21349584 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243498638 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.21055995 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.572048445 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207284344 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.026594127 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.26827446 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.313934738 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801007555 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.210362579 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.311128618 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331516492 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.206920658 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.209666221 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210662165 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.211192108 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.323516821 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.207154279 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.64809473 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.385334679 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.22490879 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.657756383 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.309709634 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.208332329 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638797946 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.211872135 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.211553613 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.057007184 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.212412627 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313435479 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.208586582 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.211076163 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.211121402 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.652082061 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.800899374 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.507057224 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.212639982 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.716685499 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.212944441 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.668940195 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.774657395 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.919775976 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.21465468 seconds)
    (105/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.213123796 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.327053234 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.387394859 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.227140498 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.210854323 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.64786242 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.21196247 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.271532879 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.208763641 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.612508454 seconds)
  done (took 369.593931172 seconds)
done (took 712.367965085 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.83063553 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.821054456 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.929898054 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.809076459 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.770623661 seconds)
  done (took 10.29642194 seconds)
done (took 11.42968393 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.406958317 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.407572398 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.277338789 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.412548265 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247186684 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.426455184 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.385817353 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.234616048 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.320107669 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.299662743 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.320428437 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.26909415 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248531786 seconds)
  done (took 18.392438858 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.52825687 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.534495938 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275023898 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.54777368 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.253356378 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.529441428 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.420657987 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431529594 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.451930698 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.246470513 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.228925774 seconds)
  done (took 16.586640636 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.536475783 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.568562579 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.280534734 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537682853 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.254682714 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537168429 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.421044883 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.440122916 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.432611268 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248101593 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.227986568 seconds)
  done (took 16.622801607 seconds)
done (took 52.737321906 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.224651427 seconds)
  done (took 2.363252113 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.260816042 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.423224412 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24109809 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.231042809 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.2252747 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.227236874 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.232587499 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.224986335 seconds)
  done (took 11.207372695 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.222354281 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.221074331 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.225035118 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.22137965 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.225086839 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.220532148 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.223927656 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.220844145 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.221878178 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.222015504 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.224429421 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.222174804 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.224565112 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.224200257 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.224254237 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.22303748 seconds)
  done (took 20.706500791 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.225164621 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.221732651 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.221715462 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.223561235 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.222667262 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.222585096 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.223917611 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.222463751 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.222404286 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.221934392 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.223694793 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.2231118 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.223096785 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.223325199 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.22436286 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.223523022 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.221428352 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.222792534 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.228186447 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.223401799 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.224444839 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.223367954 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.223050717 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222913691 seconds)
  done (took 30.501348326 seconds)
done (took 65.913799909 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.861457255 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.936604075 seconds)
  done (took 6.939322448 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.226748028 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.225450009 seconds)
  done (took 3.597016152 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.225219821 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.225224685 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.226272778 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228112386 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.225378169 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.226596775 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.226382313 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.226129415 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228388077 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.226647867 seconds)
  done (took 13.407215876 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.226227642 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.226365258 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.224455663 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.227271751 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.226779323 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.224841211 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.227585169 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.227640863 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.226810779 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.223450158 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.226861357 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.225772155 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.226748004 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.224695076 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.226961477 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.225203753 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.22542484 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.225448047 seconds)
  done (took 23.212817683 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.228520703 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.228045214 seconds)
  done (took 3.599938515 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.226538588 seconds)
    (2/7) benchmarking "second"...
    done (took 1.226104115 seconds)
    (3/7) benchmarking "month"...
    done (took 1.226399264 seconds)
    (4/7) benchmarking "year"...
    done (took 1.225536417 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.224222494 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.226202121 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.225797413 seconds)
  done (took 9.724597169 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227939986 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.408318318 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.490280369 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.809027714 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.22970224 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.231740115 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.065980831 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.232923861 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.235171725 seconds)
  done (took 14.075209764 seconds)
done (took 75.695477764 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.262462367 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.241734662 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.513631469 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.227164713 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.256286506 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.568355164 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.266737333 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.350243495 seconds)
done (took 37.829779896 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.243889013 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.203102601 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.01974805 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.213313697 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.265008361 seconds)
  done (took 18.846259066 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.287533995 seconds)
    (2/2) benchmarking "read"...
    done (took 1.55832079 seconds)
  done (took 4.991443071 seconds)
done (took 31.224008824 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.230724091 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230290753 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.23008554 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.227142611 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.230602258 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.227993228 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.228388948 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.227489964 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.231048873 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.230141552 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.231019214 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.230056433 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.231721172 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2310992 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228294777 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229027287 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230041557 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.228516223 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228224249 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228442759 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232079501 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.227944781 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.228309932 seconds)
    (24/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.229432807 seconds)
  done (took 30.654946231 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.232786025 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.229065914 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230794026 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.231521903 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.230137862 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230556708 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.231840214 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.229880839 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.231963128 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.231747798 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229267136 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.230456479 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.232993887 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.231117862 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23298662 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.229523744 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.233501344 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230519985 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232518703 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.231026836 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.231866382 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231496376 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.231035794 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235137965 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.231200085 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.230594547 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.233605587 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.230702989 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.234101902 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.231250365 seconds)
  done (took 38.092669058 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.239201934 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.242877057 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.233500966 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.235057809 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.233783854 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.233848721 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.232477258 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.23502206 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.232807354 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.233279869 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.233516156 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.232817933 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.235811479 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.235028462 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.232948826 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.235095623 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.234594428 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.235039724 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.233482061 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.23601075 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.235839218 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.234399994 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.234210673 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.2332045 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.234817179 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.23656469 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.234288297 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.235262573 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.2355164 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.234500072 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.236005546 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.235669841 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.235407729 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.234922765 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.235253862 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.234927614 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.240001185 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.243707179 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.235363275 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.236168786 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.235575614 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.234108571 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.235459209 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.236007858 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.236473014 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.235357395 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.236533074 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.237631882 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.236560546 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.236502686 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.235604953 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.237545664 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.235975291 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.235508609 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.23636503 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.237045062 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.237395757 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.237122346 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.236146691 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.237676769 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.236701137 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.237718366 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.237322443 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.23618792 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.237708293 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.238338906 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.237185377 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.236774987 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.237354841 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.237869334 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.236975151 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.239133132 seconds)
  done (took 90.138700651 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.238557402 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.23601802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.234361316 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.234677462 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.235798694 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238012895 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.23500461 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.238372457 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23623257 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23845293 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.24008678 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.237415466 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.236036466 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23843581 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.239654366 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.236985497 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.239574127 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.236483481 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.23921243 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.239641777 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.240072246 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.2365563 seconds)
  done (took 28.379452288 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239535334 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241771483 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.237867094 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240707091 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.236847955 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.240525985 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.24030012 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.2431779 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239528766 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.2389166 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237517481 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.240612193 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236162756 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237691973 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.238613373 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240436576 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240514867 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.237919772 seconds)
  done (took 23.463277896 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.238600098 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.237632961 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.241088565 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.238747499 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.238648959 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.24181976 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238030549 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.241891349 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.240723875 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.239209022 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.241447409 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.24064186 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.24066594 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23892407 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241609684 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.239065389 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.242026135 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.238921031 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.242330295 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.239194747 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.240173532 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.242203003 seconds)
  done (took 28.44001496 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241627892 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.242225644 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.239854885 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.239948534 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.239698369 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.242665744 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.24293844 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.239647104 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.244547101 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.243094351 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.239193966 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.24225493 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.242052587 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.240014379 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.239944615 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239980417 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.243892261 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.24181281 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24311084 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.241282088 seconds)
  done (took 25.986778365 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.244933114 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.247042717 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.243813919 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.244452472 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.244458941 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.244383769 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.246715723 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.245988153 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.244594498 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.245054771 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.245967514 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.244812099 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246097929 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.245444359 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.246178485 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.245118107 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247414341 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.247053164 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.246844727 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.246288815 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.246241039 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.246126402 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.246347021 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.246452277 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.24576307 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.245462558 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247315393 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.247169316 seconds)
  done (took 36.043306631 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245813772 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.246288424 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.2432889 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.242573593 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.243705696 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.243108946 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.243256741 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.243818797 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.24608186 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.24361459 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.246437344 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24712362 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.246082212 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.244377342 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.246450873 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.244860627 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246850694 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.245533195 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.245411159 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.242812416 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.246367261 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246658292 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.246335286 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244692645 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.243993167 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.247014923 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245004195 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.24536373 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248390694 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.245560769 seconds)
  done (took 38.517848994 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.266009063 seconds)
    (2/2) benchmarking "in"...
    done (took 1.265983732 seconds)
  done (took 3.692965614 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.244217178 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247476139 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.24793962 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.244721821 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.246320499 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.248941406 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.248233348 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246321638 seconds)
  done (took 11.136879518 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.247584371 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.248299048 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.248403975 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.250047851 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.251303444 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.248571757 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.2554929 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.268931147 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.249215373 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.250483998 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.256693502 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.258222203 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.252674697 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.249489919 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.249607788 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.250972899 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.250315521 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.251877328 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.251192065 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.25178867 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251039213 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253276608 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.252279224 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.247334825 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.251736659 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.260290755 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.273184149 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.249950801 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.25037033 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.253605979 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.250899461 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.246459191 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.250797018 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.251255118 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.251827913 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.250462735 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259405096 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268794466 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.257089641 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.271063466 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.252498001 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.248311674 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.252091681 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.251750368 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.254413506 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.251542333 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.253165528 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.248470578 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.251910855 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.257181532 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.258024926 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252068587 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.250063575 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254898936 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.254283546 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259356905 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.271892848 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.25696726 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.264257423 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.264734439 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.286187154 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.277739328 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255344115 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.253776705 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264608853 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280616467 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.261602271 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.271353389 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.249614088 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.253190674 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.26000046 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.286051728 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.279288949 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.253475345 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254466939 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.255319361 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.254353273 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254355098 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261705481 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.27746844 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.255942161 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256436113 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266550763 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.289370228 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.255231963 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.255496372 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.2562422 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.257987292 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.256932506 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266389089 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.275371096 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.255939585 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.255606814 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.256332851 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.257607031 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.256005506 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.256267283 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.255537355 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.25438131 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.256280897 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.255371828 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.260169293 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.266797374 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256031313 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.256914672 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.263041945 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.275205516 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.256208909 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.26203799 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.256484172 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254013159 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.258773805 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.264753427 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.254307022 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258724038 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.266225537 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.257740099 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.259421777 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.256225278 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.257796763 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267294671 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.285164359 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.257559946 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.258396508 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.261755713 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.270949621 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.257600874 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.260775281 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.258579312 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.255982349 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.25526373 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.260494386 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.257915924 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.257821083 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258156782 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258853735 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.25735086 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.259542911 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.259820921 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.259208921 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.259727042 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.258328923 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.258808064 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.259528355 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.260389416 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.260083276 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.2653742 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.278280452 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.260009159 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.258442731 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.257009849 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260290263 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.258813353 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.259517959 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.259540152 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259744694 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.25980187 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.259821397 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259982832 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.260991566 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.259699377 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.258988559 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265879557 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.260193928 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265330626 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.260504629 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.258174479 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.260392332 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.26056244 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.260932892 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.260538095 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.260031221 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.263296291 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.270364374 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.261084182 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263420164 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.263290843 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261516612 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.261618304 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262568003 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.264769344 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.272249658 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.261994903 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.267050347 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.282288926 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263692206 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.263457607 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.262685133 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.261583997 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262317755 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.266590896 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.271506613 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273362214 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.288173674 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.26443635 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.267109541 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.263966938 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.265876966 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.265848033 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.262493454 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.264217281 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262892283 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.261644571 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263103243 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.2634379 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.263347991 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.26139641 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.263331055 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.262784708 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.262729777 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263923279 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.264159387 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.264667469 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.260209511 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.262320093 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263248764 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.263347503 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.262057299 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.263732775 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.263913211 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.264244171 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.263493621 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.270178694 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.261108329 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266408911 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.266055639 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.265625379 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.264262306 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.26505911 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266372771 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.265254046 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.272083828 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.28416296 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.266274199 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.27044258 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.283515759 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.265346868 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.26794564 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.265661881 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.261696396 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.268055361 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.27678868 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.265766177 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.265948837 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.265812606 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266767791 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266502175 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.271025078 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.282590298 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.266291432 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.266814313 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.266135513 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.263844385 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.268438677 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.267269013 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.266883212 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.268431988 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.266508473 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.266408209 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.266840073 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.266502646 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.267715278 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.267405685 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269824241 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.277232177 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.271712811 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.266109563 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.268113644 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.268664194 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.271704598 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.267984352 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.267819676 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268495631 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279501787 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.293226601 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.273858157 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.287992782 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.268826283 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274070423 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.28832904 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.271911479 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.269574734 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.267960075 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.267684344 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.266994343 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.266424466 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.268634394 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.268957979 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269999105 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.270385368 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273142056 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.27024259 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.26842961 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.268424296 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.269878183 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.268380562 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.269266263 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.272162285 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.27171844 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.270061599 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.267367153 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.269797102 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275567392 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290388041 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.271158621 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.268044549 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.269579186 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.270640791 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.270564298 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.270084924 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.273462592 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.279916235 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.273768684 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281954574 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.272201855 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281160797 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.269009113 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.274781755 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.280350185 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.269060409 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.268503105 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.270772352 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.270561829 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.275131894 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.290616321 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.273226066 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.275368136 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270813545 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.27105488 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.270966062 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.271685492 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271688368 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.272977433 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.279121895 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.292248698 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.277267577 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.27437685 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.269382458 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.274086382 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.272228131 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.272675413 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.275218022 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.271350008 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.274682415 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.273610656 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.273135124 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.27270877 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.27317331 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.274523659 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.269648077 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.274633247 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.28030809 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.294407245 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278551522 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.274848327 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.280265647 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.293201931 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27929967 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.29403028 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.273533013 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.27354565 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.273701727 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.274565307 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.272591332 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.274406438 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.275307602 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.274855431 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.277668121 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.274691648 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.275652501 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.275037437 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.274520065 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.2751358 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286116672 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.303068476 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.275887024 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.280103462 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.27284371 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.275392171 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.28020427 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.274144231 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.274976405 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.279320086 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287721108 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285006127 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.276029139 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.27564128 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.276657537 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275305887 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.27605508 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.276957247 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.275249247 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.276784835 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.277352215 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.277359134 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277914499 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.276154962 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.277421108 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277956721 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.278446966 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.286004877 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.296601516 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.277945292 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276610771 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.279133182 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.276833462 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.277294448 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.277662261 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277555652 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278289492 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.280346686 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28598951 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.287180617 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.28018638 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.277014042 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.279154391 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.277114315 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.278385214 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.278308088 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.277922215 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279051617 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.278090105 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.278581282 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.279952414 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.279218438 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.27793142 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.278961238 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.27982341 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281792157 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.287231728 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.278807954 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276041505 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.278262872 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.278687147 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.277623926 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.278754124 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.28505749 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.30133639 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.292136197 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.289175164 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.284003188 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.280610625 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.281871036 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.289290628 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.277902861 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.28096468 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.27935271 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.279713571 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.280350084 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.282155995 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281135473 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.286633867 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.299142686 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.280589163 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.287645251 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30129867 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.280310014 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.282332942 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.28536914 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.280800092 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.278127816 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.280978517 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.282006025 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.286803604 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.301907925 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281453096 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.282711011 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.281523406 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.281732604 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.287111375 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280998524 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.282323202 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.279526637 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.282661553 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.280801555 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281875872 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.279970045 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.281466972 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.28185305 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.285594399 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.292080438 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.279458251 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.28472323 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.281546055 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.282334694 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283585289 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282339646 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.281753909 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.280308702 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.282345403 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283580262 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.281885409 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.284730847 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.282984756 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.2837425 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.284554366 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.28344039 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.287692269 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.296167668 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.293559285 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.280717324 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.281528299 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.284803388 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.284425098 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.283440645 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.282198586 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284287627 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.285296233 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285901381 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.284126237 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.284057939 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.288493781 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.302265219 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.302928162 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.283419969 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.284742157 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.287252628 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.28359366 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.282296778 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.285718563 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.285438925 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.288091094 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.293957487 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.285220975 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291068515 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.305562544 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.285671623 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290840091 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.287613423 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.295342313 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.286958622 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.285937861 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.285591967 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.291018567 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.304101718 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.285453722 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.295407268 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.319697317 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.30410803 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.287166069 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.286325966 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285996042 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.285444114 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.28645854 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.285275663 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.286801966 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.287105728 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.28631723 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.288352285 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2912558 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.288081944 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.288172548 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.286445821 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.286372001 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.288711164 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.284959927 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.2874981 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.286427034 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.287053132 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.28709634 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.288510132 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.285617159 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.300185885 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.313873585 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.288490342 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.287685021 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.28582025 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.290588482 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.290717581 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30140976 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.298243841 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.2877193 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.288440063 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.289053267 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.288305473 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.288742614 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.288322381 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.288361897 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.288156479 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.286790025 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.301557639 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.316256975 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.2938884 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.288222176 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.290841756 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.28926772 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.2902712 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.291793419 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290925967 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.290286822 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.291638593 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.294108322 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.290610657 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290329668 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.294105503 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.300266858 seconds)
  done (took 759.717822707 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.288697369 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.287798221 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288321449 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.286630959 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.288926786 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287360121 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288892234 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.287559299 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.287564841 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287885383 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.287268301 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287995477 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.287081687 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28756189 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.288026247 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287265305 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287748968 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287972456 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.288260653 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.287404885 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.288116014 seconds)
  done (took 28.244055412 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.290688895 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.289358346 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.287987285 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292639723 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288737073 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.290473748 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.289271801 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.292854256 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291953461 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.289321688 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.291998494 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290982419 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.288821459 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.289707761 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28993926 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.291097717 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.291034696 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289949886 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.293692921 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.289844465 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.294096093 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.289707702 seconds)
  done (took 29.595342341 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.293082156 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.29219213 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.294433318 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.29068161 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.291721585 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.290340851 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.293599013 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.293088627 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.294676406 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.292415162 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.291768919 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.292971323 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.30070606 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.300364681 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.294595145 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.293087267 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.437244337 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.292955341 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.293068504 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.293620024 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.290812857 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.299067408 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.312754234 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.291882961 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.293384704 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.295046154 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.294059223 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.293040746 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.293460502 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.295670121 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.299161975 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.294863026 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.294756732 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.297553652 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.294815242 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.296946639 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.299318739 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.296124354 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.293091521 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.295901913 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.3061523 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.321195266 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.296411776 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.302910466 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.315569788 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.296499575 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.299442964 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.305875798 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.293730878 seconds)
  done (took 64.879048212 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.296084223 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.296845331 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.294132533 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.297229489 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.29684701 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.296495709 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.29588433 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.295224874 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.293505306 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.293860482 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.296778349 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.295275816 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295042211 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.2972688 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.296037733 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.293344925 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.293163636 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294318464 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.293238516 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.293894573 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.294445737 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.298155976 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.296559877 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.295327028 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297152081 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.295220672 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.295404119 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.296686486 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.295748051 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.295630948 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.297509743 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.297339711 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.298351978 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.295774276 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.294258666 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.298779908 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.298273046 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.294494487 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298326773 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.29546387 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.298159352 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299920371 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.298145906 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.29852916 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.295863143 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.295779281 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.295847081 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.296447886 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.295584048 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.299098262 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.29951713 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.296026358 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300161565 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.296887447 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.298213602 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.298608621 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.298076064 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297754724 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.299839255 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.297671176 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.295595391 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300644709 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.29858963 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.301758137 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.300856804 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.298377366 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.298001204 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300162381 seconds)
  done (took 89.391005288 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.300394739 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.299485391 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.300104235 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300092767 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.300415405 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.301918569 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.299055195 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.300981025 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.299771477 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.301421324 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.300524303 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.301872737 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.301244204 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.301907235 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.300801599 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.301678088 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.300503935 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.300267916 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.300599892 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.300653344 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.29989164 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.302118788 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.301844497 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.301257179 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.302764691 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.301007617 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.300350001 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.30151432 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.302151385 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.300931468 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.30317242 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.302400668 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.302209676 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.302059284 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.301358791 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.302448603 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303188496 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.302687456 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30238648 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.303191553 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.303866211 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.302049991 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.303735454 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.303681413 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303076137 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.303149651 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.302281373 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.305088646 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.302968063 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.304879822 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.303418646 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.303097042 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.303040827 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.303982924 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.305035316 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.30333961 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303695548 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.304179722 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.303933899 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303874416 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.304142292 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.304878223 seconds)
  done (took 81.945110841 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.305317391 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.304551056 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.301428508 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.301912285 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304535664 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.301982825 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.305085054 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.304669952 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.305032755 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.306826982 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304595562 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.303319941 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302374628 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307020807 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.303118441 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303404034 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303514995 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.303531466 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.303793439 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.303742906 seconds)
  done (took 27.292701671 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.301739431 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.306034578 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.303488175 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.303099354 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.305451119 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.304789484 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.306415818 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30613236 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305616412 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307316844 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307209731 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.307326543 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30241018 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.304181007 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.307247827 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.303475502 seconds)
  done (took 22.096403702 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.30450676 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.307462838 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.305750449 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.30698703 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.304729397 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.303635306 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.307810487 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.305194682 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.3041788 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.308550274 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.305571138 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.306679314 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.309151344 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.306391646 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.30473671 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.308455056 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.303679854 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.304245111 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.308338507 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.307252988 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.305933387 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.30444689 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.307063197 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.308684456 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.305342103 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.304960907 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.307308988 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.305607325 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.305820416 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.30832672 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.304656989 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.305404447 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.307029728 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.30606718 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.308489969 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.306446182 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.309440899 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.309610477 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.309549347 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.309991906 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.310055699 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.308299143 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.310163453 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.308496826 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.306467034 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.309532312 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.306984896 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.306537108 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.306484623 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.305266278 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.308954438 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.308939273 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.309882574 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.310303396 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.309866175 seconds)
  done (took 73.1055701 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309946217 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309146264 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.306728289 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.308957503 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310634806 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.30756895 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.310384801 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308956645 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307441331 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.311124962 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.308931467 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.311649509 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306898979 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.312070899 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308978566 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310236906 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.308382313 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.309300986 seconds)
  done (took 24.784856249 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.310549504 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.309597019 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.312862401 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.309086023 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.310096222 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.311656007 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.31135771 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.311270057 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.312816164 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.309240241 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.310781548 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.313651091 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.312094965 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.31244795 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.310210552 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31013585 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.313140346 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.313246294 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.310116885 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.31003702 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315094562 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.313106666 seconds)
  done (took 30.071843627 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.311648862 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.31186971 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.312883042 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.331017373 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.332959558 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.335981145 seconds)
  done (took 9.157829611 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.321640546 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.312195884 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.31092589 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314531035 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314168432 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312089325 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311103289 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312036387 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315823048 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312189213 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309859205 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314960437 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314738079 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31273199 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312697312 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.313431334 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310676384 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31246823 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.31276096 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314967701 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311498257 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315299745 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31244058 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31285732 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312383852 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312551677 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315561567 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312823451 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312532037 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314845701 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315378942 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312033269 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315406783 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312393718 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316661579 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314998087 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312474733 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31630648 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314437097 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311912117 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.315569969 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315223915 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316355838 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313593169 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315751802 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311849949 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313724968 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.31341148 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312685193 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317007898 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316731356 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313618539 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.31614751 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316005185 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316165306 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316359868 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314979316 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314008982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315971652 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315204163 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313719459 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316646445 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314064012 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315330228 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316877839 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314514348 seconds)
  done (took 87.983124676 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.314731364 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.314506819 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314696729 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316590266 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314172804 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315949478 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314825361 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.316598754 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314544197 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.31491296 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317198945 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315467743 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.315127252 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315266946 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314805643 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.314239748 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316035939 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314825797 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316526866 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318238142 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315786581 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316182879 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.315692736 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315494363 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.315677282 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318117351 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316822291 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317155564 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315844377 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316396779 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315804046 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316819209 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316003028 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.317652486 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318239519 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315975108 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316532892 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317926137 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31842671 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320901117 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318435343 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.32092806 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318041577 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317083689 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317395331 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317790126 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317291196 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316627015 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318029805 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318115549 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318073329 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318189187 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318159801 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318478187 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317789428 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317850975 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318407875 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.319459405 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319110439 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321198582 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318810223 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319556405 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3225107 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317954624 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318185888 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317936671 seconds)
  done (took 88.153992559 seconds)
done (took 1772.109079778 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.495743714 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.436683937 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.320179669 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.343439361 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.315921725 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.341485009 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.338474821 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.317242412 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.319298881 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.321513369 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.321799259 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.544372155 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.377010629 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.316434158 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.320622981 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.416209861 seconds)
  done (took 43.07504895 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350736244 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.328002754 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.451572549 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.347245002 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.351546613 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.523039971 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.383180264 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.327640294 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.516863802 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.369532271 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.022185783 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.347553143 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.324689889 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.52986851 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.340716546 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.522344021 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.589923413 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.021351301 seconds)
  done (took 30.877527523 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.828552906 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.360826166 seconds)
  done (took 9.421556649 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.346651337 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.327417459 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.327343693 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.325484822 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.316700057 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.313484974 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.325253697 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.324343971 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.379741447 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.465120364 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.322204665 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.334831267 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.346194606 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.327991953 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.324498466 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.364269528 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.504480335 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.325519114 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.325052717 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.334253528 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.328046942 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.420983045 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.370973115 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.326744674 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.466668003 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.399962692 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.330192609 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.33523474 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.490967272 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.327678256 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.326960912 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.326198767 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329675236 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.966550693 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.782124536 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.333293849 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.366038297 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.336174951 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326386404 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.472454738 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.330047394 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335290243 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.321874626 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.804851819 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.484905583 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.457198014 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.681358581 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.342412396 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.331138705 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.39482535 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.325365867 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.330116679 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.35922031 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.154647526 seconds)
  done (took 112.218064745 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.358262961 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.710179853 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.492596313 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.34630809 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.98644948 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018281775 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.33781395 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.648263567 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.367041896 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.318395751 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.613668538 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.864514765 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.341959723 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.387931581 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.958512458 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.382677846 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.324730149 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.102262763 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.340986804 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.32481971 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.85411168 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324251213 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.31755498 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.47814459 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.358852114 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.830652965 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.036113041 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.813959716 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.340671386 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.318624514 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.83060425 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.351496945 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.368734839 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.3202496 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.609061731 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.712051471 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.708994724 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.335674738 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.345481305 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.319628557 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.339141533 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.814258532 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.714450179 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.336989125 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.351697659 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.811251663 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.337673946 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.325877243 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.331177483 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.531607247 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.006797951 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.325687692 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.993448337 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.327278402 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.690780644 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.382811856 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.398493612 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.847326372 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.337904233 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.447230254 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.363499231 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324579837 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.323111241 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.326884016 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.332155672 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700962127 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.516690072 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.323204999 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.703705314 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838234219 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.344149501 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.879495726 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.259482686 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.326636972 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.420987415 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.3278174 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.956490603 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.853111642 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.351791798 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.321273428 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.692262641 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.340248979 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.628045975 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.338145955 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.338940514 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.859423672 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.330628799 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.329420508 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.327492519 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.32186111 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.950768376 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.33294663 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.611166194 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.356849534 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.327762581 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.329210058 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.378336342 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.321432956 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.340680467 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.331180534 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883580903 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.345941303 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.507539674 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.34755303 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329704568 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.352162545 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.329560772 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.330698617 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.551050727 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.851475831 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.351541446 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.329322788 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.323899994 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.332297453 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.500750972 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.334868154 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.670077513 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.342299497 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323296659 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333978629 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.009144917 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.380953399 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.324954877 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.334691641 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.240421261 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.538029247 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.35552077 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.325010364 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330148617 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.366745574 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.766308908 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.352933423 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.358806018 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.334293163 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.063798535 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.364263841 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.332127947 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.645484839 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.333412206 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.327596182 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.351924049 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.330275946 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.64524759 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.619294893 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.38059844 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.325526585 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.351087104 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.050346872 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.391439908 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.467072705 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.354084338 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.378208588 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.532832506 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.774036359 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.328384421 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.984579542 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.329271825 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.545163702 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.332148265 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.635376237 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.854571007 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.345399627 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.337974128 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.074318073 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.084349421 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.003808512 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.337587461 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.629145444 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.309764568 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.81158338 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.33310125 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.332647034 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.773551255 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.33526227 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.330849503 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.331754943 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.334107661 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.464490643 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510542452 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.86791421 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.334483881 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.817515787 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.359923704 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.328367674 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.332305228 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.330556746 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.680921728 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.404248841 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.336853227 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.351623172 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.328510442 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.339729955 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.839559499 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.292815639 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.33613974 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.488831299 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.002556475 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.345971566 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.335020868 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.01169426 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.635510226 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.871482841 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.376471561 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.671905214 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.352603006 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.372995143 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.943284607 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.420821673 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.836072576 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.349649787 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.335641928 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.955233895 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.347548823 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.691433875 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.330040521 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.332424563 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.91134981 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.347431142 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.33926071 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.769641215 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.357425326 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.590285567 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.336842113 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.386715914 seconds)
  done (took 1113.004933514 seconds)
done (took 1309.822117069 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.336409001 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.338949893 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.317387773 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.339129503 seconds)
  done (took 26.578528997 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.34720629 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.342731053 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.344617997 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.34278813 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.345909132 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.344178405 seconds)
  done (took 9.318829129 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.547030191 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.339021322 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.337622069 seconds)
  done (took 19.473022792 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.575322771 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.732718625 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.723115035 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.740974642 seconds)
  done (took 11.02369248 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.344706792 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.346789765 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.34566315 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.348119875 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.348666589 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.349439075 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.348102601 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.348596555 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.349928294 seconds)
  done (took 13.379459333 seconds)
done (took 81.017777039 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.853216292 seconds)
    (2/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.969058725 seconds)
    (3/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.978401007 seconds)
    (4/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.810378072 seconds)
    (5/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.165759098 seconds)
    (6/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.867210737 seconds)
    (7/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.469268638 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.610909454 seconds)
    (9/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.397840461 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.366491257 seconds)
    (11/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.864199934 seconds)
    (12/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.756554064 seconds)
    (13/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.903749863 seconds)
    (14/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.019238513 seconds)
    (15/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.319685569 seconds)
    (16/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.878560566 seconds)
    (17/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.847328151 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.318963867 seconds)
    (19/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.776308688 seconds)
    (20/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.343925475 seconds)
    (21/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.3816969 seconds)
    (22/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.259034279 seconds)
    (23/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.526409382 seconds)
    (24/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.052772448 seconds)
    (25/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.336100725 seconds)
    (26/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.347328088 seconds)
    (27/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.417366995 seconds)
    (28/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.398833786 seconds)
    (29/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.720348323 seconds)
    (30/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.477048374 seconds)
    (31/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.447802428 seconds)
    (32/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.34262534 seconds)
    (33/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.431936854 seconds)
    (34/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.972088256 seconds)
    (35/286) benchmarking ("sort", Int64, true)...
    done (took 6.340336419 seconds)
    (36/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.314562009 seconds)
    (37/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.824873294 seconds)
    (38/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.572555701 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.461663469 seconds)
    (40/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.321690505 seconds)
    (41/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.385440484 seconds)
    (42/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.434078839 seconds)
    (43/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.320170138 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.937604831 seconds)
    (45/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.427807026 seconds)
    (46/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.374168765 seconds)
    (47/286) benchmarking ("sort", BigInt, true)...
    done (took 6.34215954 seconds)
    (48/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.491411051 seconds)
    (49/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.321239323 seconds)
    (50/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.158371643 seconds)
    (51/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.914810863 seconds)
    (52/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.653075897 seconds)
    (53/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.357283962 seconds)
    (54/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.550525944 seconds)
    (55/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.738716334 seconds)
    (56/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.452150482 seconds)
    (57/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.323514332 seconds)
    (58/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.341783107 seconds)
    (59/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.529238549 seconds)
    (60/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.632309382 seconds)
    (61/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.334314027 seconds)
    (62/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.391325091 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.418756535 seconds)
    (64/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.335503302 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.344076255 seconds)
    (66/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.316306997 seconds)
    (67/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.364185462 seconds)
    (68/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.322361543 seconds)
    (69/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.775782204 seconds)
    (70/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.252567497 seconds)
    (71/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.254408587 seconds)
    (72/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.284023427 seconds)
    (73/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.156453538 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.050422572 seconds)
    (75/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.320734152 seconds)
    (76/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.319639409 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.792575436 seconds)
    (78/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.207121674 seconds)
    (79/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.08902806 seconds)
    (80/286) benchmarking ("sort", Int8, true)...
    done (took 6.363363595 seconds)
    (81/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.189484865 seconds)
    (82/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.770542051 seconds)
    (83/286) benchmarking ("sort", Int64, false)...
    done (took 5.628210059 seconds)
    (84/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.368227489 seconds)
    (85/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.367463498 seconds)
    (86/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.358721661 seconds)
    (87/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.334200927 seconds)
    (88/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.84830189 seconds)
    (89/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.419575588 seconds)
    (90/286) benchmarking ("sort", BigInt, false)...
    done (took 6.345277907 seconds)
    (91/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.155729606 seconds)
    (92/286) benchmarking ("sort", Float32, false)...
    done (took 5.395450967 seconds)
    (93/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.321264711 seconds)
    (94/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.468333698 seconds)
    (95/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.324960883 seconds)
    (96/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.324759839 seconds)
    (97/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.030721575 seconds)
    (98/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.361830545 seconds)
    (99/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.239659333 seconds)
    (100/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.371315186 seconds)
    (101/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.227932542 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.56948887 seconds)
    (103/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.846467367 seconds)
    (104/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.320067364 seconds)
    (105/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.466679004 seconds)
    (106/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.357477645 seconds)
    (107/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.182401378 seconds)
    (108/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.323504542 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.721373623 seconds)
    (110/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.906702938 seconds)
    (111/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.097416894 seconds)
    (112/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.344267186 seconds)
    (113/286) benchmarking ("sort", Bool, false)...
    done (took 1.875469202 seconds)
    (114/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.38804226 seconds)
    (115/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.325383832 seconds)
    (116/286) benchmarking ("sort", Float64, false)...
    done (took 5.71048534 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.621368362 seconds)
    (118/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.124480272 seconds)
    (119/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.45010357 seconds)
    (120/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.397982415 seconds)
    (121/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.374783659 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.221636621 seconds)
    (123/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.348251725 seconds)
    (124/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.664977781 seconds)
    (125/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.610598064 seconds)
    (126/286) benchmarking ("sort", Float32, true)...
    done (took 6.358078342 seconds)
    (127/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.452830794 seconds)
    (128/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.356656175 seconds)
    (129/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.13342234 seconds)
    (130/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.478798726 seconds)
    (131/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.894130074 seconds)
    (132/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.274483698 seconds)
    (133/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.320802713 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.448041381 seconds)
    (135/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.996447127 seconds)
    (136/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.343302461 seconds)
    (137/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.29034406 seconds)
    (138/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.406479813 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.377283724 seconds)
    (140/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.341806628 seconds)
    (141/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.239762265 seconds)
    (142/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.044337013 seconds)
    (143/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.374837306 seconds)
    (144/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.373262651 seconds)
    (145/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.543276503 seconds)
    (146/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.694317125 seconds)
    (147/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.3591974 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.371836473 seconds)
    (149/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.1420465 seconds)
    (150/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.274405919 seconds)
    (151/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.898092231 seconds)
    (152/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.362386352 seconds)
    (153/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.413498154 seconds)
    (154/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.17373379 seconds)
    (155/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.369162043 seconds)
    (156/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.748603791 seconds)
    (157/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.434106457 seconds)
    (158/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.03678174 seconds)
    (159/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.340109237 seconds)
    (160/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.50032519 seconds)
    (161/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.951835968 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.171146081 seconds)
    (163/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.341557295 seconds)
    (164/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.372079745 seconds)
    (165/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.366029499 seconds)
    (166/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.562499431 seconds)
    (167/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.385060717 seconds)
    (168/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.876067393 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.370213994 seconds)
    (170/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.359208646 seconds)
    (171/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.445951121 seconds)
    (172/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.45202984 seconds)
    (173/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.348516354 seconds)
    (174/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.33142764 seconds)
    (175/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.048675047 seconds)
    (176/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.369827503 seconds)
    (177/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.092423439 seconds)
    (178/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.459789566 seconds)
    (179/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.391157332 seconds)
    (180/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.440576771 seconds)
    (181/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.434846953 seconds)
    (182/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.473569305 seconds)
    (183/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.331595352 seconds)
    (184/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.163659621 seconds)
    (185/286) benchmarking ("sort", Bool, true)...
    done (took 5.510295352 seconds)
    (186/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.452492052 seconds)
    (187/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.408661471 seconds)
    (188/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.40112881 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.353717992 seconds)
    (190/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.367865076 seconds)
    (191/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.332052826 seconds)
    (192/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.444358503 seconds)
    (193/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.350836496 seconds)
    (194/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.352747517 seconds)
    (195/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.752152738 seconds)
    (196/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.379624054 seconds)
    (197/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.989115645 seconds)
    (198/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.57635824 seconds)
    (199/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.984745164 seconds)
    (200/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.347560947 seconds)
    (201/286) benchmarking ("sort", Float64, true)...
    done (took 6.370638413 seconds)
    (202/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.375706526 seconds)
    (203/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.912485577 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.310038179 seconds)
    (205/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.37323791 seconds)
    (206/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.440305932 seconds)
    (207/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.355556384 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.360495074 seconds)
    (209/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.638304576 seconds)
    (210/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.389460802 seconds)
    (211/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.375237375 seconds)
    (212/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.573361033 seconds)
    (213/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.387871536 seconds)
    (214/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.289051889 seconds)
    (215/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.390640496 seconds)
    (216/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.392639811 seconds)
    (217/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.333207709 seconds)
    (218/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.392276374 seconds)
    (219/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.334616788 seconds)
    (220/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.50081581 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.090363212 seconds)
    (222/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.950340858 seconds)
    (223/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.430421409 seconds)
    (224/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.334389729 seconds)
    (225/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.367080983 seconds)
    (226/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.327811834 seconds)
    (227/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.880459419 seconds)
    (228/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.334832213 seconds)
    (229/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.366802382 seconds)
    (230/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.33362369 seconds)
    (231/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.790200359 seconds)
    (232/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.340688031 seconds)
    (233/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.329636661 seconds)
    (234/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.602441186 seconds)
    (235/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.33991846 seconds)
    (236/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.329312421 seconds)
    (237/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.191710124 seconds)
    (238/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.876614001 seconds)
    (239/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.420169635 seconds)
    (240/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.730213639 seconds)
    (241/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.624199647 seconds)
    (242/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.382400128 seconds)
    (243/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.592022153 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.395343418 seconds)
    (245/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.418431576 seconds)
    (246/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.373708996 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.750043356 seconds)
    (248/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.239913317 seconds)
    (249/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.631145939 seconds)
    (250/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.353299081 seconds)
    (251/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.400670024 seconds)
    (252/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.042587204 seconds)
    (253/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.902980265 seconds)
    (254/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.338713109 seconds)
    (255/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.360941001 seconds)
    (256/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.831014499 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.447225073 seconds)
    (258/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.000482622 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.442604093 seconds)
    (260/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.335686872 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.39375973 seconds)
    (262/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.436466499 seconds)
    (263/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.381663695 seconds)
    (264/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.441190791 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.47243414 seconds)
    (266/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.382250377 seconds)
    (267/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.390306102 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.208377287 seconds)
    (269/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.503444286 seconds)
    (270/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.415475974 seconds)
    (271/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.081003784 seconds)
    (272/286) benchmarking ("sort", Int8, false)...
    done (took 4.422552655 seconds)
    (273/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.399864399 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.794458693 seconds)
    (275/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.381395395 seconds)
    (276/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.261969026 seconds)
    (277/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.421495728 seconds)
    (278/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.608045261 seconds)
    (279/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.338298914 seconds)
    (280/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.668908014 seconds)
    (281/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.381961328 seconds)
    (282/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.469777456 seconds)
    (283/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.373523603 seconds)
    (284/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.296667056 seconds)
    (285/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.849631244 seconds)
    (286/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.992382552 seconds)
  done (took 956.42084198 seconds)
done (took 957.66813676 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.393180784 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388090302 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.37161934 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.3944286 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.480477874 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.395206928 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.381809738 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.374301717 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.419313412 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.420249387 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.36925115 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.39345752 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.372694474 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.371617538 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.371701627 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.386652775 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.572532759 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.37021858 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.387957814 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.380837569 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.38691121 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.370006911 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.4216629 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.394959091 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.375158045 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.37528545 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.373606412 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.389987847 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.483480148 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.373981839 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.376452327 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.383270989 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.572962825 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.372169811 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.368334799 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.390979788 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.383258228 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.385276021 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.378652086 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.404209864 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.046847923 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.388685632 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.374121309 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.375439577 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.375008841 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.377643469 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.373998518 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.379764741 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387062194 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388315666 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.060095838 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.406076922 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.377587096 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.374794435 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.385864809 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.3743294 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.380309268 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392414219 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.394384719 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392009192 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.571151532 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.382067337 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.379746536 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.391708921 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.382210987 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.103494765 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.390452097 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.381321485 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.052225229 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.397459207 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.104360325 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.401809659 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.377199457 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.389302342 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.40760898 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.526821224 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.366870061 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.37609532 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.381330794 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.37553249 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.386788239 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389784839 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.382783029 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.378343011 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.392025244 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.402620083 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.387119891 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.377801755 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.386831211 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.396112975 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.38367351 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.387861833 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.380346029 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.37391121 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.38824875 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.381550965 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.379589429 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.378932219 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.381016542 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.388624621 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.052275549 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.413887147 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.375844351 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.376198144 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.377538291 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.391222503 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.051812669 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.397102587 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.40135855 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.42510658 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.38102089 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.577183395 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.381728905 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396223994 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.389860128 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.382442081 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.374150329 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.573952536 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.973583718 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.404622349 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.382499665 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.376235193 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395925398 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.38259605 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.376492713 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.532301807 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.376122615 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.394460123 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.498946429 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.390604129 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.410379333 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.377419574 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.384549757 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.403324414 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397844612 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.409708376 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.384938316 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.396946784 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.396198217 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.377862585 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.39065615 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.391404432 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.382899059 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.386504314 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.374397975 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.404598245 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.393843562 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392429399 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.401525297 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.500687713 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.379169265 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.520821181 seconds)
done (took 235.136895766 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.437427625 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.369544882 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.468299741 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.376240342 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.478313527 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.476412941 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.373502687 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.373319497 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.372082557 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.752185348 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.37448573 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.372735574 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.374814695 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.372684179 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.459147764 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.376180003 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.373562288 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.713890847 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.376731409 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.446448969 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.377143703 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.373933735 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.376534257 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.755060721 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.374166212 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.368030916 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.447816016 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.376540058 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.724032496 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.36826729 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.375626307 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.722978629 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.466521068 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.394906599 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.387331317 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.383375834 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.479628395 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.397879782 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.458345696 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.457356299 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.468885987 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.415635763 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.379467412 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.376519424 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.379028769 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.377896874 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.374514686 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.404735587 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.371485635 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.375494965 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.718621302 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.388089164 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.375322264 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.375958905 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.376736292 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.408101831 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.377532018 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.379287934 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.467967408 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.379000534 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.439877755 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.76017986 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.753285065 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.379052398 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.378924875 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.377757903 seconds)
  done (took 151.320924121 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.445061335 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.450861795 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.501727808 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.397493431 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.424608534 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.507789797 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.397348817 seconds)
  done (took 11.405785321 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.383033714 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.379623706 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.428097353 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.429611575 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.380434767 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.5560788 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.378640905 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.392102018 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.377800132 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.434774885 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.381578115 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381478124 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.385075857 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.379163288 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427752125 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.390924683 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.496344143 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.380310244 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.381404276 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.536076108 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378622578 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.388367378 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.43907249 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.391771428 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.383151948 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.38656001 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.189324424 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380183561 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378786508 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.380656676 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378588419 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.456448586 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.382202971 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.38074175 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378458347 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.499736913 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.381814884 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.379322465 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.381421865 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.376022637 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.382610691 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.382609727 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.383270738 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.378606674 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.382561707 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.406116181 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.38138754 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.383026183 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.383350923 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383796645 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.432927161 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.383298989 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.381114938 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.380461614 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.438039741 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.3899691 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.384270053 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.380809346 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.384486298 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380750747 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.540032153 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.432919127 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.383166927 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.432709841 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.385673268 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.384965822 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.383950894 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.383762125 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.438295297 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.383388735 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.431737533 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.380992054 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.573525639 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.406573482 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.38649993 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.386734374 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.387489694 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384227605 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.384392918 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.389715451 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.381910611 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.385972365 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.390512194 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.380886963 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.381841808 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.553726875 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.492186989 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.382640452 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.397180276 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.391790422 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.383294085 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.439106056 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.385391154 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.38320249 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.437878279 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.499040695 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.44877639 seconds)
  done (took 158.416994356 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.386427711 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.393045521 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.387618427 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.402351548 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.387080829 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.385025491 seconds)
  done (took 9.62905306 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.388330918 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.388231157 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.388706623 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.388798355 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.386570135 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.38827916 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.387963301 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388124863 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.392882697 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.386959638 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.389385331 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.388446291 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.390659086 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.386881175 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.385815418 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.388343021 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.388637191 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.383607494 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.387247971 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38839098 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.480996187 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388949248 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.388184866 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.389926486 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.394771383 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.387309437 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.395812371 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.387463856 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.388726422 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.39657682 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.408027604 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.38911973 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.390534572 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.396678112 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.394161611 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.391138711 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.394096998 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.390492984 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.386983624 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.390993441 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.389835698 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390163645 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.389231731 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.389596405 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.390433197 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.394377558 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.395565468 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.397231242 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.390500509 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.391118901 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.392116707 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.391064872 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.391765998 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.393087599 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.392674608 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.410346801 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.396245852 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.390671128 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.390015795 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.391760583 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.393814133 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.389588815 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.392286073 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.39324373 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.397355879 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.392246782 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.392686475 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.396259922 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.391821108 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.391394128 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.392473078 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.389117631 seconds)
  done (took 102.553891473 seconds)
done (took 434.600891529 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.470423598 seconds)
  done (took 7.761396265 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.966079859 seconds)
  done (took 8.260481288 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.962906634 seconds)
  done (took 24.265140172 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.417054619 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.488395293 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.38267555 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.403825156 seconds)
  done (took 26.988158605 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.393271663 seconds)
  done (took 7.689239224 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.400796775 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.384903155 seconds)
  done (took 14.083041478 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.968400522 seconds)
  done (took 8.263522512 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.591529427 seconds)
  done (took 7.896227743 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.383998032 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.408804014 seconds)
  done (took 14.104702086 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.36595559 seconds)
  done (took 7.660910527 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.484959218 seconds)
  done (took 12.779677821 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.390503429 seconds)
  done (took 7.687834329 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.404714701 seconds)
  done (took 7.699698834 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.218503754 seconds)
  done (took 10.510573192 seconds)
done (took 166.940501211 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.385293431 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.380625933 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.380721286 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.380243825 seconds)
  done (took 26.820429981 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.427401858 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.427135928 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.429672993 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.438565922 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.43195109 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.42808425 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.420083511 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.419636192 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.439032512 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.429697017 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.428911415 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429382664 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.427525812 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.419653373 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.429736527 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.429684337 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.438787435 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.428971818 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.420430181 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.431276394 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.395458644 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.438454836 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.432342277 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.395659195 seconds)
  done (took 35.53279785 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.916141375 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.465806362 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.550658514 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.448129609 seconds)
  done (took 7.676857258 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.446671753 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.446313015 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.46102199 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.496192712 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.525668495 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.458112182 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.421490095 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.416917494 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.402832607 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.448722036 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.522119333 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.462089066 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.534535435 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.395177144 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.598315535 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.395505557 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.395574744 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.446407917 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.499833666 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.511862206 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.391643173 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.446021177 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.453995793 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.466123418 seconds)
  done (took 36.338359107 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.395228801 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.414497697 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.394488803 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.394487401 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.402453396 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.395945754 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.396072297 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.395858043 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.395296889 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.401984888 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.392786449 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.406968504 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.394398421 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.39644894 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.399832265 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.39513403 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.400648341 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.395432294 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.395264077 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.402121914 seconds)
  done (took 29.262902675 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.388216314 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.243968162 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.738354477 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.64352034 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.387565408 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.391087594 seconds)
  done (took 28.090435721 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.473937438 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.652731253 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.393875309 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.807766954 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.892407108 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.410868092 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.395254019 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.677637623 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.036287145 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.037821908 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.462541804 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.475625786 seconds)
  done (took 21.017652075 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.393775632 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.387475272 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.407246195 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.407159296 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.459464143 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.413109014 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.401272373 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.389377096 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.462548401 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.476292936 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.413586842 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.459077151 seconds)
  done (took 38.371425498 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479114434 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441102005 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.445774837 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433100992 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.111378343 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.600465779 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.395906864 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.137918198 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.41258288 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668479877 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397541932 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47712484 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.651999312 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396551432 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393726732 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.515280933 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64228967 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921631302 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389671498 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.896356851 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421740654 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400571488 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.993973957 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.65779609 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620849872 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.374849747 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.690075373 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.173782736 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.718873373 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40294298 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407290646 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.397295821 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673327053 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.097436138 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505523834 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.632580815 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416853458 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.940402415 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.379025634 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.915526635 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410113901 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392082705 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40506628 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395116905 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.327941598 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.392168002 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1773611 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.415941184 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.104638278 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.394093213 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693162371 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488507839 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.399806065 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.968783621 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469305583 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.397460504 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.397535759 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.49608825 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980001254 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.409042842 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.398201218 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.349727935 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397472488 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.817797592 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.09410362 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.417527406 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.399276103 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.399108772 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.332589737 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.877932309 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41733234 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536782439 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.418639959 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.061049463 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169782845 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.413762268 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.330354624 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988774177 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.395225058 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.334011544 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.622369976 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.17364773 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341223214 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.343015209 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.334608974 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.163639667 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.402166866 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.922941707 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420909784 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.169341951 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.654359905 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.430135465 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42426257 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624394524 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.273267696 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396400764 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.407504632 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517166515 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416510262 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157469069 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.348013344 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.400413096 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655102036 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.605472458 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.413247807 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.534298147 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943831141 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426175516 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.415479713 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.405243528 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64371398 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.059045689 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429117297 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.413074794 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421756712 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.179492673 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.244867364 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418598263 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.405423784 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.40457379 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.673621233 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.25842251 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.287307397 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465271523 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404143508 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.403251526 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.928163158 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.254283965 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.347382453 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.62311863 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434453058 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.413727842 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.403780792 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366342813 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.403073359 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404090642 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.17736958 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.624475839 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399313894 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677629569 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334867487 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536767914 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414514661 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.622845418 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.732518871 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.420849523 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.665695393 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409984452 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.40644959 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.416165253 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42222559 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503546727 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426248612 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.421130763 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664037077 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.409941375 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.409557905 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.941280018 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.185037815 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412679636 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.410283628 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408453599 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.055205512 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390500013 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400954266 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299447021 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.416407813 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472665549 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409621549 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.655753031 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.531456985 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425197372 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.405292771 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.400469346 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.643462215 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.409745394 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.936724287 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488031039 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.927599987 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.088964021 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.438582822 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.338185315 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.112887738 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.097722848 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.406560281 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.597397255 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.407353315 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.651809367 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.439757965 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.410312197 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.0904532 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427283817 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.863598721 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.413548413 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.420514719 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.411601193 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409877932 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.46644532 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.45638413 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.414709157 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.420465765 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55254775 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.42157676 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.342745015 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920440248 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.414322451 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.409397843 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.183392322 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438596129 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.853618315 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.264348287 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.683847632 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410468722 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.715529854 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.001505296 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.444001811 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.421967921 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.410651517 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425690314 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.422734082 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410487048 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.418822613 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.877293264 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.860216769 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969917536 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.262791812 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.056973054 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.944391469 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.428477347 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.308141059 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.166719406 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.359081841 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.066145973 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627521823 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180644908 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382950415 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928569854 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.769420122 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.289811077 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709985523 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641962099 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.811115151 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.42667668 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.720603849 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.626600177 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440154422 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.417818261 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.340945701 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.686784115 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014306691 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426113961 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.512856548 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171092669 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432902181 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.190414124 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.430874228 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.226926876 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87915178 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.981381966 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.8044584 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.417643872 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416049583 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.268151967 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430162956 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.937930474 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.133480873 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.447825819 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.938258859 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367539787 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.657872012 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.4456798 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406296398 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.96433028 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.413054103 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.672395381 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713264643 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343701964 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.424222657 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020590991 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.284425732 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.417659296 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408386809 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260456867 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.429910018 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.740503583 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.422075784 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.459269894 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430027921 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.344891136 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.342284371 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.101296776 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421007996 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380913786 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.975973888 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.431471255 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409621162 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410390441 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.263831936 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667346667 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.424529853 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.073015033 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654768159 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.408947411 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433122982 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.415432864 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.423241502 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.396777239 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.31461481 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.646966715 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.474421557 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.652902897 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 4.103883911 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.325327153 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.485369447 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623344391 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.294253548 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.413338471 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698978153 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.143032668 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.419760392 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.198731 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45264661 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.424593274 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.453873484 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416829396 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.43157868 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.507798828 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.668856813 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.448705906 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.428718357 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892157153 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.443389852 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420874791 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.431257164 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511744578 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.484428732 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.471328648 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.186065092 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.097875774 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304132527 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111104719 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745163876 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.415324562 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418784937 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35318937 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560450695 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.948232844 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694689041 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.539774852 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.413461089 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.435656254 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433603662 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432893161 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.631890747 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.689299846 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.29625418 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425741438 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.082312953 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.297363486 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430794468 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.631675042 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994105823 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079448721 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.546545369 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.416736443 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209813616 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708763986 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.513084585 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416030829 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015253034 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.428900381 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.308654872 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.42902893 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.426026602 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568113285 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.72706231 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127075486 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.444231356 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.571600239 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.19402114 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.911573521 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.679644465 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.020799173 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.675430977 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120888881 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.231936425 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.681690688 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491607528 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673455791 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.557785236 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565293336 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.436151327 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.325825857 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.420479841 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272615942 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.12668836 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.430984292 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.100741775 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706576932 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.426000148 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.419478906 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.462840933 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.43171917 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647923194 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228136158 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650888507 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426588018 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.428996008 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.994966635 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.103522871 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.751562901 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361526295 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.418939802 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.705742384 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680169506 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.4451172 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.895712423 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.135513687 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060223313 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.690517428 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.44213566 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4313182 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.245073289 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.107464767 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.560316911 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004484715 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.088374033 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.438134548 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.700243323 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.426836778 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421379791 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719251286 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.423981838 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.440850971 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680335003 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.127236934 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.340935195 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.443875513 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.022095583 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.362081742 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.650442546 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.492650238 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.377090008 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.42066911 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.907006523 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.448577108 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.547894521 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431713493 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.427706609 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.432837874 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.182680675 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.71194381 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.424506812 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.408311358 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.420175842 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.438851205 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526319978 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.037841586 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446080648 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.099673666 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.782777144 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.686093727 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.437195597 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.407950306 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.431424967 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.422814538 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148609324 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.399115042 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435898334 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.076942694 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.444063871 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.439663158 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429099493 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.64067618 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.634732189 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.428513659 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.68360935 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450355565 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444109421 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.333308455 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.19952421 seconds)
  done (took 1692.136974316 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.436735137 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.444766122 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.514218847 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.456461244 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.476672814 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.593434313 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.506005807 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.468560998 seconds)
  done (took 53.230983744 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.437377917 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.591439354 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.456604233 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.43498886 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.435479565 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.443734568 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.963949365 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.452723275 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.437193325 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.434817919 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.43233042 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.436707435 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.174219006 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.439440752 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.430110192 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.420860016 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.435756671 seconds)
  done (took 67.201306174 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.046496836 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.549118198 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.942813976 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.495736818 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.468906109 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.455982794 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.094163597 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.441045243 seconds)
  done (took 55.829215398 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.446795955 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.448562593 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.443479933 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.444939136 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.445966667 seconds)
  done (took 8.566544155 seconds)
done (took 2101.367996776 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.431801027 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.438036655 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.435657457 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.434607527 seconds)
  done (took 7.073756844 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.406044822 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.14481333 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.405281799 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.419865963 seconds)
  done (took 18.710614913 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.432875984 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.450271842 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.262517493 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.150784049 seconds)
  done (took 5.749872536 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.181997154 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.191287893 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.179856254 seconds)
  done (took 7.889875108 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.432331558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.433949186 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.430926193 seconds)
  done (took 20.633969623 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.741864838 seconds)
  done (took 3.079703595 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.580493702 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.630210448 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.781656337 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.774532587 seconds)
  done (took 8.104959311 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.818712317 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.821525324 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.618196278 seconds)
  done (took 6.594645691 seconds)
done (took 92.053261127 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.740875837 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.44874207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.64330992 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.714280239 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.661855278 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.641485788 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.756872586 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.676750326 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.212058127 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.201994257 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.710782047 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.658508006 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.91633788 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.455190485 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.908208847 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.456563761 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.657261396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.783533731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.393785543 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.442501629 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.754717309 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.351326711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.538477665 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.368657987 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.653502732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.590814313 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.923660912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.448216172 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.431506078 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.969020516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.586968569 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.430610891 seconds)
  done (took 200.464525971 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.43264399 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.443649744 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.444633888 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.449225437 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.435967944 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.440228906 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.442430705 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.428549949 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.42698057 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.426873379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.436348182 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.427459763 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.447684635 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.438233074 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.429435665 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.43037995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.440880985 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.432084399 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428744632 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.448804655 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.427227455 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.444690477 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.449736771 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.448856793 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.440523041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.42991847 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.454604134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.427882521 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.427728263 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.429535467 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.447853539 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.462560176 seconds)
  done (took 207.361498491 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.434588499 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.428919042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.447646426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.45502787 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.429068483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.428263408 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.449281788 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.446246564 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.428923892 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.461281737 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.438073627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.429515237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.430917136 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.430154799 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.430575342 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.450899141 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.430654669 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.429344867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.43016851 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.445004009 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.429881429 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.432983764 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.447441606 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.442385243 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.429513131 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.448393939 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.429702889 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.432241371 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.470989077 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.45558942 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.43246996 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.429270874 seconds)
  done (took 207.376654424 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.632607606 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.439242768 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.441217003 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.38091224 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.441388354 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.440922608 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.435770997 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.639888977 seconds)
  done (took 15.19449807 seconds)
done (took 631.730789142 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.931756645 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.613171736 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.657014712 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.467144264 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.306701459 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.479020096 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.465725183 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.656771224 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.407408069 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.662844199 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.794294661 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.475338776 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.952647232 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.456945783 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.745354167 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.568425057 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.431742126 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.560707461 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.804533439 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.066952931 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.742363023 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.014848646 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.680564878 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.41630059 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.953314864 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.034720387 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.290990118 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.413612066 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.478030492 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.815459238 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.304399838 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.569635359 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.535397921 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.53123356 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.589176986 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.567077223 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.526710651 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.528183403 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.673565907 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.772589036 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.063099359 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.212468785 seconds)
  done (took 98.560251825 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.431474454 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.426672928 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.424574674 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.42772723 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.427012202 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.425448373 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.425913494 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.429460028 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.428421202 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.425405755 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.425725771 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.430334775 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.431298563 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.431038259 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.427394107 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.43093082 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.428632502 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.428016559 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.42630342 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.431884914 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.432026927 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.427539294 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.425721071 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.427308584 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.432340603 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.432027079 seconds)
  done (took 38.487291797 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.450518788 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.715422766 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.891731824 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.449765893 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.448045576 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.455039673 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.542929453 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.446862416 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.456324135 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.450772075 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.63362747 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.445966912 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.49145951 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.929472972 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.446828238 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.447530211 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.452056011 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.451011099 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.7238206 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.45428039 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.568035218 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.445405413 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.543112728 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.455710766 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.47300344 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.449559632 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.458226836 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.023577703 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.464415819 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.637339506 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.376091456 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.54073464 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.968825699 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.924368087 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.374042273 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.456119404 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.454555923 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.641277298 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.44797253 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.454231293 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.545393935 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.445867149 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.912291346 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.127206103 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.466749484 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.454509653 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.046913495 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.651723076 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.732787534 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.456375153 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.936023703 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.449123425 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.454539049 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.457261826 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.738306779 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.455156751 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.455396287 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.046551641 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.473731571 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.545852133 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.449025986 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.454956353 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.732294522 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.448686802 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.722569168 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.44919588 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.463398581 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.471922405 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.914404947 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.45204994 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.158086995 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.468286427 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.455813387 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.63801617 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.713138171 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.075556458 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.47151803 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.733303755 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.982426121 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.55466875 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.453332213 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.008841703 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.560495581 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.453020382 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.452806641 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.458377954 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.456106188 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.501112055 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.541918488 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.087593672 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.160527194 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.067832466 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.562235427 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.464004825 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.455569956 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.04973288 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.471277159 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.459554184 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.90726746 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.154683963 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.470614915 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.466566139 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.158444765 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.471989003 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.549116423 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.456134746 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.917384363 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.450740484 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.501418094 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.458568622 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.466454056 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.4769766 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.548624966 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.455707864 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.452854413 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.124525649 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.661340567 seconds)
  done (took 191.765661781 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.457490692 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.443597311 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.460376897 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.445938462 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.453439698 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.458199424 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.450108907 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.452951909 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.455787307 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.449202365 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.453978561 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.454497464 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.449764103 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.468697383 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.45733219 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.456811413 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.061843184 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.453027265 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.453725573 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.463023788 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.297315181 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.447920248 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.451673176 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.46269037 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.454220107 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.449537691 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.483646648 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.448330128 seconds)
  done (took 155.550823634 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.460545004 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.11045094 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.470997493 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.607861894 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.476299343 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.454126317 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.608828719 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.522020959 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.472564454 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.455200996 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.453111423 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.802622597 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.454605685 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.051753561 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.678129717 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.62315308 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.047687824 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.471205974 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.454640756 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.453978616 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.616161107 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.459482716 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.808191772 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.10884044 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.474616845 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.108667587 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.43772696 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.458464422 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.461128409 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.112245676 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.471310082 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.815715613 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.547145106 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.530192818 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.133394834 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.070508576 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.071490946 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.629292328 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.455349034 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.461480785 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.458034453 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.442430799 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.112374472 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.47279131 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.463349329 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.110173719 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.477921167 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.461687189 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.468376505 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.458054933 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.531741278 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.545636892 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.83062711 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.114164868 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.565859155 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.468167901 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.617690956 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.86255065 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.458968372 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.092628982 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.441494741 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.127457974 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.476247303 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.447005414 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.463125372 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.46939402 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.638247134 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.616638814 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.070066407 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.474271289 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.069947028 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.647822948 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.457578897 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.46476952 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.462259753 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.11897292 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.082620583 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.648004658 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.61371995 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.686116327 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.443713292 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.460824432 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.444868329 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.554014783 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.457597377 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.120586619 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.080708842 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.476135502 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.463388512 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.465716805 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.467880631 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.671846694 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.134617746 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.570334004 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.051343124 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.831722883 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.811765148 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.461396268 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.53753768 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.474950224 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.821237286 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.461634773 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.535770572 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.934233176 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.813481938 seconds)
  done (took 175.758037277 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.742118354 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.793235347 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.559697325 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.628456095 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.109296697 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.064145883 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.792879541 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.625157596 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.583163777 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.748958847 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.734229882 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.550697644 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.705104028 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.548168735 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.273532439 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.556651868 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.583074112 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.627988501 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.629115548 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.542564367 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.181223702 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.788683481 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.674331886 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.530515001 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.562548581 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.341796667 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.060975511 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.006547449 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.659285877 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.908400069 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.014848461 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.652423832 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.509648716 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.228795993 seconds)
  done (took 70.880993746 seconds)
done (took 732.343200863 seconds)
SAVING RESULT...
DONE!
