cset: moving following pidspec: 1723
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.394963921 seconds)
loading group "string"... done (took 0.56871332 seconds)
loading group "linalg"... done (took 7.273924445 seconds)
loading group "parallel"... done (took 0.161190775 seconds)
loading group "find"... done (took 1.14667969 seconds)
loading group "tuple"... done (took 1.79609561 seconds)
loading group "dates"... done (took 1.246458664 seconds)
loading group "micro"... done (took 0.220324238 seconds)
loading group "io"... done (took 1.021541395 seconds)
loading group "scalar"... done (took 38.748378674 seconds)
loading group "sparse"... done (took 11.95894511 seconds)
loading group "broadcast"... done (took 1.002593647 seconds)
loading group "union"... done (took 12.964658199 seconds)
loading group "simd"... done (took 4.668575457 seconds)
loading group "random"... done (took 9.67321878 seconds)
loading group "problem"... done (took 1.836709893 seconds)
loading group "array"... done (took 21.246595211 seconds)
loading group "misc"... done (took 1.699747668 seconds)
loading group "sort"... done (took 3.463660698 seconds)
loading group "collection"... done (took 17.65976049 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.526312341 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125604999 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118724983 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119708233 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.151262173 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.115647455 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.129051538 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.088314882 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.808040114 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.148944069 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117929517 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432498443 seconds)
done (took 5.184462125 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.175626956 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083038495 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085915642 seconds)
  done (took 1.294635977 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066650451 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12307009 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066828756 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067337788 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068000996 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066502225 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066743365 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066461561 seconds)
  done (took 1.651971293 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07276105 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.070044521 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.067102016 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06945628 seconds)
  done (took 1.40728394 seconds)
done (took 5.733489154 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.788280187 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.206990355 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190194461 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.411635628 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.132814456 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.159360386 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643945918 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.347446296 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.188263297 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080417083 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.109033805 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.328621177 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.111428065 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.641143433 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.074187462 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090527021 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135806184 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.404592377 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067366747 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.084181149 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.08894676 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127570109 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088156897 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.077001827 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.152685298 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068547192 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.136581693 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.081698289 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.067129135 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.212259681 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17389032 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655023266 seconds)
  done (took 10.292191176 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096713206 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.09761712 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071235668 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125626801 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.099713035 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072312048 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073098773 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.069713269 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08963574 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130964293 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091295037 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.104558512 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06833055 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071048259 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08784433 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.207693703 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082947473 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08449113 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072500241 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077737245 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.108356277 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080689576 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080090321 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078967022 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.133006503 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183223688 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.097897184 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100474166 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.069140108 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.081680406 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117232667 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129347696 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06803051 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068527991 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127728358 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09754923 seconds)
  done (took 4.658887665 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.020194287 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144865411 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.09029319 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134852409 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065159527 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111861298 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.067194777 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083690604 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.215610297 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.475370253 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.597697018 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.112324756 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.086108847 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106432242 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069438115 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.070768453 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069212425 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.505984955 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.096352421 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.110448206 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.084324227 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073081789 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.072008636 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.359123086 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069869593 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065972105 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071092403 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.059237076 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.127672238 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068025317 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.947619131 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.130978783 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068322769 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101914093 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.17043762 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088053809 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.272862492 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068791654 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065079923 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153230717 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070805264 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067010386 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083432119 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.103982705 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.113677593 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065539665 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066769275 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164007089 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.065121357 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.07961901 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.639051836 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.154274553 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076206689 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063719673 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.256017791 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.088343035 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06862296 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091018279 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065601289 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183969303 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.133341952 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068402482 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.066758817 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068179727 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.069468607 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.360431721 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066633413 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.874674955 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070663288 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079684962 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.071358497 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070136552 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072908693 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072940726 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.08818218 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066627972 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075192536 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066090364 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065744429 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066855017 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084031013 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.379444431 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066462158 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068001034 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06522793 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065603235 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091141144 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098998992 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066608105 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065583403 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100002135 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068418998 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06672668 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107242023 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066631731 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083555231 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.069508939 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.1133774 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067468818 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.187429132 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068106015 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.099780356 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070282582 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064501768 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098116316 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.08033723 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067579197 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.423955388 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066155024 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.066055142 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068026444 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066893049 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069284606 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.067104043 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079084833 seconds)
  done (took 21.215780534 seconds)
done (took 38.314080307 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.236699799 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.083062664 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078123232 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077269359 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.073965919 seconds)
  done (took 1.767762818 seconds)
done (took 2.965222869 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.122675279 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100180086 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064871399 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096867328 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06432011 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102144906 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101049987 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081545783 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.100771828 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064258371 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098284379 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064389212 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066062317 seconds)
  done (took 2.347892503 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08356377 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083478519 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071233499 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085053414 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065024959 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086215264 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083474145 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.091934248 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084219777 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074852405 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065695675 seconds)
  done (took 2.068659606 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082520613 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084428027 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069673357 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083501679 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064685387 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084372754 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083528309 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086443667 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082688061 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075695926 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065732525 seconds)
  done (took 2.052258903 seconds)
done (took 7.656909318 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077322976 seconds)
  done (took 1.258610925 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593001695 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.09901798 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081927733 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111202024 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.195481154 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12242414 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.274847028 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.088608585 seconds)
  done (took 8.929970079 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08979474 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068256245 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086222303 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073644122 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070900097 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071923728 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074957127 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.072828565 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072971494 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071269513 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070323928 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070485872 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.074646945 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073357606 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.072084446 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073586248 seconds)
  done (took 2.442331417 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092555946 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094754523 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075833866 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076992705 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074446587 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073908866 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07608359 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075737101 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.073198399 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.07480177 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077265705 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.076058641 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073539443 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.067129813 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075663839 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077978892 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.0730297 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.076245835 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.077069715 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077004832 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.076790048 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066779987 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073610838 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076199916 seconds)
  done (took 3.124777449 seconds)
done (took 16.945995862 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114104348 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071361375 seconds)
  done (took 1.375636397 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081355163 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083842661 seconds)
  done (took 1.362000997 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082635104 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06623208 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089643087 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.077934151 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06668163 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.065641515 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087960376 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066958962 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066612426 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.067979095 seconds)
  done (took 1.935981484 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068258457 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077192812 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070705327 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.083114989 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075759637 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066213795 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074448377 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069712729 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080376122 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.064697167 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073260379 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.084882668 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073011293 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.086294185 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074698342 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070535432 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073102754 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069012193 seconds)
  done (took 2.537024489 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065319637 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066032718 seconds)
  done (took 1.33448143 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067762544 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063882057 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069129082 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068143688 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065234703 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064576307 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.065105381 seconds)
  done (took 1.663766932 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.391965287 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116645525 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.319648709 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072497372 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.084252549 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.26191744 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066932566 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072770229 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.072691069 seconds)
  done (took 2.708997324 seconds)
done (took 14.123007074 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079636358 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087159539 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.09889612 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380316729 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091037069 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065928128 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113989275 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.192446592 seconds)
done (took 2.325611752 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.213033781 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.635999122 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.402328491 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208113288 seconds)
  done (took 2.452187197 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344294176 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.089435573 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060396233 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.069225764 seconds)
  done (took 1.778608168 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065496934 seconds)
    (2/2) benchmarking "read"...
    done (took 0.069763038 seconds)
  done (took 1.34540293 seconds)
done (took 7.003028679 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067031876 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.085284 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.06764411 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.065879935 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.067974244 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.065410325 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06558557 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.069406316 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068417868 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067845904 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070934549 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06768629 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067692114 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068312121 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066226745 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065228191 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068047097 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.065083023 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065065812 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.06577313 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065435934 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067879346 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.065320286 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.065330293 seconds)
  done (took 2.87136022 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085067726 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066228825 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072024669 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072425281 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071861644 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072931226 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.0728698 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067673123 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073363876 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070118517 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070991943 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071754495 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070247776 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071809862 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070234677 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.072328424 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073333694 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068110314 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07085147 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.07169589 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073244011 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068141116 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071518072 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073332723 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071257426 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072601045 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.070865489 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067979594 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073391935 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071392409 seconds)
  done (took 3.371349979 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070220853 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063169846 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064043354 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070587491 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063866742 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.063990538 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063256268 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064187015 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064331444 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063911103 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064726615 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063457681 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.064276951 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065863541 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066631172 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069440563 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081713788 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066482547 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065338817 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066311302 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069066045 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.065683759 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.065915632 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.065455399 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06612303 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065767043 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.066853843 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065854851 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065938837 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.065305101 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.068816929 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.069535226 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.065351432 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.072557604 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.069765876 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.065259027 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.069302799 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.066094777 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.066538463 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.065764291 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.065552127 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.065189857 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.065588542 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072139352 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065385567 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.067129812 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065902072 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.067719384 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065736152 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.181954211 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.065709265 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064960842 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.067745125 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066687102 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.0695372 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064914072 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066179088 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064620084 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.066151001 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06577273 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.065050448 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064802418 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.068082936 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.066429346 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079864887 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071774357 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.065187246 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066170432 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.06585516 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.067917547 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.066616839 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.079051444 seconds)
  done (took 6.161437606 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089005907 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087696527 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065144595 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067587861 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063531365 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066021077 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072157763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065685626 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067095769 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083846785 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066103096 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067664082 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067532137 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069716048 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066000499 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067174037 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074542437 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06365702 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066596019 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068979179 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066770847 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071773345 seconds)
  done (took 2.77918568 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.155855269 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070359378 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105916357 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074900912 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.070046485 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077081277 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071998119 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072374818 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071962509 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070135485 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069019926 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072161326 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071193753 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069139072 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069602738 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069133336 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07130642 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069388435 seconds)
  done (took 2.628520099 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076293521 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066660723 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088160746 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067666416 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067625299 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070218347 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072195395 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.076092183 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.070148703 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067696092 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.076286246 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070495604 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.070151723 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067450192 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070059071 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067774776 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070184519 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06756488 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075671042 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071796639 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07164546 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075839173 seconds)
  done (took 2.806086139 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079653536 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06873796 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081000813 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068135342 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063445483 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066205741 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071759369 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067357133 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.072152899 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069244972 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067513866 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065841673 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07091579 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067009273 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070549103 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0671628 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069577992 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067169757 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069360102 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06299535 seconds)
  done (took 2.615242679 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087313438 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067285293 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067876031 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.0751846 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067368299 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067661681 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074836128 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068301839 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068193653 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089095233 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067911424 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067918789 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075738082 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071760598 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068801416 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075228002 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075713868 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076354182 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0684941 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.069342362 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090937648 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069493438 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076898563 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069694396 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0700652 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069689456 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06955567 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.073998363 seconds)
  done (took 3.27093253 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067330432 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066911301 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063892888 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063001155 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063297002 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06440831 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.06331771 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063424002 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066666798 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063419559 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.066380455 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066076236 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066105771 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065634623 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065945784 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06695071 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065546578 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063665945 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063516823 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063428717 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065958772 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065319114 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065965878 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063676718 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06419608 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066242038 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063612007 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063269007 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066083443 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063175227 seconds)
  done (took 3.180205967 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075726207 seconds)
    (2/2) benchmarking "in"...
    done (took 0.073097866 seconds)
  done (took 1.383298524 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062839675 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081127771 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.063583445 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071230199 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07140715 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067890289 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07407838 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069372433 seconds)
  done (took 1.792437266 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.08218723 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077517835 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068235051 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080100601 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077263925 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.083219584 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13553684 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067298791 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072609184 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064112107 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.07963863 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065558567 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072874258 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066546114 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072308191 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072758398 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064202106 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071830469 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068130892 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065048826 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067377141 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07453699 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068510882 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061694408 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.06763788 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.088244506 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.077161975 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065605096 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069249999 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073061862 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07220758 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060019534 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06649364 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067255339 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064795539 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.078004459 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083947339 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071190216 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076152696 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066744217 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075482875 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061334168 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070439397 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072442295 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076597979 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066015828 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066474276 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061450491 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.06380012 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068445542 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063050161 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070415502 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061600067 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07573883 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.071493559 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079703962 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06701558 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069800398 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072023091 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070937872 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.075128066 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.070552977 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070373356 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.067798335 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077591796 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.072892861 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077375298 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062405764 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061975679 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066124564 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077974512 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091507451 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.07343644 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06661723 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066878114 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06345679 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07189428 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069030558 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074341156 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074828858 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068643148 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07347613 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07497849 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06854872 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070599928 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.076354031 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06656076 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070912602 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065960253 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085035965 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066910413 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.065598201 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065798157 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.079247928 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.071794735 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067998696 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06628339 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075556953 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062308695 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068315681 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068896884 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068375689 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.079539131 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072415446 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072432487 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076030973 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074740134 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067540682 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06964693 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063732246 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067527528 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.065983554 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074210507 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061576647 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069721915 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068011109 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.067433208 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075866379 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065427516 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067482555 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074132656 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072559048 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.18930835 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063737927 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070452872 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067253737 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070111114 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075190581 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065411019 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06145447 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061020498 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070613581 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067516416 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071017675 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072885488 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072066785 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.06248805 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066691164 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074068539 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.07784167 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.06982172 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069098114 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074989097 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069946924 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06815785 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075792069 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071473376 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068005152 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075429618 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.070039854 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063781888 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071883575 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.071846057 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067409633 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072263243 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072494044 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071309015 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069493147 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067526447 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075958382 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069078965 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067886358 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06805313 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.066515167 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080021675 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.070109901 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.06268296 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063864989 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076170505 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065297176 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066934977 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064979538 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069256889 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.0673692 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064697004 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.066961927 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068681336 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077519368 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071383169 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066730881 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.072294373 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.078648849 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068359917 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.070970252 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068348077 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069305798 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068146109 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077634886 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073327802 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073070022 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071347318 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06439708 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073858585 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075004268 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067290349 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065966968 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066936501 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.07218229 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073855049 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072376973 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068128087 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066125517 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068458861 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071363568 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.070958104 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068780847 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067292253 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074057652 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066562614 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074552508 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069255701 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078373784 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071079507 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063187802 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070715315 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066956688 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074283817 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062785753 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06649163 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067226578 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.069571469 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.067508828 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070562157 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061265583 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073365789 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0741394 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067197468 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065670678 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066284195 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073561305 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067687112 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069581554 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069438302 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071996221 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077226011 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066750332 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.070408103 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078061162 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066821988 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060314709 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.071953471 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065634818 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065870272 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06673277 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.065086522 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069980536 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.074204442 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.20052321 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061187477 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07026199 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065719212 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065863704 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.061953198 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071659857 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.070168271 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067671541 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073391588 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067448366 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067108969 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.071198629 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065776486 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067465886 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.0676978 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069973035 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067240293 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068630291 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066324755 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069473001 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065817887 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06389937 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068819888 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06676255 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.067182405 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071882806 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066211817 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06765301 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068740197 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06670762 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068076743 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.067053197 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065902904 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069757705 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06727784 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.067106659 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069293747 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061391166 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073713927 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066423855 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074481126 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066975005 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063307231 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073234521 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069042531 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071835866 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067186902 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067395694 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068338135 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066298635 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070502481 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075470271 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067153938 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078519129 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076705046 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068811776 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071292115 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069525251 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070107077 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067543937 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069582897 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06934973 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069319723 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068109242 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073501598 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.071241592 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069373643 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070287672 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069499574 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069012708 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069337408 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063337591 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068208381 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067947273 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068799779 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078383489 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06921426 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067706958 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067577593 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069461407 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067309734 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065450103 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076512458 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077615262 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.06903469 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075423058 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067789021 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069925035 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078000398 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062042717 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066473578 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065789278 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066425085 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076081895 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069158001 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078373757 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069189698 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067930472 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.065277254 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07002371 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067456617 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062284739 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065518562 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070334187 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065902095 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065922129 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066468793 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069388355 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067424144 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076176732 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.066082126 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067625162 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066603302 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063067132 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.065395813 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064851605 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069183787 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.066847112 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065295158 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.063626997 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.064997365 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.066552918 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067508403 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068709121 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067236871 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073821721 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067228944 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069259687 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069652692 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.19165077 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070640535 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067920322 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.068437106 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066962752 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072945411 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072754246 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070152397 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.078558437 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069219901 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070519372 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070052852 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066927475 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068551658 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068457207 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068987574 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068473909 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069455259 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077709332 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.066808548 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.072827455 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069316777 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.070093225 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075754679 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068584095 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069743318 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073214698 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.067718848 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06960017 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076520071 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072545751 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072001936 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069063265 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070528576 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075176288 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067483324 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074968598 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067896832 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.068369695 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068678423 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065972294 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066966584 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067246081 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066166458 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072669913 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067931677 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.06731413 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065558088 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06461233 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068271814 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070042668 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074687488 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069361485 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070468903 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.062029318 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063443411 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067470586 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064754442 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.070121222 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.071188971 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07438908 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.071625294 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069015172 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.06835952 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077104648 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074032836 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072795134 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.067024668 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072579666 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069791209 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.071041675 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069862207 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.069199356 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070065036 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.072580555 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070576708 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068127048 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076230226 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072593534 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06959512 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.070023376 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070026969 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.069272636 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0636256 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.069016402 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.070232561 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074004356 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070784411 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069452575 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07923046 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066489777 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068804954 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071838887 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068315049 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.0734148 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063055936 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070073515 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069509036 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069032477 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063640099 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06781203 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.066857149 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071565927 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.067998478 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063826274 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.080125335 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.078294561 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.072179866 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067971057 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067243867 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063645839 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06373727 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.067953065 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069622529 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.069957136 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078877776 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067651403 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067354263 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062323277 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06792423 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070860223 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070845887 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065152948 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062340296 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.067099532 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071099917 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073162964 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065997225 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067259148 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070505494 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.200928485 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06596439 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072511039 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066810135 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.073822042 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082708253 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069176586 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070234843 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075475521 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0777673 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.07012363 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064050525 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069285379 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072620154 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069332778 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070094737 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.070502198 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085516613 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072652638 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068282838 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067647633 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072362477 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068209967 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077913715 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069298433 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.068223183 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072012124 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.069514819 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078235557 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071702484 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077363398 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071292398 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072055447 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068340323 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069833293 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067787011 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067546271 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070573911 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069589094 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07410086 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077929749 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068114785 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079649744 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077365962 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070154437 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063865191 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066599092 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066758625 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.062784267 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067675686 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065007005 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065340664 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065449305 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066339342 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068186711 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072108193 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068864077 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067940242 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066513686 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061728697 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069970012 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07142137 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070314153 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064106099 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06808664 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069046703 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.072335697 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.073129589 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.066259959 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071269564 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.070226679 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069558192 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063679044 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075280949 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068360901 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.070821875 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067499192 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068656958 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068627956 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071690066 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073562351 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069622051 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070804113 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071876941 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070866463 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065357536 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065180311 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07391884 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065911208 seconds)
  done (took 43.39763109 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100183399 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063950756 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062001059 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062807971 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075157747 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06395061 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063379249 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065068306 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065117204 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066559084 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063925932 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063905955 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072244448 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.080286825 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075363238 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068893986 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063933633 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064892326 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063761109 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064666842 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072635486 seconds)
  done (took 2.771615725 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073937708 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.08000883 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076820854 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083961605 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072561951 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.07230992 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.077027955 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072145852 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080643073 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074462319 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.078876954 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070378454 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.071910932 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.071785455 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072021875 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071074754 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077602565 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070588535 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070496257 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074621935 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070681866 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.075854292 seconds)
  done (took 2.948242416 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067706378 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065843836 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068869404 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060860067 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066167277 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060783335 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069541404 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064211532 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068782056 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065246822 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065276799 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065732463 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067752074 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060995775 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065822036 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063816837 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107149776 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06887971 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066506107 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066695187 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061118901 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068312074 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061145952 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061781391 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065070649 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069309105 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066518987 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064183524 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.0654837 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066771872 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067662603 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065454377 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068507295 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067737068 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064648466 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06453446 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065153675 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065537636 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061086291 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065510826 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.068447779 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063155073 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067835162 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068787753 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065243404 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.065657323 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069129237 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067532678 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062158718 seconds)
  done (took 4.570934617 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079238727 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109384142 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.066574867 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090383694 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079125901 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072131936 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.069445158 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089564892 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.062972488 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064560467 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080917081 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078721305 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065482222 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070031081 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.07224861 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065642751 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067911824 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065827711 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070343219 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067131584 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070949523 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.074432083 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081788775 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079729571 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071062283 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.066129843 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065757312 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070142214 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079196883 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071207785 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071615706 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072150598 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080765448 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.067080956 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064089319 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067865037 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080367487 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065240959 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06743035 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063201666 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.066999474 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070884377 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073140421 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081310829 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065464997 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070345453 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065838964 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064665547 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079848807 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069470754 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.07491608 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081141931 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070961351 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067902473 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072139979 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.082319805 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.067500828 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065554056 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069060532 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077521005 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063354785 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069006086 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078493649 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.066784912 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072069934 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078314754 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070177477 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068629176 seconds)
  done (took 6.372092855 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076021815 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095403005 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083885166 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083316084 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075389213 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075198158 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.075336325 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.075616912 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.075366483 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.080126935 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075619735 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115115998 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.071045732 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.077744097 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075101625 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.075684927 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075189514 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07574467 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075898554 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075086144 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.075624906 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.082368952 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075152573 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.082862581 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079562759 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070855765 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.075314214 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07558135 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082937756 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075152846 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087872371 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.075060056 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.075068347 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082911293 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079047243 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074559903 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064857845 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075560467 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074622323 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.074989408 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.07134128 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.082864293 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074943683 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.071003435 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.075822918 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.075661483 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.082723348 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079224609 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07761705 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.080036223 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.076133154 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082072225 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075406769 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075266465 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.082348296 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.085762079 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08293425 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083571528 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075347345 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.082932044 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082818954 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.085530934 seconds)
  done (took 6.200183219 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082574967 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07460064 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.082135974 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061432231 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063763514 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072252183 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0642403 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06416343 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.07430658 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074083482 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.075938503 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071704786 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074219745 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075823313 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071583208 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074258608 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071406788 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071436232 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073776336 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07156647 seconds)
  done (took 2.77720905 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073958713 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08340366 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066849195 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071967106 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068925117 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071422125 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068929382 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069491342 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066934987 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069520222 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076155923 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075901871 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066922531 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071517014 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07539829 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071231207 seconds)
  done (took 2.47392793 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.083325404 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072736926 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079495477 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066710168 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067045743 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062609538 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066630815 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061542725 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062369437 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.078205925 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.065794367 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.076173149 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065730766 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064991658 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062731089 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.071021235 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062214666 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063252649 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065941556 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078369987 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069302156 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.06449256 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.068774976 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065652303 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068461769 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072271772 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.066826755 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068111711 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065083686 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068031441 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071121646 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069797291 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.063131147 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063328168 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064797959 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063467825 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06548761 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.065728661 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.070758697 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065265868 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063832283 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.067994985 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065493587 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066162814 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.061724695 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066178578 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062483026 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067507312 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063700272 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067748942 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065134639 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.067945196 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067177448 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.074202923 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070256486 seconds)
  done (took 5.040201467 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078812246 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071097439 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063808603 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065314665 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.070273259 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068956021 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070212745 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066969514 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066901073 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064557871 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067201473 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06867056 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067119499 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069732581 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067310696 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06951533 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06135894 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067057791 seconds)
  done (took 2.561727877 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071172279 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066401591 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073607954 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066013087 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065510621 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068529592 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061563544 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064453793 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064632665 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065860762 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065634038 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068575796 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065168024 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.067692382 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065509 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066108113 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.06821462 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063999968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065728085 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061669125 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06822879 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064082616 seconds)
  done (took 2.78908879 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.094366213 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.085251363 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.143859179 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.081243189 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086759636 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072594292 seconds)
  done (took 1.896484482 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091327427 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103039407 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068327413 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071332544 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077220656 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071610677 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071692729 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070621346 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080286821 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077827206 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072041995 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080014224 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080011531 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079552045 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077823502 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077075612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070978771 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069791571 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065788118 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082966928 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069906572 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079959398 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0718541 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071401607 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071774594 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079674564 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07963235 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077625549 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071266705 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079684206 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07766737 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071749501 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079840686 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078669468 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071079497 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079718836 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071737014 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085432376 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077886994 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079534807 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070567452 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076985835 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080041761 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076328653 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079830958 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072130623 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07675278 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071988509 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072464121 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088133709 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078206987 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079432041 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080601224 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081043861 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080572744 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088094924 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078118035 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079732259 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078351792 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077424116 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079151842 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07693936 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07779779 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077829742 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077766538 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079310664 seconds)
  done (took 6.438024909 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104192916 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069198109 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072210052 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078732406 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079901003 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072569413 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072229432 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072815769 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072393476 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069359143 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111015616 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073209182 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080222397 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079510473 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072766204 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072111147 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072304794 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079642848 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069515752 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087584309 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072483332 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080377504 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080126667 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079609444 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077741911 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078191071 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072020288 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071816886 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072142423 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07229983 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07712433 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071680604 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079232307 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068395995 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079456541 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072513082 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071814977 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07641597 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071512935 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077538391 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079795049 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085486167 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071827586 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072457326 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077994871 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071598542 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071587207 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068707969 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071968626 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068666782 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078028587 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077628945 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078365872 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079035971 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071792805 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071988092 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071880891 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072161317 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07194155 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077666709 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078654989 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072010822 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086784116 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069790975 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069443632 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077685355 seconds)
  done (took 6.360605685 seconds)
done (took 130.667451041 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.18796911 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.164725798 seconds)
  done (took 1.681839377 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.068605773 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.101296468 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080038753 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.130634603 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06624215 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100279544 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099677967 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077399462 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065841038 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.067572365 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068720774 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070744485 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134214158 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.06623036 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066343942 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068612275 seconds)
  done (took 2.674447253 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098714283 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.168766933 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104967053 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067279238 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.10286781 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.075436772 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067241885 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07742749 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073930947 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067248891 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075221107 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072859754 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067505401 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.07278847 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073419563 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074942586 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066886923 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0748665 seconds)
  done (took 2.82706454 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099913011 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092858543 seconds)
  done (took 1.537253609 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156242163 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.106162913 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.146444912 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350887369 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.162977589 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.148385431 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.143553339 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.143183154 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116615919 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.138754529 seconds)
  done (took 2.952843057 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099616838 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.158392593 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.273285307 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.121717568 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075570951 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096430127 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121079551 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081052832 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083205385 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.083004612 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082605429 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078905517 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102692881 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075864388 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.077053726 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078419362 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.107037646 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.0754623 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076279527 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078450476 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10320656 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068300626 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075820236 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074888998 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079831786 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079833037 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068340262 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.0676961 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.07709143 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076030006 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077632033 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094026811 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078969754 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.108979144 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073751686 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110140757 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079692244 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07618851 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.076613541 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075866434 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080726398 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080769377 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075346692 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078505512 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06733233 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.079381804 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067776249 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.0676237 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079723761 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069411191 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080176367 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079067499 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108275945 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068083685 seconds)
  done (took 6.097395611 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.103014161 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106845297 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073118732 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112738992 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103059339 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.074309553 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.106529835 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09914289 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107740519 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.072606036 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071311608 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072737009 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08511755 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.08773716 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115140091 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.106841977 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073908836 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071539423 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.107958386 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.109150307 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071094861 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099926037 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.094332623 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107143527 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067614431 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070787206 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068762795 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072297328 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079692681 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080968363 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071249415 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081358894 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084629005 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078415751 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067468495 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068881126 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068823334 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079774715 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079620469 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078948613 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078042985 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068681214 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067923041 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069721108 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070981438 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068322111 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078870912 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080999705 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078244829 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069630397 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0703447 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068311708 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069662666 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079795732 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079190619 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.08368807 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082621307 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070971236 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071214015 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07495302 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083794134 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082230665 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08093289 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070101808 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079072796 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068656244 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08073483 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083997394 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068391711 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069851581 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069154765 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069486953 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069596446 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07727604 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077642169 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069688078 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069772853 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067965427 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080190885 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077895172 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067884472 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076296458 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067167959 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068425653 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069159488 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069868962 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077072974 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080010738 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069550759 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06802647 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069078365 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069232431 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067073289 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076735153 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.08000564 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.078972119 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077551525 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06842841 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077171281 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077314848 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069063544 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077292108 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.067167537 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068851812 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068096048 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076110472 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.075252785 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.204676235 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070405894 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069622841 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078541496 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08250052 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.0694013 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078334257 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080678124 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079667858 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068394216 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081755232 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070056034 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080596657 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069750033 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080667823 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070097753 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081451585 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.06887595 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068824905 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070026034 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079556712 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073158746 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069296764 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070583536 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070224444 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.080055076 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082338585 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071844351 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078965768 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.079428808 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.0705323 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079722887 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068855811 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080419976 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069533703 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071048897 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067915562 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.08167074 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069209434 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.069022947 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069579721 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079809393 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069050402 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080685632 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079355283 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068807906 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081404532 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080078508 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077228243 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080564841 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071537955 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069787741 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069688174 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072072962 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079439797 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080606925 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070844605 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069394219 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.077658385 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079918653 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068018456 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078457254 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07849048 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079190564 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068598609 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071253592 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082808434 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080949207 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078610346 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07811909 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078620813 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068911279 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077654104 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080313902 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071412653 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087189092 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070881074 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.085901154 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.081849467 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079466252 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080984142 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.08202912 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079644869 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079771568 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082731066 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06810683 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06810561 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079433605 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068404944 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069626553 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.079644094 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071697365 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071536562 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086049147 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068808584 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079410748 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067752869 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078241854 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066904904 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069441373 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082087526 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067386628 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070775965 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080275409 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.07078398 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078718596 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081850232 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078801086 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06952617 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071276014 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210645356 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079570749 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069944674 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068194174 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072238398 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.078816251 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.07805751 seconds)
  done (took 18.807307363 seconds)
done (took 37.931511989 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.217238582 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166306503 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.186187356 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.12296449 seconds)
  done (took 2.143889223 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119827626 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.105745821 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099754664 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068408375 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103665122 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.068594247 seconds)
  done (took 1.951656515 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.314573193 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212230634 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.189106984 seconds)
  done (took 2.096576264 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.20716779 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.1949029 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.435129497 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.269077524 seconds)
  done (took 2.603058614 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147420377 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092972071 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.070212207 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.088533301 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13772304 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.166358596 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104749173 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129920044 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081738329 seconds)
  done (took 2.458988128 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154131891 seconds)
done (took 12.799868573 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.12709732 seconds)
    (2/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.233666317 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105880554 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.106050387 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.078473274 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.193875987 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091218248 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072352303 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111387977 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.091000516 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073736647 seconds)
    (12/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082681411 seconds)
    (13/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.204222944 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.078621682 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074409858 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.054624946 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.092507871 seconds)
    (18/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.198024685 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.064983656 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.077395719 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.215917387 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.064869675 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.208176711 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092964577 seconds)
    (25/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.080897972 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.179420279 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.079644294 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.163409737 seconds)
    (29/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.09470789 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.167078329 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104553292 seconds)
    (32/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.076508136 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.150988601 seconds)
    (34/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.211478281 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.236234025 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.230518681 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.092260385 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.07991513 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.074538083 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.093427833 seconds)
    (41/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.114385202 seconds)
    (42/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.219247467 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.109772963 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.193105392 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.184788947 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.096735795 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.184859004 seconds)
    (48/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.160690021 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.103700238 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.064440062 seconds)
    (51/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.208634231 seconds)
    (52/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.165476651 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052896625 seconds)
    (54/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.08420025 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073609672 seconds)
    (56/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.160020248 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.087728732 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.124576027 seconds)
    (59/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.102397622 seconds)
    (60/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.077850106 seconds)
    (61/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050736006 seconds)
    (62/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10089355 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098775329 seconds)
    (64/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155528908 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067614676 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.0749767 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051272207 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065465893 seconds)
    (69/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.15633376 seconds)
    (70/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073571417 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195373083 seconds)
    (72/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.098384107 seconds)
    (73/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069471391 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.074424045 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.193357641 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073364969 seconds)
    (77/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.166719978 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.178560611 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.167284095 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.159514537 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075937452 seconds)
    (82/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.114266993 seconds)
    (83/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092168503 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.243549432 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.0942519 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.067697519 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.054766061 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052312029 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066228355 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052114998 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.074865599 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.072631468 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094467661 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076052888 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.202431166 seconds)
    (96/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.076679387 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.053915456 seconds)
    (98/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074774423 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.181100341 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052527697 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067112482 seconds)
    (102/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076593448 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.185159507 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.073349889 seconds)
    (105/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.092538404 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094979514 seconds)
    (107/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.077978169 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.197129522 seconds)
    (109/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.068177271 seconds)
    (110/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.084060983 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05369224 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.083482838 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.190467133 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.070593714 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.076630272 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.145534044 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.069777184 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.078005867 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053943386 seconds)
    (120/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.111952769 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.147922409 seconds)
    (122/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063048475 seconds)
    (123/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.052640476 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.051684477 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.144658335 seconds)
    (126/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070150447 seconds)
    (127/309) benchmarking ("sort", Int8, false)...
    done (took 0.142147346 seconds)
    (128/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07718227 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 0.137701813 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074271029 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09719681 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.075109597 seconds)
    (133/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.054425623 seconds)
    (134/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.06404322 seconds)
    (135/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.160341479 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.074889201 seconds)
    (137/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.072577961 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.096534263 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07476984 seconds)
    (140/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.159986642 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.05305016 seconds)
    (142/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.110584035 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.07364136 seconds)
    (144/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074720142 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.074585132 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.067995502 seconds)
    (147/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071734337 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078495554 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.188746075 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074702221 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.095776968 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068002832 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075401079 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.066862517 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097416294 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.187246545 seconds)
    (157/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.119066999 seconds)
    (158/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.182300931 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.1116335 seconds)
    (160/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053780933 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075628735 seconds)
    (162/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075802016 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.150030393 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091306869 seconds)
    (165/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.290403961 seconds)
    (166/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.052981702 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.164487104 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.070175382 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.070220613 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.070784287 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.116830668 seconds)
    (172/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.114389527 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.078699127 seconds)
    (174/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.054705066 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.053763683 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.068622484 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.054846522 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.177037241 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068486611 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074524644 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115701107 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174649721 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.117889997 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.069479337 seconds)
    (185/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069207065 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.052384741 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05265306 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.074216658 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078150955 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067990045 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076007323 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082624125 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070254818 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.186507833 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090879949 seconds)
    (196/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069036598 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.067754023 seconds)
    (198/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067266533 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066956295 seconds)
    (200/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.052653937 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.06517445 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05228213 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.303780441 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069847674 seconds)
    (205/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.102816672 seconds)
    (206/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100717446 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074990732 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.071470735 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.075407131 seconds)
    (210/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.053589374 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149315351 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077527836 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076734794 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.069052065 seconds)
    (215/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.055172658 seconds)
    (216/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080262031 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082767333 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.092754684 seconds)
    (219/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.054820778 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.108509353 seconds)
    (221/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077356573 seconds)
    (222/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054324792 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.122774148 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.074058563 seconds)
    (225/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.069326351 seconds)
    (226/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055025629 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.053490039 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.066951438 seconds)
    (229/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.053284952 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.152912535 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.06911199 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076773649 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05482335 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.143757777 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069281067 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.05378434 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123965813 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068180628 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092897027 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.053960038 seconds)
    (241/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076796197 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.084342248 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.121029918 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.053993912 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.069941334 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.075549605 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052178434 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092424532 seconds)
    (249/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051335697 seconds)
    (250/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.06787411 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.052139189 seconds)
    (252/309) benchmarking ("sort", Float32, false)...
    done (took 0.133128964 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076970288 seconds)
    (254/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.068492205 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054664351 seconds)
    (256/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.07231745 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.082871716 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065922049 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051405007 seconds)
    (260/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080692706 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.073206554 seconds)
    (262/309) benchmarking ("sort", Float64, false)...
    done (took 0.130546366 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097787286 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088283896 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076947012 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.0934119 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054467862 seconds)
    (268/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.0527846 seconds)
    (269/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.063163892 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073705261 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.067831646 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070684297 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.068266466 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068451065 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.053297592 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06898904 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.067963231 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.067364444 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.054286293 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067851867 seconds)
    (281/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.064114256 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.134120652 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075628568 seconds)
    (284/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.074414951 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066572097 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093303305 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.066541482 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.094497258 seconds)
    (289/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.064363699 seconds)
    (290/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.054433043 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.073714412 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075779447 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06819066 seconds)
    (294/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074952877 seconds)
    (295/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053778347 seconds)
    (296/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.069012745 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.073793552 seconds)
    (298/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.05390831 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055700055 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.113731993 seconds)
    (301/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.054389123 seconds)
    (302/309) benchmarking ("sort", BigInt, false)...
    done (took 0.19212077 seconds)
    (303/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.054392613 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.067312432 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.092248749 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073934889 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.093837091 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184191807 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.053067059 seconds)
  done (took 31.674660399 seconds)
done (took 33.071964378 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083995821 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097314986 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078834263 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.097794233 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.084515069 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.08013288 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076492421 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081753358 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083585551 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084815481 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081947358 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.057000352 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077022079 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.07728336 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077717425 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.095354302 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08136704 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076037612 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076219836 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066974217 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075398851 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068553906 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.069838783 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056287058 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080973169 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074666212 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.075365706 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.0769167 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067947905 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068312984 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071603908 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076052467 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067705901 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081260337 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074891248 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075636205 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077645508 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079927375 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070212886 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068098639 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077328796 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068144694 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.0753187 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076278325 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.074523413 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074621466 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.0760862 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.080699163 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095448773 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071364076 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077350575 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079299044 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079640465 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075666391 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072504964 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075899241 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073504826 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094967764 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076235151 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070930353 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076827496 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076668301 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074541994 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076620031 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075699809 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.0780114 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076199503 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.071549658 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075130296 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072362281 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.067530066 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075085895 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071870811 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067603756 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.07915358 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.080326296 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066123041 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073929273 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075819279 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074014621 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067235369 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070293419 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06942954 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074598066 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070613195 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056261335 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071635664 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.0742391 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066542467 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.075397404 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.074798348 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075113396 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069584772 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.078529903 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067597006 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073399355 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067798083 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.067377523 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068955366 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071599786 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06732937 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06988523 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077308257 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069093105 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074211044 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081743841 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068115107 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075472333 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066919418 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.066866327 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082403498 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.077145485 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067825457 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069653014 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066696185 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075958296 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066537553 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.067537145 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067293006 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067215439 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073504724 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067288276 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070236848 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075223176 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08050386 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.066303339 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070517618 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06940739 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.066388428 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072803823 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067158954 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.066955085 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067965476 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.063534892 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069103992 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.066821682 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074232748 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069405511 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.208853374 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068072773 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074596678 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072010929 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072516572 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071640266 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065488405 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05950363 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070097804 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070948714 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069906961 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067562868 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069641729 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06890705 seconds)
done (took 12.823385747 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068085457 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145070193 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101610483 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099495021 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089956264 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069636085 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079320276 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105989195 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070532035 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.105986777 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.089862203 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086330185 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.114846353 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064453147 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066550069 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070396425 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066833567 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081735897 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101556316 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.0873043 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116002981 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.065335145 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092824588 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.089515381 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.088842223 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.104189218 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069622541 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.070216547 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069381445 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093689554 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.088660277 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070348065 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066646786 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098287216 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.094080072 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083905011 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.066474196 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083261326 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067264287 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066132723 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.067362742 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099263006 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.08147252 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.08095799 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070172802 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071529861 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069901404 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087385671 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.093055491 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.082353111 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.088043378 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.10236953 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069691532 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.065589479 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.066149481 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.089735973 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.067577675 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071393032 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.068850779 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.070951475 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.068273811 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071930196 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.083768727 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083423188 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07298536 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.082999304 seconds)
  done (took 6.897564173 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083591887 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.092950192 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086246084 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084482415 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06595749 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066970716 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.068398034 seconds)
  done (took 2.039429747 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068243174 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.092301947 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092813678 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.093692238 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085020134 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.09197081 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078344234 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.068995615 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.091527485 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070590124 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091682363 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.10477669 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072986433 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.077541437 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094790868 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069498725 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094517561 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068841674 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072771843 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.094551538 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.072000371 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.099574518 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072739764 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070152977 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.083583749 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069212357 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117851748 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07345235 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070216173 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072242209 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066631333 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110767073 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083508488 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077140031 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068674352 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084050799 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083961556 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067566725 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086144721 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078393375 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083510881 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069417323 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068964141 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.066795812 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073594295 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079472403 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070261937 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06960146 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071996779 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089955311 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06952034 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083478464 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071886778 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074972809 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070255274 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075597923 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079194825 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069454619 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08963142 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070696915 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086888971 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086019604 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.083163403 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086197614 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071402272 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08352807 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082787045 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071382614 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070790558 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072012338 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086047665 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067321361 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070490279 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079633314 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07060254 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09314937 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093372737 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071186549 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083305382 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069797453 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069249461 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069329313 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093574042 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075044885 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069467583 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.074500631 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072229375 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067426593 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068432596 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.073080636 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.067656116 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071147737 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072432821 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072371708 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07191721 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086912269 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07178838 seconds)
  done (took 9.087986853 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.070827001 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070440898 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.072550729 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071012797 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.071082754 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.071252551 seconds)
  done (took 1.942461094 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094636067 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070945269 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.082382786 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.072021272 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105147449 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087674075 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089859971 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.078986393 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083703592 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079042378 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087180399 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.088526524 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094048889 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074628903 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.089330633 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075012718 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.090528149 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078431864 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081475742 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075572852 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090403779 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074932541 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076125151 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085545027 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079219816 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075151945 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.069591468 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08210702 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082320033 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082328538 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.075066309 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079038178 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.074052923 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081418414 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090917629 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073893218 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074562078 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.079830395 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075087405 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.078040412 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.09043301 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075420151 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07763389 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.079382993 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079029816 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071239101 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077064974 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075672851 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086431439 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077235813 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077416562 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071356471 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.076040926 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077644337 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070930239 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078242849 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077506201 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08739252 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075071728 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073608153 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071715173 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07914084 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.080839901 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.079895028 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082149955 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080464814 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.073683146 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075482716 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075960724 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074572225 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080686568 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.072722211 seconds)
  done (took 7.233664659 seconds)
done (took 28.682983606 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.53913443 seconds)
  done (took 2.018805913 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.625285591 seconds)
  done (took 2.131256358 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.358643536 seconds)
  done (took 7.860582411 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.411615477 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.525373609 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.726761631 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131128862 seconds)
  done (took 3.331132294 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.709411354 seconds)
  done (took 2.224183558 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.219769932 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.205364406 seconds)
  done (took 1.947100216 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381991011 seconds)
  done (took 1.885357346 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.147206874 seconds)
  done (took 2.651238471 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266114015 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179507871 seconds)
  done (took 1.9550658 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.491360754 seconds)
  done (took 2.000497013 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.866026249 seconds)
  done (took 6.377837935 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214910676 seconds)
  done (took 1.769270011 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244265595 seconds)
  done (took 1.75480929 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.708821623 seconds)
  done (took 3.224185124 seconds)
done (took 42.642815159 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.084667513 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084967853 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.085440528 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.078584604 seconds)
  done (took 1.829775 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081114783 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075939494 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.080947303 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.076480342 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.08058622 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.076268288 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078167599 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.079468048 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.076502323 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.076827256 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076774477 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076247936 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07839561 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.077678528 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.074755701 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.079175584 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.079788728 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.076139079 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.078866486 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075249274 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.07390472 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.078501745 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.078515042 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074861427 seconds)
  done (took 3.377386856 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080947106 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.075817673 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.078549998 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.075291531 seconds)
  done (took 1.83243567 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.081601965 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.100929612 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.094181759 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082574936 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.096551028 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.090426892 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072777751 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072247261 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.07384648 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080713337 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.071688504 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.100679582 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093182273 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.08104512 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.083135258 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.069281613 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071894914 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092148073 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081574845 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.082015928 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.072904413 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081066213 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071049707 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092268667 seconds)
  done (took 3.50941251 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089252398 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.10987848 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085093792 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091970824 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.094475517 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06861289 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.091752379 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.0949475 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132376942 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068702647 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073827392 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06877998 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.0759294 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068196905 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085223084 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.111685797 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.115670652 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.072017729 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.101411639 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068762868 seconds)
  done (took 3.29518683 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.075812489 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.07292138 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.06936512 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.072223773 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.08030857 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076759137 seconds)
  done (took 1.9756505 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071537718 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070539346 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070868661 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.070132376 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07581188 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.070963575 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.069317945 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070551949 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.070886348 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.070547578 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.06978154 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068939215 seconds)
  done (took 2.372450909 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.20939875 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070383385 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069505989 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.067454686 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.071125385 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.068503969 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.084672262 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.071449056 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096713115 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.069741209 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.069715642 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.071524977 seconds)
  done (took 2.545592163 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2122623 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079528988 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246557969 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156327074 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115554398 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121182508 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117493302 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118825685 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.146448587 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105036876 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174473766 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171637572 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111921955 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141997427 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093279944 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.105317329 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159444853 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168695787 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109594324 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172009613 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151042142 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13121146 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154866119 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111940514 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110420333 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126837745 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074497956 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084150768 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175268726 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137822946 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149022532 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11453082 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096350229 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182876421 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175757078 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141288594 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146876534 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084723039 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.105475529 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.135054771 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200144725 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091612421 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166040854 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111584356 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.218962809 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134601854 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12210106 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.121851894 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106572995 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091083328 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148717973 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185970495 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138321025 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08887421 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126920311 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118022054 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.120244823 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118219521 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188687512 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166713498 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132652745 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071759106 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10925661 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155401698 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135740279 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.114011221 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.130481913 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09600551 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140511177 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162702043 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12581723 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149720992 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.121756932 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093161177 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124588425 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146482225 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132274091 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164581953 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126053243 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.073555331 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124420796 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102395573 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081125663 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.147047996 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.075780833 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182941852 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101563056 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109280544 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125929049 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112081418 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113247767 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163512822 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148511937 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106355396 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.067644867 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250178902 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.123438303 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148904098 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087922033 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109961838 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118484926 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.080141151 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141277794 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.077632666 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125356416 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.078696886 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129290699 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131280564 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.078431557 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125134409 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108557358 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.105899708 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13729432 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167775677 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090860079 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.08402852 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170606989 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123286809 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104893217 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145930741 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158601637 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.103414302 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101904617 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15010109 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185367825 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094137064 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168591036 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110699286 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.087618774 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088629388 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124305855 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112649605 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.125132379 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082046477 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118579155 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170302556 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075306212 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.097446263 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134709585 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079594941 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081478829 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106140181 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105510795 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.095960464 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100739218 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103434444 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136101304 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123889414 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106840886 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124285239 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098315394 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31449606 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089256617 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.10356033 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10646072 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072195238 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.141745883 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163888693 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084198763 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169594734 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.127686521 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120493415 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122433723 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084078441 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143401702 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083680511 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074016415 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150773677 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116506108 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114880228 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155466991 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119158616 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126991718 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.122722635 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134226718 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133276659 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.133453487 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107807449 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08926749 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116741366 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133364549 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076638687 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.094408459 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.083052162 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109174562 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101413678 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086773765 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146582992 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128754348 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113887032 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117386057 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098558012 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151390456 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.07853239 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132921146 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.124803626 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099565668 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.156592712 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153285833 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131603113 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099401606 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138871286 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070531129 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074092047 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.088086828 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123417116 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082592478 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08303699 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.258979969 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150717444 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132212154 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139887046 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126551653 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125603585 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16414353 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074105155 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.121626576 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153739578 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126377874 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109531287 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095118907 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103601139 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149264698 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112760787 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189065876 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121436227 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128597684 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158654818 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105027528 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083540084 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107561944 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141548441 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108481463 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150074987 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103770576 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092700061 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114589071 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077849091 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10258883 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131620195 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123309852 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140317526 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.120615341 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137396006 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081129653 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120578512 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126732493 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124966449 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064516614 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121832914 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162808442 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098680534 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122949219 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158109137 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082564067 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139256841 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178761988 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146162227 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088840444 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254979255 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.122289863 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130833086 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122595504 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142590886 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108580293 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140443563 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110444131 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.087242065 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088869598 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099478377 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106448308 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.096080891 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107323318 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115019876 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.096188144 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132980227 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104766373 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110512635 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119340549 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.099675666 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.091202598 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097111854 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1778141 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120333163 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171925554 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.100454597 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148984842 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16757171 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.077947182 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083266578 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.081530682 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146522876 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087642583 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135805141 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.110031346 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122099367 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128040282 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148602639 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100446345 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.071620228 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113769859 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137598085 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128455287 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103100871 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.108942137 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168950888 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.106241651 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083580648 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118531832 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120712816 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107224595 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174567966 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.064812026 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110361106 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078444459 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081707343 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128179495 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294479596 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084426066 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108382536 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125662091 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117495521 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134085524 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109872672 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114575058 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131708923 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155191718 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133921247 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.095125802 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117213858 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134690727 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162793927 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110560177 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.101623401 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178872325 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157995251 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.165282646 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.092718864 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117815245 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117820272 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113598504 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141542691 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085530433 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169636891 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086276091 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140665456 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108026409 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093928853 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133765537 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113448959 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091791434 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154164133 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120508183 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083934945 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078181744 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120401867 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122375759 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108367542 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07598173 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139457618 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.074156203 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132957954 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159843108 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081151132 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111713763 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10057883 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081022585 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106573068 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101605231 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087816766 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.239015226 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180562295 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.09269888 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158304217 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139767107 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118972777 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142805861 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107352633 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.645405999 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.081986949 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158804702 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122460582 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182157911 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10490395 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123933311 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115527882 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126439836 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146375793 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105599227 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.181304931 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133792006 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117579714 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080046442 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103655251 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104414896 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088333218 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108775762 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114714007 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116637407 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09390662 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.117119591 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126050977 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.082618201 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096646535 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160025362 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121525847 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147781101 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145414053 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089525179 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120896034 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139591578 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080514607 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121804425 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154537827 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107105275 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099554064 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.082241081 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.102228857 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159632753 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073669306 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158161975 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117525964 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.254429779 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114940001 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11399647 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133054914 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107892884 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123064684 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093689876 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.11189765 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11385433 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082488477 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.078566205 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106432049 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112361748 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.100410766 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098604203 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100141406 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152917945 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072736912 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09928246 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1156991 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14457926 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175668978 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089793136 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083175985 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11959824 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114007107 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113715915 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121568419 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079789122 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082178709 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081922668 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.080051132 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111987674 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116512886 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11914914 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1161617 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167666786 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084978426 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.235395755 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096383303 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105821133 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070786361 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078597826 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096635098 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098702511 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108572911 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11119934 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162917594 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.096482054 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090643383 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092408216 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.074635429 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083768886 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129514819 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109934313 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11889129 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098468146 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062852061 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106918608 seconds)
  done (took 60.339988089 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.11455112 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.083557179 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09520136 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.144943628 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122920555 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203819033 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154746319 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.189592311 seconds)
  done (took 2.758303473 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.07210705 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.101041404 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.107573513 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.087315723 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069087782 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072550213 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.242162885 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.086172854 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069998977 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103057173 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.08353012 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069449857 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.438810943 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069776958 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071345745 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063721533 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067554007 seconds)
  done (took 3.49703722 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.402679292 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.615166692 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.354532445 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072810545 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.494428315 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.085775926 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.16450912 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129334137 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.074148933 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.525945734 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.398317159 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.127635185 seconds)
  done (took 18.076244258 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.079277562 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.072502647 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.087943847 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.087586175 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07555579 seconds)
  done (took 2.034616379 seconds)
done (took 109.009581447 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.08528683 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.617498433 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054121398 seconds)
  done (took 2.33095516 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.087853757 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.08958683 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089241872 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088087174 seconds)
  done (took 1.993070614 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.07824344 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.080349811 seconds)
  done (took 1.789983833 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.237763341 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.165765403 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096974309 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.086979561 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.084157327 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.083243377 seconds)
  done (took 1.889892641 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.076473028 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078966869 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.076143413 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079953908 seconds)
  done (took 1.941325935 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.081578139 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.05570289 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.057193323 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.061892532 seconds)
  done (took 1.886081728 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.091187466 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.082894883 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082457143 seconds)
  done (took 1.889033922 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107804332 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.090059747 seconds)
  done (took 1.829595942 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.086807631 seconds)
  done (took 1.721075373 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.105767023 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.106580501 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.137941354 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.117553574 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.146194638 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.114941139 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.089354504 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.090266101 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.080371909 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.091132862 seconds)
  done (took 2.713230201 seconds)
done (took 22.202674601 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.083642885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.470890405 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.363914125 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092996429 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.671202441 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.3570612 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994119581 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094154088 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116156887 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068414579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086386747 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.648228425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.986990864 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.421734839 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.97511576 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325911929 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650416891 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069368601 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068469958 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068839362 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.980592786 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068185822 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068667111 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069138103 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.650331853 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.372922034 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068939041 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320371599 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068590937 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070766679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.357723039 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070867848 seconds)
  done (took 16.398185346 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075008997 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.127600384 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077273886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087761801 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071796596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070846192 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.073578089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070966079 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124749615 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070788322 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.090266288 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071376485 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.075813416 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.091551817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.092317071 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071920105 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072704593 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073126677 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072154961 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071630577 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.08962318 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069478015 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071104643 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.06977089 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069186034 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08100427 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069859177 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068924324 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069744954 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070622666 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071501005 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069290758 seconds)
  done (took 4.151245678 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.120139995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.131082543 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076600366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.105425002 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113263567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070720519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143341273 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093971898 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.128159234 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068995132 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.085980481 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070088004 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.107842186 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072368653 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093123087 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071619554 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072751206 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072329845 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071709057 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069293026 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087985533 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069700944 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068869818 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069403926 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069641394 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082603039 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069029388 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068766257 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069279675 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073800549 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075646249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07249709 seconds)
  done (took 4.363927667 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.076455366 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.079472973 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087494852 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088479308 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072944987 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076389242 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077073542 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073304966 seconds)
  done (took 2.285660186 seconds)
done (took 28.841286374 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.083251267 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.072570976 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.075910496 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.085909922 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076762264 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082764069 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071386595 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.079343807 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.076086058 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.075819483 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.076727023 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070988332 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074973222 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070826541 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07847608 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071222574 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083880259 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.075875528 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083634031 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084142006 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.07322083 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076814721 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078505632 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083301175 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.083285474 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083371865 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.081070043 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076453499 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.072567781 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07444752 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.081714478 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.088413646 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071328439 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.083172272 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071258545 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.07096313 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.075555673 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.071311871 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.08375499 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.080401075 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072979983 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.080041963 seconds)
  done (took 4.89367146 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092943989 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.097674188 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089540635 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.065477221 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071243989 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.068912262 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094164694 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063888705 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062978397 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.092548949 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059061796 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.063768573 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.069814519 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.056887419 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06300296 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.059776981 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064913214 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.058474313 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063732915 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.063805971 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094834347 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.056802795 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.081333915 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067005846 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.05931253 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.064742408 seconds)
  done (took 3.509218743 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078829627 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.089927393 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093310038 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133803156 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.108815363 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.082071492 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.08133963 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.096675683 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.089633984 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.068541205 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07132337 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.094094949 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091223709 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074308912 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06830614 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.087608904 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084977496 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070215181 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.074149204 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.096205379 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088114589 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08697359 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.098392043 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.084883851 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067861637 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07106202 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.072623671 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.082766208 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07408845 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078739536 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072946302 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.0724242 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070579795 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.080177139 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072449956 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070763749 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.094218534 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078516462 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.079813146 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069327443 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077171008 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069661752 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.093825324 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128654302 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068977827 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.076000416 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07264515 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07966704 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.069196361 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090127564 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080377717 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068227836 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.07193665 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068406124 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068892017 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082413414 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070842682 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071153711 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077852436 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.074786063 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094305104 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073540934 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08525939 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.069223886 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.077110923 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068898511 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.069318801 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.068490493 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097268135 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070907205 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.113311912 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071621754 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070757514 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.078421136 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076813655 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.07541633 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.069489865 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084721742 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.081023738 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.075489736 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08140988 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075381852 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072780577 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.093220645 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070963834 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.070346349 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.070245716 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.074844929 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07287282 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070211698 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082059204 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068082425 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072087111 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.086314704 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068825835 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069637182 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075140571 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073067607 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067689509 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080158228 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074236108 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069695607 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077822628 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069138041 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.07162919 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.08214243 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076102374 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.068013835 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072987865 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.074299678 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069655026 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.070377127 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071415077 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.070273299 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077127333 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075210037 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072883699 seconds)
  done (took 10.839391924 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.173729656 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.164249103 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.072201679 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.154087235 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079478286 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.082902519 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15836119 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.10057777 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.071982959 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073163096 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073165419 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.117110856 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.111881737 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121169273 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082780533 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.071993928 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.08914505 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121868873 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160073584 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.154404796 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.089518809 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.081167249 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074090396 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072963306 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074551981 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082789201 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.092151929 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.080747754 seconds)
  done (took 4.571031328 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.084432441 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.110318752 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.079494372 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.094217891 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.095329313 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071484206 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.074568933 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.073428096 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085764361 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082135205 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071235002 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077981258 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078408646 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074988015 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.072521867 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078708746 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079305931 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.073225757 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074818407 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.077523264 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.082935658 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.096035875 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.075511135 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071139125 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076713958 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070553448 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067201412 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.088065158 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071982695 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.100006358 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069229551 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.077039563 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.08729706 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072176244 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.071337016 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071116463 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070831229 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070981126 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072931452 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.069480802 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070028926 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.060875561 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070310101 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.082969995 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.078997121 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060028301 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.076059412 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076910096 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.077158643 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068941112 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.074515555 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073448057 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073815401 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.079702623 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075190068 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076709932 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.07281798 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079469525 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.080772612 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071255117 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068760155 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069686735 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077135066 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068587122 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.08002287 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076221867 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.07001367 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071241423 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.073813203 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.078552827 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070981184 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.072945478 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066206046 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.070545432 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.073271656 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.070275165 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069949708 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.066976065 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068316684 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069031914 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.05576838 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069747569 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.05409534 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071445596 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.067478998 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069718455 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.071766039 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.076541965 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084006646 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073117684 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.076036631 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.071055856 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070216452 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073173807 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.063203191 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074305436 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.088641964 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.086378633 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.07150931 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069504685 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.086241127 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076734782 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.069605756 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05713622 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074423225 seconds)
  done (took 9.54095988 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.094931695 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.074099491 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.089033115 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.096508826 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.089905925 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077736008 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.081247383 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07342668 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.087521589 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.077718219 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.081010564 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071494144 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081561011 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081476665 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.073900154 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082371066 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076473383 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089247929 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.086589924 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072003895 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.080386827 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.08463803 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.095200849 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.086367945 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085642444 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.087135861 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.095613634 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.081602678 seconds)
  done (took 4.034154359 seconds)
done (took 39.036220973 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.739986115 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.910812618 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.733294725 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.100261863 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.898490083 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.753500993 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.893088709 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.732491663 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.06167631 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.769229254 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.960127817 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.859243181 seconds)
done (took 65.081088264 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.767610998 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.873803483 seconds)
    (2/2) benchmarking "String"...
    done (took 1.980887292 seconds)
  done (took 5.522615561 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.964378816 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.295543429 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.981714587 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.73158102 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.735726786 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.072588812 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.547235678 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.24128058 seconds)
  done (took 30.271082402 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.817663125 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.974071577 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.398810458 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.43341242 seconds)
  done (took 15.34074038 seconds)
done (took 62.624296238 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.740282542 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.748526606 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.736809466 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.714315799 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.791672469 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.739067134 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.8128359 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.919617662 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.729768388 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.720663523 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.732095149 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.163331596 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.737738455 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.828402309 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.730161038 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.735516953 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.741512979 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.153898276 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.888583569 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.742733383 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.750223787 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.778240337 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.732302242 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.737612846 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.746414809 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.730862116 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.165271874 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.742232987 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.356380657 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.734356253 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.764190256 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.996486733 seconds)
  done (took 203.00754214 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.735303908 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.759822667 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.822207039 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.783292464 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.261410938 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.917676182 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.85292585 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.309043139 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.736520205 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.755229255 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.965608465 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.73477507 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.990734765 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.688024664 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.76385999 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.746058599 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.011106364 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.990853769 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.770394287 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.908472609 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.736608057 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.902673026 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.838028711 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.970825261 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.769705209 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.762212583 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.878281531 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.740571275 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.927068676 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.976496907 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.776538353 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.73365047 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.956444113 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.607115976 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.759689043 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.744898617 seconds)
  done (took 169.255122529 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.118469001 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.738624871 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.736930377 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.738069898 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.748842971 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.736816407 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.859609719 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.860457209 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.341369045 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.49480049 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.789464657 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.555034892 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.732369202 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.736606348 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802753747 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.746332567 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.738225216 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.752065661 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.764194462 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.735615063 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.734994952 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.860237315 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.746473552 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.781063783 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.739979448 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.738650907 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.744593456 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.10977013 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733081171 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.746135025 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.997593281 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.73292276 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.734083009 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.628282721 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.974517332 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.821443561 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.733186268 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.744654664 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.737298329 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.956035753 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.734901341 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.738216906 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.738344692 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.90761404 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.733354336 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.860093443 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.737597001 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.238365194 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.732414845 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.735889699 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.525041224 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.410499113 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.733711281 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.735532462 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.73762797 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.736558804 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.737452807 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.73846033 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.743806913 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.489183093 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.809239986 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.740615069 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.739993707 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.742557232 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.733947623 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.933814462 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.73997411 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.342198384 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.790809227 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.97356114 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.858513425 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.738286164 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.804922477 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.828851285 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.736236988 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.741097286 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.739261474 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.739602504 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.819566892 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.73737381 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.870840775 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.745357422 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.740120408 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.789275578 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.805973054 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.736425429 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.738844518 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626333719 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.74000418 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.740377371 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.046212119 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.804355119 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.736635981 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.739417569 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.74205417 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.869731152 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.85855605 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.522040418 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.741136453 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.529223125 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.741791549 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.893711596 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.746529256 seconds)
    (103/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.745054381 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.918302141 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.741766023 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.822495234 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.743526854 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.743512281 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.742852727 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.77400228 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.740319274 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.799414196 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.742186625 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.116266925 seconds)
  done (took 399.460514915 seconds)
done (took 775.572141857 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.392678298 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.342100741 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.45858344 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.370724223 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.342887986 seconds)
  done (took 13.58002166 seconds)
done (took 15.257698415 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.831492579 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.829804562 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.766494152 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.834069817 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.760306082 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.833257565 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.814092278 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.768129834 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.79894668 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.768567319 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.827313886 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.765227853 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.754644583 seconds)
  done (took 25.029121274 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.978951886 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.990095178 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.811789588 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.984063902 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.791056677 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.974659073 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.900193271 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.89321948 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.894000024 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.758280668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.757806357 seconds)
  done (took 22.410860133 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.977700878 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.98370003 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.818361827 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.986070267 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.793081476 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.977254101 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.909998517 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.895497533 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898459858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.757162647 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.759616294 seconds)
  done (took 22.435154957 seconds)
done (took 71.55364413 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.751055437 seconds)
  done (took 3.428073612 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.776349869 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.933539446 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.759276235 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.754721042 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.755251756 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.752310773 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.754695594 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.752743225 seconds)
  done (took 15.916277595 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.748784611 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.750977213 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.750796691 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.752598305 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.748199427 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.749067671 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.752852211 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.753720929 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.752490602 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.751139236 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.749348946 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.74971064 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.753224074 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.752884823 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.750901205 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.752259642 seconds)
  done (took 29.697117647 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.753476373 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.750156163 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.750881836 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.753520833 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.751134024 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.752354143 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.75222341 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.752330069 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.74919852 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.75012904 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.752306642 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.751970396 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.752361124 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.748957442 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.75059846 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.751382038 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.75145956 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.752464173 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.75457275 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.752490764 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.753960443 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.750065944 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.753596653 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.753585743 seconds)
  done (took 43.728507797 seconds)
done (took 94.449248948 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.636187375 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.12998352 seconds)
  done (took 8.44449132 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.754986078 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.755140116 seconds)
  done (took 5.225244191 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.756261872 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.754085892 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.756694997 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.754666287 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.753446601 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.753926254 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.755071635 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.754047014 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.75697889 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.754997444 seconds)
  done (took 19.230471816 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.754554953 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.7546257 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.749941608 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.755470101 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.756823814 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.75417196 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.755689907 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.754550098 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.754552729 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.753635487 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.756381358 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.755891807 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.754328431 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.753009925 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.75573126 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.754392998 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.75350666 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.753544845 seconds)
  done (took 33.260714801 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.755818136 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.75560314 seconds)
  done (took 5.191955569 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.754649023 seconds)
    (2/7) benchmarking "second"...
    done (took 1.755743245 seconds)
    (3/7) benchmarking "month"...
    done (took 1.752919069 seconds)
    (4/7) benchmarking "year"...
    done (took 1.753304398 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.752572768 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.751970169 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.752562078 seconds)
  done (took 13.955948401 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.756078997 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.915246726 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.988313987 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.419440553 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.762221715 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.760568574 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.744845103 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.760254792 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.761316029 seconds)
  done (took 19.551454938 seconds)
done (took 106.540118084 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.567955322 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.750549043 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.101024559 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.825376157 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.765096371 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.09601661 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.761284645 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.058443442 seconds)
done (took 42.610418012 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.784463954 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.306702571 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.342014905 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.190583987 seconds)
  done (took 12.522199682 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.735298865 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.274479062 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.780784314 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.334153204 seconds)
  done (took 19.827555869 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.116470956 seconds)
    (2/2) benchmarking "read"...
    done (took 2.094828578 seconds)
  done (took 5.897334419 seconds)
done (took 46.718035193 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.758926246 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.755198191 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.759331781 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.757701807 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.759826479 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.755303202 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.756315222 seconds)
    (8/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.761242323 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.759533589 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.758483533 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.759729329 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.762029655 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.761380257 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.759851367 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.75792859 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.75901821 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762635489 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.757261542 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.755644644 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.756664658 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.758740361 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.75977278 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.758323248 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.755710718 seconds)
  done (took 43.890045288 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.761685122 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.757968449 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.761061341 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.759106605 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.758213814 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.760190547 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.760696359 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.757893362 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.760073256 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.761303846 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.758304768 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.759021638 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.758934338 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.756961168 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.762473628 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.758841897 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.760018731 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.759120235 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762914099 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.759555883 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.761450971 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756976189 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.758479012 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.761808703 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.759018273 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759245499 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.759125895 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.760811737 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759429641 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.758439948 seconds)
  done (took 54.472962116 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.767568937 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.772169665 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.762754897 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.762583118 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.76351571 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.763347988 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.762296101 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.763230825 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.760899226 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.760901844 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.761253269 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.763074898 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.761577578 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.761628423 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.763764885 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.765037592 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.760680584 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.761823688 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.763017207 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.762201148 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.765192893 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.764655481 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.764972302 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.763348159 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.761947956 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.76353033 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.763781875 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.763619055 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.761802556 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.762373071 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.764329591 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.760573781 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.763119592 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.764992853 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.760545841 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.759414028 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.767744469 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.774012515 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.764025729 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.763881415 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.762238625 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.764300654 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.764999852 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.762625632 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.763986859 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.764503298 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.76407879 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.764201921 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.765579751 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.764372193 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.765134051 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.763102695 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.761925308 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.76095924 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.764243481 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.764144145 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.764996034 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.764387036 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.765209636 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.764411148 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.766910753 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.764376 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.768096758 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.765147007 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.765872088 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.767012612 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.765082837 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.766241691 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.768101418 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.764126402 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.765708871 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.764960023 seconds)
  done (took 128.700262027 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.76402221 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.762562744 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.760444892 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.764808832 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.763024138 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.763764939 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.75969479 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764659967 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.761594524 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.764274732 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.763102015 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.763928025 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764395932 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.766998698 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.7670066 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.763357501 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.766664055 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.76168458 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.76418439 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.765692001 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.764053772 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.763945438 seconds)
  done (took 40.495598684 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.762794196 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.766217004 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.763027181 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.76776448 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.764638575 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.768410086 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.7668568 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768853226 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768618984 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.765793167 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764240249 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76670501 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.765163777 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762970899 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.766277206 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.764868289 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766517979 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.766652784 seconds)
  done (took 33.477580595 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.762401847 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.765248913 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.769641149 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.76611933 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.765877172 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.767934321 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767023374 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.770203533 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.767857383 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.764125587 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.770581313 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768688659 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.766557763 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.767259092 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.767542338 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.766643022 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.767727959 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76561135 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.768584607 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.7667916 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.766251503 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.769993409 seconds)
  done (took 40.57314078 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.766872563 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.769538487 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.765491616 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.765007999 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.767745907 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.770102466 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.76928246 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.767079164 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.765998065 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.771544544 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76617727 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.771721615 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.766477147 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.765795301 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.765199244 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765145065 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.769094972 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.767564941 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.770091984 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.767018239 seconds)
  done (took 37.046166339 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769994093 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.770160475 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.768110062 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.768679346 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.771733403 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.768579179 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.770551332 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.767954165 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768461562 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.767503435 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.768327988 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.77083561 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.77097265 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.770220678 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76994516 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.770449524 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.769212489 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.768565276 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.772877156 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.771231214 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.77270258 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.769187854 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.770453194 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.767584498 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.770549563 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.770695786 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76570813 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.767528422 seconds)
  done (took 51.242765964 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.767632785 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.771306067 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.770209259 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.765718385 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.764761913 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.767770479 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.770673206 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.768403647 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.771257471 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.768988691 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.772647182 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.772836584 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.773017908 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.769060203 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.771647782 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.77231544 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771527839 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.76695288 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76732228 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.768272042 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.770127723 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773002415 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.770840299 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.769099481 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.76905178 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.771231725 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.768334286 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.76948186 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773482846 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.76804799 seconds)
  done (took 54.789224482 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.791815658 seconds)
    (2/2) benchmarking "in"...
    done (took 1.792127639 seconds)
  done (took 5.282353486 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.766337036 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.773407736 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.774869125 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.768632337 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.768971203 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.772713013 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.774169748 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.770513442 seconds)
  done (took 15.867367123 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.770196978 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.771599289 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.774289677 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.774157216 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.773972206 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.773393404 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.779790261 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.775790123 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.772269325 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.774047367 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.783176554 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.782954444 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.773997853 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.770058896 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.771091614 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.774101905 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.774503961 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.77418612 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.775022543 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.774576167 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.776799773 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.773997561 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.777675119 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.773339099 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.774989441 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.783595387 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.774822855 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.773716251 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.775361794 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.777227647 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.772534441 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.772587906 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.775555227 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.774107221 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.776167382 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.774610763 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.78315774 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.771602283 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.779178027 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.77271763 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.774132454 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.773624682 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.778300075 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.776920236 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.772542806 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.777093706 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.774340108 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.77269041 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.776436709 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.780920879 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.784150338 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.774185187 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.774181065 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.778446645 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.777764955 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.782773318 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.777713785 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.777906635 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.785624735 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.785575655 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.788736089 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.786546937 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.780149351 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.775557823 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.784781412 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.800421258 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.783759609 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.774353715 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.775549925 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.778523838 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.783937073 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.791005239 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.787793577 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.779627955 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.777090006 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.777421076 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.776589649 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.776717399 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.784336678 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.777226438 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.779414008 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.772975829 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.783732739 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802336203 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.777600546 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.778610336 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.777565132 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.777716536 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.778320965 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.788193899 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.778143441 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.775445904 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.776231875 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.776008867 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.777677667 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.777222435 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.776380487 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.779048498 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.777367458 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.779853019 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780440144 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.782520208 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.787965909 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.778304924 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.778194493 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.784003978 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.778851189 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.778477661 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.784547802 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.780281334 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780921492 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.780060717 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.783627364 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.776943229 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.783704855 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.790696265 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.777116907 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.777832143 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.780183098 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.780348824 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.79099581 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.80543206 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.78010958 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.779628506 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.783553783 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.794018138 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780386937 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.78169752 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.780989902 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.777482142 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.777557828 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.78101822 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.781799955 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.781198643 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.781456226 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780375725 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.779693101 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.781317678 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.781901735 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.782050928 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.782424956 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.781096909 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.782189611 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.78380958 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.780539566 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.781396048 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.785681293 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.780831295 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.782448212 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.781767858 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.777808459 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783891915 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.781581557 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.780841581 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.779800402 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.780375276 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.778180044 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.782288192 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.780046358 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.782357724 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.781749158 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.783154435 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.787228087 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.784760281 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.782150556 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.779921316 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.78039837 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.783658503 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.783099959 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.782301016 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.785196948 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.781928239 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.786362096 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.79357773 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.782816816 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.782693931 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.78279957 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.781309964 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.781427463 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.780099429 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.78401474 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.792867683 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.783951518 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.790763269 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.784096404 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.782635453 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.784751127 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.78379224 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.780191572 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.783656231 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.784593038 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.792040523 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.796845178 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.793455605 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.784907938 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.787997166 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.784690864 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.789415238 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.78617842 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.785410291 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.784290569 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.785784383 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.780935787 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.786352379 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.784509209 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.780560928 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.782463124 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.783994475 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.781565523 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.782982561 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.783635653 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.784091611 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.782417856 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.781469441 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.786691489 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.784738053 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.783209872 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.779987013 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.781469042 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.785260669 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.786458916 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.787406962 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.790289749 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.78266056 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.786132499 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788293007 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.786569896 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.783742546 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.786626702 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.78747944 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.787054801 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.792693873 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.783531206 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.785354079 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.791949964 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.783876711 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.785740398 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.786668338 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.788007858 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.784546356 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.789657938 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.795525941 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.787506175 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.786032112 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.782305652 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.783490914 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.787345356 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.792775765 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.785741423 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.786733347 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.78572991 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.786047267 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.782765667 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.783288867 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.789000678 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.787709601 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.786981226 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787974697 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.785230162 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.787549447 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.789204743 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.783211629 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.78641017 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.790012822 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.79861332 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.789451141 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.787584747 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.789794027 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.78713412 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.791816706 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.788700135 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.786182787 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.786319513 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801957265 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.797532045 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.790560501 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.789493803 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.789029271 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.792037142 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.787910488 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.793297298 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.787921211 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788559494 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.787134362 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.788777481 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.786637139 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.788465177 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.789565214 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.788371061 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.789760662 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.794717588 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.788857019 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.789817817 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.788679339 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.789185082 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.788903349 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.786755318 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.789763682 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.791454335 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.790107383 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.785974928 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.78872294 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796740316 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.787535404 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.790748143 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.788011725 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.788360969 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.787388424 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.790758567 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.788948686 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.791890694 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.796515152 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.789430311 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.800277352 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.791722196 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798885888 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.792022563 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.793769562 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.799435875 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.785920272 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.790958954 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.790982795 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.792058175 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796922937 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.790593485 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.790124174 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.794520692 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.791509325 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.790834549 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.793026866 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.791227965 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.789217017 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.791798194 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.797994031 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.792660396 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.796170994 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.792971417 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.78865899 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.790904377 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.788457505 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.788968149 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.793041439 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.792522055 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.79034692 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.789047455 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.79067794 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.794020185 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.793884774 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.797346891 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.790601103 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.790697935 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.797780573 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.792741509 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.79840879 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.793286945 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.79831963 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.791596739 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.795796425 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.795060065 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.791142482 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.793701146 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.790736844 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.79253977 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.793693646 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.792654003 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.79271298 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.792736953 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.795271497 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.790662127 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.793378052 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.791421956 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.792573872 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.79344302 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.801009139 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.821958912 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.79495013 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.7969544 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.789515025 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.793353921 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.798667748 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.79506207 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.791413065 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.797561115 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.805172701 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.804137123 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.795004926 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.79345587 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.791392855 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.795485483 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.79552985 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.793313401 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.793532559 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.794728314 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.793048561 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.794282769 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.796998087 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.796569676 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.797133072 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.793938959 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.792695045 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.803774872 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.794585434 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.795083697 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.793980808 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.793953619 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.797788177 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.79215029 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.793544187 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.788870106 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.796063829 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.79761122 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.803938094 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.803147083 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.7941993 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.795811652 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.794318862 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.794888501 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.796899315 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.79597577 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.793845544 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.793122736 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.793472117 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.79579541 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.79704356 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.792569516 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.795644624 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.795404654 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.795535086 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799306408 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.804519117 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.796003979 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.791983939 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.795765932 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.793531737 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.795919626 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.796874212 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.80247454 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79866742 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.809858592 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.806052386 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.801694017 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.796476629 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797495504 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.806313577 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.797763613 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.796970016 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.795052857 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.795114719 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.797962155 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.79708738 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.799971977 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.801186268 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.796966975 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.795396883 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.804159244 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.797907838 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.797280283 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.79795439 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.802738744 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.794296528 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.794824662 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.797603163 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.796557899 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806164413 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.796898465 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.798551947 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800345226 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.795467627 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.799691765 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.801972204 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.796797285 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.799050144 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.795257085 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.796794 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.79914489 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798114043 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.793790924 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.799122508 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.797648614 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.802402383 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.80839051 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.79419199 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.800994234 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.796738214 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.797604898 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.800626448 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.793101773 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.795135366 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.795327288 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.799409614 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799134655 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.798346812 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.80236557 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.795838661 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.800343951 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.799906652 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.797966541 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801361729 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.812126903 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.809443753 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.796824535 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.800209288 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.800929454 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.802603214 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.801079554 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.799800113 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801291022 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.80014805 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.800419111 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.799702838 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.797543064 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.803650705 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.8167686 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.801100278 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.799608111 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.798538474 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.804380524 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.801873027 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.797189572 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.800217484 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.802561067 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.804133987 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.81079934 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.799920171 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.806377479 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.799235485 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.801010629 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.805053801 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.805715006 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.809276279 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.803255396 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.801635792 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.800171816 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.804380793 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.818729923 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.801595248 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811257471 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.832777413 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.803206091 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.802515731 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.803900507 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.800809946 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.802902599 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.801785603 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.802618891 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.804153577 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.802624275 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.803146989 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.802574176 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.807664271 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.804478469 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.801012009 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.803328732 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.801130607 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.803717309 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.799656501 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.803004381 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.804207385 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.804360004 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.804540953 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.804130455 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.804193186 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.816354615 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.812922537 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.80426061 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.804549953 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.799625358 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.806944021 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.807340385 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.815058797 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.812925637 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.805423951 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.803056377 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.805574391 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.804961551 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.799616893 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.803634684 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.803810992 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.80419129 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.802080523 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.817313354 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.812892438 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.805582475 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.801895574 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.804724847 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.802823045 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.806544298 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.804391213 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.802202123 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.802569751 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.805451297 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808456895 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.805236597 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.805505009 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.808100879 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.816100204 seconds)
  done (took 1068.957006884 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.801330322 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800239024 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.800778192 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.800895819 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802778083 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.801637525 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.799385074 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.803207217 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.804947857 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.803499596 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.800208571 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79875861 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801810995 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801648985 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801234126 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.802380402 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802448099 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.800880004 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.80073434 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.803513352 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.802151753 seconds)
  done (took 39.562753885 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.805372276 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.803828365 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.805253379 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.807545634 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801656688 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.806851687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.803027413 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.805785036 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.808370538 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.802312141 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.807243602 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.807026304 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.802844466 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.804152401 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.801334647 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.805974879 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.807030035 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.802893633 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.805170187 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.804882289 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.804076 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.804200125 seconds)
  done (took 41.438273617 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.807071986 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.805697634 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.804051429 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.804318096 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.804592894 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.801652394 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.809147035 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.805284472 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.80628027 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.80536521 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.805196272 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.807879137 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.811429071 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.812005627 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.80624839 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.807085022 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.947852888 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.809024903 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.808142337 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.804155838 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.802378666 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.81280305 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.80287389 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.807843435 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.803883431 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.807787816 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.807115194 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.806375238 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.806774298 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.807537036 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.811310564 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.807064927 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.805389339 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.810461669 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.805603666 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.812579068 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.810927154 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.807917704 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.805505495 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.810543128 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.820126692 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.829986096 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.809374854 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.813831232 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.807421949 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.807146295 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.811025072 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.814514534 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.806728295 seconds)
  done (took 90.475588654 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.810148914 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.807399218 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.802385656 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.810128865 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.813263567 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.806652738 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.809707846 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.807358391 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.804629787 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.8047 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.810198767 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.805754649 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.804015729 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.808319547 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.809118452 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.805541754 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806558378 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.808178875 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.808103426 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.806313948 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.804193562 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.809976925 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.809202662 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.80657937 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.811823033 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.802998475 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.807309416 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.810077562 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.805733278 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.810600878 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.810636676 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.809145549 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.808954986 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.807330864 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.807873673 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.810641976 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.811413894 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.809845234 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.812704973 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.807850791 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.811538063 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.81042245 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.811137296 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.8121763 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.808232852 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.810198995 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.809309561 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.807822936 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.808090723 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.811576878 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.813560552 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.809986613 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.811993101 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.809579257 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.810518616 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.811923091 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.808588489 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.808416352 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.811819771 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.81002795 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.80872435 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.810373199 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.8091837 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.810683168 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.810418934 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.807822392 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.808135797 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.809370949 seconds)
  done (took 124.738687764 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.810771567 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.811434118 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81318794 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812678992 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.812302544 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.8109906 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.810696101 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.812307729 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.8122286 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.811929089 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.811943379 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.811518963 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.813211632 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.812360121 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.812327739 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.810250126 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.813577817 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.812857813 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.812275096 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.813056076 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.813040459 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.813300285 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.812474101 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.812590938 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.813307974 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.814237636 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.81277056 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.813484948 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.8125807 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.812653998 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.81114473 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.813907384 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.8122529 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.814163158 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.811417827 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.812543006 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.81532415 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81258194 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.814825729 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.814550096 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.814907384 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.815562383 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815564601 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.814459125 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.815284409 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.813837613 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.81533181 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.815133871 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.816304279 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.813385886 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.816117798 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.813771738 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.815024578 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.814737015 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.815963971 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.814315972 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.81386907 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.815715543 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813591389 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.814798268 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.814467743 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.814054544 seconds)
  done (took 114.168690955 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.814737031 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.815436659 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.813193726 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.81201832 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.814742178 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.811852795 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.816726076 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.815521402 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.815266215 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.815537111 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.816207712 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.813234413 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815437161 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.815001227 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.813602105 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.814468502 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.814574586 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.814719206 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816677191 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.811402862 seconds)
  done (took 38.028037669 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.812935262 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.816077655 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.814036031 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.813866434 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.816460051 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.813360579 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.816300065 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817061114 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.813350535 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.817036107 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.816833632 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.818272037 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.813674539 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.815425476 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.818562876 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.813694437 seconds)
  done (took 30.787062582 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.814410183 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.817068632 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.818252574 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.816240421 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.814852534 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.81592331 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.8184645 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.814640676 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.814491091 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.818413358 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.817742739 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.817570296 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.817718524 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.817722082 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.816047991 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.815830709 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.815320829 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.814394606 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.815969969 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.81866754 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.816768392 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.815915495 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.818030215 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.818413533 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.817018024 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.816834362 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.815411314 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.816044105 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.815138303 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.817869055 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.81598611 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.816447891 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.816328258 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.814889257 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.818816851 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.817261721 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.818679912 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.81894459 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.819384026 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.817918695 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.819072706 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.817880315 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.818409349 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.820665869 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.817064053 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.818349046 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.818210961 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.817914155 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.815659563 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.81833151 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.819725988 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.819745987 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.819890295 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.821904862 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.819968725 seconds)
  done (took 101.696822106 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81913031 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.820121861 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.8184042 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.820355895 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.820803365 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.818183904 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.819800119 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.817984867 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.818306847 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.820004985 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.81868522 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.821013825 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.81883881 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.821599239 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.817663013 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819638715 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.816509915 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.818312882 seconds)
  done (took 34.488224128 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.81804768 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.819537825 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.82087711 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.81883407 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.817886786 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.821750652 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.819339534 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.821602839 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822252772 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.81960613 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818473143 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.822965427 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.821256658 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.823037377 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.819571862 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819112533 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.822823626 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822483008 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.819693535 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.816934064 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.823451281 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823429117 seconds)
  done (took 41.798284255 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.822345219 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.822694314 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.837629884 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.844570079 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.844674642 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.858421608 seconds)
  done (took 12.775351811 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818403483 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821649003 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819875595 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823018344 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822165733 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819275284 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820803021 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821048735 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822368122 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820965366 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819668276 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822926691 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82217658 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819307122 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.8252508 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821408607 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820777911 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819639662 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821354008 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823079908 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820669791 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823860309 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821756854 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820113984 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819949659 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821608038 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823945135 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822370774 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822058095 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824815134 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823824944 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82175373 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824617623 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821719404 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82300747 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825125544 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822238691 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82425093 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824782821 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821548417 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.825547228 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824312273 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82365162 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822948868 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824016587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822454443 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823048603 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823359003 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821845025 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820978592 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822638229 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820181678 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824921738 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824384291 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825091898 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82326953 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820560045 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822648579 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824834309 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823015383 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822945072 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824486896 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821223526 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820902669 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824294184 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821735062 seconds)
  done (took 122.025857036 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819638628 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.822990428 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821471807 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.825112335 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819812353 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819326661 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820709613 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820381632 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819366481 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820111255 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823214099 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819918673 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820611031 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820783231 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820743975 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821758235 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818899741 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819744817 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821199667 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823489095 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820422885 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813199566 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814559128 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.813985284 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813995517 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818198036 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8135652 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.813308999 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.814152516 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813729561 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814684831 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815235422 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81178636 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.811005039 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.811594351 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.811478625 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.813748716 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810424865 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810406989 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.813318516 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810794913 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81333699 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.813765677 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810162838 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810925755 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.811189341 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809133745 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810611872 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.809870581 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809077126 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809630036 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.810479423 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810501459 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.810617965 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.809621473 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.809417351 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.810737924 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.809129132 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.80928615 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812982084 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.810391983 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81027047 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.812594571 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.809844286 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.810909568 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.809396972 seconds)
  done (took 121.517837665 seconds)
done (took 2489.982611994 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.823124105 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.851708601 seconds)
  done (took 15.40934224 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.975378791 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.924668955 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.808764966 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.858499707 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.805828761 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.828439069 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.800338759 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.808267819 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.810343698 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.808247477 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.810921569 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.995365771 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.813910071 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.80716545 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.808801826 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.904318905 seconds)
  done (took 51.458801918 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.8134033 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.815450867 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.823244436 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.820119528 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.813485472 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.831676276 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.846405408 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.817455526 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.874391072 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.824674739 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.931138388 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.821328758 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.811903207 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.881646677 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.82974549 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.826389924 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.914294514 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.889721297 seconds)
  done (took 34.922517103 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.894870987 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.821666327 seconds)
  done (took 10.461523139 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.844093426 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.8016219 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.822666574 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.831308363 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.814717223 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.83065619 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.82818143 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.837215194 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.829515379 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.824555375 seconds)
  done (took 70.002370297 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.813783848 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.808702221 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.807681001 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.805430102 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.800726247 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.800566876 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.808700129 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.797729901 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.50231237 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.839591636 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.813274767 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.811940279 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.806567321 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.808251012 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.805077928 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.828388225 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.929228061 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.803601923 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.802953156 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.812220064 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.808979511 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.860336204 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.818211596 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.807106435 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.835938409 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.508343085 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.811364347 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.813379821 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.93113885 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.804127507 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.80755006 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.807573866 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.809338288 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.192225405 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.10112664 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.804831719 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.811709929 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.813404931 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.804882307 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.931911681 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.806520986 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.810779739 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.755201648 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.088590839 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.909670483 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.843826831 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.185870835 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.800721958 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.803796366 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.830894705 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.805099427 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.804056532 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.813267501 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.308011912 seconds)
  done (took 129.192053533 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.794802325 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.058706151 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.949200742 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.799495744 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.077081736 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.002373071 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.789237909 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.843281828 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.796505733 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.022740605 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.010600988 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.904978274 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.789357147 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.793618071 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.78429518 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.783803343 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.956048652 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.862903071 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.788128078 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.789436872 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.820572556 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037416312 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.918833243 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.78836111 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.810431775 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.001194442 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.913889485 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.898555402 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.280844299 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.786199828 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.852297564 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.787554132 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.784319385 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.780835751 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.947379912 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.882932384 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.873556313 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.783627216 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.783357406 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.783560582 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.462820354 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982172109 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.88143761 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.927702771 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.037161704 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.989190769 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.573093427 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.782511531 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.525483088 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.947001091 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.020549083 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.017568743 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.908540797 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.786357978 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.058439962 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.780787542 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.783472261 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.015726266 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024575171 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.887626749 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.782609802 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.782799517 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.778507417 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.030998289 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.782235877 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.878964268 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.781411429 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.779869507 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.879228248 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.884591939 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.033051947 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.997962614 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.814673216 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.081863877 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.253750968 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.031415308 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.848840671 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.015097573 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.782781797 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.778737642 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.869079105 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.62936863 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.983430961 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.036120184 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.035081541 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.817171785 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.505248555 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.780925808 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.009749872 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.005211394 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.033679461 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.023871564 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.936010801 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.088180622 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.782545564 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.77948687 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.019745834 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.917553005 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.786726423 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.144027622 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018324062 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.354585773 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.810798832 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090127917 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917635438 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.782904194 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.422966349 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.783070403 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.008073749 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.827394695 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.779842237 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.780843476 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.998923356 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.760203139 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.780620371 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.508432796 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.845321343 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.778570341 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.01827186 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.780651152 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.046674102 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.779257027 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.024093349 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.713100249 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.815830453 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.953594596 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.024714501 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.783748968 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.040946034 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.027648408 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.898007741 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.05565747 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.702645116 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.78199444 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.076552166 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.778863396 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.780079595 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.954830691 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.781434117 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.018017182 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.783574214 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.072047788 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.804459309 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.940113771 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.784623137 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.041940951 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.817230303 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.838630534 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.782843747 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.916210469 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785454811 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.653210954 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.939656833 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.785620964 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.780775181 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.321784401 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.788116137 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.943305265 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.020648809 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.805108154 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.858534931 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.460183227 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.782715897 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.872825943 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809198606 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.119323455 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.785191414 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.997227239 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.787205676 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.320171729 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.786379935 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.029455166 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.013553896 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.784322815 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.786000748 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.690230218 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.788148299 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.786438968 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.946141968 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.598571707 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.784703322 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.987559934 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.785376193 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.917328709 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.787915179 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.859271904 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.142074816 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.784425181 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.783930578 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.784005598 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.788633101 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.789122373 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.995597338 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.811097012 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.316786331 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.923874542 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.056612957 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.102685702 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.04256246 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830237828 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.79076903 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.039528538 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.786393533 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.850577431 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.789355068 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.809754379 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.024424712 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.789622274 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.997079664 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.06908692 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.716337704 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.836943315 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.784466373 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.78744346 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.708113939 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.941068668 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.879050915 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.790631711 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.786716443 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.905820159 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.911502016 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003846755 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.7920685 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.020698369 seconds)
  done (took 884.201004292 seconds)
done (took 1197.386380089 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.787920463 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.794627413 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.775071762 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.789351482 seconds)
  done (took 28.865225236 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.796878957 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.793329061 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.795756685 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.79331215 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.803075115 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.793139821 seconds)
  done (took 12.495998836 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.82434429 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.788223055 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.787875073 seconds)
  done (took 21.120259504 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.862392966 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.201373595 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.906067939 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.23400316 seconds)
  done (took 9.925373586 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.798676329 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.799014264 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.802661454 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.798559985 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.798375387 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.798612016 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.797012115 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.797565991 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.799702583 seconds)
  done (took 17.91205294 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.256692337 seconds)
done (took 96.302747346 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.094811488 seconds)
    (2/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.617091515 seconds)
    (3/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.2107333 seconds)
    (4/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.058056964 seconds)
    (5/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.888200827 seconds)
    (6/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.879442766 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.812440494 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.919793224 seconds)
    (9/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.746646544 seconds)
    (10/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.808873884 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.118094565 seconds)
    (12/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.787734274 seconds)
    (13/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.948190078 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.830821532 seconds)
    (15/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.815950991 seconds)
    (16/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.958330154 seconds)
    (17/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.869192513 seconds)
    (18/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.205209285 seconds)
    (19/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.878599841 seconds)
    (20/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.793062276 seconds)
    (21/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.88428908 seconds)
    (22/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.853158022 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.481345996 seconds)
    (24/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.810043777 seconds)
    (25/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.48987547 seconds)
    (26/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.462420848 seconds)
    (27/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.93570615 seconds)
    (28/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.789184033 seconds)
    (29/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.816109432 seconds)
    (30/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.817901381 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.115015809 seconds)
    (32/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.89514141 seconds)
    (33/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.789868593 seconds)
    (34/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.118010445 seconds)
    (35/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.775044781 seconds)
    (36/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.093604933 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.690483719 seconds)
    (38/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.881088118 seconds)
    (39/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.899445318 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.110638842 seconds)
    (41/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.109059224 seconds)
    (42/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.215550378 seconds)
    (43/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.729975841 seconds)
    (44/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.939517279 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.274708875 seconds)
    (46/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.787759131 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.641879197 seconds)
    (48/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.017571077 seconds)
    (49/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.476634143 seconds)
    (50/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.960606319 seconds)
    (51/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.276138227 seconds)
    (52/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.092020029 seconds)
    (53/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.088374784 seconds)
    (54/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.301668703 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.912698004 seconds)
    (56/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.293263952 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.051111043 seconds)
    (58/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.319330805 seconds)
    (59/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.026858839 seconds)
    (60/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.877106017 seconds)
    (61/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.884229528 seconds)
    (62/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.952684624 seconds)
    (63/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.853580717 seconds)
    (64/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.886602534 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.851943191 seconds)
    (66/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.768329295 seconds)
    (67/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.087851357 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.180198761 seconds)
    (69/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.997472639 seconds)
    (70/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.819812838 seconds)
    (71/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.775894752 seconds)
    (72/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.936434414 seconds)
    (73/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.878162474 seconds)
    (74/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.875412832 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.393177793 seconds)
    (76/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.871488715 seconds)
    (77/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.041454606 seconds)
    (78/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.092493396 seconds)
    (79/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.990366388 seconds)
    (80/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.777504164 seconds)
    (81/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.815154063 seconds)
    (82/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.285573095 seconds)
    (83/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.751837415 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.092797543 seconds)
    (85/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.713459854 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.494081539 seconds)
    (87/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.813340895 seconds)
    (88/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.897762107 seconds)
    (89/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.124591613 seconds)
    (90/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.830042319 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.986853158 seconds)
    (92/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.856680784 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.432175973 seconds)
    (94/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.666721542 seconds)
    (95/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.262565723 seconds)
    (96/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.254924084 seconds)
    (97/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.51593563 seconds)
    (98/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.816748809 seconds)
    (99/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.790499324 seconds)
    (100/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.77811148 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.249927505 seconds)
    (102/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.792723076 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.199011729 seconds)
    (104/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.006390055 seconds)
    (105/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.877003216 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.789764318 seconds)
    (107/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.751823074 seconds)
    (108/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.871832334 seconds)
    (109/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 3.491382084 seconds)
    (110/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.714167283 seconds)
    (111/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.105262675 seconds)
    (112/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.935153214 seconds)
    (113/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.794148007 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.794004516 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.090972205 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.794478942 seconds)
    (117/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.79144117 seconds)
    (118/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 3.671272098 seconds)
    (119/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.02174872 seconds)
    (120/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.069386915 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.798195411 seconds)
    (122/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.006703713 seconds)
    (123/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.129090629 seconds)
    (124/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.071366537 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.885842401 seconds)
    (126/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.913580766 seconds)
    (127/309) benchmarking ("sort", Int8, false)...
    done (took 4.782969818 seconds)
    (128/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.814402211 seconds)
    (129/309) benchmarking ("sort", Bool, false)...
    done (took 2.224752091 seconds)
    (130/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.813837783 seconds)
    (131/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.801874449 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.046559625 seconds)
    (133/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.921424661 seconds)
    (134/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.986096605 seconds)
    (135/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.423589673 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.007902486 seconds)
    (137/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.351942331 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.42448351 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.051914034 seconds)
    (140/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.872801297 seconds)
    (141/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.17007465 seconds)
    (142/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.970434401 seconds)
    (143/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.822409693 seconds)
    (144/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.900987528 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.900165251 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.166761239 seconds)
    (147/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.854916071 seconds)
    (148/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.915129352 seconds)
    (149/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.186310943 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.948084946 seconds)
    (151/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.185420807 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.028895325 seconds)
    (153/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.82251826 seconds)
    (154/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.918792272 seconds)
    (155/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.89192132 seconds)
    (156/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.981831402 seconds)
    (157/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.021801388 seconds)
    (158/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.891004906 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.783944725 seconds)
    (160/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.965137369 seconds)
    (161/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.820662418 seconds)
    (162/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.822565692 seconds)
    (163/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.902854342 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.762031221 seconds)
    (165/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.375045047 seconds)
    (166/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.884969455 seconds)
    (167/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 3.611518164 seconds)
    (168/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.278125858 seconds)
    (169/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.254784941 seconds)
    (170/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.366724194 seconds)
    (171/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.098090608 seconds)
    (172/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.005471126 seconds)
    (173/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.795788193 seconds)
    (174/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.998127898 seconds)
    (175/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.144411497 seconds)
    (176/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.792860393 seconds)
    (177/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.835244723 seconds)
    (178/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.879066139 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.17884844 seconds)
    (180/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.817630139 seconds)
    (181/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.871573925 seconds)
    (182/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.792842562 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.866049706 seconds)
    (184/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.155101716 seconds)
    (185/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.011278548 seconds)
    (186/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.865223439 seconds)
    (187/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.97542939 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.82376962 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.034786958 seconds)
    (190/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.872465083 seconds)
    (191/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.827991519 seconds)
    (192/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.366193391 seconds)
    (193/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.915827142 seconds)
    (194/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.796382858 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.713852606 seconds)
    (196/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.890030081 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.086052401 seconds)
    (198/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.882642183 seconds)
    (199/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.138048749 seconds)
    (200/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.903402262 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.858141865 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.108387661 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.795231041 seconds)
    (204/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.72593712 seconds)
    (205/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.037764536 seconds)
    (206/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.943053846 seconds)
    (207/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.823491805 seconds)
    (208/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.861259751 seconds)
    (209/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.198763526 seconds)
    (210/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.220907667 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.815862673 seconds)
    (212/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.5917146 seconds)
    (213/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.02600467 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.036967027 seconds)
    (215/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.291799483 seconds)
    (216/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.814092251 seconds)
    (217/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.47869083 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.73050528 seconds)
    (219/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.81269825 seconds)
    (220/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.87195124 seconds)
    (221/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.805907149 seconds)
    (222/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.931016879 seconds)
    (223/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.781485429 seconds)
    (224/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.862815435 seconds)
    (225/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.800506774 seconds)
    (226/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.402648073 seconds)
    (227/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.721296128 seconds)
    (228/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.837962157 seconds)
    (229/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.00388191 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.799763106 seconds)
    (231/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.798564636 seconds)
    (232/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.868964025 seconds)
    (233/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.009799936 seconds)
    (234/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.797335995 seconds)
    (235/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.402490384 seconds)
    (236/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.10466375 seconds)
    (237/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.798133608 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.073825493 seconds)
    (239/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.915014724 seconds)
    (240/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.72274489 seconds)
    (241/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.813293289 seconds)
    (242/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.64526085 seconds)
    (243/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.926346262 seconds)
    (244/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.988560415 seconds)
    (245/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.796572604 seconds)
    (246/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.905658818 seconds)
    (247/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.673722307 seconds)
    (248/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.527569401 seconds)
    (249/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.196100386 seconds)
    (250/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.84847462 seconds)
    (251/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.26433904 seconds)
    (252/309) benchmarking ("sort", Float32, false)...
    done (took 5.514374726 seconds)
    (253/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.891317311 seconds)
    (254/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.990935751 seconds)
    (255/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.785958464 seconds)
    (256/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.254959527 seconds)
    (257/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.641257417 seconds)
    (258/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.898651563 seconds)
    (259/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.182693689 seconds)
    (260/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.310989899 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.829216003 seconds)
    (262/309) benchmarking ("sort", Float64, false)...
    done (took 5.596288767 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.976457022 seconds)
    (264/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.910098299 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.159029239 seconds)
    (266/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.597425925 seconds)
    (267/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.372019312 seconds)
    (268/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.981594723 seconds)
    (269/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.975612332 seconds)
    (270/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.819987006 seconds)
    (271/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.095836149 seconds)
    (272/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.861193341 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.201160347 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.054312355 seconds)
    (275/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.042161333 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.799153321 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.886605883 seconds)
    (278/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.017928552 seconds)
    (279/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.780467997 seconds)
    (280/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.572727741 seconds)
    (281/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.089671474 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.915081694 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.880365905 seconds)
    (284/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.824188489 seconds)
    (285/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.880402248 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.909871626 seconds)
    (287/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.942158195 seconds)
    (288/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.606023964 seconds)
    (289/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.096439419 seconds)
    (290/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.141486443 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.970599465 seconds)
    (292/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.533841834 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.093055354 seconds)
    (294/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.827930897 seconds)
    (295/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.782119117 seconds)
    (296/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.809631657 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.886990299 seconds)
    (298/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.948233965 seconds)
    (299/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.787115283 seconds)
    (300/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.860270056 seconds)
    (301/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.299422221 seconds)
    (302/309) benchmarking ("sort", BigInt, false)...
    done (took 6.803237328 seconds)
    (303/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.783962141 seconds)
    (304/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.958356135 seconds)
    (305/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.019748591 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.822378299 seconds)
    (307/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.486280857 seconds)
    (308/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.805286856 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.889473924 seconds)
  done (took 994.791710586 seconds)
done (took 996.592405704 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.836201209 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.825308414 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.808990076 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.835242992 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.921913453 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.841063621 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.821004679 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.812861528 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.858616684 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.860836628 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.80917994 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.839963637 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.812822061 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.812329931 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.809324614 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.826467981 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.112388579 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.831199175 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.828168977 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.821827772 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.827153804 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.810131533 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.860215096 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.840266261 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.81681573 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.811598478 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.814994608 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.831004447 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.921617207 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.814417743 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.813226675 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.822236655 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.113553854 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.828021203 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.806130518 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.831201126 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.824149064 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.819802887 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.814960198 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.843638797 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.247859144 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.812127592 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.813146984 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.813049947 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.813802059 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.815725478 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.814398085 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.818286846 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.824998377 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.826793008 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.245459486 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.828298734 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.816154743 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.814396087 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.823027014 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.812129113 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.819186072 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830807736 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.833063115 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82847183 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.107040099 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.83461274 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.816841908 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.829595152 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.819707087 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.28351298 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.809938565 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.821110639 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.249038354 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.817685034 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.286144929 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.824506758 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.818737613 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.828581668 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.844902776 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.116285555 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.825714779 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.816159242 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.820509803 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.812588258 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.824454018 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.826558498 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.817813901 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.818530813 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.82735203 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.846199834 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.825123817 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.815902072 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.830154505 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.834699766 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.821657217 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.825263213 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.817504267 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.809913739 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.828434262 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.822265142 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.817462451 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.819072735 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.818357993 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.829368586 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.246804131 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.832813263 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.813723813 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.812017928 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.816477284 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.832368655 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.248688908 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.818702942 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.83800389 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.861691707 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.820125569 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.109565846 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.838358408 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831403231 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.824615181 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.824603303 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.811473329 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.110828779 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.268973522 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.831125254 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.818435535 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.814966114 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.833527402 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.821503256 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.813151441 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.119672829 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.836841198 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.829781639 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.940424655 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.826448069 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.848220245 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.814739109 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.820393268 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.849192499 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833404847 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.848666261 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.819569078 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.831822832 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.832456111 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.815957573 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.827143475 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.828297324 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.818996019 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.823437061 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.812730307 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.849438937 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.831076518 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.828733278 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.839111043 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.938481797 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.817000151 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.113254182 seconds)
done (took 285.334232179 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.884937728 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.808246866 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.913470431 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.816706063 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.896619073 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.902542251 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.811543627 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.815040267 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.812300041 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.220282955 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.813835297 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.815946135 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.810983654 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.813552295 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.898846774 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.815434705 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.812771246 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.148713098 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.81619395 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.888008368 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.812391143 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.813754376 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.817130935 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.190408813 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.816320309 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.815758096 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.888879976 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.817014166 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.157495803 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.816056545 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.814325855 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.154808818 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.907415549 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.834213511 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.828290863 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.823555319 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.899455824 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.820317718 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.899889952 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.900397347 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.916209765 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.857325005 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.812310239 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.81045189 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.821619008 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.817526041 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.813929849 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.844450988 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.80729901 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.816310431 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.153094199 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.827652955 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.816805235 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.815514063 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.81711311 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.848641568 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.816919628 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.818553714 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.91005327 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.82021409 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.880038452 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.193106628 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.190191845 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.81722655 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.812297757 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.81442481 seconds)
  done (took 180.75221685 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.884234432 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.893338399 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.885393313 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.820064498 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.866735965 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.885295346 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.823196026 seconds)
  done (took 14.800230782 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.824701789 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.821707199 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.866730517 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.867276433 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.817301851 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.967803565 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.819677264 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.8311016 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.816638676 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.870625032 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.820309339 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.819133323 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.825504796 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.820504962 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.867111287 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.829984443 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.934591124 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.818597641 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.82061421 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.970812271 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.817748638 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.826977538 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.875849604 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.831876187 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.821116183 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.826212118 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.405243961 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.819674747 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.818340866 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.820855718 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.81822427 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.862222287 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.821089756 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.815580105 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.817390143 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.93743118 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.821040063 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.81638866 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.820050382 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.819288299 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.820564141 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.820956001 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.821201386 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.820034371 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.821009539 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.846373908 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.820824459 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.81986079 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.820760762 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.823154528 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.870927304 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.823093301 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.818865522 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.82033233 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.87586592 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.830070095 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.82197816 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.819356434 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.823961054 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.817430705 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.971703567 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.870725381 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.822824532 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.869694712 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822385093 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.822482373 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.823222808 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.82360058 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.920664195 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.822107892 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.871706084 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.819784272 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.981625249 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.845581929 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.82511005 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.826660949 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.824655231 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.823228915 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.819825657 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.829050285 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.819967905 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.824965233 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.827034318 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.82011829 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.819987898 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.937138204 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.931754058 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.822580668 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.837156273 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.828710779 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.821857578 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.878714642 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.823644018 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.823125464 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.878384139 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.938803273 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.878142949 seconds)
  done (took 201.093510438 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.829986175 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.830429728 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.825851164 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.839744231 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.825444321 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.824609122 seconds)
  done (took 12.723155201 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.825581826 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.822949382 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.824583216 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.825549374 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.824535171 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.82304121 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.827725212 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.824435174 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.827173608 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.825956078 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.82646946 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.828801006 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.828577093 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.828513743 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.828874624 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.82593145 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.825020949 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.824707262 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.827237261 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.827817994 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.973806929 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.825950972 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.827948521 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.828315749 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.833164978 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.826215021 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.835146505 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.827106458 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.829160463 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.834980416 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.832427388 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.827643195 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.827663101 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.832109649 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.833151761 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.828415403 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.832245227 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.827476693 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.824295163 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.826743894 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.829227669 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.832015897 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.83163512 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.835998391 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.833312639 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.836955062 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.837107089 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.83790777 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.830677831 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.82651628 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.829232278 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.828110528 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.829447053 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.826852507 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.831160852 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.834263128 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.831752079 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.829837938 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.829998597 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.830641174 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.829371713 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.830966219 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.83112562 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.833162127 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.83606699 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.830477494 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.828253446 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.833283502 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82759298 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.828791518 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.831962075 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.825980565 seconds)
  done (took 134.606557624 seconds)
done (took 545.729128806 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.939594831 seconds)
  done (took 8.690653311 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.824948097 seconds)
  done (took 8.675985474 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.057376163 seconds)
  done (took 9.810676516 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.845182361 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.836304356 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.821218279 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.824914438 seconds)
  done (took 29.088729558 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.935348001 seconds)
  done (took 8.68670809 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.835225127 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.818431162 seconds)
  done (took 15.443019438 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.873745632 seconds)
  done (took 8.628478036 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.884983093 seconds)
  done (took 8.645223895 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.829844417 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.86411041 seconds)
  done (took 15.461382557 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.810195459 seconds)
  done (took 8.563419177 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.503302514 seconds)
  done (took 11.263739179 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.83547286 seconds)
  done (took 8.603319019 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.908943513 seconds)
  done (took 8.661867851 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.896625685 seconds)
  done (took 9.650939529 seconds)
done (took 161.630080968 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.828846746 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.821471681 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.821458486 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.828755026 seconds)
  done (took 29.054687464 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.864741717 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.864816926 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.866771375 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.875671879 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.867953886 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.86630512 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.863492862 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.864159475 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.878535647 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.87209667 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.883990905 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.872398543 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.865841618 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.856926963 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.868911584 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.866934859 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.877671965 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.868813686 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.859876297 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.869342543 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.832251407 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.876763855 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.870519725 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.8329075 seconds)
  done (took 46.543058689 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.031642336 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.904078098 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.991426914 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.885552873 seconds)
  done (took 9.568460761 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.884861267 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.886528146 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.898861587 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.940164597 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.958170491 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.896009929 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.859312425 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.855525538 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.84499875 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.887200939 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.96163476 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.881717585 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.980342071 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.838674763 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.016940943 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.833581102 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.83427078 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.884722943 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.937130879 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.949893222 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.832065736 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.885839757 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.888816617 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.882571623 seconds)
  done (took 47.276747996 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.830742461 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.839744929 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.838758978 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.834999907 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.831193338 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.833641914 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.839336671 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.834823202 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.854724587 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.834236444 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.832463732 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.832269676 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.834007612 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.833480362 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.832397241 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.84670402 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.847214088 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.834022876 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.837654789 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.838804848 seconds)
  done (took 38.495828261 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.827797481 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.679414943 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.177917632 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.082995177 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.82650955 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.828682421 seconds)
  done (took 31.181071107 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.846020568 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.838849543 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.831848989 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.887849686 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.969323413 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.835437021 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.832328286 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.843515144 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.873537088 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.892771709 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.855293532 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.857740064 seconds)
  done (took 24.125794771 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.825253542 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.826903133 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.829703883 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.843584649 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.840755407 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.846764144 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.840755228 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.827279909 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.851526462 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.850704582 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.840331153 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.843314558 seconds)
  done (took 43.825850445 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91594894 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.718026895 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.89091655 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547271671 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.29947376 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.039085848 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.346235488 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.170240243 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.832478761 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.102444403 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.912829335 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931236396 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08087138 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.8306056 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.849709161 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.310961056 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123314342 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062266855 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856855012 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.598810361 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880516368 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.258635216 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.668402561 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.882828791 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040511509 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.960138409 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.089110193 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.789506726 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96603412 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868167608 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841026278 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.829738127 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104373814 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.21070102 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926912947 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841626846 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.519751225 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.542452763 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.814574745 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.615165751 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.640201283 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.951366335 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.842052355 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.829420488 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.766151737 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.249767075 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.20847647 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.831374445 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.540348835 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.829997244 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.841615051 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917738141 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.834816371 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.655713269 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783108629 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.107491687 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.82716131 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838714674 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.40261075 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.939439825 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.292543636 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.797986661 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.031754481 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.607179296 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.227378208 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.976434035 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.841672361 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.835729429 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767068716 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.60685259 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.880822035 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.392918097 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.850149888 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.482470355 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136981068 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.981660622 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.776418395 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.121923283 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.544331721 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.798507985 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06154125 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.793371214 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.767665434 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.691725708 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.771728088 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105938615 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.868329174 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.482693708 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871668715 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.171129171 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.841598914 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850269802 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838243354 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.05683277 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.63881157 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.832981253 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.683437187 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.972347558 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.851705438 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.171133763 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.765978915 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.832189007 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.087638695 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.046263734 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.984150819 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.341801859 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.987517493 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856536332 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.8450628 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.665609823 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.873480618 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.109391266 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.89078731 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.941319076 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.888941602 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.796133225 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.139831911 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892355506 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.930185238 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.97187248 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.955572371 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.167977159 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.123617435 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901144846 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838515341 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.834498265 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.676556696 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383269323 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.102259882 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.836501974 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.242166482 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.874738269 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.837427598 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771114113 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.450140047 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.963078951 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.802499266 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059292245 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.713029973 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.138885413 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769660373 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981319568 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.947640212 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.056522756 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.487046484 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.911422843 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092644279 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.238920639 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.996192499 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.875831765 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855676776 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926123674 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858457488 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.171315693 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119837602 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.840732563 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.840974732 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.656723819 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.840739213 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.837047117 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.842938432 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.635281761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.116954489 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.860686823 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.83796916 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.725072402 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.850267077 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905167936 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.842428932 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.846129635 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.379022546 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.581813805 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.843427037 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.453656208 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059055899 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846313056 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.597632119 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946052993 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.919832788 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10755436 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894873708 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.77238596 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.548915802 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.52997951 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840112588 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773000381 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.839242584 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847949905 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849597345 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.218542258 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.117780884 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878655706 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.717028257 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.875683761 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.848788923 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.842501339 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838594146 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.379687253 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.954455158 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.309948637 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.877314478 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977147528 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.853710699 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.773094838 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.841990395 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84327079 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.839147048 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.797545556 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892739295 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.614341082 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221712473 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.092195775 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.487629405 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853379882 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.727714647 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.893585411 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.860849244 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.706459367 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.684298246 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.925637767 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848368696 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.850201593 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.62102224 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.547960804 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.404543774 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154428147 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.150662878 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.282986561 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.230979682 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.135933173 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.180653802 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07156963 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.369802378 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.899677715 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.181605398 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.783154485 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.921310474 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.491406134 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193236135 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.850352778 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07004916 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.234334732 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.771780992 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.859349172 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.05175019 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.877461352 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.654762816 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.794169896 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.042532044 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.984882859 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.629496542 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.036791655 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.176475262 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.709465252 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.810259361 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.842225815 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.542961958 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924014433 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.554149507 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.203768279 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269788444 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.823470847 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342345189 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.842250934 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.287651434 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200255787 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.061381377 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.955994788 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.775700975 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854362171 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.853433321 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.844180612 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.835509237 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.708975343 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.091532102 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853961292 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.079221047 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.02250478 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.131388 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.745389664 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.848562681 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.842442471 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144398527 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.559500354 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.001586489 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.207684759 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.361787863 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845198428 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.783355652 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.787631387 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.542017723 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.852217316 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.820446585 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.074756884 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.029648022 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.824502369 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.24969866 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077886666 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.099175023 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.85843973 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.119983857 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.116950261 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.578374138 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.866686706 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.94559672 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.563837153 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.948854151 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.114042232 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.081238458 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.644742563 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.074546035 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.919099988 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.660730194 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.842391471 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.055507008 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.116557285 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.795396332 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071499741 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.565235561 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.912447142 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151742837 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902332878 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.841202983 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.993912072 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.036834975 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854139961 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.931243516 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.857250222 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.85944108 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.856921774 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893430569 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.838561964 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.96520425 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.859534738 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93440506 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.962357195 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.373314146 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.848260726 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128450776 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201936482 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.1700818 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.901278649 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.846555389 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846788476 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781996164 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.979141471 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.29161223 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120229437 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.978124581 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.144593817 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871699966 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.839550369 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.125871633 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081168835 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.124464635 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.743184411 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84882067 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.875811965 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.114614929 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.85724585 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.059904721 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.087296718 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.176991492 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.317221147 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.000533203 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.211407207 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.118110079 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.217813919 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.847744016 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.43733894 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.922692966 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.5498246 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.891559711 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.839205541 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.108696145 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.857923438 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234847963 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.869091067 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.047961822 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.365208551 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.627537353 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.131554393 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.836316028 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.908627644 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.130373425 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.235050006 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158395289 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.920259475 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860329074 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.563262758 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984306022 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.723691142 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.115280659 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848603303 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.060995543 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.557920448 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.860014937 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128832196 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.155144145 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.844130883 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.727950923 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.854129841 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.86112617 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.075191472 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.11843261 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.100019293 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859051688 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.857388551 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.666090957 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.127281802 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.905371706 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.784885113 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.85224952 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.949968757 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.09770369 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872806206 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.369388726 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.561821297 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.14986749 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.766558562 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871851076 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.275165306 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.214088897 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172342005 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.389678385 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.075827183 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.408470128 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.728460908 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146157218 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.856797537 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.279565733 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151788393 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.856051029 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.393402345 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883872771 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.124569857 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.166447236 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.920448236 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.594681696 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.818643622 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.07397445 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447033989 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790902301 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.849369737 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.912546428 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.84893292 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.984940252 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.86149289 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.763244127 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.703404875 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.594200362 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.347500169 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.856377336 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.843379458 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.585094257 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.39796362 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88008217 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.998990769 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860344768 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.565248889 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.147969609 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.109280699 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.392666716 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.855010776 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.859146669 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.85401619 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.782494613 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.048096171 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.230731638 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159099298 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.226099276 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.884606227 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860579217 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.071101262 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066780595 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.822520212 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.984606547 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256691355 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.885490103 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.586393573 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.535438718 seconds)
  done (took 1670.261311379 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.890250844 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.896827099 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.897724666 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.876741397 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.908639075 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.969824649 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.955596858 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.883370258 seconds)
  done (took 57.063560747 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.853433936 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.04884867 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.864477697 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.855349645 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.860829704 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.86105357 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.027959575 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.859403374 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.86024214 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.866320106 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.867892727 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.857523518 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.192566536 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.871751476 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.855016272 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.865496814 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.865929534 seconds)
  done (took 74.155847948 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.855799149 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.055524746 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.903854117 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.87771706 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.809721073 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.868209388 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.856551821 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.909119176 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.857369223 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.076204584 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.184500581 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.87421489 seconds)
  done (took 89.91369468 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.867754916 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.861530921 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.86299741 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.862998116 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.863010175 seconds)
  done (took 11.106399725 seconds)
done (took 2174.356472282 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.156775464 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.078839042 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.090127944 seconds)
  done (took 5.953416679 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.006996781 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.055623196 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.175930895 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.19502132 seconds)
  done (took 10.22266808 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.153085616 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.229714737 seconds)
  done (took 6.167943923 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.263746984 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.865739136 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.249519061 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.8580375 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.857688652 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.859331769 seconds)
  done (took 22.36625219 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.861623806 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.865031383 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.86277824 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.865038692 seconds)
  done (took 9.241209752 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.842551882 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.665066014 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.845508875 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.857100429 seconds)
  done (took 20.995539966 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.611684916 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.262091587 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.605330284 seconds)
  done (took 9.265786365 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.351839232 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.749021954 seconds)
  done (took 8.887870922 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.125973911 seconds)
  done (took 3.913263379 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.89190203 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.133823309 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.409358285 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.379749539 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.455874194 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.689224743 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.164602549 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.092689146 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.304890852 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.285514081 seconds)
  done (took 24.594890923 seconds)
done (took 136.933166444 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.237476222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.222593965 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.058965803 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.207171328 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.10136758 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.059425116 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.061970903 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.190542369 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.700183802 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.696143636 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.243712245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.07767728 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.009788014 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.222874845 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.016929672 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.099632455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.080156466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.250244727 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.897396196 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.099047866 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.068576955 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.833958264 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.082623519 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.843237868 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.078141885 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.008353698 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.408557633 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.096143327 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.051846593 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.41633407 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.007667345 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.253125987 seconds)
  done (took 170.469876153 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.856723458 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.859127611 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.859630545 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.857947883 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.228694038 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.858882819 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.856512248 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.858015432 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.146504455 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.137557949 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.866833993 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.265721634 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.870521468 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.857834888 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.86449355 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.85850975 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.316884661 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.865756053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.87063421 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.871795144 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.877265825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.102348185 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.877457516 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.146926625 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.354841095 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.876847772 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.858840863 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.880386889 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.86559639 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.866824583 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.869083269 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.858941967 seconds)
  done (took 208.257043409 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.863549842 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.859669287 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.862461802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.86096704 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.861060945 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.858087519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.863403877 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.859945356 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.464540904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.463078422 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.863159397 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.87294031 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.866174569 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.859383206 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.866691767 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.859139645 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.867714173 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.869204486 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.861408422 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.866222676 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.872774463 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.513309504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.873882493 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.505964023 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.868296801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.870171177 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.859604765 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.874645876 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.879389571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.879529458 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.878632945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.861811165 seconds)
  done (took 220.008653679 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.068945332 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.873366951 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.874186335 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.811250387 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.872306976 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.872626347 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.812254732 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.07042027 seconds)
  done (took 19.075191755 seconds)
done (took 619.611236031 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.317744443 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.161108128 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.043400385 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.889929959 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.125557655 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.927658885 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.890455335 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.956955695 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.622211071 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.955610089 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.578876897 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.90269312 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.679923134 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.907297594 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.018180712 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.94679593 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.485029326 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.581484026 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.064771361 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.952461309 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.072206666 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.825896336 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.965588476 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.644347596 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.684730768 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.867614744 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.063975679 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.492719059 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.896768855 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.056133611 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.619519393 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.274490178 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.89758599 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.889763587 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.946900371 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.924869024 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.230481789 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.896825241 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.013702594 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.624399321 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.973309726 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.510318098 seconds)
  done (took 103.173887321 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.862797891 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.861768949 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.861133768 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.86084536 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.863517868 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.860965873 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.861189985 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.861747357 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.862013002 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.863131618 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.860286995 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.863246639 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.862041701 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.862314509 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.859183585 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.861283806 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.863182204 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.86442876 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.861894815 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.862151635 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.86217992 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.862209131 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.875202795 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.862407775 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.862525562 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.864543093 seconds)
  done (took 50.23571192 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.876668441 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.022866783 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.128011364 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.887450417 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.872586713 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.878296376 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.892414635 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.880506077 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.878528274 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.876193162 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.981356829 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.881748616 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.895656701 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.130318511 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.887038073 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.874266917 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.876745993 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.875919166 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.029238158 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.887880031 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.894665261 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.880851773 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.894971473 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.889393555 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.878428513 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.873916926 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.880376212 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.354892842 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.881343566 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.97980049 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.918662675 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.892660633 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.29606274 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.140505059 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.924068754 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.879445428 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.877659029 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.986915509 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.878023914 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.875691431 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.891255141 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.877574426 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.130929701 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.354727685 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.883542425 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.876934893 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.367726516 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.989764546 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.913121158 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.887470489 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.135693344 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.888132222 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.878236341 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.878564135 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.913012395 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.885514625 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.876902388 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.19610864 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.883509494 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.894310898 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.883250969 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.878926417 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.037447935 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.881557454 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.022862964 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.881996799 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.885071565 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.880525339 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.136666899 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.887643188 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.368405748 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.889814881 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.886433601 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.990581785 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.034371088 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.395086023 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.891129342 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.04629135 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.314906029 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.903153269 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.88831933 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.351723964 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.905778355 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.891434798 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.882605439 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.887223161 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.886108933 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.929738765 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.901184854 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.297513461 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.37673129 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.215503487 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.904183162 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.899113151 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.884237089 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.202740478 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.889164175 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.885026769 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.135327683 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.381312083 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.893593376 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.89303734 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.360566836 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.891442333 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.90391501 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.889469798 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.143215885 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.894862202 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.927550478 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.886458051 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.893447942 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.886020509 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.905067589 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.894282139 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.887865509 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.353016793 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.006170344 seconds)
  done (took 233.197216993 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.878888883 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.874240885 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.878227668 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.894410483 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.879386145 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.885681081 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.876466768 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.879019174 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.885812256 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.877931491 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.877819762 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.882716936 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.882330236 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.887416596 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.385193775 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.902324929 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.506507067 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.893931922 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.894483745 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.890213751 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.574037608 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.899799781 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.893146046 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.910426165 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.890892549 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.898565889 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.897809854 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.932419282 seconds)
  done (took 168.518965569 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.901524066 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.078086741 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.915496901 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.939637132 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.910789757 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.899972055 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.923496347 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.917124193 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.905385555 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.898380077 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.902268025 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.962694177 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.908766231 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.040656055 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.930691603 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.929419694 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.005346935 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.907626155 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.902177628 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.899271696 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.931841914 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.89164395 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.964102665 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.027870646 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.922710677 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.02117196 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.903716623 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.901943534 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.903384797 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.020349654 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.918394367 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.964593196 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.926347741 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.915342856 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.021942542 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.016734947 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.007774231 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.927587484 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.909617703 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.900614192 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.900344847 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.891071116 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.020205849 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.918169544 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.902904996 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.010520502 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.917124382 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.904831232 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.91294436 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.901683181 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.915299033 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.919047508 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.968017748 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.031381159 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.934516458 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.924736987 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.928945199 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.192351866 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.913363784 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.004901748 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.894974432 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.022748809 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.919661533 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.892134692 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.905115782 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.910320839 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.932898081 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.934063206 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.008901879 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.90733118 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.003899173 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.937311808 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.906931361 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.905826713 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.908479469 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.024814322 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.024258813 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.936348624 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.937480126 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.930703491 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.898324329 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.906355782 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.893058373 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.921175199 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.904570407 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.018663295 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.020161533 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.9102718 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.905775774 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.904684654 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.90719221 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.928022712 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.028273398 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.939400801 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.998335376 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.970118325 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.978199616 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.915914597 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.916616151 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.904110057 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.969492116 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.919102532 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.917271923 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.240273009 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.975109081 seconds)
  done (took 206.148694132 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.38311319 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.959254967 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.959051866 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.218190521 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.341061474 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.798126945 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.954368973 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.951455358 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.972500517 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.141175873 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.025616142 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.973866069 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.936144206 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.923573738 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.949969105 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.969901822 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.964638588 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.291159037 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.080811149 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.060229504 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.929697017 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.268406532 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.27512075 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.40453621 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.987079745 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.291705322 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.643591064 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.09726782 seconds)
  done (took 62.584856365 seconds)
done (took 825.653971957 seconds)
SAVING RESULT...
DONE!
