cset: moving following pidspec: 26775
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.332811622 seconds)
loading group "string"... done (took 0.54718021 seconds)
loading group "linalg"... done (took 6.931958556 seconds)
loading group "parallel"... done (took 0.151197612 seconds)
loading group "find"... done (took 1.100809856 seconds)
loading group "tuple"... done (took 1.676330604 seconds)
loading group "dates"... done (took 1.189403776 seconds)
loading group "micro"... done (took 0.211407565 seconds)
loading group "io"... done (took 0.987770909 seconds)
loading group "scalar"... done (took 36.226377919 seconds)
loading group "sparse"... done (took 11.470215038 seconds)
loading group "broadcast"... done (took 0.903373075 seconds)
loading group "union"... done (took 11.799430471 seconds)
loading group "simd"... done (took 4.287873471 seconds)
loading group "random"... done (took 8.789834482 seconds)
loading group "problem"... done (took 1.847290311 seconds)
loading group "array"... done (took 20.317684006 seconds)
loading group "misc"... done (took 1.627781895 seconds)
loading group "sort"... done (took 3.192843094 seconds)
loading group "collection"... done (took 16.751673433 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.485525541 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.120604115 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.11170118 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.115572282 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.14265445 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.108688005 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.120198488 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.081138805 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.75112188 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14464416 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116219834 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410186747 seconds)
done (took 4.99965367 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.170971267 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.07968014 seconds)
    (2/2) benchmarking "String"...
    done (took 0.078064686 seconds)
  done (took 1.282520972 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.063041881 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.118766793 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.063070461 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.064761924 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.063875426 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062898379 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.0628026 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.063064354 seconds)
  done (took 1.623853725 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.069628216 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.065332553 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.06559497 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.065479092 seconds)
  done (took 1.390473163 seconds)
done (took 5.664907209 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.751913323 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.197252468 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.180171145 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.3984651 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.126033066 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.15323278 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641511196 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.304420845 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.183119471 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.078548307 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.101896461 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.315639104 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.104454911 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.635643851 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07100113 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.087310105 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.133947086 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.422187584 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.064485091 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.079600242 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.085768899 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.124584786 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.082482094 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.071679776 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.140805018 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.064812455 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132468907 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.077028841 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.063494323 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.204847516 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.169069878 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.655106657 seconds)
  done (took 10.064653033 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.093386991 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.094498632 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.065682786 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.12060213 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.093444523 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.066314269 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.068038033 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064671263 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.08431417 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.125445079 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.085560757 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.098688323 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.062535204 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065811737 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.081508761 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200682322 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.077247756 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.078409883 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.067657988 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.071722018 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105744449 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.075186777 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.075188418 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074541954 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125280529 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.176264385 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.094143944 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.094138415 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.063974104 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.077360363 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.112189929 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.122673875 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062460453 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.063305284 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.121492325 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.091323031 seconds)
  done (took 4.464802894 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.945446267 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.136839447 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.087550379 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.130154955 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.106379096 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.060973477 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.103725025 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.062336647 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.077345831 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.196248829 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.403301046 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.563602248 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107698822 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100764283 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.064632861 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.065231913 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.063787235 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.334983629 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.092892917 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102433965 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.078216694 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.067681332 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.061839547 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.065592223 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.065658438 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.061184067 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06524803 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.098727932 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.29923828 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.121628229 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065400399 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.912889842 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122147433 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063153571 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097659064 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.165167755 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.062073278 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.060184366 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.216983125 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139159751 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065960785 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.061777967 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.14593577 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.067663894 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.063365826 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.080406456 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100180381 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.109543342 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.063171336 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.064002635 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.156663454 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.06241234 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.076531261 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.613032944 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.149188312 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.073066824 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.061719126 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246492204 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.083033529 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066835652 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.062021794 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.176028349 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135053058 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.064532199 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.064323947 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065569475 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.06699607 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.345999272 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.063365848 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.717646345 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.066833045 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.074298567 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.066211872 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068904232 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070329984 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06935519 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.082153386 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06315711 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.072767673 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.063110784 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.063485007 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.064161474 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.081030326 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.351004302 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.063865001 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.065836691 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.06172959 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.083387494 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.094450865 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.063818627 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06267794 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096836192 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065598958 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.062956895 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.102114578 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.063631334 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.081093178 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.065723117 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.109873263 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.166186625 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.09227872 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064081701 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.094228795 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.067338413 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100452055 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079058798 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.065190917 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.397211893 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.062797621 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.062264245 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.065391257 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.063445073 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.064710722 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.063315745 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.076542499 seconds)
  done (took 20.205569384 seconds)
done (took 36.802989003 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.229510269 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.072825347 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.072063968 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075637601 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.072173215 seconds)
  done (took 1.739426085 seconds)
done (took 2.935066869 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.116611696 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.095688087 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.061980194 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.092616917 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061413665 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096867293 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095991201 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078123275 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.096346817 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.061536017 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.093025375 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.061632268 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.061064026 seconds)
  done (took 2.291070329 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.07959459 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.080877851 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067220257 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.079451021 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.061331288 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.079682801 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077737646 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.0853226 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077334969 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.069057753 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.060868271 seconds)
  done (took 2.008102417 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.078755576 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08101925 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066889237 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.078988035 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064293906 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.07826348 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.077659145 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.082291273 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.077878125 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.070696722 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06090523 seconds)
  done (took 2.001386948 seconds)
done (took 7.486473751 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.074694342 seconds)
  done (took 1.253643561 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.585232224 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.064569206 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078702031 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.109918489 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182516367 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.116771911 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276132068 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.084271265 seconds)
  done (took 8.856295512 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.098492653 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067129354 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.067091302 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.068876858 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.066084168 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.06879553 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.06833153 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.069151569 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.067152144 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.069327327 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.06896576 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.065325068 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.066356796 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.068816418 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.065921807 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.06586865 seconds)
  done (took 2.361278382 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.089282697 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.0872099 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.071504054 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.071363964 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.069034168 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.069479828 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.071345515 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.070487279 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.067721642 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.069291369 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.071629428 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.070705853 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.068622172 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.062328904 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.070681142 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.072425918 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.067974691 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.071589832 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.071563023 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.071970187 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.072030601 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.061548887 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.068818924 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.070869263 seconds)
  done (took 2.993262964 seconds)
done (took 16.650341274 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111537974 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069354443 seconds)
  done (took 1.368485209 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.079528513 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.081158579 seconds)
  done (took 1.354098129 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.081897764 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.063814409 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.09117564 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076071767 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.063333967 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.062795555 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08656869 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063526682 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.062848609 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06328982 seconds)
  done (took 1.909242028 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.066321547 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.075336189 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.06895104 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078586808 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.07107081 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.061473825 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.069935796 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065085737 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.075711425 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.060313688 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069064182 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.079897819 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.06894727 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.08167067 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.069598199 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.066090737 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.068568012 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.064922104 seconds)
  done (took 2.460235964 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.063516905 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.065080322 seconds)
  done (took 1.330131432 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.064500329 seconds)
    (2/7) benchmarking "second"...
    done (took 0.061621762 seconds)
    (3/7) benchmarking "month"...
    done (took 0.065251759 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065075238 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.061065029 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.059909107 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.060705849 seconds)
  done (took 1.635608192 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.370900201 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.106801595 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.294555158 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.067532039 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.07890091 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.246735501 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.06290803 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.067198388 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.067242309 seconds)
  done (took 2.604023343 seconds)
done (took 13.862059739 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.076634884 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.082671717 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.092663314 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.357482395 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.088585141 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.063231287 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.111126162 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18657115 seconds)
done (took 2.268777056 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.20732715 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.606816703 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384695181 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.194104965 seconds)
  done (took 2.38790039 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.325694255 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.083117364 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.055777115 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064071838 seconds)
  done (took 1.740072289 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06296327 seconds)
    (2/2) benchmarking "read"...
    done (took 0.065891137 seconds)
  done (took 1.340626242 seconds)
done (took 6.88400257 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063834151 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080193948 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.063046835 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.063294446 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.060802264 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.062913143 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.060477211 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060964951 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.063079137 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.063313124 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.065531854 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.06290658 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06311005 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060847401 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060702224 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06301814 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.060923159 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060869542 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.060707101 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060934547 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.063122161 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060544246 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060875624 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.063206334 seconds)
  done (took 2.755240198 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.081771607 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.064532865 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.0686729 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.069012557 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.067496509 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.068549598 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.068662902 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.063517537 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.068936121 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.065403455 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067506792 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.067514623 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.065103742 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.067036271 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065420842 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.067203524 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.068567562 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063775777 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065230599 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.067964036 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.068110592 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06387311 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.066977515 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068476595 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.066930695 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069017925 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.065240092 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.063913288 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068573214 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.066691924 seconds)
  done (took 3.240448464 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.066638918 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.060431058 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.06184598 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.068102789 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060946724 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.0620018 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.060229039 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.06152026 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.061951276 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.060542772 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.061698905 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.060300231 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061082291 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.062197622 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.061874714 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.064305696 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.076179556 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.061362747 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.060893871 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.061458206 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.064117961 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.061032782 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.060979095 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.060963407 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.060680012 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.060447198 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.061187005 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06092447 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.061446232 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.061124924 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.063839382 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.064297638 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.060685424 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067169386 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06411126 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.06035335 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.064463042 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.060553358 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.061457534 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.060398041 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06042907 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.060450875 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.060354013 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.067756518 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.060778193 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.062761985 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.060831755 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.061742186 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.061131564 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.063374716 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.060393957 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.060515136 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.06316326 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.062400106 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.064801245 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.060499133 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.06139789 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060646254 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.061371838 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.060138613 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.059802434 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.060046243 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.062654423 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.06096251 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074922045 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.067097519 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.060547499 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.061901623 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.061257071 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.063051634 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.062529343 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.073989129 seconds)
  done (took 5.722662445 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.088654594 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.084561908 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062928023 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.062178532 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.058951075 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.061196623 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.064564 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061440578 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062459411 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.066823691 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061807197 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062849901 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.175141927 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.073571315 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061348921 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062284249 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.066877892 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.059438259 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.061525039 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064265614 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06140839 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064752103 seconds)
  done (took 2.781725606 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152572279 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067193572 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1018524 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.070404656 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064572039 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069965078 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066891424 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066761463 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066936557 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065542711 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065371912 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066619875 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064634787 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064869773 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064993724 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.065449074 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066587464 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.065255017 seconds)
  done (took 2.543371783 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.074699679 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.063292245 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.084256125 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.063677783 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.063002336 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065543736 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067521224 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.0712146 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.065105633 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.063121731 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.071070662 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065603675 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.065710516 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062784758 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065186502 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062717788 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.065203082 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063699983 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071057195 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068161446 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.067770705 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.071539662 seconds)
  done (took 2.709608625 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.077502872 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06488397 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.079203384 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065817525 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.05947607 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061814833 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.067317052 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.062987889 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.067457951 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.064679794 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062830785 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061465026 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.066004832 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.062838482 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.066219752 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062697771 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.064570483 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.062938981 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064494174 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.05877054 seconds)
  done (took 2.532095913 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083431225 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065609192 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.0649751 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073299536 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064960626 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.064552195 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072465265 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06454499 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064635196 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.084570153 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064280347 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064405011 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072558482 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069214953 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064419738 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072308046 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07184595 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071976909 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064523364 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06436113 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.084506538 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.064604545 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071992887 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064605033 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064514596 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.064159198 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064349286 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069479229 seconds)
  done (took 3.160990914 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.063681198 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063345294 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.061447382 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.060875563 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.060700153 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.060220588 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.060755445 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06064589 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.06271646 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.060462881 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.062965358 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06258203 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.062797375 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.062719972 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.06290163 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.062828929 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062535668 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.06061366 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060618626 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060379499 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.062506631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062662132 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.063021856 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060567407 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060230396 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.062553754 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060367558 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.060744346 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06239405 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.060924952 seconds)
  done (took 3.086122089 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.073015728 seconds)
    (2/2) benchmarking "in"...
    done (took 0.070453931 seconds)
  done (took 1.377944938 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.060819463 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077448967 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06053723 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067205511 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.066955212 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.063918972 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07072496 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066904665 seconds)
  done (took 1.765508091 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.078565472 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.07521283 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065113282 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.078111094 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.073798842 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.080105991 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129026329 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06378959 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.069795433 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061141918 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.076512058 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.062400851 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.068937118 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063164745 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.06859077 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069268173 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.060888166 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.069232004 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.065595182 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0615822 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06463217 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.071748587 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065324788 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.059469552 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064047984 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08459045 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.074225265 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.063025224 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066254587 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.070101841 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.068816887 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.05756957 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.063591002 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.063783442 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.06107874 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07279226 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077965931 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.065834147 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.071549384 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.064250493 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073791701 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.058524928 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.067451578 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.069643893 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073159459 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.063648561 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.063882657 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.058502395 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061144194 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.065684626 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.058821895 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.063028792 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.058057404 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072196917 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.066525201 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07323451 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.06239577 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.064796825 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.065690293 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.066276717 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.069309729 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.065013595 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065772661 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.062682451 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072391389 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.067702269 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072258061 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.058710654 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.057582821 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.061073761 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.072584761 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085201239 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.069100762 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.064048744 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.064456771 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06081416 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.065907453 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06427735 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068591763 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.069070154 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.063277037 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06888191 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.070434126 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.063203546 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.065664345 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07174573 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06158024 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06634997 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.061202665 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079374821 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.062461221 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.061356538 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.061074103 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073657454 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.067183488 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06382945 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.061337696 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070632689 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.057745265 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.064691152 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064685365 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.063997372 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.073446064 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067433618 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067448647 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.070548004 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.0693696 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06223996 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.064806748 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.059141421 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.063147865 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061406228 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.068668371 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.056374238 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.064723531 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.062748079 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.062557524 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07031724 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.060319636 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.062135727 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068916122 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.067523817 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.060720682 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.059170833 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.064773684 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.062005964 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.064795113 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.069354236 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.060411732 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.056969754 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.057217989 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.065009482 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06184294 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.065024162 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066288288 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.064490773 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.056899524 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.060369323 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0666193 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.070782508 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.062356364 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.062814943 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.067570801 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.062981135 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.061033808 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.067891179 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.063972529 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.060837975 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.067481556 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.06256875 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.057222258 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064691512 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06486759 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.060783191 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.065280899 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.064914246 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.064082508 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.062464303 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.060823256 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.069278823 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.062685784 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06109139 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.061948862 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.059948833 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.071132519 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.063570148 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057026264 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.058306049 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.069006966 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.059772481 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.061079615 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.060698107 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.063531379 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.061844868 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.059629897 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.061031671 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.064044893 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.0713656 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064953285 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.062995172 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.066311064 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.072049634 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.061573074 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.064334022 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.060940198 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.062505259 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.062668038 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.06990284 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.067089956 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065335437 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.063936244 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.05854132 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.066537793 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.068952373 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.060813404 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.059426881 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.061018898 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.066182896 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.067654179 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.06538653 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.062411845 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.060449406 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.061954007 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.063826089 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.06383653 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.061234728 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.060915061 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.066885005 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.060019847 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.068606143 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.062640165 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.070605264 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.064785601 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057332747 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06486482 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.060341601 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.067146199 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.056704842 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.060452085 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.061337985 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.062609721 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.061386391 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.064441499 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056748515 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068465093 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.06860365 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.062327434 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.060440224 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.061431487 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.067189891 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.062701906 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065348282 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.065136298 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.067204596 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.070661477 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.061316757 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.065234849 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.071729098 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.06228611 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056542651 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.066885016 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.060487427 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.06083318 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.060358547 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.059663496 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.30098071 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075541072 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.07254618 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.059460592 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068281699 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064458182 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065492285 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062137007 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070321618 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068753899 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.066993613 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072988899 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067775716 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.065609693 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069156799 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065550002 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066559306 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.066998547 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.068418455 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066173343 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.067618109 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065155143 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068532482 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.064643789 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.063072196 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.066813339 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066305617 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.065411773 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071106599 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.064482834 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065184288 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.067216381 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.065982319 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065510601 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.065380866 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.064416429 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068052285 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065250877 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066020363 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067657229 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.060012881 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072632895 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065033875 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072051218 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065156086 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.061807313 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.072691023 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.067159784 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.070817669 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065802166 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.066198005 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066399327 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064728994 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.067654404 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072213004 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.062611869 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.074875368 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072396815 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064910304 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.067440067 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064528601 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.065780921 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.06380399 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.065515585 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.065277759 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.064596753 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.064730735 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069721196 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.067467947 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06513759 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066291721 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066023663 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065306005 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066104914 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.059060378 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064341894 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.063900915 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.0644596 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074944564 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065044999 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06467724 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.063653117 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065999429 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.063165562 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.0608351 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.072170698 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.07342962 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.064815666 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.070748298 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.063381184 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.065255399 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.074739429 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.058089712 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.062375314 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.061726644 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.061647195 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071010604 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.0647777 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.07315824 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.064007097 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.063267246 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.061363141 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.064570357 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.062775801 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.058788395 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06212951 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067659526 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.063090732 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063426829 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.064144824 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066668564 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.065316228 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073506235 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.063280133 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064947323 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064008792 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.060810555 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.062171347 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062174903 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.065863469 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.063777699 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061159933 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06065666 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.063364821 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064080129 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.064710701 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.06323339 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.064785032 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.208620478 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064774399 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06757811 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067674735 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.059598954 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.067272157 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064401508 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064336009 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.06321412 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.068156322 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.067301976 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06523911 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.072484474 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.064317221 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.065253987 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.064716567 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.062143792 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.063964883 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.06385326 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064303889 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.063395855 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065957449 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07193761 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.061625319 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.066816726 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064255713 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.064702329 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.070178456 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065213419 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.067129722 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071906759 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.065082472 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.066595192 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.071936736 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069493787 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.067459987 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065710639 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.065967768 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069739295 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.063218591 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.071183794 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.064761803 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.065131103 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065858683 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.062094723 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063776821 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064029263 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06331887 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.06983077 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.065135633 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.063270552 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.063472694 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.06183041 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064753258 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067135255 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071409392 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.066369301 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066526749 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.059018251 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.061202243 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064899817 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061941045 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065401665 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.066434817 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069265355 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.066184122 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.064085115 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.062893371 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.0728523 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069590919 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.067375327 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061752301 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.067353633 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.064582897 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.066104416 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064629132 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.06354059 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065186539 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.067341854 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.065471084 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06309249 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071096917 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.067217587 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06494075 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.065194699 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.064388604 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06388374 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.059466653 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06438434 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.065391239 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.068897021 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.066421071 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063830996 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.073867286 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061690682 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063933131 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067159218 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063030797 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.0685439 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.059160332 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.065221561 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065042776 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.064926648 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.059172983 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.062888885 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.061910051 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.066348869 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062943737 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.059494932 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074468985 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073091101 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.066963767 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063182189 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063132055 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.059744584 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.059142841 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062725072 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.064378113 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.064846182 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.073150934 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062722325 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062639135 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.058906082 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.063248432 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066150712 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.066244525 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.060739502 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.058896162 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.200051473 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.06866764 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.06998183 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06353171 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.064746167 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.067383332 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.066385533 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.062610038 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06804664 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.061355398 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.068103748 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.07740603 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065346923 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065227072 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.07026049 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072144691 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065813917 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.060437277 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.065063623 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.067719723 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.065556017 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.065638628 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.065977912 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078578966 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067418202 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.063667061 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.063272345 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.066634529 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.063840339 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.072261272 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.065320241 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06519182 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.069162134 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.066031357 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073783767 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067117838 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071945297 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.067466236 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.067537508 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.063134844 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065189673 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.06264699 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.063140804 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.064945522 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066354721 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070252503 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.072583192 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062956787 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.074973013 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.073450222 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.065760174 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.060903437 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.063093076 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.063457045 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.059192429 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.064784702 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062615763 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.062051203 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062013485 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.062659689 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.064543951 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069303775 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.064473469 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064825072 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.063729289 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.058255476 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.066007243 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065931963 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.064365639 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.060784289 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.063747147 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.064168039 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.06763566 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066866636 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.061632864 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.065198599 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.065035419 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064147892 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.058955018 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.069911728 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063076468 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065602513 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.063181048 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.063858996 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.064999417 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.067128181 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068880943 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064916666 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.066040017 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.067285071 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065643876 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.061531426 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.060673382 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.068857032 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.061530605 seconds)
  done (took 40.802383464 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.098317928 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.061252047 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.060036695 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.059998324 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072276584 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.061014761 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.059523111 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.060980585 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.060686273 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.062901517 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.059447456 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059836876 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.068795458 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.075333623 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071895108 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.064219343 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059441826 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.061036556 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.059864433 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.060836888 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.068496307 seconds)
  done (took 2.73256559 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.071918945 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.068814232 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071039663 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073718214 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064841238 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067939292 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070255879 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068888552 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074238999 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064784092 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074028255 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068077441 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.064578919 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.06440581 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064803912 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068329011 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.073904912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064877843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067873151 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070582815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068565753 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.070313829 seconds)
  done (took 2.854514584 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.064280809 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064071902 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.065505744 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.059524998 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.063477465 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.059304571 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.067184059 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061546499 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.066818954 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.071474531 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.062256847 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06228904 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.065054913 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.058550399 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.063425483 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.0615785 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106168073 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.06673913 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.062999571 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.064171327 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.058857263 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.064868066 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.059004918 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.059298216 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.062101813 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.066453691 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.063352138 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.061001061 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.062578468 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.061922651 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.0629055 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.0606586 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.063880574 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.063016654 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.061660393 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.0620225 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.06276312 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.062817127 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.058730586 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.061022429 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.063516874 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.05908886 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.063393866 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064578289 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.061405017 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.061721905 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064734715 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.063146962 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.058601537 seconds)
  done (took 4.455968331 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.077755706 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.106192246 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.065100235 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.085876422 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077642021 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072764984 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.067121478 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087137723 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.060793289 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.061685612 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079297523 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.077476772 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.063851533 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067963606 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.066601971 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.0631681 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064662054 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062224937 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.067046217 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.062622436 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.067061103 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.069120745 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.077071152 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.07633992 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.066636975 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.062282413 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.062616718 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.067463176 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.075772967 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.067427098 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.067811303 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.068545117 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.077815363 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.068627772 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.062340012 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06501231 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079345044 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.063165553 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.065892817 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.060995978 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.064913444 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.067198225 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069452104 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.079126741 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.063342521 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.068013924 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06304617 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.060120252 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.075412733 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065255781 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.070287165 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.077404845 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.066754045 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.06311849 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067936362 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.078006568 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.063356018 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.061903429 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.066261666 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.075581877 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06095403 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067076316 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07676059 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064883362 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.070302708 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.077339365 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.068517201 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066823366 seconds)
  done (took 6.207908712 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.072916207 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.071252566 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.07899587 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078516081 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.069788235 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.070063354 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06957328 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.069692517 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.06966486 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07483604 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069724871 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.09087867 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.064830744 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072285812 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.069674157 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.069556321 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.069813744 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.069975109 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.069645932 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069864685 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.069624937 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.077149205 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.069940539 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.077306053 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.094972343 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064882262 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06935228 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.069583125 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078152731 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.069849362 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.076762291 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.069569197 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.069493806 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.077934946 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07661816 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.068972656 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.062440223 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06918243 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.069513648 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.06931819 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.065137985 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077585208 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069259094 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.064329087 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.069526801 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.069293873 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.077399646 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.076383482 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.072114898 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074108905 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07000817 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077460706 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.069402527 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069488597 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.077581632 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.102730846 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07763885 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077641529 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06955589 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07746234 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077818779 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083577926 seconds)
  done (took 5.902598236 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081075568 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072057203 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.074608079 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.058782839 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.061995836 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067317859 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.061555426 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.061553786 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071906024 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.072083858 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074537545 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067449729 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069968528 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074445339 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067194058 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070584578 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06719483 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067247258 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071781154 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067249373 seconds)
  done (took 2.746708426 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07161021 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08117299 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.063905117 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069169442 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06613512 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068862768 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.065594073 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066228691 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064358128 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066407953 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07352065 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073807719 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064338516 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06909188 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073630922 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069018957 seconds)
  done (took 2.465673671 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.071640383 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.069989247 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.078708943 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063921156 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061812657 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.059776912 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063472516 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.058744108 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.059780029 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07469688 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.063253755 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.065451667 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063305741 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.061741689 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.060038396 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.065878607 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.059250095 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.060563594 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.062923622 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.075517133 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.0736471 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.061800067 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.063681217 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.06292754 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063070182 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.067808467 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.062411526 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.060650022 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.060348321 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.063393154 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.063974735 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.066423284 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.060276548 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.061120139 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.06152986 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.060836709 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06274675 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063426952 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.065502672 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.062714544 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.061032253 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062923798 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.062949622 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.063768095 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.059363504 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063204397 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.059571157 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.065364868 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.061379169 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.063489148 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.062968325 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.065953149 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.063679092 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.070052433 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.066359618 seconds)
  done (took 4.880737237 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.076435847 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.066682845 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.059459081 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061850804 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.065858808 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.065371549 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.066520734 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.064841755 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064840238 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.061976367 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065273665 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06587006 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064891459 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.066593019 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.064983785 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066699201 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.059186867 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.064749873 seconds)
  done (took 2.543871704 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.068416909 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.062788449 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.070667035 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.062730216 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.062703078 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.065923929 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.059504946 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.061960204 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061761022 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.063166706 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063049659 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.065418218 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061989205 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06536489 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.063084299 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063070752 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.065207756 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.061799236 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062660576 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058941325 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.064993118 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061789502 seconds)
  done (took 2.761534325 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.089299257 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078939326 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.136011941 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.076376182 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.080868691 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068844837 seconds)
  done (took 1.897610172 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088569704 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077169521 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063884156 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085148341 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071024786 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064560114 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064582081 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064900438 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072957017 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072866218 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064987315 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073082007 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072919853 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073092723 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070756604 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070372633 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064861748 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064483544 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.063723977 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081349157 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065088959 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073293053 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064891762 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064754189 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065029278 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07287766 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07345604 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073433504 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064972344 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073499524 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070725275 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065008353 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074480135 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073848922 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066417075 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073493799 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06534835 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081547491 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070460121 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072896438 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066208549 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071465392 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073219987 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069734911 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073698382 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064827234 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06988876 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064741973 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065013438 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.083282138 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070598673 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072678817 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071010786 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073779506 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073555826 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083770243 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07356544 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072609147 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070627603 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075870944 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072833284 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070284252 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072591577 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07349132 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070793517 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073165304 seconds)
  done (took 6.074850254 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079256108 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.08420131 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.066050126 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073867532 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073250707 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065292571 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065294941 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064856458 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065038387 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064666006 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105032219 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065104383 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072854017 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073325718 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065587541 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065167406 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065130273 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072997446 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064707172 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083777998 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064893942 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07280347 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073162148 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072862705 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073540895 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071027065 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065239342 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065354519 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065090544 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064671596 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070120621 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065461278 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072908604 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064058348 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072881516 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065103741 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065298053 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070254593 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064879528 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070326242 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073194923 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081573913 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064679508 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064812968 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073511667 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.064916814 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064783698 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064179182 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065068434 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064770706 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073573477 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073492427 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073318406 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072684698 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065238323 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065128226 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065357588 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064921474 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.065118519 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070336705 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072902415 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064872267 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083377696 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064710235 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065212078 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07264211 seconds)
  done (took 5.986793835 seconds)
done (took 125.197943239 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.182461607 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.163301456 seconds)
  done (took 1.711522159 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.066737975 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095209127 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.074384989 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.125623336 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.064373279 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.097257531 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.096364253 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.075102946 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.063169038 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.063210187 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.063555417 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.065811491 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.128697851 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.0636935 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.063458142 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.0663377 seconds)
  done (took 2.65021094 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.094405232 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.154650205 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.097281251 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.062916117 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.09588023 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.069871983 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.061785266 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.072369548 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.067852603 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.062556973 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.070684219 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.067600593 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.062076982 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.067606274 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.067914186 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.069955855 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.061774799 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.069961902 seconds)
  done (took 2.756962033 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.098554467 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.088822151 seconds)
  done (took 1.569360167 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.157223849 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.103274071 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143817708 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.350583742 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.165153392 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.226739221 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.126456947 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126867499 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.118102867 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12216308 seconds)
  done (took 3.018275419 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.095034039 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150113224 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253801199 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.112218775 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.069455282 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092286999 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.113259237 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.075008918 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077915803 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077607803 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.078072261 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.073577224 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.096180301 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070877628 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.07090653 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.073187539 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.099442799 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.070121276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.071635566 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073809288 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096755284 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.063114873 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.070654852 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.06983249 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.074682085 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074877776 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.062790367 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.062571984 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.074241394 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.071915617 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.07490255 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.09133708 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.075167991 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104958047 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.067918354 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106143089 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07366689 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071278333 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.071820191 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071509568 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.076093311 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.076136162 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.069548997 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.073685043 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.062506483 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.073670141 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.062811181 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.062751906 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.075363971 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.063634205 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.07495256 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.073983109 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104392551 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.063998731 seconds)
  done (took 5.84179489 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.098801003 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102218774 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069066078 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.108904614 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097237829 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069392117 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.098395338 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090280939 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.100183201 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.067181868 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.065443934 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067629018 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079873854 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.080525713 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.110106591 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101618575 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071030589 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069499391 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101169132 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100194793 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065690586 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09184341 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.086970968 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.098918204 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.064506405 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067410234 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.065319493 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.067545811 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.074421641 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.075973194 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.067040796 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078173898 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.082784138 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.075934971 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.064267804 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.064964592 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065367648 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.077429872 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076908771 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076426481 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.07485105 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065041925 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065200622 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066817869 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067625945 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065041489 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.076386403 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.07828334 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.076531006 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066804135 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.067654542 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.06526311 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.066585847 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.077952798 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075171867 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079325095 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077533499 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065635653 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065934413 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069581063 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079795576 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.076813756 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076773556 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067001324 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.076626283 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.065305819 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.077823385 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082300004 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.065475884 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.067207074 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.065343712 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066841639 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066735457 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.075541692 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.075512452 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066684628 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.066499869 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065343528 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.077609115 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07588077 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.065307095 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.074356464 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.064511552 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065650426 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066557763 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066333488 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.075010569 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.077877968 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.067034306 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065309218 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.066632026 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.065841331 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.064285845 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.074564601 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078320092 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077233241 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.076638905 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.066985928 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.076426715 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.0763378 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.067178952 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076834038 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.065070122 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.066700261 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066098019 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.075297391 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.204530652 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077802301 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.067100772 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065875712 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.077735774 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.079402169 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.066516132 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077087792 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.07905914 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.077813987 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065910507 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080463376 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066868095 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.077506294 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067594383 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078502484 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.066891793 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078601789 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066596104 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.066283099 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066959961 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.07778003 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068161132 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066074194 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068115436 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.067255677 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.077684762 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.081054542 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06779121 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079288126 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.075972126 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.068846969 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.077114666 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.066289344 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.076961557 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.068597721 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067902089 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064832088 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079802206 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.066713584 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.06634377 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066858209 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.078630216 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06684155 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.077451886 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.076133756 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065881814 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079198384 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078402453 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075227328 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078641991 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067766239 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.066204361 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.066025079 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.066870858 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.075874802 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077941264 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068497512 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066611938 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.076920519 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.077779977 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.064151182 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.07664258 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07723099 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.077405516 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.066129145 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.06773828 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077503283 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078507543 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076088947 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.074989606 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076029843 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.065658245 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.074959453 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.075669382 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06534951 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082388629 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065576221 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.0806508 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076832592 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.07447729 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.076603396 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.077994926 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.077859299 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.077916006 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.080661025 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065442433 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.065316684 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077407046 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06531837 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.066639874 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.075829017 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.066764023 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.066863538 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.081220684 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.066067749 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.077249681 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.065155919 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076715976 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064410231 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067064349 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080538386 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.065233094 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066042923 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.07624136 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.066419721 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.073922116 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.076665147 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.207633944 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06656755 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068156316 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077435129 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.078104173 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.065397136 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.065769296 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068941087 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.075821027 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075528863 seconds)
  done (took 18.127413937 seconds)
done (took 37.062868046 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210372164 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.147762469 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.176880062 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.115839008 seconds)
  done (took 2.128976626 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.119976311 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.09885697 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.092676547 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062343137 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099425386 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.061897455 seconds)
  done (took 1.954285458 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.310038283 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.208059234 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.179526478 seconds)
  done (took 2.109750128 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197157518 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.184718234 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.388862022 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.25050474 seconds)
  done (took 2.541757887 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.141401627 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.087534901 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064163168 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.080388887 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13226889 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.158369242 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.09950217 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.123564169 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.075313881 seconds)
  done (took 2.432644662 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144782204 seconds)
done (took 12.72329158 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098531892 seconds)
    (2/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.176479706 seconds)
    (3/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.15138181 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.215485185 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.191470309 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.222522768 seconds)
    (7/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.166853458 seconds)
    (8/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.08058753 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.078792751 seconds)
    (10/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.076420798 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.068463632 seconds)
    (12/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.217174028 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.191899415 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.0748303 seconds)
    (15/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.153975323 seconds)
    (16/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.138774771 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.069703586 seconds)
    (18/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.072726794 seconds)
    (19/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.072852185 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156101413 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.171401883 seconds)
    (22/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.150098596 seconds)
    (23/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.15463911 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.146914095 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.105217198 seconds)
    (26/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.136973134 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17400992 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.169489907 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.097613968 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.156297089 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076963075 seconds)
    (32/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.198148587 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.155703188 seconds)
    (34/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.118846469 seconds)
    (35/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.088087712 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.069355554 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.070532764 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.225818119 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.063440132 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.062074097 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.103072165 seconds)
    (42/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.142545674 seconds)
    (43/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.066091562 seconds)
    (44/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.071106398 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.049486973 seconds)
    (46/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.154932219 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.129121192 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.169405701 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.076297672 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.147126542 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.086557797 seconds)
    (52/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.068980634 seconds)
    (53/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.070570374 seconds)
    (54/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069258105 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.08737595 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.140289678 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.069572127 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.069712639 seconds)
    (59/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.105553775 seconds)
    (60/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.066595817 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068931736 seconds)
    (62/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.100577776 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.062205189 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.069415005 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.082861167 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.069285503 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069937633 seconds)
    (68/309) benchmarking ("sort", BigInt, false)...
    done (took 0.181708507 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.064239074 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.08839786 seconds)
    (71/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.104602089 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.069316881 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.145440177 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.084725832 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.071238221 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.0641152 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.18059395 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.072695122 seconds)
    (79/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.142824893 seconds)
    (80/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072220721 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.062140088 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.145303784 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061811009 seconds)
    (84/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.048871688 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.049072758 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.303777511 seconds)
    (87/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.070320644 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079624333 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.080246222 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.087424672 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.08809453 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159284942 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.062997235 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.110721101 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 0.064129924 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.084050746 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069238138 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072747593 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.048822253 seconds)
    (100/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.10249175 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073084009 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.04852941 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.156307462 seconds)
    (104/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.106633739 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.084419746 seconds)
    (106/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.048686946 seconds)
    (107/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07408396 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.087454903 seconds)
    (109/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.058127725 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.049267525 seconds)
    (111/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.107112585 seconds)
    (112/309) benchmarking ("sort", Int8, false)...
    done (took 0.13709385 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.064973782 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086947634 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.069441111 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.063384228 seconds)
    (117/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.149191704 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.070011095 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.07672159 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.127762833 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.171410442 seconds)
    (122/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.192467325 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132668448 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.132837099 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165632883 seconds)
    (126/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.06919926 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085036 seconds)
    (128/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085994601 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.090733284 seconds)
    (130/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.049390673 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.052056315 seconds)
    (132/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.071212973 seconds)
    (133/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.048665524 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 0.13087822 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.073795629 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.071896062 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.069898284 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171327914 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.096387421 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164313059 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.102756809 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.13416658 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067725516 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.068977365 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.191965546 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.132372858 seconds)
    (147/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.049189652 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.050412486 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.105368572 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069024561 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.062743169 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.048551313 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.093226 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.062229867 seconds)
    (155/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071756957 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.069354221 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.048848754 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.04818244 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.089016528 seconds)
    (160/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.104489603 seconds)
    (161/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.04923767 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.083897133 seconds)
    (163/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064521619 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.111050371 seconds)
    (165/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.049324377 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.048792216 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.04966499 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.049605479 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.076226755 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.155589777 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.070513028 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.070544524 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.090939536 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.07702157 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.048634873 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.062335447 seconds)
    (177/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.147764986 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.048516809 seconds)
    (179/309) benchmarking ("sort", Float32, false)...
    done (took 0.124212111 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.064569556 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08523983 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.146836364 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.04878321 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.085667773 seconds)
    (185/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.105559848 seconds)
    (186/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.068976519 seconds)
    (187/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.050135823 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.049326388 seconds)
    (189/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.04785033 seconds)
    (190/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.065568633 seconds)
    (191/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.075799059 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.170302703 seconds)
    (193/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.179529798 seconds)
    (194/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.072727542 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.068918313 seconds)
    (196/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.228489562 seconds)
    (197/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.058674831 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.311127025 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.136550563 seconds)
    (200/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.066176517 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073635127 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07217585 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.050197819 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.065615217 seconds)
    (205/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.066391454 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.070706205 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.070638167 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071293172 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.048916276 seconds)
    (210/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.048299236 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.048842966 seconds)
    (212/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.067018311 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.06309121 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.070475263 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068443089 seconds)
    (216/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.050383564 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.063915238 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.061778901 seconds)
    (219/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069850266 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.050079776 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.085788434 seconds)
    (222/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.062600729 seconds)
    (223/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.049922617 seconds)
    (224/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063353031 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071066934 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.049116079 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.071737989 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.062954466 seconds)
    (229/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080115363 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.089459178 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.051316831 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087553334 seconds)
    (233/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.049399356 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068611961 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074478103 seconds)
    (236/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.064417781 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.049400487 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.062820921 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.063086966 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.061825161 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.049956181 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106532909 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.051848942 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.049882623 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.183256295 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.050566624 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.049570962 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.063794759 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.103182615 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.128814699 seconds)
    (251/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.058999994 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.062357995 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.062582667 seconds)
    (254/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.085618184 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.048883849 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.063968603 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.058716427 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065714087 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.063886942 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.062131164 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.08873745 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.048470757 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.06243872 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.062531038 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.048978917 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.050672298 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.086235704 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.06867828 seconds)
    (269/309) benchmarking ("sort", Float64, false)...
    done (took 0.121760268 seconds)
    (270/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.068203588 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.109948578 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.070094254 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.084697548 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.061922633 seconds)
    (275/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.063505112 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.086297026 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.084353882 seconds)
    (278/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.14615306 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.086619126 seconds)
    (280/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.048092906 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.068384915 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.145939576 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.064448296 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.04809172 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.062176297 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.07037736 seconds)
    (287/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.049975364 seconds)
    (288/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.048970617 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.061356084 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.06132205 seconds)
    (291/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.070524155 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.04840372 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.069685196 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.106233431 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.049304269 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.067284581 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06123313 seconds)
    (298/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.081952228 seconds)
    (299/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.048390648 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.063441934 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083747736 seconds)
    (302/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.062540562 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.067819997 seconds)
    (304/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06250255 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.048261917 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.04831323 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.122433413 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.059743633 seconds)
    (309/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.064619668 seconds)
  done (took 29.587156962 seconds)
done (took 31.018178156 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.081642776 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088694582 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.071846415 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.090078643 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.077601063 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.07250179 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.068915714 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.074739443 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.07629437 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.078045782 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.074978997 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.051311619 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070686587 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070600979 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.071221645 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.087985084 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.074669041 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.06948977 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.070151407 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.061825969 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.06954178 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.062759401 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.064131887 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.051682054 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.074935602 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068793514 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.069039477 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070479505 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.062703863 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.062712413 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.065418178 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070043209 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.062483255 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.074780636 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.069027284 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.069649514 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071318151 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.073026318 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.064237932 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.062827026 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.070477868 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.062410137 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069351986 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.070172708 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.06860999 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.068352343 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069758521 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.074482678 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087841982 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064760835 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.070735258 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072526137 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072891736 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.069298245 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.06648883 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069748835 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067437011 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.087925593 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070364195 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065035292 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07046058 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070551561 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.06752189 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069624919 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.069606438 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.071733331 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.071902483 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068020701 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.070998651 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.067721544 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.062176922 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.069551931 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.065430945 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.062115847 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.071803684 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.072639531 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.061078268 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06762231 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.068939281 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.06782416 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.061529599 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064113643 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.063831089 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068436169 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064144661 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.051036506 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.065908273 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.068460032 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.061511847 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.069650761 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.068561074 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.06890524 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.064063892 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.071775671 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.061906953 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.066970099 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.062182266 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.062452612 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.063936482 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.06605011 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061973758 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064358524 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.070928633 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.063398932 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.068291811 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.075395001 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061884837 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068386993 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.061152757 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.061508385 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.076500791 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071258178 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.062451318 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.064622915 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.062331113 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.069475806 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.061935986 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.062741975 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.062439103 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.062423168 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.068226741 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.062086086 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064092355 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.069073593 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.074838136 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061951168 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.06558742 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.064557666 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.062159076 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067639919 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.062177788 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061975374 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.063633931 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.057995411 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.063657191 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061310518 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.068220632 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.200388164 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.071908203 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.064986793 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.071547516 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.067488735 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068785957 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.067863919 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.062475892 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.055449681 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065346092 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064864901 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064730559 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.063435784 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.064575244 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.063229742 seconds)
done (took 11.981464672 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.063495395 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14040642 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.097230812 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.092258771 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.082545677 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.063518807 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.073499443 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.098810266 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.064870976 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.09946446 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085109941 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.082337073 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.10981534 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.061667081 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063054953 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.066780237 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.064546797 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.078801292 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097673746 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.083206289 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112862758 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.062486915 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.091316222 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.086996352 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.08419203 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09816345 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063793264 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.06666857 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.065996916 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.088016762 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.083234146 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.067058638 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063198009 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097373964 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.089576139 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08005933 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.063193778 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.07932716 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.063481373 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.062642321 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.064063327 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.094830782 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.076604836 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.077258222 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.066888342 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.066050284 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.063956052 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.080819169 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.086155777 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.075957171 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.083416437 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099570215 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.065506948 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.062774511 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06153366 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.082418968 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.062285114 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.065316291 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062758951 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.065416397 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06275229 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.065650197 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.077934733 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079010893 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.066496257 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.077160894 seconds)
  done (took 6.617485435 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.079845066 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.086658591 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.080605359 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.08137175 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062728828 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.063386308 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.063051141 seconds)
  done (took 2.032408695 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.064578427 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085509831 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.085821945 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085941952 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.082692532 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.083939724 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072658682 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.063507009 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.077335443 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.064447282 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084048195 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.099079353 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.064158447 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.070113932 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087980994 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.063558318 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.087179352 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.063465407 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.066639497 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.086731819 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065330272 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.078939624 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.066654179 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.063743912 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.077435034 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063383067 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.109576908 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.06760897 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.064874851 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.066358857 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.061577771 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.10327642 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.076854688 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.072025729 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.063409817 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077324756 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.077397744 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.061717835 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.079488628 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.06862523 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.077126898 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063774329 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.06450415 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.061698205 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.067955159 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.073650926 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.064872496 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.06412153 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.066121888 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.082844163 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.064173595 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.076868027 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.067078303 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066267023 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.064776919 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067526276 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.073566083 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.064683389 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083493776 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065125312 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.080349607 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.079529335 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.077564653 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.079681161 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065999151 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077243252 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.077345949 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.066537853 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.065641187 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.066849721 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.079685621 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.061692472 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.064795305 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.073707202 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.065649617 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.086027479 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.085842139 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.064686605 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.072744314 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064036837 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.063819286 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.063374857 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.085677996 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.065876382 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.063389288 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06744852 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.066499491 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.061866198 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.062352756 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.066925558 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.061753579 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.064743554 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.066162373 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.066645842 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.065865096 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079928545 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.06549311 seconds)
  done (took 8.483441726 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.065879225 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.065950184 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.067087332 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.065332419 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.065369405 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.065192507 seconds)
  done (took 1.933578621 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.091151945 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06645052 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.078055497 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.06974976 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.101425962 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.083916434 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.083837225 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075904129 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.080325231 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.075411798 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.083690569 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.085103048 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.089991639 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.069986214 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.083550958 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.068751481 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.083836363 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072765183 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.075520379 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070129348 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084075224 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.069443949 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069678207 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.078577037 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.072866732 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.069158427 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064342125 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.076347725 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.07539373 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.076091402 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.069645081 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.07312064 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.067966957 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.075819057 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.083764143 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.067695613 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.068904907 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.074627812 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.06924791 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.072684802 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.084860725 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.070228026 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.072276679 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.074213397 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.075395474 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.067780866 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.074306379 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.072947803 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.083293757 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.074154545 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.073742702 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.068193486 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.072315323 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.073855879 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.067726879 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075299934 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.074122246 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083888342 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.069604248 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.067622845 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.065767038 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.07244465 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074636884 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.072416254 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.075917575 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.073749637 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.067434675 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.069949424 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070368404 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068837346 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.074035943 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.066553946 seconds)
  done (took 6.893785099 seconds)
done (took 27.464073602 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.537873735 seconds)
  done (took 2.044216994 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596776449 seconds)
  done (took 2.127913567 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.515431751 seconds)
  done (took 8.040370369 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.39481133 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.490666159 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.685352205 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.127471761 seconds)
  done (took 3.264794319 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.672104228 seconds)
  done (took 2.207922854 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.207128833 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.193309282 seconds)
  done (took 1.945572101 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.371198075 seconds)
  done (took 1.897286884 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.104208637 seconds)
  done (took 2.633021881 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.260098279 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160409422 seconds)
  done (took 1.953857401 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.457094539 seconds)
  done (took 1.989036426 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.800238903 seconds)
  done (took 6.333936892 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.209994944 seconds)
  done (took 1.786090337 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.239050558 seconds)
  done (took 1.774095488 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.690656223 seconds)
  done (took 3.227407294 seconds)
done (took 42.757520539 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.076509285 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.078078185 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.078465153 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.075673515 seconds)
  done (took 1.832730592 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.073160722 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.069845177 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.073463263 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.068993657 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.073845063 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.069416995 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.071273392 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.073676251 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.069231742 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.069633997 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.069390911 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.069505994 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.071774705 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.071061788 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.067693951 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.07148503 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.072661109 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.069336934 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.072507776 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.069139544 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068058546 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.071584666 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.072082598 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.068615385 seconds)
  done (took 3.235522032 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.074129981 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.069985881 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.071457267 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.069847357 seconds)
  done (took 1.830081958 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.074849245 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090489835 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.085803167 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.074323961 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.08919822 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.083219874 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.065862648 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06567586 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.070244743 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.074068023 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.065313989 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.092759046 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.084542429 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.074066544 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.076012102 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063293391 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.065311028 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.084216467 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.074148222 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.074712522 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.066901101 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.074028289 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.064989214 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.08481064 seconds)
  done (took 3.360548431 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074797911 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101025969 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.074645725 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.084826409 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087494172 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.062442716 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.071809553 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.086196365 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.119407926 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.062313148 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.06729432 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.062543397 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.06938515 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.062377787 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.073118551 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.101518266 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.104663742 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065538916 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.092423913 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.062370767 seconds)
  done (took 3.136159725 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.069192692 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.066193059 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.062684387 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.066165387 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.074843224 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.070192113 seconds)
  done (took 1.960073616 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.065301448 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.064834183 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.064902333 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.063661103 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.068647413 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.064300376 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.063651435 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.06417419 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.064424756 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.063762107 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.063470548 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.062757765 seconds)
  done (took 2.321481288 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.191718128 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.064972455 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.066536476 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.063487033 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067322371 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.063149574 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076594318 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.064406828 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.087211705 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.063345792 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.063560224 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065037347 seconds)
  done (took 2.486521872 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203737868 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072685985 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234375836 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134795919 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108456056 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11246365 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10067448 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110399825 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.14147037 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099311795 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165175353 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162836249 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103955112 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133932423 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085839558 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.094355894 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152981557 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159393925 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100726684 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162785083 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140828977 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.121720132 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143830474 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098686091 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103026978 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119183348 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.067868518 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076845026 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167647463 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128280923 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143318409 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107769049 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090404092 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172905947 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167463583 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139535446 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131069706 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080274134 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.098184697 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129319574 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196159363 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086016648 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158833905 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102985283 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216039226 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131251679 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117557657 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11853947 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.104696341 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087172403 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14545663 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180860044 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.137432021 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08457979 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110260085 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113246511 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.112830057 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.099931381 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179708404 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15821936 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130658628 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.06831956 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096422651 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151312208 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128571165 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.105825207 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123903584 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092012181 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131451752 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151209365 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115402186 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139975114 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126096252 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085767009 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115687236 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136051902 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125662104 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166898268 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121278505 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.069520314 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121897764 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100239139 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078341139 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.137480641 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072179749 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171999829 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094983314 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.102736384 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.109110473 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105277193 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105761647 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158136241 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139694961 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098840619 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.061684803 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2430159 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117898576 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145693169 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08475362 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107801554 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114442432 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.075745138 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138842331 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.072222769 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121270429 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.071653105 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124160464 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130210894 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.073776437 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119404589 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097795405 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097434337 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129798027 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157487756 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086823719 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079552535 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164508649 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12008344 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.101466643 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142329103 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153864322 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09628384 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099747487 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147118562 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177398745 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085939583 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159444557 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104089419 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080286777 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.083731078 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120694752 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10882642 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.119260115 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078872608 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.115458661 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164960087 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.071552634 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.091701408 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130196746 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075968653 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077554425 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100623943 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097861239 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.091108004 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.096569883 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10060251 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134593029 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120017183 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10067982 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121367745 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094391218 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.312664985 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086908844 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.096758558 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101449334 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.067596505 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13500574 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153913174 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.077114007 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163389406 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12166145 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102420092 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116146877 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080055186 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138032342 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075424445 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.067955945 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143079211 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107624812 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107161988 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.149082433 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102092014 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126235021 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117203756 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132751179 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130425537 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.125749098 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102445891 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.084851072 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10847386 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123378225 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.06978233 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089255241 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.076998739 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100853 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092281065 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079892912 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138819021 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121663795 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096715451 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108694503 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093317104 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143424455 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.073127792 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126302163 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115835716 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.091294184 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.14945105 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148461267 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127356523 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095448263 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141354205 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.066818157 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.070662166 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.085990485 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.118991065 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079129795 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079918299 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259699993 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145613185 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127209535 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137416269 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110084654 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118944764 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152550859 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.066634275 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112264987 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146324044 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117963902 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.100713181 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087413803 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095461908 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138912939 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105515559 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180746675 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111390089 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124198427 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150377187 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.096073011 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076802326 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09979337 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132174585 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101966136 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142281834 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.096320713 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084650618 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106625898 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.070647286 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098195625 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123935294 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116446506 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131612396 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.111594306 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129621457 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073961048 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113954739 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117252307 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120098283 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.060365759 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117220303 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159082841 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.090872256 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115199303 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149967385 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076319184 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.12088721 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171553586 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140560693 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225352521 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108651751 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115335351 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126160572 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117626484 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137605635 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107383783 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13307944 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10625961 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.081877987 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084648513 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094688051 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10187095 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.091410757 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.105589682 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.112308554 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.09195523 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129232065 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100301671 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105993791 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115575311 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.093380031 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.086959929 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094430077 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172469246 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116205484 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168823401 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.095932294 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143827701 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16288224 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.071503217 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075684553 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.074680448 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137145313 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080691042 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127820335 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.094544406 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102345767 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120786159 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139074433 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091948835 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.065378639 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105339863 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131352999 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108640363 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094917959 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.101640719 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161355718 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.097753227 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076762352 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110860837 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101345974 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099177982 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169042031 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.058142946 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.094409893 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.072388822 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077230305 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124137131 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294736485 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.077842664 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101233167 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116685343 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10773044 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125924877 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098880717 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096348277 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111663598 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14751644 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126790604 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.086407804 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10982989 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126860774 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153779864 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102154319 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.092449957 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16994055 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14922793 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157729249 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086229355 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112268946 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114538231 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105749319 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136324923 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080482537 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161546404 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078444764 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134030264 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101387471 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087080548 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127486354 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.095285245 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08494629 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161447629 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114093435 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07906343 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.074530288 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115009333 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117101379 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104331487 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072172661 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137072559 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.069564749 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130042527 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165659464 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077725474 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101091539 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092813062 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076219926 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104411268 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098698826 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085765993 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.234872789 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175481046 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084978302 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148955698 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139787236 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111077664 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13625876 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096905168 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.632925275 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.075065611 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149548153 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113487814 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1714122 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09451956 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115457936 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105982938 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122826051 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143113405 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10174218 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.171832745 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130824651 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.113477823 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076925734 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099573135 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099963521 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087322517 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.101600367 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110600864 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113765837 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.090739608 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.113303092 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120514568 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.078577297 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092067786 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152491877 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113978921 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141065757 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136851413 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081868177 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114742658 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136356943 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076655924 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.119948678 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150082899 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102247104 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094432148 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.076885907 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098362797 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165390505 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.069707794 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157624984 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26356763 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106770566 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110431064 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.1125827 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13013443 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1061519 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118663578 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091717761 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107474852 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110177589 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079110517 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074411932 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100765071 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109843068 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.094099879 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09709052 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.094871548 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148317526 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.06820803 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093154599 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.100755329 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14339743 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172794668 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.084904009 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079834405 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116558734 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110158459 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11051841 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117520106 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.076180116 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079426314 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.079196086 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.073789953 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.104431439 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10938503 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101601833 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107703022 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160699608 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.079527935 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.217477798 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.091748584 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10114199 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.066091914 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.075461649 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092139848 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094044533 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105131731 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.097411094 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167064356 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.091476133 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087237453 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090191659 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.070463313 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079632754 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125281856 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107749479 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114427918 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093206389 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.058713812 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104353373 seconds)
  done (took 57.34969025 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.107219076 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.079704301 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.093874928 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.1460895 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.119950682 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.209520819 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.154217739 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.195985704 seconds)
  done (took 2.77457186 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06428809 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.091244168 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.0963092 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.079607605 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064002924 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.066340219 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.221821331 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.077147559 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.063038623 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.085112541 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.076619806 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.065912733 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.413511295 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06275848 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.064638245 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.059440211 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.063979454 seconds)
  done (took 3.357151661 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.35968648 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.597322879 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368613554 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.071359792 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.422177492 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087972059 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.039856523 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.125378467 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069277039 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.533525635 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.708696193 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.120846527 seconds)
  done (took 18.159996035 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.072238662 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.065759102 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.079864241 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.080327736 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.068971877 seconds)
  done (took 2.016804067 seconds)
done (took 105.393829741 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.076368358 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.374720759 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.050154123 seconds)
  done (took 2.102243308 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.079535117 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.082103383 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.081009261 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.079692151 seconds)
  done (took 1.98073912 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.071439774 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.073711281 seconds)
  done (took 1.79794628 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220704601 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.154280293 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.083063244 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078890395 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07558948 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.076242968 seconds)
  done (took 1.888437176 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.068754792 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.071947648 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.069753209 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.073705675 seconds)
  done (took 1.937139835 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.073123263 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.049411563 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.052898588 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.052908886 seconds)
  done (took 1.881987447 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.08290905 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.076011127 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.075334613 seconds)
  done (took 1.888660847 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.097911666 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.081174378 seconds)
  done (took 1.832825736 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.078851328 seconds)
  done (took 1.734825755 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.095052124 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.110826829 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128300036 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.107447199 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135069806 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.105846036 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08256473 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.084181268 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.074244076 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.08444052 seconds)
  done (took 2.662274434 seconds)
done (took 21.887487005 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07498524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.358775298 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357880749 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086572842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.685421637 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.353470901 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.977136932 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.0889995 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.110410696 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064423738 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081207601 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647420104 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.003972159 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.318720615 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.991540516 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.321149676 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.646536925 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065064549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064854809 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.064893748 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.964348591 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064235688 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.064443804 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064903689 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.646698327 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367110246 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06525689 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320925874 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064644638 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066181025 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.351444118 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065066777 seconds)
  done (took 16.11117508 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.066820743 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.114494713 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.070953159 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.081088665 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.067069728 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.067082502 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.068292027 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.065828695 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.116198006 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.064790614 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081266445 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064713882 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.068768359 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.0652525 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083539924 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065048897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065620999 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065095077 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064949535 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065451331 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083301432 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064717937 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06490383 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065280565 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.064699428 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076258899 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065280186 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065162966 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065003523 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066850566 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.067564881 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065223717 seconds)
  done (took 3.953432679 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.111668817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.122187686 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.071129305 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.098940982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.109486805 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066991274 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.138915537 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.089023063 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.123624128 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065004778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.081154512 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.06502268 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.097374732 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065310732 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.084608653 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065519899 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066120275 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065450852 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.065299764 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065585631 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.083815035 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064697391 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065259682 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065367421 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065689185 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078331119 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065134629 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.065677377 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065167397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.067267676 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068097919 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065976064 seconds)
  done (took 4.20782081 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.069138119 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.071616414 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.08018257 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08034138 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.067125794 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.068918399 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.069473553 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.066162627 seconds)
  done (took 2.243121873 seconds)
done (took 28.174591547 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07577846 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.066330598 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.070618771 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.077394027 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.070018759 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.075708167 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.063932637 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.071198284 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.068638943 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.069607833 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.071628447 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06470614 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067967609 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.064109437 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.070225112 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064598815 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.07578759 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.068701085 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.076088023 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.076268134 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.066738096 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.070462496 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.071079178 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.076206517 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.07598127 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.075758619 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.074140935 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.069578042 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.066233158 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.067270885 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073315867 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.080182685 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.065586035 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.07588441 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.065078101 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.064969761 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.068515347 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064639761 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.075904441 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.073337442 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.066470238 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.073036997 seconds)
  done (took 4.61987217 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.083305887 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.087396208 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08161098 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.05855692 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.063822715 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.061775061 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.085077728 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.055920949 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.056251732 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.084389947 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.052712349 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.05596615 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.058990913 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.050894152 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.056179931 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.053227087 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.057978174 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.052782171 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.056215893 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.055917379 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.084713913 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.050944763 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.073610528 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.059544391 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055368385 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.058366544 seconds)
  done (took 3.330712933 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07113023 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.081174552 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.085278008 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122935286 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.099941773 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.073781024 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.075905163 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.088983578 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.08219904 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.063864711 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.068180028 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.090706995 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085128875 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.070486125 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.064289906 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.081313174 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.078884267 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.065855716 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070665943 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089100399 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.082061211 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081382959 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.089227023 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.077487531 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.063644021 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.066813198 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.067995198 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.07835067 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.06904308 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.073109693 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.068305332 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.067847304 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.066578602 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.075275575 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067838216 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.066390283 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.087136453 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073871799 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.074578241 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.065046401 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.068129759 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.06558141 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.087296919 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.122640843 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.063776736 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.071456974 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.07176156 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.07366408 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.064346381 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08245657 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075169823 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.064050987 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06738717 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.063641097 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.064465382 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.077063772 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.066258591 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.066484192 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.073259921 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.067749443 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.086239486 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.068617992 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.07977101 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06406926 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.071863396 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.063681996 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.065230631 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.063323149 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.088831231 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.065509103 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.104919704 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.065291574 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.065738581 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.072913098 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.071848279 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.070096726 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065011533 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079225593 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074588016 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.06799034 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.072866978 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.067890645 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.067394542 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.084695608 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.066446114 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.066262417 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.065411368 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.070912862 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.067001475 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.065500544 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.077108179 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.064137504 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.067327386 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080737363 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.063990226 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06565335 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.070489544 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.06929847 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06401724 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075628074 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.069307271 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.06560583 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.073373212 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064228861 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.067069564 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.075949363 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.070341105 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.063410763 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.069036194 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.070419065 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.065049209 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.065646103 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.067473655 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.066164796 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.073234783 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.0709245 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.068945358 seconds)
  done (took 10.224123635 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.156698149 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.149287275 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.067688266 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.141651922 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.072706551 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.075891189 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.143306611 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.090805707 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.064616445 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.065061318 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065896366 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.108885159 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.102377643 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.111636266 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.075722383 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.064601179 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.079765296 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.110535681 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.145744991 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.138845726 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.07945969 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073330828 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.066631776 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.065426051 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067168801 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074885407 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.082153796 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.073361223 seconds)
  done (took 4.325396945 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.078237003 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.093664018 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.070802124 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086616374 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088379909 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064511551 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066881495 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.066076902 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.077442324 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.07591984 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064349145 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.070230894 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.071606135 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.068353537 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.065861543 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.071940576 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.071759109 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.065839134 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.068025035 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.069990621 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.074040564 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.088121637 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068482486 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.063872743 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.069693542 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.063772813 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.061702955 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.08123835 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.064970666 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088257558 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.062614724 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.072398059 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.077904814 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.065325365 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.064322837 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.064523137 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.064452348 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.064416471 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066556357 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.062930743 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.063092701 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.054783348 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.063555187 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.076444882 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.070749214 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.053276995 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.069336385 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.069628396 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.069396988 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.06238468 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.067410605 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.067187362 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.067352353 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.071389267 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.069198602 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.069709586 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.065148879 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.070293709 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.071737516 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.064075608 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.061001048 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062790839 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.068459578 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.063072168 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.071841048 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.068860685 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.063002511 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063791457 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.066269751 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.070251999 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063765513 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.06748235 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.062085798 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.065855121 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.069043674 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.065838859 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.065940106 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.063145718 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.064309 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.064715067 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.052447783 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06417844 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.050220962 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.06744814 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.062519304 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.062854817 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.0640112 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.068944125 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.076676853 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.065735076 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.070292045 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.065342599 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.063612002 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.067554685 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.057695794 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.067167068 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.079223757 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.079230566 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.064101359 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.062527354 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.078082501 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.069432234 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.063325357 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.052978776 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.071438767 seconds)
  done (took 8.846603555 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.086527677 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.067604228 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.080315109 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.088013239 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.083754759 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.072383796 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07376449 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.066044008 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.078684118 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.070517506 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.072934336 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.065206416 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.074221126 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.073283323 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.066617325 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.073427675 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.068869276 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.079210219 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.078568868 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.065217359 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07254939 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.07664095 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.085749176 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.076516163 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.075255666 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.076384957 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.085922879 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069125826 seconds)
  done (took 3.821212411 seconds)
done (took 36.831282942 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.759358844 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.919108586 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.744601982 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.110398546 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.826252575 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.762165889 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.905791759 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.743426046 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.896186124 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.780309422 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.989573795 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.784520425 seconds)
done (took 64.907864539 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.762306637 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.892583994 seconds)
    (2/2) benchmarking "String"...
    done (took 2.017913983 seconds)
  done (took 5.597681685 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.140977851 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.33388034 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.978481284 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.745014114 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.75141801 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.978574107 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.55327159 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.282533021 seconds)
  done (took 30.310913236 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.839956144 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.979244189 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.418367234 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.451914227 seconds)
  done (took 15.423509351 seconds)
done (took 63.004287626 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.745118743 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.75586515 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.79094374 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.732694644 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.804466633 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.764024645 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.235325827 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.795579878 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.746241497 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.734657455 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.749850145 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.178285821 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.750810167 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.127585377 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.746114939 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.755428436 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.771338441 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.216849504 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.903157652 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.754748261 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.769107681 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.770633315 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.747279237 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.756299516 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.763678121 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.746531186 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.190907973 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.749095952 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.373038846 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.753378672 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.778716888 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.311118758 seconds)
  done (took 203.457273458 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.747990636 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.796057649 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.864390299 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.791638092 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.272821432 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.927574836 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.867405984 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.314196222 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.752234911 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.750715594 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.065465831 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.74819804 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.086024168 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.708569858 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.778095095 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.829650374 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.040969714 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.050534206 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.780280182 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.925263231 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.750191201 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.928646803 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.865741001 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.000894364 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.777258652 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.851262241 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.91653378 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.76853957 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.943500217 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.014028402 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.78912215 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.794179378 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.970466008 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.622418478 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.771961867 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.760095889 seconds)
  done (took 170.312890937 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.128285833 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.749802417 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.749381266 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.749261774 seconds)
    (4/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.748887209 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.760833061 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.749462241 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.870429334 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.875888353 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.215009853 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.22871635 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.802063681 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.562714334 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.750194833 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.816559585 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.762993436 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.750521003 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.765495974 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.777340287 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.751335988 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.751469568 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.873063264 seconds)
    (22/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.750857648 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.762702287 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.756607647 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.751140744 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.756314734 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.120332026 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.245398295 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.751621421 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.755595435 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.010933298 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.751577761 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.750950308 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.650582362 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.114472187 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.756447127 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.751114196 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.834365925 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.753293122 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.756460301 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.751128522 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.971330763 seconds)
    (43/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.753365193 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.752154393 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.754751257 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.934468392 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.752122616 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.876282678 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.751981185 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.257755263 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.752395959 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.752255549 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.48562468 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.447623937 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.751606025 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.752579334 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.754407096 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.752475558 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.752037622 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.758587822 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.466396844 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.824699737 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.754479913 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.755270443 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.758628173 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.752023679 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.942811202 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.752048278 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.769368827 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.804755422 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.978031209 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.87280484 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.754833423 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.82143371 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.845957556 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.753678242 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.751866933 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.753531525 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.752480031 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.834075667 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.753964221 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.874147938 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.761125172 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.754487349 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.804068591 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.822673322 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.753614058 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.65355643 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.755823203 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.754363286 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.071788469 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82324056 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.755048369 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.754413829 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.754601936 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.880115852 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.876702659 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.539426393 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.756490581 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.612975704 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.755024797 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.891427306 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.755509334 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.939630223 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.755218181 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.836940694 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.75975842 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.756436483 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.754428989 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.78632907 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.755497011 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.812408721 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.754028071 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.125694565 seconds)
  done (took 400.710975853 seconds)
done (took 778.352770653 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.423598922 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.383376129 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.493649368 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.406889147 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.380949073 seconds)
  done (took 13.784407961 seconds)
done (took 15.479277217 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.841827975 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.848042489 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.78077261 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.84660722 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.777399436 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.845918502 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.827184947 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.781840313 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.81132993 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.781740476 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.812571474 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.781868089 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.767670921 seconds)
  done (took 25.201189706 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.982278345 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.979627513 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.827718093 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.988644991 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.803418313 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.015087785 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.919070621 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.908506603 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.907803926 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773055746 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770685797 seconds)
  done (took 22.573472538 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.988067991 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.99201469 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.833137248 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.987588457 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.806609221 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.987037029 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.91916953 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.907604549 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.908350313 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.773094203 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.770273607 seconds)
  done (took 22.570156183 seconds)
done (took 72.04084993 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.764781494 seconds)
  done (took 3.46278199 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.786352895 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.924722222 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.771463017 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.768394843 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.765908519 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.765736013 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.76781377 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.765540611 seconds)
  done (took 16.015065414 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.765563975 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.763640113 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.76300085 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.766396412 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.762448309 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.765820801 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.765409032 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.766070975 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.763371996 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.76569349 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.766710293 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.763211994 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.763712475 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.76613479 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.763763757 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.764239891 seconds)
  done (took 29.934182441 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.765482293 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.764879513 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.763763179 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.76594361 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.763869624 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.764888875 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.765539069 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.763680118 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.763802597 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.764093307 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.764870625 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.764145611 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.764278603 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.765285854 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.765541794 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.765773282 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.764815513 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.765498691 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.769595719 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.764213989 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.76559873 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.764539798 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.765150995 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.765852724 seconds)
  done (took 44.063030206 seconds)
done (took 95.17264093 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.626590617 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.144348977 seconds)
  done (took 8.471278301 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.769246173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.767640982 seconds)
  done (took 5.270894585 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.76717315 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.767973682 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.768605186 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.767532463 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.767500017 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.768126678 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.767885836 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.76749947 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.767967745 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.76815664 seconds)
  done (took 19.37940224 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.769578303 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.768362781 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.766604732 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.769764575 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.768775124 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.766753476 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.769511632 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.768214607 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.77031386 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.766398812 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.769501184 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.767394519 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.769332019 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.766647406 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.769605456 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.76670939 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.766563095 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.766954702 seconds)
  done (took 33.528552084 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.769568912 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.769076968 seconds)
  done (took 5.240084115 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.7660352 seconds)
    (2/7) benchmarking "second"...
    done (took 1.767610131 seconds)
    (3/7) benchmarking "month"...
    done (took 1.767322004 seconds)
    (4/7) benchmarking "year"...
    done (took 1.767277202 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.767709798 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.767012297 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.767104493 seconds)
  done (took 14.071929548 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.770800543 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.924228801 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.989287212 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.407700115 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.77168351 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.773763115 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.687856354 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.773702601 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.774361341 seconds)
  done (took 19.575700071 seconds)
done (took 107.237097528 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.592448302 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.764132081 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.139887379 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.856910945 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.781137027 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.061042446 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.765367886 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.984727224 seconds)
done (took 42.648685628 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.847100792 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.308859213 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.3465913 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.575612165 seconds)
  done (took 12.935243754 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.760956829 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.287493245 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.798219795 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.359022965 seconds)
  done (took 19.954407421 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.134176908 seconds)
    (2/2) benchmarking "read"...
    done (took 2.119501315 seconds)
  done (took 5.962304672 seconds)
done (took 47.403168729 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.77106079 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.76822435 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.771252772 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.771558267 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.769522609 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.772261719 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.769177987 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.769288211 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.772433953 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.771192809 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.772053532 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.771816281 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.771562289 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.769316262 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.770264375 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.771363471 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.769560474 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.770145485 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.770229445 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.769581616 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.773359643 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.769701771 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.771143599 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.772730187 seconds)
  done (took 44.203545518 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.773112039 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.772060489 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.773640534 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.772935706 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.771114258 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.772938861 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.773274399 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.77057596 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.774605235 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.773450973 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.77123693 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.771271817 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.772559568 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.771328161 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.773776253 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.771138681 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.773536041 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.771475755 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.773767533 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.771018859 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.774368587 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.772162596 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.771448007 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.774391912 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.771316044 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77258264 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.773869867 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.772442842 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.773784022 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.771962685 seconds)
  done (took 54.884235094 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.778769959 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.782049587 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.774476019 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.774462196 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.774642449 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.774792083 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.775298921 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.775900912 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.775519852 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.77621551 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.775595818 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.775457437 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.775273799 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.774897081 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.774036336 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.775070136 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.774911061 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.775795137 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.775287373 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.774393284 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.775964338 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.776351983 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.775952563 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.775939237 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.776040657 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.776152566 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.775144525 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.776615632 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.775400942 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.776769795 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.776371384 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.775268905 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.775881967 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.775841283 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.777061973 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.775952673 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.782138087 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.783483782 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.777349677 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.776975662 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.776056269 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.777116902 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.776562383 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.776429027 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.776952274 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.776435596 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.776924116 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.776304679 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.776541187 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.776490916 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.776546416 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.777557589 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.777664544 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.776672591 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.776967947 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.776504737 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.777578528 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.777685342 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.777858431 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.777114563 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.777829231 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.778734593 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.777809966 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.777652242 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.777551511 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.778555334 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.778096362 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.777596426 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.778603719 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.778512547 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.778451321 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.778828443 seconds)
  done (took 129.634732671 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.77836099 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.776395497 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.77562483 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.776588146 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.774606179 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.779460196 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.775567511 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.778370756 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.774702936 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.778291951 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.77961756 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.776357734 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.776550751 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.779352738 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.779365846 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.777211073 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.779228484 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.77655811 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.779179765 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.779987545 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.779566747 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.776380041 seconds)
  done (took 40.818161305 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.779938899 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.779182658 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.776367806 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.78044159 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.777329854 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.779725116 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.780077033 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.780002054 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.779683359 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.777425192 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.777886124 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.779953044 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.777116659 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.77759058 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.776508277 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.77825493 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.780128285 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.777659573 seconds)
  done (took 33.728281727 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.777779037 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.778331832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.780043652 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.777394031 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.777655347 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.779965745 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.776920972 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.780244708 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.780955463 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.778551831 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.780044456 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.781810694 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.780900049 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.778964582 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.780360494 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.778916604 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.780990537 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.778312651 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.782144673 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.778399657 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.778932676 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.781751359 seconds)
  done (took 40.862607458 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.781137006 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.782113212 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.778969646 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.778778782 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.779627996 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.781774138 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.78248453 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.779915607 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.781679808 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.782709821 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.779183908 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.782107382 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.779487733 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.78092792 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.779315244 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.779853937 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.781970704 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.780944446 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.782929164 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.77950819 seconds)
  done (took 37.329628405 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.781618356 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.781438943 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.781423413 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.78134294 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782405666 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.781974851 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.782688937 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.782736003 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.782445135 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.782994124 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.782527009 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.781973035 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782151503 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.782557725 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.782748299 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.782785188 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.783207306 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.783076207 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.782622848 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.782867841 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.782981783 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.783310481 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.783378848 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.783285695 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.783113689 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.7829965 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.7828677 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.783057411 seconds)
  done (took 51.628393461 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.784728277 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784476418 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.782200329 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.781390909 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.781271078 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.781402541 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.78195339 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.782211749 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.783669191 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.781202824 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.783869451 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.784722379 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.78395576 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.783614118 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78373195 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.784068151 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.78447349 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.782294874 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.782975741 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782243737 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.785765961 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.785942235 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.784734088 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.782525196 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.782198653 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.783905524 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782483302 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.783186052 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.785397136 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.783429774 seconds)
  done (took 55.217675142 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.803423252 seconds)
    (2/2) benchmarking "in"...
    done (took 1.803906684 seconds)
  done (took 5.325075017 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.782904661 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.786012501 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.785433719 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.783606378 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.783406275 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.785922102 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.785898205 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783906983 seconds)
  done (took 15.994799189 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.785686848 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.786191042 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.785603586 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.785868472 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.786175519 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.785873596 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79105122 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.786518185 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.786958363 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.787066215 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.792612878 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.793636317 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.788599808 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.785854414 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.786355746 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788218099 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.787733709 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.786833368 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.785798573 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.787164443 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.786800277 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.788367098 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.788555059 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.786084764 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.787951313 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.79637686 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.790714301 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.78778126 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786668474 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.791492827 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.787375583 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.785753726 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.787905943 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.786730975 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.788365732 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.787390614 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.793769149 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788221804 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.792112544 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.786976717 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.787452507 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.785042573 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.788332883 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.789370163 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.788056005 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.788000731 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.788476533 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.786097167 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.786950942 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.791305337 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.794094732 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.78834326 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.785013882 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.791176848 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.790116765 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794446115 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.788459527 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.791601824 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.798997777 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.798008339 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.800973251 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.796229978 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.790550642 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.788291386 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.799133661 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.812536919 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.79382577 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.787249252 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.786601014 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.78945073 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.793879759 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802304388 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.798506601 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.789054883 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.788814202 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.789952264 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.788909366 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789912841 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797934145 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.792701681 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.790087992 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.790487995 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.799677477 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.81271565 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.789563564 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.789749047 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.789706176 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.788971334 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.79159614 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.799777117 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.789543421 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.790347891 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.790703826 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.790052187 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.790895754 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.789940268 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.78938987 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.790552708 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.788504805 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.791268587 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.789365251 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.794507825 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.799751617 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.790801697 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.790910819 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.796065932 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.791726938 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.791394395 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.796379862 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.791791775 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.790687826 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.791900499 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.797302484 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.7890606 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794848638 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.800168058 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.79105906 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.792721234 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.791356298 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.792859068 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802603263 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.818395819 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.793076704 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.792387665 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.797170682 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.803446797 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791145437 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.795369657 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.793072816 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.790143745 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.790017928 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.794540474 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.793690928 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.793588358 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792771813 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.793518357 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.79028589 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.793625179 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.79186722 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.793637679 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.793720708 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.794301779 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.794153677 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.794828007 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.792799236 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.795763101 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.798782092 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.793606979 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.794912454 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.794044507 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.791858464 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.793760408 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.795126289 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.793481863 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.793428953 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792880236 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.793555791 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.793211726 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794276594 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.794044083 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794540736 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.795160759 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.798398814 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.794579761 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.797407425 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.793164699 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.792331253 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.794263303 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.79463416 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.794473881 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.795575656 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.792874672 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.798331386 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.801259635 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.795324953 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.794006502 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.796332857 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794030052 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793875748 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.794801888 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.798319407 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.803129608 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.794028562 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.801035545 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.794849413 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.79497934 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.795877933 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.79616985 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.796005375 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795854327 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.799490542 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.803029639 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.808312942 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.805422732 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.79751901 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.801058013 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.797026255 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.800098209 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.800129681 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.795256954 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.797098147 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.796019569 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.795979733 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794602716 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.798112317 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.795479517 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.795800992 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.79729638 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.797379763 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.794907542 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796461766 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.797681303 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.798038668 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.793927895 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.797587968 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797245301 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.795929149 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.795310361 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.796880956 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.797084512 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.797071364 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.797679285 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.802447273 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.795566112 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.797925919 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.79820923 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.797967275 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.797178588 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.797780373 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.799474351 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.797655749 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802958703 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.797592697 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.798747285 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.803658921 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.797676928 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.797409308 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.800769184 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.79814867 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.795957434 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.80151802 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.806834654 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.799268786 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.798371103 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.798161239 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.798308755 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.799363429 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.803920497 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.797470492 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.798485243 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.798757206 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.800834174 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.797472683 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.800784576 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.799847623 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.800591992 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802080079 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799959998 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.800328078 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.800419651 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.798703395 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.798776309 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.798181564 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802128293 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.807159313 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.802728573 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.800312352 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.800813553 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.800522045 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.804390684 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.799763302 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.799723776 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.799416841 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812986819 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.809073455 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806098021 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.801656692 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.800057372 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.803504577 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.801092983 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.803877045 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.80021978 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.800723648 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.80110853 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.799807292 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.797538114 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.801977489 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.801959575 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.801018625 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.801797282 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.805156223 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.801154811 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.799978002 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.800426879 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.800126126 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.80224334 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.800390285 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.80223218 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.80388794 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.80344603 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.8014783 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.800511862 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.806669601 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.802538834 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.803709425 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.80233701 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.801863292 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.801571007 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.802155629 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.802306578 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.805952843 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.808663291 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.806452334 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.810881619 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.80376838 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.810976948 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.80231937 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.80545488 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.810121121 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.800873301 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.801584174 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.802748698 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.801763239 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.807816079 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.8025362 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.803850796 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.806978628 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.803214409 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.802765535 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.803433588 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.802340143 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.803190392 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.802329526 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.810164608 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.805031012 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.807410036 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.804637501 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.800561295 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.803037553 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.803917788 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.80322588 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.80639 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.802776939 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.804457339 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.803068784 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.803606492 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.804271774 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.803685423 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805351588 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.801498109 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.804676103 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.809531091 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.804617745 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80818742 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.804236127 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.81081847 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.803988875 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.809743546 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.803731591 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.804532704 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.803612556 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.80594792 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.806703964 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.804575474 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.805947165 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.804095196 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.806925387 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.809860955 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.804091554 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.806081162 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.805619032 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.804546379 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.804727774 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.81559006 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.828149411 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.807208841 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.810461002 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.804043263 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.806632942 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.810292587 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.805205834 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.804621881 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.809440509 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.816753765 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814588788 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.806248353 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.805910787 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.805436219 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.805834699 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.806187378 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.806609961 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.804613505 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.806558391 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.805723601 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.805823399 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.810421833 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.807498337 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.806715304 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808380397 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.808784861 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.816560428 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.80612373 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.807332614 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.807229586 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.80627472 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.806225406 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.807824033 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.806475306 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807885524 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.807033922 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.809045328 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.814924666 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.813805628 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.810643435 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.807398101 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.806838744 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.80723316 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.808014009 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807194115 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.807028678 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.80761574 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.808726531 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.808216688 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.80853165 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.806993471 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.808271582 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.809017329 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.809023578 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811186927 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.815829393 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.808121213 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.80610397 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.809444828 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808063083 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.80704237 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.808827344 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.814689975 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811957464 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.818818967 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.81732907 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.81368602 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.810239636 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812507547 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.817773514 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.807605282 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.810575384 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.808931035 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.81076645 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.810697531 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.81313802 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.809335222 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.816353491 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.809425564 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.809802447 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.816643644 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.811041108 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.809111816 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.810671626 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.812603739 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.81007609 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.806769771 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.811160366 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.809644791 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815073669 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.81124962 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809973507 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812271766 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.808723039 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.812161071 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.813839971 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.812548663 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.810984897 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.808182125 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.810768431 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810397317 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.812687882 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.809110991 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.81042468 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.81164126 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.81454309 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.817883479 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.808155334 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.81244917 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.81142787 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.811854144 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.810363182 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.810926252 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.809138346 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.808756305 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.810616837 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.811012383 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.812030738 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.813807501 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.810997267 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.812188909 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.813552367 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.811144192 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815643432 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.82351397 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.820167476 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.809729583 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.81175878 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.812040106 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.815380721 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.812088686 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.811997335 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.813655061 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.813694273 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.812265162 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.811586879 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.812656703 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.816091416 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.826845243 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.812986092 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813382829 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.812758757 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.814962557 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.812967386 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.810760058 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.813661407 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.815575324 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.815422658 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.819529563 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.812658059 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.818957013 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.81347398 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.815184459 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.818641416 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.816546798 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.821161162 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.81653109 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813067951 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.812610258 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.818957795 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.829906886 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814626011 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824675957 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842767853 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.814476772 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.815059308 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.813493947 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.813199964 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.813800939 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.81605551 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.813599595 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.814845981 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.815209338 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.81314698 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.815069147 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.820334891 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.815829229 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.8162603 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.815056722 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.814265489 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.816514184 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.811882208 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.815154437 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.815485519 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.815220472 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.815285504 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.815679 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.814960776 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828383258 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.824947117 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.816143915 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.81492433 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.811722384 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.817923412 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.819106572 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.825844475 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.823218161 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.815824197 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.815597122 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.817984341 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814923338 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.813160274 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.815097334 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.815919416 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.816120062 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.813618804 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.829191474 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824180834 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.820176267 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.817250977 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816389224 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.81747276 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.817083181 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.815903741 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.817194792 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.817937216 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.817779287 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819902412 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.816956192 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.817210818 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.821012082 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.824779828 seconds)
  done (took 1076.364565277 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.815520547 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814966966 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.81501934 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.814573669 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814871135 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.814787602 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.815145225 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.814825227 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.815754717 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815950544 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.815805481 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815656786 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815788122 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815866979 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.814968589 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.815565435 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.815897654 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.815786363 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.815484107 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.816181298 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.815877784 seconds)
  done (took 39.873288615 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.819027084 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.814891969 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.816380948 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.817793322 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.816592695 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.817838574 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.8163763 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.820172753 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.818992062 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.815643289 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.819919659 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818749428 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.815681447 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.816357235 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.817491078 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818660862 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.819779467 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.817278442 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.820748999 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.816959879 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.820249608 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.817108715 seconds)
  done (took 41.743131135 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.819087319 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.818797521 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.818010574 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.817029189 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.820368544 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.817404827 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.818745254 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.819490166 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.820657703 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.81907049 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.820059254 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.820932995 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.827906028 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.826167074 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.82160929 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.820371197 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.96373007 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.82001113 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.820472178 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.819920164 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.818627862 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.824940863 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.817918806 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.817137095 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.819627465 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.820287404 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.821415393 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.822419327 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.820381559 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.822343691 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.82438265 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.820952617 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.820085658 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.822777688 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.820926831 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.822310728 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.825526871 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.820912022 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.819209999 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.821132736 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.830594641 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.843313293 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.820941394 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.827848819 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.821161149 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.822209529 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.825969097 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.830541606 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.820632688 seconds)
  done (took 91.168833619 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.822054519 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.822864372 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.820356828 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.823193716 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.823856353 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.82259223 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.823076219 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.822399043 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.820282709 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.821169443 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.823426582 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.819648101 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.82041581 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.821395308 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.822826682 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819394167 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.81988708 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819541668 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.819335558 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.819410157 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.819823527 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.821993347 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.822895 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.819960751 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.822510919 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.819718874 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.821285544 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.821819785 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.820103897 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.820171805 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.823051688 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.823045785 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.823325849 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.820889093 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820110118 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.823201458 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.822626818 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.820541263 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822987826 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.820949074 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.822904051 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.823197108 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.824102891 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.82401489 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.821633673 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.821704611 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.821552219 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.823147858 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.822341965 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.824186934 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.824123777 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.822637293 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.824956747 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.82188718 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.825054323 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.824948797 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.821711299 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.822304349 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.82522203 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.823002901 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.82235115 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.825277243 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.823482177 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.825097752 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.825136291 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.823449453 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.822997661 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.824959824 seconds)
  done (took 125.670937701 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823957475 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.824548616 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.823981326 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.82455658 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.824404853 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.824246333 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.825142152 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.824835038 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.824668655 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.825601213 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.825584666 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.825593594 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.82402731 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.825547018 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.82529665 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.824967345 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.825155481 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826844402 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824986002 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825086842 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.826129251 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.8254295 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.825675127 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.826020686 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.826520478 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.826523127 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.825993684 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.825541786 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826273983 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.82525791 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.825500604 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.826189188 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826388664 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.825681192 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.82716549 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.827052837 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.826853058 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826756801 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.827076366 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.825553798 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.825739281 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826232415 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.826795911 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.826455937 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.826153212 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.826839145 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.82748188 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.826301611 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.82742154 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826475196 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.827490897 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.828185492 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.828020844 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.827559521 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826989002 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.828777035 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.82765271 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.827288819 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826851661 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.827857435 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.827772244 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.828981137 seconds)
  done (took 114.980443448 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.828095825 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.82785878 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.825388884 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.82581066 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.828163909 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.826239925 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.829003245 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.829268257 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.828539809 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.8292017 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829179326 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.826995745 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826041701 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.82834511 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.827396366 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826942767 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.826317039 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.82594908 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.829826584 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.827153502 seconds)
  done (took 38.311354638 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.826573126 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.829870897 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.827202057 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.826693071 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.829642981 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.827412725 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.828812691 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.83007197 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.827792093 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.830602083 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.830913225 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.830585646 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828067117 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.828410596 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.830768401 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828905646 seconds)
  done (took 31.022778976 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.827509475 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.830359553 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.830210999 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.830638703 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.828250999 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.828463847 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.830482316 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.83000101 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.827601493 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.832184912 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.831239532 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.830592484 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.830822165 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830236372 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.827042524 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.829769375 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.827686663 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.82671262 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.831584932 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.829305177 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.82851835 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.827317884 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.829738945 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.829437618 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.828052651 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.827324028 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.827673115 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.827310107 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.828578221 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.830799226 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.827744189 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.828386346 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.827212224 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.827371923 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.829913755 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.828707563 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.831273746 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.830237326 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.830776699 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.830180422 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.83171912 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.827355997 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.830621331 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.830844506 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.829057692 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.831115938 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.82858427 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.828326176 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.828515508 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.828628844 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.830443462 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.830616034 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.831399397 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.830474625 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.831690399 seconds)
  done (took 102.380180019 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830747176 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.828617292 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.825582462 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.828259992 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.827842891 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.825660915 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.829386692 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.824736496 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825426561 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.827438853 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.826154591 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.829634004 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.823041873 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.825445616 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.822100808 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.824923156 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.822037094 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.823192333 seconds)
  done (took 34.632488869 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.822549983 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.822572671 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.823385056 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.823363009 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.820453387 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.823767461 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.822067238 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.824390046 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.822969129 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.82304913 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.820019506 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.823064635 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.823048384 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.823407651 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.821778752 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819200204 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.823117591 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.822606843 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.82063575 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.820590309 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.823566237 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.821793273 seconds)
  done (took 41.847436101 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.820994997 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.821532151 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.838605575 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.842407539 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.84419599 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.856049636 seconds)
  done (took 12.777479737 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821052958 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823205708 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.820654027 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824110811 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823430114 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820552145 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822359226 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819829324 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822943151 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820507299 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820824711 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823209834 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823485571 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8203686 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822910331 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823854012 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.820190927 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819834618 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821498073 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.824182592 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821060519 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82442455 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820908343 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821629961 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821192266 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820932099 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82435444 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820936486 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.82120418 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.823624129 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823881711 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821658956 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824405554 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821707606 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825252768 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.823769829 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821698111 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824966827 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.824382013 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822060681 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.823636097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.823600037 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.824514181 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822086001 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824942444 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822645306 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822303131 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822257994 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.822078928 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.825327227 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.826352408 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822611835 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826294922 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825264552 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.826047102 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825078258 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.824453216 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822840237 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.826282803 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823785819 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.822891733 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.827114964 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.822606787 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824351837 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.825011746 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823222317 seconds)
  done (took 122.077342482 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824234207 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823189849 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.822294394 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.823505813 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823362544 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.823333075 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822906553 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.823624975 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822902059 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823106099 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.825546789 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.822946119 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822788091 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82381056 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.82332432 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.823224995 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822246017 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818209833 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818737856 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821411127 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819033817 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.818771483 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.817800598 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817163862 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817888186 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819810873 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817813822 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818091179 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815824687 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81696156 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816010637 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.815816176 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816169736 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.817117021 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.816023773 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815536898 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816090308 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817084263 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.817117804 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.81704185 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.814408668 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.8189744 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815564634 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815334445 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816084416 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.815096835 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.814726242 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81481398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.814861035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.816592903 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815260496 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815660193 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815159364 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81509742 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81560859 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.814889606 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815379389 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814751921 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.815552828 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817858269 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816410375 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81530344 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.817335477 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.814836393 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.815188941 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81516829 seconds)
  done (took 121.763792215 seconds)
done (took 2505.945799402 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.866303136 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.80151516 seconds)
  done (took 15.416596765 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.980603478 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.931567424 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.816564996 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.815904231 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.817486605 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.831804213 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.832508329 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.816594943 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.818106241 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.817268007 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.817016133 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.002787537 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.821219364 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.817017234 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.817187695 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.912870083 seconds)
  done (took 51.574436184 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.818918196 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.820166943 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.830465939 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.821286129 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.818650016 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.839532978 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.851818162 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.822373981 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.878753737 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.830817622 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.946527365 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.829664614 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.81766352 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.879346781 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.830410331 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.832486479 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.905442354 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.893897273 seconds)
  done (took 35.018682749 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.896899042 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.824130664 seconds)
  done (took 10.4776565 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.823141139 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.835193843 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.831024769 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.830036819 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.813836216 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.816558873 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.828902807 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.841112319 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.839118363 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.800458569 seconds)
  done (took 70.00854508 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.814157104 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.809802294 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.809535639 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.807138483 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.800911698 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.805879922 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.807597302 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.806872706 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.507976578 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.846105437 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.815791073 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.813679909 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.808618982 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.810582133 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.806563631 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.83084844 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.927152437 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.806766172 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.805484976 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.812811007 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.808299593 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.871574196 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.822292875 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.808957411 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.839003861 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.50296532 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.81850337 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.814325499 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.919559995 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.806215372 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.807400714 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.810166613 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.809760021 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.19529003 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.098284144 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.808412331 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.817440452 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.815629335 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.805100858 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.948805773 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.809312569 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.813297044 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.766743377 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.09109883 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.894274418 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.850786699 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.173843673 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.810854451 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.808647073 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.838048995 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.81019861 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.808120645 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.822225578 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.321975187 seconds)
  done (took 129.346140618 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.801118586 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.094568779 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.954947965 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.802142531 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07560055 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.007903396 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.802102342 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850335829 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.803053153 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.004440156 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.024815445 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.911581479 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.803217776 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.80130127 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.800728759 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.799513659 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.962065163 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.869044333 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.804581409 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.798198286 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.82803094 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.008359498 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.930171128 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.800749933 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.821401857 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.010479978 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.92282528 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.907797198 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.296354235 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.797737207 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.864598678 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.800643485 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.798492703 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.796931462 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.955291763 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896484778 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889819415 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.800013467 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.79724739 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.797891723 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.460810261 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.99575101 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.898536754 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.942060484 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.05126559 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.002989841 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.443813578 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.796263329 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.437641436 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.960100927 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.013035241 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.005466892 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.921939531 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.799384717 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.946876772 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.796452707 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.796611252 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.035019495 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043678181 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.899922954 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800148412 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.797979538 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796606459 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042164365 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.802496298 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.896288707 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.80111285 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.79872289 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.896990805 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.902889888 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.04715537 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012376191 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.832932265 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.09923781 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.268613547 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.011892103 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.866880524 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035254648 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.800798678 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.796841705 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.885511316 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.554673163 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.998920397 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.047152173 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.022730912 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.83480428 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.425315024 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.798560955 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.993670689 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.984970096 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.99534308 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.042009068 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.951431364 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.115107306 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.797700338 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.79836768 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.057539924 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.936584789 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.801192615 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.159723491 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.033433964 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.360290615 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.830809607 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095195807 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.934358875 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.239601729 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.425705799 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.798611867 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.968784011 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.839388608 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.801282679 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.799833215 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.991018276 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.607402219 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.800202743 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.541489316 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.863911548 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.803869826 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.004200729 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.805089651 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.012688971 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803517774 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.03612234 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.121660323 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.83510495 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.972343863 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.043160269 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.593584114 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.048714285 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.045264348 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.920297116 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.095919825 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.531809319 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.802720747 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077432491 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.805399877 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.799778826 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.968045011 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.801589555 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.035908716 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.80365824 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.031818266 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.827069986 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.958421746 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.803786133 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.034467661 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.838083465 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.855427871 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.804872157 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.934441676 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.804291466 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.693062481 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.956931562 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.804036855 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.802080358 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.214782761 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.801788102 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.947446551 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.032158101 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.826750425 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.872378269 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.333676511 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.801429313 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.889655917 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828888031 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.223864065 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.801871794 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.019979217 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.770830055 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.23860553 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.803626018 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.041787972 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.059894252 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.806541069 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.802327554 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.544697864 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.500457274 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.801908356 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.963273885 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.36277775 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.453333462 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.008851533 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.804328094 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.931583157 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.805492185 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.883201052 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.147448293 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.806016003 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.802443508 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.804180461 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.80596337 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.803187762 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.012234386 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.834785478 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.317209291 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.941639861 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020799044 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.112114752 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.022359056 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.853260995 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.803947179 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.069854557 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.806226197 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.868624039 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.805502448 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.828311172 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.035722271 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.807792168 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.030720237 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.057061149 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.723572093 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.854884545 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.806065218 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.806636338 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.804655979 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.958403818 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.895688744 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.807740303 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.804181406 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.916613438 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.93299265 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99768466 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.39969268 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.976715607 seconds)
  done (took 885.108128923 seconds)
done (took 1198.699298958 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.805248943 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.807236627 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.794123378 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.809230665 seconds)
  done (took 28.961657357 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.813930008 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.811402716 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.812119348 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.812002711 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.812786501 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.812552026 seconds)
  done (took 12.620092031 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.849418517 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.806665651 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.807401576 seconds)
  done (took 21.207460177 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.880665363 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.223354587 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.922780152 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.254898643 seconds)
  done (took 10.026321738 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.814017061 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.813476002 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.812685305 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.816753513 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.815001337 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.816292505 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.813888094 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.816217427 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.817710518 seconds)
  done (took 18.081648734 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.237711894 seconds)
done (took 96.87712906 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.942992736 seconds)
    (2/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.943089743 seconds)
    (3/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.949292855 seconds)
    (4/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.25454795 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.808084139 seconds)
    (6/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.093998163 seconds)
    (7/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.945502988 seconds)
    (8/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.017899967 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.948953279 seconds)
    (10/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.895942479 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.947320867 seconds)
    (12/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.793554675 seconds)
    (13/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.83354082 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.85669786 seconds)
    (15/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.971152803 seconds)
    (16/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.255765033 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.836455019 seconds)
    (18/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.907494707 seconds)
    (19/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.892493616 seconds)
    (20/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.896883987 seconds)
    (21/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.810380457 seconds)
    (22/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.138323777 seconds)
    (23/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.992196434 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.811909372 seconds)
    (25/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.810924597 seconds)
    (26/309) benchmarking ("sort", BigFloat, false)...
    done (took 8.32516266 seconds)
    (27/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.057659367 seconds)
    (28/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.992014229 seconds)
    (29/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.370781032 seconds)
    (30/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.327157599 seconds)
    (31/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.4748746 seconds)
    (32/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.296991607 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.915176156 seconds)
    (34/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.839162146 seconds)
    (35/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.412077222 seconds)
    (36/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.152996046 seconds)
    (37/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.838657074 seconds)
    (38/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.01294937 seconds)
    (39/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.896819 seconds)
    (40/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.977146695 seconds)
    (41/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.697557482 seconds)
    (42/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.159403397 seconds)
    (43/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.876425821 seconds)
    (44/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.222032371 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.100118594 seconds)
    (46/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.290341563 seconds)
    (47/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.815291604 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.115919309 seconds)
    (49/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.815370314 seconds)
    (50/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.847615476 seconds)
    (51/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.720223539 seconds)
    (52/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.946562941 seconds)
    (53/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.159150143 seconds)
    (54/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.130566264 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.136985765 seconds)
    (56/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.912066315 seconds)
    (57/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.837110323 seconds)
    (58/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.836387129 seconds)
    (59/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.938618151 seconds)
    (60/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.39237544 seconds)
    (61/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.058147832 seconds)
    (62/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.040270712 seconds)
    (63/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.907522933 seconds)
    (64/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.926449846 seconds)
    (65/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.069777617 seconds)
    (66/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.836575858 seconds)
    (67/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.837244732 seconds)
    (68/309) benchmarking ("sort", BigInt, false)...
    done (took 6.809878185 seconds)
    (69/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.871958683 seconds)
    (70/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.591673174 seconds)
    (71/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.727251107 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.219039769 seconds)
    (73/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.914413858 seconds)
    (74/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.831137245 seconds)
    (75/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.8115657 seconds)
    (76/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.876265026 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.668632646 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.050882311 seconds)
    (79/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.795343222 seconds)
    (80/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.899726964 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.144413593 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.883894861 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.113045493 seconds)
    (84/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.314611445 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.90791781 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.818547653 seconds)
    (87/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.84221125 seconds)
    (88/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.317990501 seconds)
    (89/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.626437423 seconds)
    (90/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.063488674 seconds)
    (91/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.054062269 seconds)
    (92/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.005379834 seconds)
    (93/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.116030407 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.892233692 seconds)
    (95/309) benchmarking ("sort", Int64, false)...
    done (took 5.517578385 seconds)
    (96/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.833155289 seconds)
    (97/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.029015562 seconds)
    (98/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.663086227 seconds)
    (99/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.06839265 seconds)
    (100/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.985138945 seconds)
    (101/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.904358644 seconds)
    (102/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.109854748 seconds)
    (103/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.00956949 seconds)
    (104/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.090521498 seconds)
    (105/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.926256091 seconds)
    (106/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.013468979 seconds)
    (107/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.924981277 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.086314779 seconds)
    (109/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.316018467 seconds)
    (110/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.112460952 seconds)
    (111/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.116212286 seconds)
    (112/309) benchmarking ("sort", Int8, false)...
    done (took 4.815302855 seconds)
    (113/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.815414654 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.496464304 seconds)
    (115/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.923997081 seconds)
    (116/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.813638783 seconds)
    (117/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.644205942 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.110280443 seconds)
    (119/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.961895335 seconds)
    (120/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.837533398 seconds)
    (121/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.130987927 seconds)
    (122/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.165457467 seconds)
    (123/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.817225724 seconds)
    (124/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.814389863 seconds)
    (125/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.817000114 seconds)
    (126/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.898990436 seconds)
    (127/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.692470257 seconds)
    (128/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.905731528 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.825725667 seconds)
    (130/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.784384023 seconds)
    (131/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.802596807 seconds)
    (132/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 3.210733222 seconds)
    (133/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.051490948 seconds)
    (134/309) benchmarking ("sort", Bool, false)...
    done (took 2.265580241 seconds)
    (135/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.825640117 seconds)
    (136/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.837712297 seconds)
    (137/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.073484955 seconds)
    (138/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.814485672 seconds)
    (139/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.889264107 seconds)
    (140/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.908461796 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.804338277 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.857496851 seconds)
    (143/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.03813908 seconds)
    (144/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.099260875 seconds)
    (145/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.801127255 seconds)
    (146/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 8.295969735 seconds)
    (147/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.987019688 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.804424813 seconds)
    (149/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.978937532 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.918706882 seconds)
    (151/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.816904433 seconds)
    (152/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.014339447 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.882489993 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.054420606 seconds)
    (155/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.245408651 seconds)
    (156/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.973439547 seconds)
    (157/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.944087591 seconds)
    (158/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.92448498 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.479158548 seconds)
    (160/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.004270819 seconds)
    (161/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.950105137 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.783781214 seconds)
    (163/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.944353516 seconds)
    (164/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.80153927 seconds)
    (165/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.010980467 seconds)
    (166/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.702419003 seconds)
    (167/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.802846825 seconds)
    (168/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.417253243 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.489031293 seconds)
    (170/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.406688174 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.841499338 seconds)
    (172/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.921107005 seconds)
    (173/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.880373786 seconds)
    (174/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.821668469 seconds)
    (175/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.068972155 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.195342413 seconds)
    (177/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.101476918 seconds)
    (178/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.710736423 seconds)
    (179/309) benchmarking ("sort", Float32, false)...
    done (took 5.584524388 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.873783611 seconds)
    (181/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.911415258 seconds)
    (182/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.529787875 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.112521808 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.988052443 seconds)
    (185/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.028845825 seconds)
    (186/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.910334624 seconds)
    (187/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.802195 seconds)
    (188/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 3.81331378 seconds)
    (189/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.021161677 seconds)
    (190/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.882485419 seconds)
    (191/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.721698504 seconds)
    (192/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.820464813 seconds)
    (193/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.803890104 seconds)
    (194/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 8.244622182 seconds)
    (195/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.861899748 seconds)
    (196/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.844713124 seconds)
    (197/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.992239614 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.144591568 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.842730832 seconds)
    (200/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.88226247 seconds)
    (201/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.827398875 seconds)
    (202/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.859684177 seconds)
    (203/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.136213257 seconds)
    (204/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.021780585 seconds)
    (205/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.882360659 seconds)
    (206/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.900730186 seconds)
    (207/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.828888478 seconds)
    (208/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.717687792 seconds)
    (209/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.010411239 seconds)
    (210/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.902097103 seconds)
    (211/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.194626012 seconds)
    (212/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.926313719 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.144428174 seconds)
    (214/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.834884773 seconds)
    (215/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.836130496 seconds)
    (216/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.400086671 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.205262386 seconds)
    (218/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.880119612 seconds)
    (219/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.846398994 seconds)
    (220/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.168732386 seconds)
    (221/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.872439302 seconds)
    (222/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.943186572 seconds)
    (223/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.293066258 seconds)
    (224/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.354084412 seconds)
    (225/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.141489151 seconds)
    (226/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.128836774 seconds)
    (227/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.621157568 seconds)
    (228/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.154903486 seconds)
    (229/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.639814244 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.622364241 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.810287073 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.469991782 seconds)
    (233/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.812438506 seconds)
    (234/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.847966234 seconds)
    (235/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.845645384 seconds)
    (236/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.821934093 seconds)
    (237/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.251479259 seconds)
    (238/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.120617665 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.122156668 seconds)
    (240/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.863943187 seconds)
    (241/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.772319343 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.890642268 seconds)
    (243/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.839808051 seconds)
    (244/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 8.305899883 seconds)
    (245/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.427256638 seconds)
    (246/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.328744294 seconds)
    (247/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.96245471 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.422587107 seconds)
    (249/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.036375197 seconds)
    (250/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.80408458 seconds)
    (251/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.111117556 seconds)
    (252/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.211536489 seconds)
    (253/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.425310335 seconds)
    (254/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.85144497 seconds)
    (255/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.205838462 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.821845461 seconds)
    (257/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.424914603 seconds)
    (258/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.511482469 seconds)
    (259/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.056656047 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.917319003 seconds)
    (261/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.886794912 seconds)
    (262/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.182847471 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.199799744 seconds)
    (264/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.096831719 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.026221851 seconds)
    (266/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.807821628 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.857787319 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.864723077 seconds)
    (269/309) benchmarking ("sort", Float64, false)...
    done (took 5.633829994 seconds)
    (270/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.851586316 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.923480798 seconds)
    (272/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.21129551 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.784638299 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.057134931 seconds)
    (275/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.768201697 seconds)
    (276/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.556453045 seconds)
    (277/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.828496774 seconds)
    (278/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.168806534 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.219342696 seconds)
    (280/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.924490931 seconds)
    (281/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.964254528 seconds)
    (282/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.9231411 seconds)
    (283/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.978587553 seconds)
    (284/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.134759837 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.485128666 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.919229378 seconds)
    (287/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.466119591 seconds)
    (288/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.969558454 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.90638078 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.963311153 seconds)
    (291/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.849256632 seconds)
    (292/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.026439469 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.574302758 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.480029862 seconds)
    (295/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.315654532 seconds)
    (296/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.870165748 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.90598003 seconds)
    (298/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.841934363 seconds)
    (299/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.872788878 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.824992622 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.809383339 seconds)
    (302/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.829792611 seconds)
    (303/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.899941258 seconds)
    (304/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.227397989 seconds)
    (305/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.428694587 seconds)
    (306/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.976874816 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.938187923 seconds)
    (308/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.339749087 seconds)
    (309/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.948871941 seconds)
  done (took 1000.174503395 seconds)
done (took 1001.995482023 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.85585392 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.85106273 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.834092425 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.855577532 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.945841078 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.867587639 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.844792067 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.836910208 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.881930658 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.883519575 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.833012572 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.868178932 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.835740865 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.835122306 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.833959512 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.84998681 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.136796328 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.858614344 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.851865189 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.844364497 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.851410936 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.833835044 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.885792417 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.867267859 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.839022012 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.837982312 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.838849294 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.855323694 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.946845558 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.838046148 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.83841643 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.846920307 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.135922824 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.857386093 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.83108423 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.854859202 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.847413396 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.845826798 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.84009497 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.868020677 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.274154333 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.840818294 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.838581618 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.83840954 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.838134781 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.84130949 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.83936823 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.84262284 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.850218696 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.851782731 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.26838937 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.85763229 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.840433208 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.837261995 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.848304805 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.837363511 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.840558849 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.852822696 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.856396986 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.85456441 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.128332687 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.865331637 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.838466844 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.853742841 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.845524751 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.306799852 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.83837756 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.842104763 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.271043401 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.848831772 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.306213891 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.851296832 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.840919445 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.853136988 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.871229239 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.138298296 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.855865847 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.836573973 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.845291356 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.83652877 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.847429835 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.851509082 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.843246562 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.839183425 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.853014771 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.872473663 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.848740662 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.84089548 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.848550647 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.858774174 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.846559282 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.849771525 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.842390895 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.834698508 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.84876695 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.843286454 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.842708763 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.841777931 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.843443487 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.849960298 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.27454704 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.860775782 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.837392636 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.836793853 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.838333774 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.853527155 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.273462554 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.845415802 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.860976172 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.887234824 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.842482517 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.128953965 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.866524466 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.856192791 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.851120969 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.843307379 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.835582 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.129427743 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.294929205 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.861074032 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.841406372 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.839294577 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.857037977 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.841442266 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.837356696 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.141369207 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.864351941 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.855111563 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.961195933 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.851912629 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.873495865 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.839353422 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.844760519 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.874411132 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.856707478 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.872765202 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.843872181 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.857612776 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.858082959 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.837444318 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.8531664 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.85298644 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.842913894 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.849328295 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.835242148 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.87553598 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.854856136 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.855061765 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.863103303 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.963800306 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.838760691 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.131217788 seconds)
done (took 289.047513889 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.911673945 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.831949354 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.939323493 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.839728208 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.923892018 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.932656749 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.836509604 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.837555887 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.837469412 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.218915111 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.838326396 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.837928279 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.841555151 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.83805251 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.92370685 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.841315043 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.838848643 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.18085763 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.840044285 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.912248912 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.840283108 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.838765177 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.840461697 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.22226621 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.837853635 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.837183057 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.912709036 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.840226292 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.18788567 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.836846266 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.838807775 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.188010876 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.931835251 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.859004379 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.851808084 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.847459505 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.931779179 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.84502042 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.923127086 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.924111108 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.945418505 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.88102287 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.840010569 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.835293571 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.844508214 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.841930335 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.839191133 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.870200246 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.833136054 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.839115776 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.184602691 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.852524727 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.841079459 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.840064402 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.839992923 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.87282935 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.839583248 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.842443205 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.933902993 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.842772066 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.905446304 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.224986257 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.220747657 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.843823582 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.83515914 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.841267665 seconds)
  done (took 182.440657368 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.909925125 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.919758054 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.909916288 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.845187104 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.895457934 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.91503249 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.845417223 seconds)
  done (took 15.013045622 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.850344966 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.844977839 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.893511751 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.893013366 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.842356897 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.994899845 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846084422 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.8550416 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.842158683 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.896309214 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.845198601 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.843845693 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.85104101 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.844306706 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.891179843 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.856324701 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.959161868 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.845001679 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.843962259 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.995120776 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.841894315 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.851478148 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.898116006 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.855388652 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.844691718 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.850444257 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.436389653 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.843697617 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.842303022 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.844613164 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.841998287 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.886463121 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.845463075 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.839796984 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.842187993 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.96051313 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.8446339 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.842855522 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.845154123 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.840839071 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.846377916 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.846246903 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.845849784 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.844554953 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.846238167 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.870135261 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.846502844 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.845319002 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.846302845 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.845571464 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.895206832 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.846677382 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.842702774 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.842664515 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.901219317 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.852594052 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.84479752 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.843420865 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.84576505 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.84357978 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.997609779 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.893650837 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.84604758 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.894414118 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.846132386 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.846291706 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.845518988 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.846487845 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.940343823 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.847430139 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.894611229 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.843039347 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.006071724 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.87001682 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.847788326 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.849353874 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.849022082 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.847240907 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.847590957 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.85296421 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.845367514 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.847780066 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.852650956 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.845002546 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.844032152 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.959306641 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.955900859 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.845343694 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.860988176 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.854060408 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.845158205 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.898974571 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.847353164 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.8458447 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.901661722 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.962495236 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.902764513 seconds)
  done (took 203.477217282 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.851904229 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.854434969 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.848380065 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.864289158 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.848066343 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.847202859 seconds)
  done (took 12.891360486 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.849045776 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.848185618 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.848574704 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.84819777 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.847576199 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.848344009 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.848869871 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.84950846 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.850391176 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.84934985 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.847789827 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.848282945 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.848562917 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.848020548 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.849108477 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.848205712 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.848003917 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.846068323 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.849006128 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.849131097 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.991144592 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.8478294 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.848128688 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.850396975 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.851276943 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.848365269 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.85721257 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.848650661 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.848739554 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.855622505 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.852454326 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.849179987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.85088263 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.853979097 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.852345602 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.850574639 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.853602604 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.851010034 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.847506872 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.850233666 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.850649397 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.84953571 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.850986697 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.851159611 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.851554379 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.853317158 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.853943999 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.858676916 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.850025955 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.851760705 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.851567727 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.851038517 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.8502693 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.85235651 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.852394454 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.854912389 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.853670408 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.850074905 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.850074359 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.850483359 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.851450798 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.850885654 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.852992872 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.854160222 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.858509956 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.851149375 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.852321659 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.853113257 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.850316743 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.851146392 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.851413462 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.848300696 seconds)
  done (took 136.174146931 seconds)
done (took 551.778349883 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.132191302 seconds)
  done (took 8.913025207 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.00166311 seconds)
  done (took 8.883755735 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.260644152 seconds)
  done (took 10.044261094 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.859302329 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.865707475 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.859665255 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.850832159 seconds)
  done (took 29.224476581 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.91513464 seconds)
  done (took 8.695845403 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.857538307 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.84458516 seconds)
  done (took 15.516953064 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.877136682 seconds)
  done (took 8.659372524 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.901624544 seconds)
  done (took 8.685104365 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.861474427 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.849079849 seconds)
  done (took 15.502946867 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.829809797 seconds)
  done (took 8.609640356 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.478681819 seconds)
  done (took 11.267775527 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.846606676 seconds)
  done (took 8.639060836 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.847388724 seconds)
  done (took 8.627488428 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.857901525 seconds)
  done (took 9.637736244 seconds)
done (took 162.687837892 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.845777278 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.842706709 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.843920499 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.842327124 seconds)
  done (took 29.155649511 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.884236697 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.885105802 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.88936457 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.896321193 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.887202382 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.885358371 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.876872586 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.877511866 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.895727908 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.888303014 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.886756549 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.887874564 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.904790837 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.878037241 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.888092643 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.887684776 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.896265923 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.887547132 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.878522991 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.888892585 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.853467928 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.897032642 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.889745372 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.85280392 seconds)
  done (took 47.024582549 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.051376894 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.924499516 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.005691106 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.905365488 seconds)
  done (took 9.668571425 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.904726916 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.906321068 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.917859807 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.956425604 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.982124032 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.919450157 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.876001466 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.873944197 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.86020547 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.906881655 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.982067148 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.922562546 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.989523867 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.852206583 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.039331299 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.856256147 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.853073684 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.905842147 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.956905949 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.983642439 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.85758967 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.905901423 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.909592448 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.930976128 seconds)
  done (took 47.83298552 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.852331356 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.864749345 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.859913516 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.853341731 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.852753714 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.853424147 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.862072629 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.855379843 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.875246078 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.854430735 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.853379314 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.854920746 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.853480486 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.854610536 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.853137939 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.865857935 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.867680535 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.855182432 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.857907739 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.860375171 seconds)
  done (took 38.94359754 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.848296369 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.702252588 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.20125458 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.105656513 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.850422586 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.848320027 seconds)
  done (took 31.340753771 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.867793326 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.859717779 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.855482806 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.909287267 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.989368737 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.8606225 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.856945396 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.864870795 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.897994468 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.917599529 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.87367083 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.881556223 seconds)
  done (took 24.420548432 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.851293076 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.850918129 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.850935974 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.86732891 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.864820967 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.861751781 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.865060554 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.847908411 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.868080239 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.872590464 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.862667644 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.867369188 seconds)
  done (took 44.118643231 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.942422461 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.896406028 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.886772841 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.533999478 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.231440391 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.064721466 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.378089504 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.19044273 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.855896994 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.125793332 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.915103429 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960176028 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.108321738 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.269902103 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.880496773 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.314754936 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147991945 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.066267012 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.878952179 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.55144344 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917679891 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.951584232 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.612488474 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909293207 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.063952045 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.981925851 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.114188398 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.853200877 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989504947 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.892105777 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.864283613 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.853888531 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.129057041 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.237064785 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.958890289 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.863262588 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.469746696 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.565944656 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.844272982 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.692772913 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.585008917 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.980498499 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86478407 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.854429493 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.788779031 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.918332595 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222360598 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.860067037 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.56711429 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.854481715 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.867378399 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943540493 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.858282915 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.671080509 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.771902551 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.856855562 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.853580702 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861919379 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.424824968 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.974866138 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.962891075 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.825130719 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.945707289 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.615998381 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24740943 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.003310191 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.859859631 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.860965469 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789729476 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.625058958 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911373432 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.185245635 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.875939616 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506363807 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.173757168 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.971310247 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.796744396 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.135018851 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.298671998 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.823060789 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082486694 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855792085 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.791927722 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.890519458 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.791727772 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.126588005 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.894284534 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.61878958 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.898307091 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.190092829 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.866775806 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.875779226 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880033515 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.080769182 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.825347069 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.856355559 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.68844376 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999171684 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878986847 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.191166392 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.790694771 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.860449111 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.113038786 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.068871214 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.832436348 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.349908739 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.01296503 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334789126 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.904113097 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.932207161 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.899789417 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.129224812 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919489989 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.982749517 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911251422 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.856800884 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.168455235 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.360894142 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.98916944 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.929568656 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.98262773 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.179146361 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.886169766 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926634163 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.860191451 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.85846647 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.655037734 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.412496801 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.858481098 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.86164777 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.846794879 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899772759 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.858486782 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.806059706 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.482870548 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926503751 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.875331796 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081987037 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.330815897 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165434485 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.793256237 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19289812 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.951994086 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.081951514 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.516598607 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.939488351 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.120643277 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.837735804 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.869096745 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901448052 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.878974927 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.957046756 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.880746499 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.918032105 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.146587795 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.863394944 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.863800876 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.660076613 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.896420067 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.867080514 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.864287626 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.609937535 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.1331006 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.883459998 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.867713994 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.749457738 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.875012995 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926048509 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.867403866 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.8702263 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.400364246 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.587343967 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.867537939 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.439540636 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.085835409 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.870786907 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.58452367 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975165753 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.942431877 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.136947758 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92143469 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.79540785 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.571350924 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.554775823 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860672539 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.796489651 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.861448735 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87018541 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872193148 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.055866294 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136190638 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.904920809 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.547895344 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.90151833 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.872094315 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.866647689 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.861658165 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.369746561 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.978362233 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954523632 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.901814764 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005790607 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.875709235 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.795893945 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.865336141 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.866820655 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.863338035 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.86268097 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.895302762 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.5594646 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.241814415 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.123138881 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.47112433 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.875251004 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.644731778 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.919024106 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.92141106 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.689864585 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.926713312 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.889010191 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874750878 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.873125491 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.628862696 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.557653794 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.429730957 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181742762 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.167804173 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.303907345 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 4.975065183 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.885991037 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.198384727 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.798907786 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.428031374 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.331080058 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20273902 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.807607857 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.947231245 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.508253055 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210516606 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877310858 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091809426 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.25538716 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.622307209 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031075245 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.074684114 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899688277 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.914716478 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821458979 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.151112006 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.006625488 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.563207137 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067488306 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195821861 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.555817843 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.989401491 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.864673134 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.54596445 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950563286 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.575734344 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.035194501 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.963857962 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.816250416 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332799346 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.872974909 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.090612555 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221481644 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.92181502 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.981031443 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.802754185 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.876080048 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.876559877 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.866649395 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.863408321 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.742848118 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.119739953 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.877646707 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.801145906 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.873125558 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.154107982 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.771916372 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.872179021 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.86704961 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.170220351 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.299083924 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.031141625 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.865069442 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.376407947 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.873855623 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.801248054 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.800664512 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.560435337 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.874979136 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.842191766 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077503828 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.97060755 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.784531178 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.842880113 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.943402188 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.122754714 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.88168967 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.139837518 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.143431579 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.563497675 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.892524066 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.967688515 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.555899281 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.975667687 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.867953692 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.103218397 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.619459316 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093915212 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.936196116 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.778363803 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.867580883 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.081919174 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.867813651 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.797288123 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100096097 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.591686541 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.933401638 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.185984621 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939901941 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.800235312 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.912451084 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.959597217 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.878619067 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.947910345 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879903782 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.880566289 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.880613704 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.916266173 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.793143545 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.992397652 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.883676919 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.960704632 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.999326572 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.388284675 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.874716144 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.154994577 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.235044379 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.197663295 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.928040192 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.870561377 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.874691955 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.8038042 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018559057 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.09628983 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143533899 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.999486712 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.983289964 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893469164 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.565554412 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.97728295 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.106888988 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.1455927 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.765727603 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.26976478 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.907001278 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.871084512 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.882006032 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.082453814 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.083055214 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.175337068 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019349276 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.85317531 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.231201618 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145196933 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.871434489 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.87125749 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.461590929 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.873512191 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.668233673 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.913721433 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.805176132 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146045114 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.881964617 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.266639009 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.896949528 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.032182975 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.389108784 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.593010368 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160607935 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.860296399 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.934684711 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.147228293 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.26466159 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.184138073 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940562797 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.883398245 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.977164477 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018704911 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.752081128 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.873591902 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.873417253 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.922962137 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.582760834 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.884121081 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156572138 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18391429 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.870785578 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.761915525 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.898336945 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.883803415 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.098385415 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.145910222 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127738147 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883754735 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.880115704 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.688983749 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.148725872 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934063455 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.809296189 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.878331759 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.974151291 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12579785 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.89849634 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.327211148 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.585512163 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148339015 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.873936458 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896544175 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.925668036 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.235616501 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.199252772 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.405869525 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.086244352 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.463853269 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.350924098 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.173672624 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.880216788 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.938916101 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.176002084 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.87843722 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.852750107 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.910079871 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.146291642 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.187038911 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.888768501 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.687279632 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.844605476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.218813758 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.437110347 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813226713 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.885791895 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.937214895 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.876492381 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.008357728 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.887780869 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.763024579 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.945926544 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.658136375 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.158860869 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.881372154 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.864843167 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.621992213 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.061384145 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908700976 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.019121781 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883673057 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.593191439 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.238146353 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.133994237 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.860204933 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.882782637 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.881424776 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.877517459 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.86504321 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.074964973 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.072484804 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.152922472 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.89562372 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.911933027 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.881371721 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.093292713 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088508096 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.806480526 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014845376 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.860827269 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.918216343 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.782418968 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.380370262 seconds)
  done (took 1669.332912267 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.912969103 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.932928105 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.910721278 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.935283385 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.890697268 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.92366024 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.900308541 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.967393752 seconds)
  done (took 57.187216266 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.877677693 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.076560204 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.887495063 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.877939669 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.888770005 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.879078412 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.041032499 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.885774009 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.901402545 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.8882173 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.879695413 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.877749977 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.211220217 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.898981429 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.879055616 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.895289623 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.888122043 seconds)
  done (took 74.555692248 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.886733951 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.940909379 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.918794122 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.89771929 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.839706551 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.88990069 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.701653518 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.888687995 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.878385967 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.101494659 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.516525913 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.886308744 seconds)
  done (took 90.16253876 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.889089268 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.886701221 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.885463608 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.885249654 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.885387524 seconds)
  done (took 11.249034693 seconds)
done (took 2176.797153525 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.122573022 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.096209402 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.111136422 seconds)
  done (took 6.021643113 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.031650719 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.079319975 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.200293079 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.205967302 seconds)
  done (took 10.336796579 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.171579876 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.26886869 seconds)
  done (took 6.258046364 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.266236175 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.89322084 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.260622652 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.882994014 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.883989555 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.885749278 seconds)
  done (took 22.476025804 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.887576951 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.889695072 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.887385236 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.889492889 seconds)
  done (took 9.371031018 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.868636308 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.566096952 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.87033032 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.883064688 seconds)
  done (took 21.006909375 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.634328122 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.647255288 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.64053602 seconds)
  done (took 9.740977449 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.3681817 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.780792343 seconds)
  done (took 8.967713169 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.141802482 seconds)
  done (took 3.960971114 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.020312371 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.195299771 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.428595285 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.400545135 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.495148969 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.570701227 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.193376691 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.122842605 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.286007121 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.314130564 seconds)
  done (took 24.845845247 seconds)
done (took 138.342971106 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.25944343 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.120890805 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.086581255 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.215543198 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.111818632 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.086352871 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.09744203 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.200704557 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.725052012 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.724863567 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.218511837 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.110949163 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.255757294 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.119983155 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.255943626 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.122578548 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.103366557 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.265287874 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.914955295 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.148724896 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.101218067 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.853627318 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.057370597 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.865815045 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.106182879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.039296818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.432907303 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.124141452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.066287048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.43734372 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.038847985 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.300666584 seconds)
  done (took 173.38997503 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.637257055 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.885683534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.887135008 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.886742013 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.257598026 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.886664725 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.887435843 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.886195173 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.939210605 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.921963302 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.886506678 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.226132334 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.886962387 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.887364495 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.902447453 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.887269979 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.075383692 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.696008193 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.90059511 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.905468721 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.910087963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.160399304 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.914234635 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.220535516 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.1192627 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.915579874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.88755983 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.913074958 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.896544531 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.889513791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.90312975 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.889268265 seconds)
  done (took 207.772474191 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.887888095 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.889860149 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.888336182 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.887996008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.888433331 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.889118488 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.895953016 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.88855094 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.446990367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.441177981 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.897633193 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.892735069 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.894588516 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.889123425 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.897537171 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.888736012 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.89561587 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.897758202 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.893355455 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.895251175 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.903103297 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.596929005 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.904776748 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.606236537 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.898618835 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.899726245 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.889743701 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.906484223 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.912785933 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.913468731 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.910931058 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.890117606 seconds)
  done (took 221.020495955 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.16009505 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.897102262 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.898051201 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.852409493 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.897842251 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.896488758 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.89329975 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.086610119 seconds)
  done (took 19.431353673 seconds)
done (took 623.442666484 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.352620889 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.196820742 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.073514371 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.920383465 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.14732532 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.953700981 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.917522474 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.980158002 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.646251481 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.982345492 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.552166893 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.930804654 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.638230499 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.934791955 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.040572679 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.971182338 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.446326147 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.538025242 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.089843719 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.957910793 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.092784255 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.867470817 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.985621968 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.665818751 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.660634808 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.907254885 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.106560574 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.452928996 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.92450728 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.077543014 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.659659751 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.333586439 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.925180994 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.912582122 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.965161184 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.948584932 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.272864448 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.92261154 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.046515052 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.67607686 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.957043689 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.537429667 seconds)
  done (took 103.994512892 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.886221229 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.886523067 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.885455898 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.886776029 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.887546948 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.8875937 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.886657328 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.886347176 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.887024426 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.885939422 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.8860215 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.887583247 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.886515184 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.887507968 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.885746795 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.886107421 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.887315667 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.887965497 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.886127699 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.886606763 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.886684505 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.886063564 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.900627423 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.886515318 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.891936057 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.888271432 seconds)
  done (took 50.913099872 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.900363352 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.042539983 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.121688651 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.916442457 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.899231389 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.903100959 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.917957942 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.904091104 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.901479529 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.902311879 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.995940619 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.904665481 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.919930016 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.122273958 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.911010635 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.899607105 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.899862685 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.898959862 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.048032143 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.913291531 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.918495879 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.905466094 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.918599683 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.913107672 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.90210799 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.899054163 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.90376689 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.368306284 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.905528619 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.994445561 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.941712168 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.920296043 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.341221406 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.130066938 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.949233224 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.907477539 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.901113464 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.99828732 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.904708675 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.900766545 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.917797012 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.90414623 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.124605866 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.404792837 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.911196369 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.900688417 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.381564921 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.006894599 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.94088272 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.912184251 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.128110082 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.913748469 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.902433018 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.901707347 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.938106041 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.910954083 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.901209733 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.267706206 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.910441279 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.919784815 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.905691737 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.902157287 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.058407995 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.908510103 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.044671057 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.909023042 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.909936704 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.902596622 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.124910405 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.914351647 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.41149977 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.912194085 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.904070051 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.997899461 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.048266993 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.406844905 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.913185139 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.058617758 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.355917276 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.923898108 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.908979738 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.360555973 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.926911644 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.908405896 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.905658667 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.905208241 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.904131007 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.947367915 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.918868274 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.34703231 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.414351209 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.279174186 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.92646951 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.91645325 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.903880509 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.269637264 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.909782416 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.904617198 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.119547864 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.421263459 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.913242129 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.911630071 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.40102238 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.915382145 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.922396817 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.912688999 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.133399473 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.916228486 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.949285775 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.905024643 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.911529718 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.907250845 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.92389038 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.910889422 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.90601155 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.386814488 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.015642481 seconds)
  done (took 235.831202563 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.898427879 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.899029402 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.89715557 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.898847652 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.898735291 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.904960556 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.898931825 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.899233571 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.904739148 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.899253761 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.90026617 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.903172563 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.901982769 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.900486719 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.437779085 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.91125071 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.516448551 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.904501728 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.902846149 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.914785176 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.581563703 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.912885164 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.903889071 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.904148822 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.904014953 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.904238982 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.907389345 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.951193293 seconds)
  done (took 168.998391785 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.912039742 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.089912508 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.92917436 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.945974584 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.921455232 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.909386034 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.935130789 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.932990275 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.916896431 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.909905839 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.910831281 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.971452917 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.923436206 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.051673923 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.943425358 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.945865399 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.018092809 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.91846579 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.909988603 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.910012424 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.939995935 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.90934174 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.970791795 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.037690674 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.929968266 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.029577453 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.917302561 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.913007717 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.911299089 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.028760114 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.927412984 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.972253856 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.939247084 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.931825432 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.031603273 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.029894304 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.01925344 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.942344609 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.918340738 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.91112787 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.910047569 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.900013134 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.030090319 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.930290405 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.912543319 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.021329021 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.932470487 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.913098555 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.921922791 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.911521529 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.926472321 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.931596892 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.980404761 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.048465761 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.949573284 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.941497969 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.937923405 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.189094996 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.922264965 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.013760282 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.907313872 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.032400442 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.934889211 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.901078195 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.913330152 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.918336384 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.941774836 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.946834253 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.020384664 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.921723075 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.014543258 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.94902073 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.921617052 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.913218741 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.915069017 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.029081345 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.033453635 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.949756478 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.952976988 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.946518248 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.912020815 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.914022606 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.902663241 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.930889067 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.92044152 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.031536211 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.033276715 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.92353462 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.916223631 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.91606086 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.915515677 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.940246888 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.04129633 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.950346672 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.01375563 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.98351002 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.991434302 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.931468917 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.927777999 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.919771548 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.977119144 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.932252849 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.927298418 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.235783414 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.985966512 seconds)
  done (took 207.320755117 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.384598585 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.972467198 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.972803076 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.204656427 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.347021159 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.767536672 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.963808334 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.965904612 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.991448998 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.18942466 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.024590047 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.976916846 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.952170323 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.939655924 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.967353208 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.985663754 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.968498939 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.256174084 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.08332311 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.067007558 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.946266069 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.259749552 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.283632843 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.341971513 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.000540183 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.290344377 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.650693688 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.205831711 seconds)
  done (took 62.809395253 seconds)
done (took 831.691519797 seconds)
SAVING RESULT...
DONE!
